"use strict";(self.webpackChunk_logto_docs=self.webpackChunk_logto_docs||[]).push([[6756],{95249:(e,o,n)=>{n.r(o),n.d(o,{assets:()=>d,contentTitle:()=>t,default:()=>u,frontMatter:()=>r,metadata:()=>a,toc:()=>c});const a=JSON.parse('{"id":"use-cases/multi-tenancy/build-multi-tenant-saas-application","title":"build-multi-tenant-saas-application","description":"Aprenda como construir eficientemente um aplicativo SaaS multi-inquilino com autentica\xe7\xe3o robusta, gerenciamento de organiza\xe7\xf5es e controle de acesso baseado em papel.","source":"@site/i18n/pt-BR/docusaurus-plugin-content-docs/current/use-cases/multi-tenancy/build-multi-tenant-saas-application.mdx","sourceDirName":"use-cases/multi-tenancy","slug":"/use-cases/multi-tenancy/build-multi-tenant-saas-application","permalink":"/pt-BR/use-cases/multi-tenancy/build-multi-tenant-saas-application","draft":false,"unlisted":false,"editUrl":"https://github.com/logto-io/docs/tree/master/i18n/pt-BR/docusaurus-plugin-content-docs/current/use-cases/multi-tenancy/build-multi-tenant-saas-application.mdx","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2,"sidebar_label":"Construir um aplicativo SaaS multi-inquilino","description":"Aprenda como construir eficientemente um aplicativo SaaS multi-inquilino com autentica\xe7\xe3o robusta, gerenciamento de organiza\xe7\xf5es e controle de acesso baseado em papel."},"sidebar":"useCasesSidebar","previous":{"title":"Multi-tenancy","permalink":"/pt-BR/use-cases/multi-tenancy/"},"next":{"title":"IA","permalink":"/pt-BR/use-cases/ai/"}}');var s=n(25105),i=n(79621);const r={sidebar_position:2,sidebar_label:"Construir um aplicativo SaaS multi-inquilino",description:"Aprenda como construir eficientemente um aplicativo SaaS multi-inquilino com autentica\xe7\xe3o robusta, gerenciamento de organiza\xe7\xf5es e controle de acesso baseado em papel."},t="Guia completo para construir um aplicativo SaaS multi-inquilino: do design \xe0 implementa\xe7\xe3o",d={},c=[{value:"Quais recursos s\xe3o necess\xe1rios para autentica\xe7\xe3o e autoriza\xe7\xe3o SaaS?",id:"what-features-are-required-for-saas-authentication-and-authorization",level:2},{value:"Arquitetura multi-inquilino",id:"multi-tenant-architecture",level:3},{value:"Membro (Membership)",id:"membership",level:3},{value:"Design de pap\xe9is e permiss\xf5es",id:"role-and-permission-design",level:3},{value:"Fluxo de cadastro e login",id:"sign-up-and-login-flow",level:3},{value:"Cria\xe7\xe3o de inquilino e convite",id:"tenant-creation-and-invitation",level:3},{value:"Arquitetura t\xe9cnica e design do sistema",id:"technical-architecture-and-system-design",level:2},{value:"Definir estrat\xe9gia de autentica\xe7\xe3o",id:"define-authentication-strategy",level:3},{value:"Estabelecer arquitetura multi-inquilino",id:"establish-multi-tenant-architecture",level:3},{value:"Habilitar controle de acesso no app multi-inquilino",id:"enable-access-control-in-multi-tenant-app",level:3},{value:"Stack de tecnologia",id:"tech-stack",level:2},{value:"Adicione fluxo b\xe1sico de autentica\xe7\xe3o ao seu app",id:"add-basic-authentication-flow-to-your-app",level:2},{value:"Instale Logto no seu app",id:"install-logto-to-your-app",level:3},{value:"Personalize m\xe9todos de login e cadastro",id:"customize-sign-in-and-sign-up-methods",level:3},{value:"Habilite autentica\xe7\xe3o multifatorial",id:"enable-multi-factor-authentication",level:3},{value:"Adicionando experi\xeancia multi-inquilino de organiza\xe7\xe3o",id:"adding-multi-tenant-organization-experience",level:2},{value:"Obter informa\xe7\xf5es de organiza\xe7\xe3o do usu\xe1rio",id:"get-a-user-s-organization-information",level:3},{value:"Criar organiza\xe7\xe3o no Logto Console",id:"create-organization-in-logto-console",level:3},{value:"Implementar experi\xeancia de cria\xe7\xe3o de organiza\xe7\xe3o self-service",id:"implement-self-serve-organization-creation-experience",level:2},{value:"Entenda o fluxo de intera\xe7\xe3o de autentica\xe7\xe3o de organiza\xe7\xe3o",id:"understand-organization-auth-interaction-flow",level:3},{value:"Proteja sua API backend",id:"protect-your-backend-api",level:3},{value:"Chamando a Management API do Logto",id:"calling-logto-management-api",level:3},{value:"Implemente controle de acesso no seu app multi-inquilino",id:"implement-access-control-to-your-multi-tenant-app",level:2},{value:"Usando o token de organiza\xe7\xe3o do Logto",id:"using-logto-organization-token",level:3},{value:"Implemente controle de acesso baseado em papel no n\xedvel da organiza\xe7\xe3o",id:"implement-organization-level-role-based-access-control-design",level:3},{value:"Adicione mais recursos multi-inquilino ao app",id:"add-more-multi-tenant-app-features",level:2},{value:"Resumo",id:"summary",level:2}];function l(e){const o={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",img:"img",li:"li",mermaid:"mermaid",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.R)(),...e.components},{Head:n}=o;return n||function(e,o){throw new Error("Expected "+(o?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Head",!0),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n,{children:(0,s.jsx)("link",{rel:"canonical",href:"https://blog.logto.io/build-multi-tenant-saas-application"})}),"\n",(0,s.jsx)("style",{children:"\n  .twoColumn {\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    gap: 24px;\n  }\n  .twoColumn + .twoColumn {\n    margin-top: 24px;\n  }\n"}),"\n",(0,s.jsx)(o.header,{children:(0,s.jsx)(o.h1,{id:"guia-completo-para-construir-um-aplicativo-saas-multi-inquilino-do-design-\xe0-implementa\xe7\xe3o",children:"Guia completo para construir um aplicativo SaaS multi-inquilino: do design \xe0 implementa\xe7\xe3o"})}),"\n",(0,s.jsx)(o.p,{children:"Como aplicativos como Notion, Slack ou Figma s\xe3o constru\xeddos? Esses aplicativos SaaS multi-inquilino parecem simples de usar, mas construir um voc\xea mesmo? \xc9 outra hist\xf3ria."}),"\n",(0,s.jsx)(o.p,{children:"Quando pensei pela primeira vez em construir algo t\xe3o complexo, minha cabe\xe7a explodiu:"}),"\n",(0,s.jsxs)(o.ul,{children:["\n",(0,s.jsx)(o.li,{children:"Usu\xe1rios precisam de m\xfaltiplas op\xe7\xf5es de login (email, Google, GitHub)"}),"\n",(0,s.jsx)(o.li,{children:"Cada usu\xe1rio pode criar e pertencer a m\xfaltiplas organiza\xe7\xf5es"}),"\n",(0,s.jsx)(o.li,{children:"Diferentes n\xedveis de permiss\xe3o dentro de cada organiza\xe7\xe3o"}),"\n",(0,s.jsx)(o.li,{children:"Organiza\xe7\xf5es corporativas exigindo auto-entrada para dom\xednios de email espec\xedficos"}),"\n",(0,s.jsx)(o.li,{children:"Requisitos de MFA para opera\xe7\xf5es sens\xedveis"}),"\n",(0,s.jsx)(o.li,{children:"E mais..."}),"\n"]}),"\n",(0,s.jsx)(o.p,{children:'"Chefe, vamos falar sobre design de produto em duas semanas. Estou atolado agora."'}),"\n",(0,s.jsxs)(o.p,{children:["Mas quando realmente comecei a trabalhar nisso, ",(0,s.jsx)(o.strong,{children:"descobri que n\xe3o \xe9 t\xe3o assustador quanto parece."})]}),"\n",(0,s.jsxs)(o.p,{children:["Eu simplesmente ",(0,s.jsx)(o.strong,{children:"constru\xed um sistema com todos esses recursos com surpreendentemente pouco esfor\xe7o!"})]}),"\n",(0,s.jsx)(o.p,{children:(0,s.jsx)(o.img,{src:"https://uploads.strapi.logto.io/documind_home_page_e72468b8c9.png",alt:"documind-home-page.png"})}),"\n",(0,s.jsxs)("div",{className:"twoColumn",children:[(0,s.jsx)("img",{alt:"Painel do Documind",src:"https://uploads.strapi.logto.io/documind_dashboard_4bd2a540d2.png",width:"500"}),(0,s.jsx)("img",{alt:"P\xe1gina da organiza\xe7\xe3o Documind",src:"https://uploads.strapi.logto.io/documind_org_page_8157e40cd8.png",width:"500"})]}),"\n",(0,s.jsx)(o.p,{children:"Vou mostrar exatamente como projetar e implementar um sistema assim do zero \u2014 e voc\xea ficar\xe1 surpreso com a simplicidade em 2025 com as ferramentas modernas e a abordagem arquitetural certa."}),"\n",(0,s.jsxs)(o.blockquote,{children:["\n",(0,s.jsx)(o.p,{children:(0,s.jsxs)(o.strong,{children:["O c\xf3digo-fonte completo est\xe1 dispon\xedvel neste ",(0,s.jsx)(o.a,{href:"https://github.com/logto-io/multi-tenant-saas-sample",children:"reposit\xf3rio do Github"}),". Vamos l\xe1!"]})}),"\n"]}),"\n",(0,s.jsx)(o.p,{children:"Vamos come\xe7ar com um produto SaaS de documenta\xe7\xe3o com IA chamado DocuMind."}),"\n",(0,s.jsx)(o.p,{children:"DocuMind \xe9 um produto SaaS de documenta\xe7\xe3o com IA projetado com um modelo multi-inquilino para suportar usu\xe1rios individuais, pequenas empresas e grandes corpora\xe7\xf5es."}),"\n",(0,s.jsx)(o.p,{children:"A plataforma oferece recursos avan\xe7ados de IA para gerenciamento de documentos, incluindo gera\xe7\xe3o autom\xe1tica de resumos, extra\xe7\xe3o de pontos-chave e recomenda\xe7\xf5es inteligentes de conte\xfado dentro das organiza\xe7\xf5es."}),"\n",(0,s.jsx)(o.h2,{id:"what-features-are-required-for-saas-authentication-and-authorization",children:"Quais recursos s\xe3o necess\xe1rios para autentica\xe7\xe3o e autoriza\xe7\xe3o SaaS?"}),"\n",(0,s.jsx)(o.p,{children:"Primeiro, vamos revisar os requisitos necess\xe1rios. Quais recursos voc\xea precisa?"}),"\n",(0,s.jsx)(o.h3,{id:"multi-tenant-architecture",children:"Arquitetura multi-inquilino"}),"\n",(0,s.jsxs)(o.p,{children:["Para habilitar uma arquitetura multi-inquilino, voc\xea precisar\xe1 de uma camada de entidade chamada ",(0,s.jsx)(o.strong,{children:"organiza\xe7\xe3o (Organization)"}),". Imagine ter um \xfanico pool de usu\xe1rios que pode acessar m\xfaltiplos espa\xe7os de trabalho. Cada organiza\xe7\xe3o representa um espa\xe7o de trabalho, e os usu\xe1rios mant\xeam uma \xfanica identidade enquanto acessam diferentes espa\xe7os de trabalho (organiza\xe7\xf5es) com base nos pap\xe9is atribu\xeddos."]}),"\n",(0,s.jsx)(o.p,{children:(0,s.jsx)(o.img,{src:"https://uploads.strapi.logto.io/multi_tenant_app_architecture_89ed9779f8.svg",alt:"multi-tenant-app-architecture.svg"})}),"\n",(0,s.jsx)(o.p,{children:"\xc9 um recurso amplamente utilizado em provedores de autentica\xe7\xe3o. Uma organiza\xe7\xe3o em um sistema de gerenciamento de identidade corresponde ao workspace, projeto ou inquilino do seu aplicativo SaaS."}),"\n",(0,s.jsx)(o.p,{children:(0,s.jsx)(o.img,{src:"https://uploads.strapi.logto.io/organization_examples_dc60ad68bb.png",alt:"organization-examples.png"})}),"\n",(0,s.jsx)(o.h3,{id:"membership",children:"Membro (Membership)"}),"\n",(0,s.jsx)(o.p,{children:"Um membro \xe9 um conceito tempor\xe1rio usado para indicar o status de associa\xe7\xe3o de uma identidade dentro de uma organiza\xe7\xe3o."}),"\n",(0,s.jsxs)(o.p,{children:["Por exemplo, Sarah se cadastra no seu aplicativo usando o email ",(0,s.jsx)(o.strong,{children:(0,s.jsx)(o.a,{href:"mailto:sarah@gmail.com",children:"sarah@gmail.com"})}),". Ela pode pertencer a diferentes espa\xe7os de trabalho. Se Sarah faz parte do ",(0,s.jsx)(o.strong,{children:"Workspace A"})," mas n\xe3o do ",(0,s.jsx)(o.strong,{children:"Workspace B"}),", ela \xe9 considerada membro do ",(0,s.jsx)(o.strong,{children:"Workspace A"})," mas n\xe3o do ",(0,s.jsx)(o.strong,{children:"Workspace B"}),"."]}),"\n",(0,s.jsx)(o.h3,{id:"role-and-permission-design",children:"Design de pap\xe9is e permiss\xf5es"}),"\n",(0,s.jsxs)(o.p,{children:["Em uma arquitetura multi-inquilino, os usu\xe1rios precisam de ",(0,s.jsx)(o.strong,{children:"pap\xe9is (Roles)"})," com ",(0,s.jsx)(o.strong,{children:"permiss\xf5es (Permissions)"})," espec\xedficas para acessar os recursos do inquilino.\nPermiss\xf5es s\xe3o controles de acesso detalhados que definem a\xe7\xf5es espec\xedficas, como ",(0,s.jsx)(o.code,{children:"read: order"})," ou ",(0,s.jsx)(o.code,{children:"write: order"}),". Elas determinam quais a\xe7\xf5es podem ser realizadas em determinados recursos."]}),"\n",(0,s.jsx)(o.p,{children:"Pap\xe9is s\xe3o um conjunto de permiss\xf5es atribu\xeddas a membros em um ambiente multi-inquilino."}),"\n",(0,s.jsx)(o.p,{children:"Voc\xea precisar\xe1 definir esses pap\xe9is e permiss\xf5es, depois atribuir pap\xe9is aos usu\xe1rios, e \xe0s vezes isso pode incluir processos automatizados. Por exemplo:"}),"\n",(0,s.jsxs)(o.ol,{children:["\n",(0,s.jsxs)(o.li,{children:["Usu\xe1rios que entram em uma organiza\xe7\xe3o recebem automaticamente o papel de ",(0,s.jsx)(o.strong,{children:"membro"}),"."]}),"\n",(0,s.jsxs)(o.li,{children:["O primeiro usu\xe1rio a criar um espa\xe7o de trabalho recebe automaticamente o papel de ",(0,s.jsx)(o.strong,{children:"admin"}),"."]}),"\n"]}),"\n",(0,s.jsx)(o.h3,{id:"sign-up-and-login-flow",children:"Fluxo de cadastro e login"}),"\n",(0,s.jsx)(o.p,{children:"Garanta um processo de registro e autentica\xe7\xe3o amig\xe1vel e seguro, incluindo op\xe7\xf5es b\xe1sicas de login e cadastro:"}),"\n",(0,s.jsxs)(o.ol,{children:["\n",(0,s.jsxs)(o.li,{children:[(0,s.jsx)(o.strong,{children:"Login com email e senha"}),": M\xe9todo tradicional de login com email e senha."]}),"\n",(0,s.jsxs)(o.li,{children:[(0,s.jsx)(o.strong,{children:"Login sem senha"}),": Use c\xf3digos de verifica\xe7\xe3o por email para acesso f\xe1cil e seguro."]}),"\n",(0,s.jsxs)(o.li,{children:[(0,s.jsx)(o.strong,{children:"Gerenciamento de conta"}),": Um centro de contas onde os usu\xe1rios podem atualizar email, senha e outros detalhes."]}),"\n",(0,s.jsxs)(o.li,{children:[(0,s.jsx)(o.strong,{children:"Login social"}),": Op\xe7\xf5es como Google e GitHub para login r\xe1pido."]}),"\n",(0,s.jsxs)(o.li,{children:[(0,s.jsx)(o.strong,{children:"Autentica\xe7\xe3o multifatorial (MFA)"}),": Aumente a seguran\xe7a permitindo login via aplicativos autenticadores como Duo."]}),"\n"]}),"\n",(0,s.jsx)(o.h3,{id:"tenant-creation-and-invitation",children:"Cria\xe7\xe3o de inquilino e convite"}),"\n",(0,s.jsx)(o.p,{children:"Em um aplicativo SaaS multi-inquilino, uma diferen\xe7a fundamental no fluxo do usu\xe1rio \xe9 a necessidade de suportar a cria\xe7\xe3o de inquilinos e convites de membros. Esse processo requer planejamento e execu\xe7\xe3o cuidadosos, pois desempenha um papel fundamental na ativa\xe7\xe3o e crescimento do produto."}),"\n",(0,s.jsx)(o.p,{children:"Aqui est\xe3o alguns fluxos t\xedpicos de uso que voc\xea precisa considerar:"}),"\n",(0,s.jsxs)(o.table,{children:[(0,s.jsx)(o.thead,{children:(0,s.jsxs)(o.tr,{children:[(0,s.jsx)(o.th,{children:"Tipo de usu\xe1rio"}),(0,s.jsx)(o.th,{children:"Ponto de entrada"})]})}),(0,s.jsxs)(o.tbody,{children:[(0,s.jsxs)(o.tr,{children:[(0,s.jsx)(o.td,{children:"Nova conta"}),(0,s.jsx)(o.td,{children:"Entrar pela p\xe1gina de login e cadastro para criar novo inquilino"})]}),(0,s.jsxs)(o.tr,{children:[(0,s.jsx)(o.td,{children:"Conta existente"}),(0,s.jsx)(o.td,{children:"Criar outro inquilino dentro do produto"})]}),(0,s.jsxs)(o.tr,{children:[(0,s.jsx)(o.td,{children:"Conta existente recebeu convite para novo inquilino"}),(0,s.jsx)(o.td,{children:"Entrar pela p\xe1gina de login e cadastro"})]}),(0,s.jsxs)(o.tr,{children:[(0,s.jsx)(o.td,{children:"Conta existente recebeu convite para novo inquilino"}),(0,s.jsx)(o.td,{children:"Entrar pelo email de convite"})]}),(0,s.jsxs)(o.tr,{children:[(0,s.jsx)(o.td,{children:"Nova conta recebeu convite para novo inquilino"}),(0,s.jsx)(o.td,{children:"Entrar pela p\xe1gina de login e cadastro"})]}),(0,s.jsxs)(o.tr,{children:[(0,s.jsx)(o.td,{children:"Nova conta recebeu convite para novo inquilino"}),(0,s.jsx)(o.td,{children:"Entrar pelo email de convite"})]})]})]}),"\n",(0,s.jsx)(o.p,{children:"Aqui est\xe3o alguns cen\xe1rios comuns encontrados em quase todos os aplicativos SaaS. Use-os como refer\xeancia para inspirar seu time de produto e design, e sinta-se \xe0 vontade para criar seus pr\xf3prios fluxos conforme necess\xe1rio."}),"\n",(0,s.jsxs)("div",{className:"twoColumn",children:[(0,s.jsx)("img",{alt:"Uma nova conta cria um inquilino",src:"https://uploads.strapi.logto.io/a_new_account_creates_a_tenant_516d2e1132.png",width:"500"}),(0,s.jsx)("img",{alt:"Um usu\xe1rio existente cria outro inquilino",src:"https://uploads.strapi.logto.io/an_existing_user_creates_another_tenant_7f1340cee0.png",width:"500"})]}),"\n",(0,s.jsxs)("div",{className:"twoColumn",children:[(0,s.jsx)("img",{alt:"Um usu\xe1rio existente faz login",src:"https://uploads.strapi.logto.io/an_existing_user_sign_in_3c5f87b929.png",width:"500"}),(0,s.jsx)("img",{alt:"Um usu\xe1rio existente entra via email",src:"https://uploads.strapi.logto.io/an_existing_user_join_through_email_7aa94ea6f2.png",width:"500"})]}),"\n",(0,s.jsxs)("div",{className:"twoColumn",children:[(0,s.jsx)("img",{alt:"Um novo usu\xe1rio faz login",src:"https://uploads.strapi.logto.io/a_new_user_sign_in_e91499991c.png",width:"500"}),(0,s.jsx)("img",{alt:"Um novo usu\xe1rio entra via email",src:"https://uploads.strapi.logto.io/an_new_user_join_through_email_e16ef2cf79.png",width:"500"})]}),"\n",(0,s.jsx)(o.h2,{id:"technical-architecture-and-system-design",children:"Arquitetura t\xe9cnica e design do sistema"}),"\n",(0,s.jsx)(o.p,{children:"Depois de entender todos os requisitos do produto, vamos para a implementa\xe7\xe3o."}),"\n",(0,s.jsx)(o.h3,{id:"define-authentication-strategy",children:"Definir estrat\xe9gia de autentica\xe7\xe3o"}),"\n",(0,s.jsx)(o.p,{children:"Autentica\xe7\xe3o parece assustador. Usu\xe1rios precisam de:"}),"\n",(0,s.jsxs)(o.ul,{children:["\n",(0,s.jsx)(o.li,{children:"Cadastro/login com email e senha"}),"\n",(0,s.jsx)(o.li,{children:"Login com um clique via Google/Github"}),"\n",(0,s.jsx)(o.li,{children:"Redefini\xe7\xe3o de senha quando esquecem"}),"\n",(0,s.jsx)(o.li,{children:"Login em toda a equipe para clientes corporativos"}),"\n",(0,s.jsx)(o.li,{children:"..."}),"\n"]}),"\n",(0,s.jsx)(o.p,{children:"Implementar apenas esses recursos b\xe1sicos poderia levar semanas de desenvolvimento."}),"\n",(0,s.jsxs)(o.p,{children:["Mas agora, ",(0,s.jsx)(o.strong,{children:"n\xe3o precisamos construir NADA disso n\xf3s mesmos!"})]}),"\n",(0,s.jsxs)(o.p,{children:["Provedores de autentica\xe7\xe3o modernos (vou escolher o ",(0,s.jsx)(o.a,{href:"https://logto.io/",children:"Logto"})," desta vez) j\xe1 empacotaram todos esses recursos para n\xf3s. O fluxo de autentica\xe7\xe3o \xe9 direto:"]}),"\n",(0,s.jsx)(o.mermaid,{value:'sequenceDiagram\n  actor u as Usu\xe1rio\n  participant a as Aplicativo\n  participant auth as ProvedorDeAutentica\xe7\xe3o\n\n  u->>a: Clica em "Entrar"\n  a->>auth: Redireciona para p\xe1gina de autentica\xe7\xe3o\n  auth->>u: Exibe p\xe1gina de login\n  u->>auth: Insere credenciais\n  auth->>a: Redireciona com token\n  a->>u: Login bem-sucedido'}),"\n",(0,s.jsxs)(o.p,{children:[(0,s.jsx)(o.strong,{children:"De semanas de desenvolvimento para 15 minutos de configura\xe7\xe3o"}),", o Logto cuida de todos os fluxos complexos para n\xf3s! Vamos abordar os passos de integra\xe7\xe3o na se\xe7\xe3o de implementa\xe7\xe3o mais adiante. Agora podemos focar em construir os recursos principais do DocuMind!"]}),"\n",(0,s.jsx)(o.h3,{id:"establish-multi-tenant-architecture",children:"Estabelecer arquitetura multi-inquilino"}),"\n",(0,s.jsx)(o.p,{children:"O sistema de organiza\xe7\xf5es permite que usu\xe1rios criem e entrem em m\xfaltiplas organiza\xe7\xf5es. Vamos entender os relacionamentos principais:"}),"\n",(0,s.jsx)(o.mermaid,{value:'erDiagram\n    User ||--o{ OrganizationMember : "pertence a"\n    Organization ||--o{ OrganizationMember : "possui"\n\n    User {\n        uuid id\n        string email\n        string nome\n    }\n    Organization {\n        uuid id\n        string nome\n        string descri\xe7\xe3o\n    }\n    OrganizationMember {\n        uuid userId\n        uuid organizationId\n    }'}),"\n",(0,s.jsx)(o.p,{children:"Neste sistema, cada usu\xe1rio pode pertencer a m\xfaltiplas organiza\xe7\xf5es, e cada organiza\xe7\xe3o pode ter m\xfaltiplos membros."}),"\n",(0,s.jsx)(o.mermaid,{value:"graph TD\n    App[Aplicativo]\n    O1[Organiza\xe7\xe3o 1]\n    O2[Organiza\xe7\xe3o 2]\n    M1[Membro]\n    M2[Membro]\n    M3[Membro]\n\n    App --\x3e O1\n    App --\x3e O2\n    O1 --\x3e M1\n    O1 --\x3e M2\n    O2 --\x3e M2\n    O2 --\x3e M3\n\n    style O1 fill:#e6ffe6\n    style O2 fill:#e6ffe6"}),"\n",(0,s.jsx)(o.h3,{id:"enable-access-control-in-multi-tenant-app",children:"Habilitar controle de acesso no app multi-inquilino"}),"\n",(0,s.jsx)(o.p,{children:"O Controle de Acesso Baseado em Papel (RBAC) \xe9 importante para garantir seguran\xe7a e escalabilidade em aplicativos SaaS multi-inquilino."}),"\n",(0,s.jsx)(o.p,{children:"Em um app multi-inquilino, o design de permiss\xf5es e pap\xe9is geralmente \xe9 consistente, pois deriva do design do produto. Por exemplo, em m\xfaltiplos workspaces, normalmente h\xe1 um papel de admin e um papel de membro. O Logto, como provedor de autentica\xe7\xe3o, possui o seguinte design de controle de acesso baseado em papel no n\xedvel da organiza\xe7\xe3o:"}),"\n",(0,s.jsxs)(o.ol,{children:["\n",(0,s.jsxs)(o.li,{children:[(0,s.jsx)(o.strong,{children:"Defini\xe7\xf5es unificadas de permiss\xf5es"}),": Permiss\xf5es s\xe3o definidas no n\xedvel do sistema e aplicadas de forma consistente em todas as organiza\xe7\xf5es, garantindo gerenciamento de permiss\xf5es sustent\xe1vel e consistente"]}),"\n",(0,s.jsxs)(o.li,{children:[(0,s.jsx)(o.strong,{children:"Templates de organiza\xe7\xe3o"}),": Combina\xe7\xf5es pr\xe9-definidas de pap\xe9is e permiss\xf5es atrav\xe9s de templates de organiza\xe7\xe3o, simplificando a inicializa\xe7\xe3o da organiza\xe7\xe3o"]}),"\n"]}),"\n",(0,s.jsx)(o.p,{children:"A rela\xe7\xe3o de permiss\xf5es fica assim:"}),"\n",(0,s.jsx)(o.mermaid,{value:"graph TD\n    subgraph organization_template[TemplateDeOrganiza\xe7\xe3o]\n        subgraph role_2[Papel2]\n            permission_c[Permiss\xe3o C]\n            permission_d[Permiss\xe3o D]\n        end\n\n        subgraph role_1[Papel1]\n            permission_a[Permiss\xe3o A]\n            permission_b[Permiss\xe3o B]\n        end\n    end\n\n    style organization_template fill:#e6ffe6\n    style role_1 fill:#ffe6e6\n    style role_2 fill:#ffe6e6"}),"\n",(0,s.jsx)(o.p,{children:"Como cada usu\xe1rio precisa de seu(s) pr\xf3prio(s) papel(is) dentro de cada organiza\xe7\xe3o, a rela\xe7\xe3o entre pap\xe9is e organiza\xe7\xf5es deve refletir os pap\xe9is atribu\xeddos a cada usu\xe1rio:"}),"\n",(0,s.jsx)(o.mermaid,{value:"erDiagram\n    OrganizationMember {\n        uuid userId\n        uuid organizationId\n        uuid[] roleIds\n        datetime joinedAt\n    }\n"}),"\n",(0,s.jsx)(o.p,{children:"Projetamos o sistema de organiza\xe7\xf5es e o sistema de controle de acesso, agora podemos come\xe7ar a construir nosso produto!"}),"\n",(0,s.jsx)(o.h2,{id:"tech-stack",children:"Stack de tecnologia"}),"\n",(0,s.jsx)(o.p,{children:"Escolhi um stack amig\xe1vel para iniciantes e port\xe1til:"}),"\n",(0,s.jsxs)(o.ol,{children:["\n",(0,s.jsxs)(o.li,{children:[(0,s.jsx)(o.strong,{children:"Frontend"}),": React (facilmente transfer\xedvel para Vue/Angular/Svelte)"]}),"\n",(0,s.jsxs)(o.li,{children:[(0,s.jsx)(o.strong,{children:"Backend"}),": Express (API simples e intuitiva)"]}),"\n"]}),"\n",(0,s.jsx)(o.p,{children:"Por que separar frontend e backend? Porque tem uma arquitetura clara, f\xe1cil de aprender e simples de trocar de stack. E para provedores de autentica\xe7\xe3o, uso o Logto como exemplo."}),"\n",(0,s.jsxs)(o.p,{children:["E para os pr\xf3ximos guias, ",(0,s.jsx)(o.strong,{children:"os padr\xf5es aqui funcionam com: qualquer frontend, qualquer backend e qualquer sistema de autentica\xe7\xe3o."})]}),"\n",(0,s.jsx)(o.h2,{id:"add-basic-authentication-flow-to-your-app",children:"Adicione fluxo b\xe1sico de autentica\xe7\xe3o ao seu app"}),"\n",(0,s.jsx)(o.p,{children:"Este \xe9 o passo mais f\xe1cil. S\xf3 precisamos integrar o Logto ao nosso projeto. Depois podemos configurar m\xe9todos de login/cadastro de usu\xe1rios no Logto Console conforme nossas necessidades."}),"\n",(0,s.jsx)(o.h3,{id:"install-logto-to-your-app",children:"Instale Logto no seu app"}),"\n",(0,s.jsxs)(o.p,{children:["Primeiro, acesse o ",(0,s.jsx)(o.a,{href:"https://cloud.logto.io/",children:"Logto Cloud"}),". Voc\xea pode criar uma conta gratuita se ainda n\xe3o tiver uma. Crie um Tenant de Desenvolvimento para testes."]}),"\n",(0,s.jsx)(o.p,{children:'No Tenant Console, clique no bot\xe3o "Application" \xe0 esquerda. Depois selecione React para come\xe7ar a construir nosso aplicativo.'}),"\n",(0,s.jsx)(o.p,{children:"Siga o guia na p\xe1gina. Voc\xea pode completar a integra\xe7\xe3o do Logto em cerca de 5 minutos!"}),"\n",(0,s.jsx)(o.p,{children:"Aqui est\xe1 meu c\xf3digo de integra\xe7\xe3o:"}),"\n",(0,s.jsx)(o.pre,{children:(0,s.jsx)(o.code,{className:"language-jsx",children:'const config: LogtoConfig = {\n  endpoint: "<YOUR_LOGTO_ENDPOINT>",\n  appId: "<YOUR_LOGTO_APP_ID>",\n};\n\nfunction App() {\n  return (\n    <LogtoProvider config={config}>\n      <div className="min-h-screen bg-gradient-to-b from-gray-50 to-gray-100">\n        <Routes>\n          {/* Este callback lida com o redirecionamento de login do usu\xe1rio vindo do Logto */}\n          <Route path="/callback" element={<Callback />} />\n          <Route path="/*" element={<AppContent />} />\n        </Routes>\n      </div>\n    </LogtoProvider>\n  );\n}\n\nfunction AppContent() {\n  const { isAuthenticated } = useLogto();\n\n  if (!isAuthenticated) {\n    // Exibe p\xe1gina inicial para usu\xe1rios n\xe3o autenticados\n    return <Landing />;\n  }\n\n  // Exibe app principal para usu\xe1rios autenticados\n  return (\n    <Routes>\n      {/* Dashboard mostra todas as organiza\xe7\xf5es dispon\xedveis */}\n      <Route path="/" element={<Dashboard />} />\n\n      {/* P\xe1gina da organiza\xe7\xe3o ap\xf3s clicar em uma organiza\xe7\xe3o no Dashboard */}\n      <Route path="/:orgId" element={<Organization />} />\n    </Routes>\n  );\n}\n'})}),"\n",(0,s.jsx)(o.p,{children:(0,s.jsx)(o.img,{src:"https://uploads.strapi.logto.io/documind_home_page_e72468b8c9.png",alt:"documind-home-page.png"})}),"\n",(0,s.jsxs)(o.p,{children:["Aqui vai uma dica \xfatil: Nossa p\xe1gina de login tem bot\xf5es de Entrar e Registrar. O bot\xe3o Registrar leva direto para a p\xe1gina de cadastro do Logto. Isso funciona atrav\xe9s do recurso ",(0,s.jsx)(o.a,{href:"/end-user-flows/authentication-parameters/first-screen",children:"primeira tela"})," do Logto. Ele determina qual etapa do fluxo de autentica\xe7\xe3o o usu\xe1rio v\xea primeiro."]}),"\n",(0,s.jsx)(o.p,{children:"Voc\xea pode definir a p\xe1gina de cadastro como padr\xe3o quando seu produto espera muitos novos usu\xe1rios."}),"\n",(0,s.jsx)(o.pre,{children:(0,s.jsx)(o.code,{className:"language-jsx",children:'function LandingPage() {\n  const { signIn } = useLogto();\n\n  return (\n    <div className="landing-container">\n      <div className="auth-buttons">\n        <button\n          className="sign-in-button"\n          onClick={() => {\n            signIn({\n              redirectUri: \'<YOUR_APP_CALLBACK_URL>\',\n            });\n          }}\n        >\n          Entrar\n        </button>\n\n        <button\n          className="register-button"\n          onClick={() => {\n            signIn({\n              redirectUri: \'<YOUR_APP_CALLBACK_URL>\',\n              firstScreen: \'register\',\n            });\n          }}\n        >\n          Registrar\n        </button>\n      </div>\n    </div>\n  );\n}\n'})}),"\n",(0,s.jsx)(o.p,{children:"Ap\xf3s clicar em login, voc\xea ir\xe1 para a p\xe1gina de login do Logto. Ap\xf3s login (ou cadastro) bem-sucedido, parab\xe9ns! Seu app tem seu primeiro usu\xe1rio (voc\xea)!"}),"\n",(0,s.jsxs)(o.p,{children:["E chame a fun\xe7\xe3o ",(0,s.jsx)(o.code,{children:"signOut"})," do hook ",(0,s.jsx)(o.code,{children:"useLogto"})," para sair do usu\xe1rio quando quiser."]}),"\n",(0,s.jsx)(o.pre,{children:(0,s.jsx)(o.code,{className:"language-jsx",children:"function SignOutButton() {\n  const { signOut } = useLogto();\n\n  return <button onClick={() => signOut('<YOUR_POST_LOGOUT_REDIRECT_URL>')}>Sair</button>;\n}\n"})}),"\n",(0,s.jsx)(o.h3,{id:"customize-sign-in-and-sign-up-methods",children:"Personalize m\xe9todos de login e cadastro"}),"\n",(0,s.jsx)(o.p,{children:'No Logto Console, clique em "Sign-in Experience" no menu \xe0 esquerda. Depois clique na aba "Sign-up and sign-in".\nNesta p\xe1gina, siga as instru\xe7\xf5es para configurar os m\xe9todos de login/cadastro do Logto.'}),"\n",(0,s.jsx)(o.p,{children:(0,s.jsx)(o.img,{src:"https://uploads.strapi.logto.io/sign_in_experience_settings_68690b84f4.png",alt:"sign-in-experience-settings.png"})}),"\n",(0,s.jsx)(o.p,{children:"E o fluxo de login ficar\xe1 assim:"}),"\n",(0,s.jsx)("img",{alt:"P\xe1gina de login do Logto",src:"https://uploads.strapi.logto.io/sign_in_page_88ea6b5292.png",width:"500"}),"\n",(0,s.jsx)(o.h3,{id:"enable-multi-factor-authentication",children:"Habilite autentica\xe7\xe3o multifatorial"}),"\n",(0,s.jsx)(o.p,{children:'Com o Logto, habilitar MFA \xe9 simples. Basta clicar no bot\xe3o "Multi-factor auth" no Logto Console. Depois ative na p\xe1gina de autentica\xe7\xe3o multifatorial.'}),"\n",(0,s.jsx)(o.p,{children:(0,s.jsx)(o.img,{src:"https://uploads.strapi.logto.io/mfa_settings_d74c5492d7.png",alt:"mfa-settings.png"})}),"\n",(0,s.jsx)(o.p,{children:"E o fluxo de MFA ficar\xe1 assim:"}),"\n",(0,s.jsxs)("div",{className:"twoColumn",children:[(0,s.jsx)("img",{alt:"Etapa de verifica\xe7\xe3o MFA",src:"https://uploads.strapi.logto.io/verification_step_852fffe7da.png",width:"500"}),(0,s.jsx)("img",{alt:"Escanear QR code no app autenticador",src:"https://uploads.strapi.logto.io/scan_auth_app_qr_code_68c2e26277.png",width:"500"})]}),"\n",(0,s.jsx)(o.p,{children:"Tudo \xe9 t\xe3o simples! Configuramos um sistema complexo de autentica\xe7\xe3o de usu\xe1rios em apenas alguns minutos!"}),"\n",(0,s.jsx)(o.h2,{id:"adding-multi-tenant-organization-experience",children:"Adicionando experi\xeancia multi-inquilino de organiza\xe7\xe3o"}),"\n",(0,s.jsx)(o.p,{children:"Agora temos nosso primeiro usu\xe1rio! Por\xe9m, esse usu\xe1rio ainda n\xe3o pertence a nenhuma organiza\xe7\xe3o, e n\xe3o criamos nenhuma organiza\xe7\xe3o."}),"\n",(0,s.jsx)(o.p,{children:"O Logto oferece suporte nativo para multi-tenancy. Voc\xea pode criar qualquer n\xfamero de organiza\xe7\xf5es no Logto. Cada organiza\xe7\xe3o pode ter m\xfaltiplos membros."}),"\n",(0,s.jsx)(o.mermaid,{value:"graph TD\n    T[Tenant Logto] --\x3e OrgA[Organiza\xe7\xe3o A]\n    T --\x3e OrgB[Organiza\xe7\xe3o B]\n    OrgA --\x3e MA1[Membro]\n    OrgA --\x3e MA2[Membro]\n    OrgB --\x3e MB1[Membro]\n    OrgB --\x3e MB2[Membro]\n\n    style OrgA fill:#e6ffe6\n    style OrgB fill:#e6ffe6\n"}),"\n",(0,s.jsx)(o.p,{children:"Cada usu\xe1rio pode obter suas informa\xe7\xf5es de organiza\xe7\xe3o do Logto. Isso habilita o suporte a multi-tenancy."}),"\n",(0,s.jsx)(o.h3,{id:"get-a-user-s-organization-information",children:"Obter informa\xe7\xf5es de organiza\xe7\xe3o do usu\xe1rio"}),"\n",(0,s.jsx)(o.p,{children:"Para obter as informa\xe7\xf5es de organiza\xe7\xe3o de um usu\xe1rio no Logto, siga estes dois passos:"}),"\n",(0,s.jsxs)(o.p,{children:["Declare o acesso \xe0s informa\xe7\xf5es de organiza\xe7\xe3o no Logto Config. Isso \xe9 feito configurando os ",(0,s.jsx)(o.code,{children:"scopes"})," e ",(0,s.jsx)(o.code,{children:"resources"})," apropriados."]}),"\n",(0,s.jsx)(o.pre,{children:(0,s.jsx)(o.code,{className:"language-jsx",children:'import { UserScope, ReservedResource } from "@logto/react";\nconst config: LogtoConfig = {\n  endpoint: "<YOUR_LOGTO_ENDPOINT>",\n  appId: "<YOUR_LOGTO_APP_ID>",\n  scopes: [UserScope.Organizations], // Valor: "urn:logto:scope:organizations"\n  resources: [ReservedResource.Organization], // Valor: "urn:logto:resource:organizations"\n};\n\n'})}),"\n",(0,s.jsxs)(o.p,{children:["Use o m\xe9todo ",(0,s.jsx)(o.code,{children:"fetchUserInfo"})," do Logto para obter informa\xe7\xf5es do usu\xe1rio, incluindo dados de organiza\xe7\xe3o."]}),"\n",(0,s.jsx)(o.pre,{children:(0,s.jsx)(o.code,{className:"language-jsx",children:"function Dashboard() {\n  // Obter informa\xe7\xf5es do usu\xe1rio\n  const { fetchUserInfo } = useLogto();\n  const [organizations, setOrganizations] = useState<OrganizationData[]>([]);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    const loadOrganizations = async () => {\n      try {\n        setLoading(true);\n        // Obter informa\xe7\xf5es do usu\xe1rio\n        const userInfo = await fetchUserInfo();\n        // Obter informa\xe7\xf5es de organiza\xe7\xe3o do usu\xe1rio\n        const organizationData = userInfo?.organization_data || [];\n        setOrganizations(organizationData);\n      } catch (error) {\n        console.error('Falha ao buscar organiza\xe7\xf5es:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    loadOrganizations();\n  }, [fetchUserInfo]);\n\n  if (loading) {\n    return <div>Carregando...</div>;\n  }\n\n  if (organizations.length === 0) {\n    return <div>Voc\xea ainda n\xe3o \xe9 membro de nenhuma organiza\xe7\xe3o</div>;\n  }\n\n  return <div>Organiza\xe7\xf5es: {organizations.map(org => org.name).join(', ')}</div>;\n}\n\n"})}),"\n",(0,s.jsx)(o.p,{children:"Ap\xf3s completar esses passos, voc\xea precisa sair e entrar novamente. Isso \xe9 necess\xe1rio porque modificamos o escopo e o recurso solicitados."}),"\n",(0,s.jsx)(o.p,{children:'Neste momento, voc\xea ainda n\xe3o criou nenhuma organiza\xe7\xe3o. O usu\xe1rio tamb\xe9m n\xe3o entrou em nenhuma organiza\xe7\xe3o. O dashboard mostrar\xe1 "Voc\xea ainda n\xe3o tem nenhuma organiza\xe7\xe3o".'}),"\n",(0,s.jsx)(o.p,{children:(0,s.jsx)(o.img,{src:"https://uploads.strapi.logto.io/dashboard_no_orgs_94678fe16f.png",alt:"dashboard-no-orgs.png"})}),"\n",(0,s.jsx)(o.p,{children:"Em seguida, vamos criar uma organiza\xe7\xe3o para nossos usu\xe1rios e adicion\xe1-los a ela."}),"\n",(0,s.jsx)(o.p,{children:"Gra\xe7as ao Logto, n\xe3o precisamos construir relacionamentos complexos de organiza\xe7\xe3o. S\xf3 precisamos criar uma organiza\xe7\xe3o no Logto e adicionar usu\xe1rios a ela. O Logto cuida de toda a complexidade para n\xf3s. Existem duas formas de criar Organiza\xe7\xf5es:"}),"\n",(0,s.jsxs)(o.ol,{children:["\n",(0,s.jsx)(o.li,{children:"Criar organiza\xe7\xf5es manualmente pelo Logto Console"}),"\n",(0,s.jsx)(o.li,{children:"Usar a Management API do Logto para criar organiza\xe7\xf5es, especialmente ao projetar um fluxo SaaS que permite que usu\xe1rios criem suas pr\xf3prias organiza\xe7\xf5es (workspaces)."}),"\n"]}),"\n",(0,s.jsx)(o.h3,{id:"create-organization-in-logto-console",children:"Criar organiza\xe7\xe3o no Logto Console"}),"\n",(0,s.jsx)(o.p,{children:'Clique no menu "Organizations" no lado esquerdo do Logto Console. Crie uma organiza\xe7\xe3o.'}),"\n",(0,s.jsx)(o.p,{children:"Agora voc\xea tem sua primeira organiza\xe7\xe3o."}),"\n",(0,s.jsx)(o.p,{children:(0,s.jsx)(o.img,{src:"https://uploads.strapi.logto.io/console_organizations_7312c72766.png",alt:"console-organizations.png"})}),"\n",(0,s.jsx)(o.p,{children:"Em seguida, vamos adicionar o usu\xe1rio a essa organiza\xe7\xe3o."}),"\n",(0,s.jsx)(o.p,{children:'V\xe1 para a p\xe1gina de detalhes da organiza\xe7\xe3o. Troque para a aba Members. Clique no bot\xe3o "+ Add member". Selecione seu usu\xe1rio logado na lista \xe0 esquerda. Clique no bot\xe3o "Add members" no canto inferior direito. Agora voc\xea adicionou o usu\xe1rio com sucesso a essa organiza\xe7\xe3o.'}),"\n",(0,s.jsx)(o.p,{children:(0,s.jsx)(o.img,{src:"https://uploads.strapi.logto.io/console_add_member_to_orgs_ad21beb58f.png",alt:"console-add-member-to-orgs.png"})}),"\n",(0,s.jsx)(o.p,{children:"Atualize a p\xe1gina do seu APP. Voc\xea ver\xe1 que o usu\xe1rio agora pertence a uma organiza\xe7\xe3o!"}),"\n",(0,s.jsx)(o.p,{children:(0,s.jsx)(o.img,{src:"https://uploads.strapi.logto.io/dashboard_has_orgs_568a44cc1f.png",alt:"dashboard-has-orgs.png"})}),"\n",(0,s.jsx)(o.h2,{id:"implement-self-serve-organization-creation-experience",children:"Implementar experi\xeancia de cria\xe7\xe3o de organiza\xe7\xe3o self-service"}),"\n",(0,s.jsx)(o.p,{children:"Criar uma organiza\xe7\xe3o no console n\xe3o \xe9 suficiente. Seu app SaaS precisa de um fluxo que permita aos usu\xe1rios finais criar e gerenciar facilmente seus pr\xf3prios workspaces. Para implementar essa funcionalidade, use a Management API do Logto."}),"\n",(0,s.jsxs)(o.p,{children:["Para orienta\xe7\xe3o, confira a documenta\xe7\xe3o ",(0,s.jsx)(o.a,{href:"/integrate-logto/interact-with-management-api",children:"Interaja com a Management API"})," para configurar a comunica\xe7\xe3o da API com o Logto."]}),"\n",(0,s.jsx)(o.h3,{id:"understand-organization-auth-interaction-flow",children:"Entenda o fluxo de intera\xe7\xe3o de autentica\xe7\xe3o de organiza\xe7\xe3o"}),"\n",(0,s.jsx)(o.p,{children:"Vamos usar o fluxo de cria\xe7\xe3o de organiza\xe7\xe3o como exemplo. Veja como funciona o processo de cria\xe7\xe3o de organiza\xe7\xe3o:"}),"\n",(0,s.jsx)(o.mermaid,{value:"sequenceDiagram\n  actor A as Usu\xe1rio\n  participant B as Frontend\n  participant C as Backend\n  participant D as Logto\n\n  A->>B: Solicita criar organiza\xe7\xe3o\n  B->>C: POST /organizations\n  C->>D: POST /api/organizations\n  D--\x3e>C: Organiza\xe7\xe3o criada\n  C->>D: POST /api/organizations/{id}/users\n  D--\x3e>C: Usu\xe1rio adicionado \xe0 organiza\xe7\xe3o\n  C--\x3e>B: Resposta de sucesso\n  B--\x3e>A: Exibe mensagem de sucesso"}),"\n",(0,s.jsx)(o.p,{children:"Esse fluxo tem dois requisitos principais de autentica\xe7\xe3o:"}),"\n",(0,s.jsxs)(o.ol,{children:["\n",(0,s.jsxs)(o.li,{children:[(0,s.jsx)(o.strong,{children:"Proteger a API do servi\xe7o backend"}),":","\n",(0,s.jsxs)(o.ul,{children:["\n",(0,s.jsx)(o.li,{children:"O acesso do frontend \xe0 API do nosso servi\xe7o backend requer autentica\xe7\xe3o"}),"\n",(0,s.jsx)(o.li,{children:"Endpoints da API s\xe3o protegidos validando o Access Token do Logto do usu\xe1rio"}),"\n",(0,s.jsx)(o.li,{children:"Garante que apenas usu\xe1rios autenticados possam acessar nossos servi\xe7os"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(o.li,{children:[(0,s.jsx)(o.strong,{children:"Acessar a Management API do Logto"}),":","\n",(0,s.jsxs)(o.ul,{children:["\n",(0,s.jsx)(o.li,{children:"O servi\xe7o backend precisa chamar a Management API do Logto com seguran\xe7a"}),"\n",(0,s.jsxs)(o.li,{children:["Siga o guia ",(0,s.jsx)(o.a,{href:"/integrate-logto/interact-with-management-api",children:"Interaja com a Management API"})," para configura\xe7\xe3o"]}),"\n",(0,s.jsx)(o.li,{children:"Use autentica\xe7\xe3o M\xe1quina para M\xe1quina para obter credenciais de acesso"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(o.h3,{id:"protect-your-backend-api",children:"Proteja sua API backend"}),"\n",(0,s.jsx)(o.p,{children:"Primeiro, vamos criar um endpoint de API no nosso servi\xe7o backend para criar organiza\xe7\xf5es."}),"\n",(0,s.jsx)(o.pre,{children:(0,s.jsx)(o.code,{className:"language-jsx",children:"app.post('/organizations', async (req, res) => {\n  // Implementa\xe7\xe3o usando a Management API do Logto\n  // ...\n});\n"})}),"\n",(0,s.jsx)(o.p,{children:"Nossa API do servi\xe7o backend s\xf3 permite usu\xe1rios autenticados. Precisamos usar o Logto para proteger nossa API. Tamb\xe9m precisamos saber as informa\xe7\xf5es do usu\xe1rio atual (como user ID)."}),"\n",(0,s.jsx)(o.p,{children:"No conceito do Logto (e OAuth 2.0), nosso servi\xe7o backend atua como um resource server. Usu\xe1rios acessam o resource server do DocuMind com um Access token vindo do frontend. O resource server verifica esse token. Se v\xe1lido, retorna os recursos solicitados."}),"\n",(0,s.jsx)(o.p,{children:"Vamos criar um API Resource para representar nosso servi\xe7o backend."}),"\n",(0,s.jsx)(o.p,{children:"V\xe1 ao Logto Console."}),"\n",(0,s.jsxs)(o.ol,{children:["\n",(0,s.jsx)(o.li,{children:'Clique no bot\xe3o "API resources" \xe0 direita.'}),"\n",(0,s.jsx)(o.li,{children:'Clique em "Create API resource". Selecione Express no popup.'}),"\n",(0,s.jsxs)(o.li,{children:['Preencha "DocuMind API" como nome da API. Use "',(0,s.jsx)(o.a,{href:"https://api.documind.com/",children:"https://api.documind.com"}),'" como identificador da API.']}),"\n",(0,s.jsx)(o.li,{children:"Clique em criar."}),"\n"]}),"\n",(0,s.jsx)(o.p,{children:"N\xe3o se preocupe com essa URL de identificador da API. \xc9 apenas um identificador \xfanico para sua API no Logto. N\xe3o est\xe1 relacionado \xe0 URL real do seu servi\xe7o backend."}),"\n",(0,s.jsx)(o.p,{children:"Voc\xea ver\xe1 um tutorial para usar o recurso de API. Voc\xea pode seguir esse tutorial ou nossos passos abaixo."}),"\n",(0,s.jsx)(o.p,{children:"Vamos criar um middleware requireAuth para proteger nosso endpoint POST /organizations."}),"\n",(0,s.jsx)(o.pre,{children:(0,s.jsx)(o.code,{className:"language-jsx",children:"const { createRemoteJWKSet, jwtVerify } = require('jose');\n\nconst getTokenFromHeader = (headers) => {\n  const { authorization } = headers;\n  const bearerTokenIdentifier = 'Bearer';\n\n  if (!authorization) {\n    throw new Error('Authorization header missing');\n  }\n\n  if (!authorization.startsWith(bearerTokenIdentifier)) {\n    throw new Error('Authorization token type not supported');\n  }\n\n  return authorization.slice(bearerTokenIdentifier.length + 1);\n};\n\nconst requireAuth = (resource) => {\n  if (!resource) {\n    throw new Error('Resource parameter is required for authentication');\n  }\n\n  return async (req, res, next) => {\n    try {\n      // Extrai o token\n      const token = getTokenFromHeader(req.headers);\n\n      const { payload } = await jwtVerify(\n        token,\n        createRemoteJWKSet(new URL(process.env.LOGTO_JWKS_URL)),\n        {\n          issuer: process.env.LOGTO_ISSUER,\n          audience: resource,\n        }\n      );\n\n      // Adiciona info do usu\xe1rio \xe0 requisi\xe7\xe3o\n      req.user = {\n        id: payload.sub,\n      };\n\n      next();\n    } catch (error) {\n      console.error('Erro de autentica\xe7\xe3o:', error);\n      res.status(401).json({ error: 'N\xe3o autorizado' });\n    }\n  };\n};\n\nmodule.exports = {\n  requireAuth,\n};\n"})}),"\n",(0,s.jsx)(o.p,{children:"Para usar esse middleware, precisamos dessas vari\xe1veis de ambiente:"}),"\n",(0,s.jsxs)(o.ul,{children:["\n",(0,s.jsx)(o.li,{children:"LOGTO_JWKS_URL"}),"\n",(0,s.jsx)(o.li,{children:"LOGTO_ISSUER"}),"\n"]}),"\n",(0,s.jsxs)(o.p,{children:["Obtenha essas vari\xe1veis no endpoint OpenID Configuration do seu tenant Logto. Acesse ",(0,s.jsx)(o.code,{children:"https://<your-tenant-id>.logto.app/oidc/.well-known/openid-configuration"}),". Voc\xea encontrar\xe1 as informa\xe7\xf5es necess\xe1rias no JSON retornado:"]}),"\n",(0,s.jsx)(o.pre,{children:(0,s.jsx)(o.code,{className:"language-json",children:'{\n  "jwks_uri": "<https://tenant-id.logto.app/oidc/jwks>",\n  "issuer": "<https://tenant-id.logto.app/oidc>"\n}\n'})}),"\n",(0,s.jsx)(o.p,{children:"Agora use o middleware requireAuth no nosso endpoint POST /organizations."}),"\n",(0,s.jsx)(o.pre,{children:(0,s.jsx)(o.code,{className:"language-jsx",children:"app.post('/organizations', requireAuth('<https://api.documind.com>'), async (req, res) => {\n  // L\xf3gica de cria\xe7\xe3o de organiza\xe7\xe3o\n  // ...\n});\n"})}),"\n",(0,s.jsx)(o.p,{children:"Isso protege nosso endpoint POST /organizations. Apenas usu\xe1rios com access tokens v\xe1lidos do Logto podem acess\xe1-lo."}),"\n",(0,s.jsx)(o.p,{children:"Agora podemos obter o token do Logto no frontend. Usu\xe1rios podem criar organiza\xe7\xf5es pelo nosso servi\xe7o backend com esse token. O middleware tamb\xe9m nos d\xe1 o user ID. Isso ajuda ao adicionar usu\xe1rios \xe0s organiza\xe7\xf5es."}),"\n",(0,s.jsx)(o.p,{children:"No c\xf3digo do frontend, declare esse API resource no config do Logto. Adicione seu identificador ao array de resources."}),"\n",(0,s.jsx)(o.pre,{children:(0,s.jsx)(o.code,{className:"language-jsx",children:'const config: LogtoConfig = {\n  endpoint: "<YOUR_LOGTO_ENDPOINT>",\n  appId: "<YOUR_LOGTO_APP_ID>",\n  scopes: [UserScope.Organizations],\n  resources: [ReservedResource.Organization, "<https://api.documind.com>"], // Identificador do novo API resource\n};\n\n'})}),"\n",(0,s.jsx)(o.p,{children:"Como antes, os usu\xe1rios precisam fazer login novamente ap\xf3s atualizarmos o config do Logto."}),"\n",(0,s.jsx)(o.p,{children:"No Dashboard, obtenha o Access Token do Logto ao criar uma organiza\xe7\xe3o. Use esse token para acessar a API do nosso servi\xe7o backend."}),"\n",(0,s.jsx)(o.pre,{children:(0,s.jsx)(o.code,{className:"language-jsx",children:"// Obter access token para \"DocuMind API\"\nconst token = await getAccessToken('<https://api.documind.com>');\n\n// Acessar a API do nosso servi\xe7o backend com o token\nconst response = await fetch('<http://localhost:3000/organizations>', {\n  method: 'POST',\n  headers: {\n    'Content-Type': 'application/json',\n    Authorization: `Bearer ${token}`,\n  },\n  body: JSON.stringify({\n    name: 'Organization A',\n    description: 'Organization A description',\n  }),\n});\n"})}),"\n",(0,s.jsx)(o.p,{children:"Agora podemos acessar corretamente a API do servi\xe7o backend do DocuMind."}),"\n",(0,s.jsx)(o.h3,{id:"calling-logto-management-api",children:"Chamando a Management API do Logto"}),"\n",(0,s.jsx)(o.p,{children:"Vamos implementar a cria\xe7\xe3o de organiza\xe7\xe3o usando a Management API do Logto."}),"\n",(0,s.jsx)(o.p,{children:"Assim como as requisi\xe7\xf5es do frontend para o servi\xe7o backend, as requisi\xe7\xf5es do backend para o Logto precisam de Access tokens."}),"\n",(0,s.jsxs)(o.p,{children:["No Logto, usamos autentica\xe7\xe3o M\xe1quina para M\xe1quina para access tokens. Veja ",(0,s.jsx)(o.a,{href:"/integrate-logto/interact-with-management-api",children:"Interaja com a Management API"}),"."]}),"\n",(0,s.jsx)(o.p,{children:'V\xe1 para a p\xe1gina de aplica\xe7\xf5es no Logto Console. Crie uma aplica\xe7\xe3o M\xe1quina para M\xe1quina. Atribua o papel "Logto Management API access". Copie o endpoint de Token, App ID e App Secret. Usaremos esses dados para obter access tokens.'}),"\n",(0,s.jsx)(o.p,{children:(0,s.jsx)(o.img,{src:"https://uploads.strapi.logto.io/m2m_application_d882b6386e.png",alt:"m2m-application.png"})}),"\n",(0,s.jsx)(o.p,{children:"Agora podemos obter access tokens da Management API do Logto por essa aplica\xe7\xe3o M2M."}),"\n",(0,s.jsx)(o.pre,{children:(0,s.jsx)(o.code,{className:"language-jsx",children:"async function fetchLogtoManagementApiAccessToken() {\n  const response = await fetch(process.env.LOGTO_MANAGEMENT_API_TOKEN_ENDPOINT, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/x-www-form-urlencoded',\n      Authorization: `Basic ${Buffer.from(\n        `${process.env.LOGTO_MANAGEMENT_API_APPLICATION_ID}:${process.env.LOGTO_MANAGEMENT_API_APPLICATION_SECRET}`\n      ).toString('base64')}`,\n    },\n    body: new URLSearchParams({\n      grant_type: 'client_credentials',\n      resource: process.env.LOGTO_MANAGEMENT_API_RESOURCE,\n      scope: 'all',\n    }).toString(),\n  });\n  const data = await response.json();\n  return data.access_token;\n}\n"})}),"\n",(0,s.jsx)(o.p,{children:"Use esse access token para chamar a Management API do Logto."}),"\n",(0,s.jsx)(o.p,{children:"Usaremos essas APIs de gerenciamento:"}),"\n",(0,s.jsxs)(o.ul,{children:["\n",(0,s.jsxs)(o.li,{children:[(0,s.jsx)(o.code,{children:"POST /api/organizations"}),": Criar organiza\xe7\xe3o (veja: ",(0,s.jsx)(o.a,{href:"https://openapi.logto.io/operation/operation-createorganization",children:"Refer\xeancia da API Create organization"}),")"]}),"\n",(0,s.jsxs)(o.li,{children:[(0,s.jsx)(o.code,{children:"POST /api/organizations/{id}/users"}),": Adicionar usu\xe1rios \xe0 organiza\xe7\xe3o (veja: ",(0,s.jsx)(o.a,{href:"https://openapi.logto.io/operation/operation-addusers",children:"Refer\xeancia da API Add users to organization"}),")"]}),"\n"]}),"\n",(0,s.jsx)(o.pre,{children:(0,s.jsx)(o.code,{className:"language-jsx",children:"app.post('/organizations', requireAuth('<https://api.documind.com>'), async (req, res) => {\n  const accessToken = await fetchLogtoManagementApiAccessToken();\n  // Cria organiza\xe7\xe3o no Logto e adiciona usu\xe1rio a ela\n  const response = await fetch(`${process.env.LOGTO_ENDPOINT}/api/organizations`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${accessToken}`,\n    },\n    body: JSON.stringify({\n      name: req.body.name,\n      description: req.body.description,\n    }),\n  });\n\n  const createdOrganization = await response.json();\n\n  await fetch(`${process.env.LOGTO_ENDPOINT}/api/organizations/${createdOrganization.id}/users`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${accessToken}`,\n    },\n    body: JSON.stringify({\n      userIds: [req.user.id],\n    }),\n  });\n\n  res.json({ data: createdOrganization });\n});\n"})}),"\n",(0,s.jsx)(o.p,{children:"Agora implementamos a cria\xe7\xe3o de organiza\xe7\xe3o via Management API do Logto. Tamb\xe9m podemos adicionar usu\xe1rios \xe0s organiza\xe7\xf5es."}),"\n",(0,s.jsx)(o.p,{children:"Vamos testar esse recurso no Dashboard."}),"\n",(0,s.jsx)(o.p,{children:(0,s.jsx)(o.img,{src:"https://uploads.strapi.logto.io/dashboard_create_org_b703f1125b.png",alt:"dashboard-create-org.png"})}),"\n",(0,s.jsx)(o.p,{children:"e clicar em \u201cCreate Organization\u201d"}),"\n",(0,s.jsx)(o.p,{children:(0,s.jsx)(o.img,{src:"https://uploads.strapi.logto.io/dashboard_has_orgs_568a44cc1f.png",alt:"dashboard-has-orgs.png"})}),"\n",(0,s.jsx)(o.p,{children:"Cria\xe7\xe3o bem-sucedida!"}),"\n",(0,s.jsxs)(o.p,{children:["O pr\xf3ximo passo seria convidar usu\xe1rios para uma organiza\xe7\xe3o. N\xe3o implementaremos esse recurso neste tutorial ainda. Voc\xea j\xe1 sabe como usar a Management API. Voc\xea pode consultar este ",(0,s.jsx)(o.a,{href:"#tenant-creation-and-invitation",children:(0,s.jsx)(o.strong,{children:"Tenant creation and invitation"})})," como refer\xeancia de design de produto e implementar facilmente esse recurso seguindo este post do blog: ",(0,s.jsx)(o.a,{href:"https://blog.logto.io/implement-user-collaboration-in-your-app",children:"Como implementamos colabora\xe7\xe3o de usu\xe1rios em um app multi-inquilino"}),"."]}),"\n",(0,s.jsx)(o.h2,{id:"implement-access-control-to-your-multi-tenant-app",children:"Implemente controle de acesso no seu app multi-inquilino"}),"\n",(0,s.jsx)(o.p,{children:"Agora vamos para o controle de acesso da organiza\xe7\xe3o."}),"\n",(0,s.jsx)(o.p,{children:"Queremos alcan\xe7ar:"}),"\n",(0,s.jsxs)(o.ul,{children:["\n",(0,s.jsxs)(o.li,{children:["Usu\xe1rios s\xf3 podem acessar recursos pertencentes \xe0s suas pr\xf3prias organiza\xe7\xf5es: Isso pode ser feito atrav\xe9s do ",(0,s.jsx)(o.code,{children:"token de organiza\xe7\xe3o (Organization token)"})," do Logto"]}),"\n",(0,s.jsx)(o.li,{children:"Usu\xe1rios t\xeam pap\xe9is espec\xedficos dentro das organiza\xe7\xf5es (com diferentes permiss\xf5es) para realizar a\xe7\xf5es autorizadas: Isso pode ser implementado atrav\xe9s do recurso de template de organiza\xe7\xe3o do Logto"}),"\n"]}),"\n",(0,s.jsx)(o.p,{children:"Vamos ver como implementar esses recursos."}),"\n",(0,s.jsx)(o.h3,{id:"using-logto-organization-token",children:"Usando o token de organiza\xe7\xe3o do Logto"}),"\n",(0,s.jsx)(o.p,{children:"Semelhante ao access token do Logto mencionado anteriormente, o Logto emite um access token correspondente a um recurso espec\xedfico, e os usu\xe1rios usam esse token para acessar recursos protegidos no servi\xe7o backend. Da mesma forma, o Logto emite um token de organiza\xe7\xe3o correspondente a uma organiza\xe7\xe3o espec\xedfica, e os usu\xe1rios usam esse token para acessar recursos protegidos da organiza\xe7\xe3o no servi\xe7o backend."}),"\n",(0,s.jsxs)(o.p,{children:["No aplicativo frontend, podemos usar o m\xe9todo ",(0,s.jsx)(o.code,{children:"getOrganizationToken"})," do Logto para obter um token para acessar uma organiza\xe7\xe3o espec\xedfica."]}),"\n",(0,s.jsx)(o.pre,{children:(0,s.jsx)(o.code,{className:"language-jsx",children:"const { getOrganizationToken } = useLogto();\nconst organizationToken = await getOrganizationToken(organizationId);\n"})}),"\n",(0,s.jsxs)(o.p,{children:["Aqui, ",(0,s.jsx)(o.code,{children:"organizationId"})," \xe9 o id da organiza\xe7\xe3o \xe0 qual o usu\xe1rio pertence."]}),"\n",(0,s.jsxs)(o.p,{children:["Antes de usar ",(0,s.jsx)(o.code,{children:"getOrganization"})," ou qualquer recurso de organiza\xe7\xe3o, precisamos garantir que o escopo ",(0,s.jsx)(o.code,{children:"urn:logto:scope:organizations"})," e o recurso ",(0,s.jsx)(o.code,{children:"urn:logto:resource:organization"})," estejam inclu\xeddos no config do Logto. Como j\xe1 declaramos isso antes, n\xe3o vamos repetir."]}),"\n",(0,s.jsx)(o.p,{children:"Na nossa p\xe1gina de organiza\xe7\xe3o, usamos o token de organiza\xe7\xe3o para buscar documentos dentro da organiza\xe7\xe3o."}),"\n",(0,s.jsx)(o.pre,{children:(0,s.jsx)(o.code,{className:"language-jsx",children:"function OrganizationPage() {\n  const { organizationId } = useParams();\n  const navigate = useNavigate();\n  const { signOut, getOrganizationToken } = useLogto();\n  const [error, setError] = useState<Error | null>(null);\n  const [documents, setDocuments] = useState([]);\n\n  const fetchDocuments = useCallback(async () => {\n    if (!organizationId) return;\n\n    try {\n      const organizationToken = await getOrganizationToken(organizationId);\n      const response = await fetch(`http://localhost:3000/documents`, {\n          headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${organizationToken}`,\n        },\n      });\n      const documents = await response.json();\n      setDocuments(documents);\n    } catch (error: unknown) {\n      if (error instanceof Error) {\n        setError(error);\n      } else {\n        setError(new Error(String(error)));\n      }\n    }\n  },[getOrganizationToken, organizationId]);\n\n  useEffect(() => {\n    void fetchDocuments();\n  }, [fetchDocuments]);\n\n  if (error) {\n    return <div>Erro: {error.message}</div>;\n  }\n\n  return <div>\n    <h1>Documentos da Organiza\xe7\xe3o</h1>\n    <ul>\n      {documents.map((document) => (\n        <li key={document.id}>{document.name}</li>\n      ))}\n    </ul>\n  </div>\n}\n\n"})}),"\n",(0,s.jsx)(o.p,{children:"H\xe1 dois pontos importantes a serem observados nesta implementa\xe7\xe3o:"}),"\n",(0,s.jsxs)(o.ol,{children:["\n",(0,s.jsxs)(o.li,{children:["Se o ",(0,s.jsx)(o.code,{children:"organizationId"})," passado para ",(0,s.jsx)(o.code,{children:"getOrganizationToken"})," n\xe3o for um id de organiza\xe7\xe3o que pertence ao usu\xe1rio atual, esse m\xe9todo n\xe3o conseguir\xe1 obter um token, garantindo assim que os usu\xe1rios s\xf3 possam acessar suas pr\xf3prias organiza\xe7\xf5es."]}),"\n",(0,s.jsxs)(o.li,{children:["Ao solicitar recursos da organiza\xe7\xe3o, usamos o token de organiza\xe7\xe3o em vez do access token porque, para recursos pertencentes a uma organiza\xe7\xe3o, queremos usar o controle de permiss\xf5es da organiza\xe7\xe3o e n\xe3o o controle de permiss\xf5es do usu\xe1rio (voc\xea entender\xe1 melhor isso ao implementarmos a API ",(0,s.jsx)(o.code,{children:"GET /documents"})," mais adiante)."]}),"\n"]}),"\n",(0,s.jsxs)(o.p,{children:["Em seguida, criamos uma API ",(0,s.jsx)(o.code,{children:"GET /documents"})," no nosso servi\xe7o backend. Assim como usamos o API resource para proteger a API ",(0,s.jsx)(o.code,{children:"POST /organizations"}),", usamos indicadores de recurso espec\xedficos da organiza\xe7\xe3o para proteger a API ",(0,s.jsx)(o.code,{children:"GET /documents"}),"."]}),"\n",(0,s.jsxs)(o.p,{children:["Primeiro, vamos criar um middleware ",(0,s.jsx)(o.code,{children:"requireOrganizationAccess"})," para proteger recursos da Organiza\xe7\xe3o."]}),"\n",(0,s.jsx)(o.pre,{children:(0,s.jsx)(o.code,{className:"language-jsx",children:"const getTokenFromHeader = (headers) => {\n  const { authorization } = headers;\n  const bearerTokenIdentifier = 'Bearer';\n\n  if (!authorization) {\n    throw new Error('Authorization header missing');\n  }\n\n  if (!authorization.startsWith(bearerTokenIdentifier)) {\n    throw new Error('Authorization token type not supported');\n  }\n\n  return authorization.slice(bearerTokenIdentifier.length + 1);\n};\n\nconst extractOrganizationId = (aud) => {\n  if (!aud || typeof aud !== 'string' || !aud.startsWith('urn:logto:organization:')) {\n    throw new Error('Invalid organization token');\n  }\n  return aud.replace('urn:logto:organization:', '');\n};\n\nconst decodeJwtPayload = (token) => {\n  try {\n    const [, payloadBase64] = token.split('.');\n    if (!payloadBase64) {\n      throw new Error('Invalid token format');\n    }\n    const payloadJson = Buffer.from(payloadBase64, 'base64').toString('utf-8');\n    return JSON.parse(payloadJson);\n  } catch (error) {\n    throw new Error('Failed to decode token payload');\n  }\n};\n\nconst requireOrganizationAccess = () => {\n  return async (req, res, next) => {\n    try {\n      // Extrai o token\n      const token = getTokenFromHeader(req.headers);\n\n      // Obt\xe9m dinamicamente o audience do token\n      const { aud } = decodeJwtPayload(token);\n      if (!aud) {\n        throw new Error('Missing audience in token');\n      }\n\n      // Verifica o token com o audience\n      const { payload } = await jwtVerify(\n        token,\n        createRemoteJWKSet(new URL(process.env.LOGTO_JWKS_URL)),\n        {\n          issuer: process.env.LOGTO_ISSUER,\n          audience: aud,\n        }\n      );\n\n      // Extrai o organization ID do claim audience\n      const organizationId = extractOrganizationId(payload.aud);\n\n      // Adiciona info da organiza\xe7\xe3o \xe0 requisi\xe7\xe3o\n      req.user = {\n        id: payload.sub,\n        organizationId,\n      };\n\n      next();\n    } catch (error) {\n      console.error('Erro de autentica\xe7\xe3o da organiza\xe7\xe3o:', error);\n      res.status(401).json({ error: 'N\xe3o autorizado - Acesso \xe0 organiza\xe7\xe3o inv\xe1lido' });\n    }\n  };\n};\n"})}),"\n",(0,s.jsxs)(o.p,{children:["Depois usamos o middleware ",(0,s.jsx)(o.code,{children:"requireOrganizationAccess"})," para proteger a API ",(0,s.jsx)(o.code,{children:"GET /documents"}),"."]}),"\n",(0,s.jsx)(o.pre,{children:(0,s.jsx)(o.code,{className:"language-jsx",children:"app.get('/documents', requireOrganizationAccess(), async (req, res) => {\n  // Voc\xea pode obter o id do usu\xe1rio atual e o organizationId via req.user\n  console.log('userId', req.user.id);\n  console.log('organizationId', req.user.organizationId);\n\n  // Buscar documentos no banco de dados pelo organizationId\n  // ....\n  const documents = await getDocumentsByOrganizationId(req.user.organizationId);\n\n  res.json(documents);\n});\n"})}),"\n",(0,s.jsx)(o.p,{children:"Assim, implementamos o uso de tokens de organiza\xe7\xe3o para acessar recursos da organiza\xe7\xe3o. No servi\xe7o backend, voc\xea pode buscar os recursos correspondentes no banco de dados com base no id da organiza\xe7\xe3o."}),"\n",(0,s.jsxs)(o.p,{children:["Alguns softwares exigem isolamento de dados entre organiza\xe7\xf5es. Para discuss\xe3o e implementa\xe7\xe3o avan\xe7ada, consulte o post do blog: ",(0,s.jsx)(o.a,{href:"https://blog.logto.io/implement-multi-tenancy",children:"Implementa\xe7\xe3o de multi-tenancy com PostgreSQL: Aprenda com um exemplo real simples"}),"."]}),"\n",(0,s.jsx)(o.h3,{id:"implement-organization-level-role-based-access-control-design",children:"Implemente controle de acesso baseado em papel no n\xedvel da organiza\xe7\xe3o"}),"\n",(0,s.jsx)(o.p,{children:"Implementamos o uso de tokens de organiza\xe7\xe3o para acessar recursos da organiza\xe7\xe3o. Agora, vamos implementar o controle de permiss\xf5es de usu\xe1rios dentro das organiza\xe7\xf5es usando RBAC."}),"\n",(0,s.jsx)(o.p,{children:"Vamos supor que o DocuMind tenha dois pap\xe9is: Admin e Colaborador."}),"\n",(0,s.jsx)(o.p,{children:"Admins podem criar e acessar documentos, enquanto Colaboradores s\xf3 podem acessar documentos."}),"\n",(0,s.jsx)(o.p,{children:"Portanto, nossa Organiza\xe7\xe3o precisa ter esses dois pap\xe9is: Admin e Colaborador."}),"\n",(0,s.jsxs)(o.p,{children:["Admin tem as permiss\xf5es ",(0,s.jsx)(o.code,{children:"read:documents"})," e ",(0,s.jsx)(o.code,{children:"create:documents"}),", enquanto Colaborador tem apenas a permiss\xe3o ",(0,s.jsx)(o.code,{children:"read:documents"}),"."]}),"\n",(0,s.jsxs)(o.ul,{children:["\n",(0,s.jsxs)(o.li,{children:["Admin","\n",(0,s.jsxs)(o.ul,{children:["\n",(0,s.jsx)(o.li,{children:(0,s.jsx)(o.code,{children:"read:documents"})}),"\n",(0,s.jsx)(o.li,{children:(0,s.jsx)(o.code,{children:"create:documents"})}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(o.li,{children:["Colaborador","\n",(0,s.jsxs)(o.ul,{children:["\n",(0,s.jsx)(o.li,{children:(0,s.jsx)(o.code,{children:"read:documents"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(o.p,{children:"\xc9 aqui que entra o recurso de template de organiza\xe7\xe3o do Logto."}),"\n",(0,s.jsx)(o.p,{children:"Um template de organiza\xe7\xe3o \xe9 um modelo do sistema de controle de acesso para cada organiza\xe7\xe3o: define os pap\xe9is e permiss\xf5es que se aplicam a todas as organiza\xe7\xf5es."}),"\n",(0,s.jsxs)(o.blockquote,{children:["\n",(0,s.jsx)(o.p,{children:"Por que template de organiza\xe7\xe3o?"}),"\n",(0,s.jsx)(o.p,{children:"Porque escalabilidade \xe9 um dos requisitos mais importantes para produtos SaaS. Ou seja, o que funciona para um cliente deve funcionar para todos os clientes."}),"\n"]}),"\n",(0,s.jsxs)(o.p,{children:["Vamos ao Logto Console > Organization Templates > Organization permissions e criamos duas permiss\xf5es: ",(0,s.jsx)(o.code,{children:"read:documents"})," e ",(0,s.jsx)(o.code,{children:"create:documents"}),"."]}),"\n",(0,s.jsx)(o.p,{children:(0,s.jsx)(o.img,{src:"https://uploads.strapi.logto.io/org_template_permission_f0ad59f5b5.png",alt:"org-template-permission.png"})}),"\n",(0,s.jsx)(o.p,{children:"Depois v\xe1 para a aba de pap\xe9is da organiza\xe7\xe3o para criar dois pap\xe9is de usu\xe1rio: Admin e Colaborador, e atribua as permiss\xf5es correspondentes a esses pap\xe9is."}),"\n",(0,s.jsx)(o.p,{children:(0,s.jsx)(o.img,{src:"https://uploads.strapi.logto.io/organization_details_9293d7965d.png",alt:"organization-details.png"})}),"\n",(0,s.jsx)(o.p,{children:"Assim, criamos um modelo de permiss\xf5es RBAC para cada organiza\xe7\xe3o."}),"\n",(0,s.jsx)(o.p,{children:"Em seguida, v\xe1 para a p\xe1gina de detalhes da Organiza\xe7\xe3o para atribuir pap\xe9is apropriados aos membros."}),"\n",(0,s.jsx)(o.p,{children:(0,s.jsx)(o.img,{src:"https://uploads.strapi.logto.io/org_template_role_0137f5a8ca.png",alt:"org-template-role.png"})}),"\n",(0,s.jsx)(o.p,{children:"Agora nossos usu\xe1rios da organiza\xe7\xe3o t\xeam pap\xe9is!\nVoc\xea pode realizar esses passos via Management API do Logto:"}),"\n",(0,s.jsx)(o.pre,{children:(0,s.jsx)(o.code,{className:"language-jsx",children:"// Atribuir papel 'Admin' ao criador da organiza\xe7\xe3o\napp.post('/organizations', requireAuth('https://api.documind.com'), async (req, res) => {\n  const accessToken = await fetchLogtoManagementApiAccessToken();\n  // Cria organiza\xe7\xe3o no Logto\n  // c\xf3digos existentes...\n\n  // Adiciona usu\xe1rio \xe0 organiza\xe7\xe3o no Logto\n  await fetch(`${process.env.LOGTO_ENDPOINT}/api/organizations/${createdOrganization.id}/users`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${accessToken}`,\n    },\n    body: JSON.stringify({\n      userIds: [req.user.id],\n    }),\n  });\n\n  // Atribui papel `Admin` ao primeiro usu\xe1rio.\n  const rolesResponse = await fetch(`${process.env.LOGTO_ENDPOINT}/api/organization-roles`, {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${accessToken}`,\n    },\n  });\n\n  const roles = await rolesResponse.json();\n\n  // Encontra o papel `Admin`\n  const adminRole = roles.find((role) => role.name === 'Admin');\n\n  // Atribui papel `Admin` ao primeiro usu\xe1rio.\n  await fetch(\n    `${process.env.LOGTO_ENDPOINT}/api/organizations/${createdOrganization.id}/users/${req.user.id}/roles`,\n    {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${accessToken}`,\n      },\n      body: JSON.stringify({\n        organizationRoleIds: [adminRole.id],\n      }),\n    }\n  );\n\n  // c\xf3digos existentes...\n});\n"})}),"\n",(0,s.jsx)(o.p,{children:"Agora podemos implementar o controle de permiss\xf5es de usu\xe1rios verificando suas permiss\xf5es."}),"\n",(0,s.jsx)(o.p,{children:"No nosso c\xf3digo, precisamos fazer com que o token de organiza\xe7\xe3o do usu\xe1rio carregue informa\xe7\xf5es de permiss\xf5es, e ent\xe3o verificar essas permiss\xf5es no backend."}),"\n",(0,s.jsxs)(o.p,{children:["No config do Logto do frontend, precisamos declarar as permiss\xf5es que os usu\xe1rios precisam solicitar dentro da organiza\xe7\xe3o. Vamos adicionar as permiss\xf5es ",(0,s.jsx)(o.code,{children:"read:documents"})," e ",(0,s.jsx)(o.code,{children:"create:documents"})," aos ",(0,s.jsx)(o.code,{children:"scopes"}),"."]}),"\n",(0,s.jsx)(o.pre,{children:(0,s.jsx)(o.code,{className:"language-jsx",children:'const config: LogtoConfig = {\n  endpoint: "<YOUR_LOGTO_ENDPOINT>",\n  appId: "<YOUR_LOGTO_APP_ID>",\n  scopes: [UserScope.Organizations, "read:documents", "create:documents"],\n  resources: [ReservedResource.Organization, "<https://api.documind.com>"], // Identificador do novo API resource\n};\n\n'})}),"\n",(0,s.jsx)(o.p,{children:"Como de costume, fa\xe7a login novamente com seu usu\xe1rio para que essas configura\xe7\xf5es tenham efeito."}),"\n",(0,s.jsxs)(o.p,{children:["Depois, no middleware ",(0,s.jsx)(o.code,{children:"requireOrganizationAccess"})," do backend, adicionamos a verifica\xe7\xe3o das permiss\xf5es do usu\xe1rio."]}),"\n",(0,s.jsx)(o.pre,{children:(0,s.jsx)(o.code,{className:"language-jsx",children:"const hasRequiredScopes = (tokenScopes, requiredScopes) => {\n  if (!requiredScopes || requiredScopes.length === 0) {\n    return true;\n  }\n  const scopeSet = new Set(tokenScopes);\n  return requiredScopes.every((scope) => scopeSet.has(scope));\n};\n\nconst requireOrganizationAccess = ({ requiredScopes = [] } = {}) => {\n  return async (req, res, next) => {\n    try {\n      //...\n\n      // Verifica o token com o audience\n      const { payload } = await jwtVerify(\n        token,\n        createRemoteJWKSet(new URL(process.env.LOGTO_JWKS_URL)),\n        {\n          issuer: process.env.LOGTO_ISSUER,\n          audience: aud,\n        }\n      );\n\n      //...\n\n      // Obt\xe9m scopes do token\n      const scopes = payload.scope?.split(' ') || [];\n\n      // Verifica permiss\xf5es necess\xe1rias\n      if (!hasRequiredScopes(scopes, requiredScopes)) {\n        throw new Error('Permiss\xf5es insuficientes');\n      }\n\n      //...\n\n      next();\n    } catch (error) {\n      //...\n    }\n  };\n};\n"})}),"\n",(0,s.jsxs)(o.p,{children:["Depois crie uma API POST /documents, e use o middleware ",(0,s.jsx)(o.code,{children:"requireOrganizationAccess"})," com configura\xe7\xe3o requiredScopes para proteger essa API e a anterior ",(0,s.jsx)(o.code,{children:"GET /documents"}),"."]}),"\n",(0,s.jsx)(o.pre,{children:(0,s.jsx)(o.code,{className:"language-jsx",children:"// API para criar documentos\napp.post(\n  '/documents',\n  requireOrganizationAccess({ requiredScopes: ['create:documents'] }),\n  async (req, res) => {\n    //...\n  }\n);\n\n// API para obter documentos\napp.get(\n  '/documents',\n  requireOrganizationAccess({ requiredScopes: ['read:documents'] }),\n  async (req, res) => {\n    //...\n  }\n);\n"})}),"\n",(0,s.jsx)(o.p,{children:"Assim, implementamos o controle de permiss\xf5es de usu\xe1rios verificando suas permiss\xf5es."}),"\n",(0,s.jsxs)(o.p,{children:["No frontend, voc\xea pode obter informa\xe7\xf5es de permiss\xf5es do usu\xe1rio decodificando o token de organiza\xe7\xe3o ou chamando o m\xe9todo ",(0,s.jsx)(o.code,{children:"getOrganizationTokenClaims"})," do Logto."]}),"\n",(0,s.jsx)(o.pre,{children:(0,s.jsx)(o.code,{className:"language-jsx",children:"const [scopes, setScopes] = useState([]);\nconst { getOrganizationTokenClaims } = useLogto();\n\nconst loadScopes = async () => {\n  const claims = await getOrganizationTokenClaims(organizationId);\n  setScopes(claims.scope.split(' '));\n};\n\n// ...\n"})}),"\n",(0,s.jsx)(o.p,{children:"Controle elementos da p\xe1gina com base nas permiss\xf5es do usu\xe1rio verificando os scopes nos claims."}),"\n",(0,s.jsx)(o.h2,{id:"add-more-multi-tenant-app-features",children:"Adicione mais recursos multi-inquilino ao app"}),"\n",(0,s.jsx)(o.p,{children:"At\xe9 agora, implementamos os recursos b\xe1sicos de usu\xe1rio e organiza\xe7\xe3o em um sistema SaaS multi-inquilino! No entanto, ainda h\xe1 alguns recursos que n\xe3o abordamos, como personalizar a marca da p\xe1gina de login para cada Organiza\xe7\xe3o, adicionar automaticamente usu\xe1rios com emails de dom\xednio espec\xedfico a certas organiza\xe7\xf5es e integrar funcionalidades de SSO corporativo."}),"\n",(0,s.jsx)(o.p,{children:"Todos esses s\xe3o recursos prontos para uso, e voc\xea pode encontrar mais informa\xe7\xf5es sobre eles na documenta\xe7\xe3o do Logto:"}),"\n",(0,s.jsxs)(o.ul,{children:["\n",(0,s.jsx)(o.li,{children:(0,s.jsx)(o.a,{href:"/end-user-flows/enterprise-sso",children:"Integra\xe7\xe3o com SSO corporativo"})}),"\n",(0,s.jsx)(o.li,{children:(0,s.jsx)(o.a,{href:"/organizations/just-in-time-provisioning",children:"Provisionamento Just-in-Time (JIT)"})}),"\n",(0,s.jsx)(o.li,{children:(0,s.jsx)(o.a,{href:"/customization/match-your-brand#organization-specific-branding",children:"Personaliza\xe7\xe3o de marca no n\xedvel da organiza\xe7\xe3o"})}),"\n",(0,s.jsx)(o.li,{children:(0,s.jsx)(o.a,{href:"/organizations/organization-management#require-mfa-for-organization-members",children:"MFA no n\xedvel da organiza\xe7\xe3o"})}),"\n",(0,s.jsx)(o.li,{children:(0,s.jsx)(o.a,{href:"/end-user-flows/organization-experience/organization-management",children:"Gerenciamento no n\xedvel da organiza\xe7\xe3o"})}),"\n"]}),"\n",(0,s.jsx)(o.h2,{id:"summary",children:"Resumo"}),"\n",(0,s.jsx)(o.p,{children:"Lembra como tudo parecia assustador no come\xe7o? Usu\xe1rios, organiza\xe7\xf5es, permiss\xf5es, recursos corporativos... parecia uma montanha intermin\xe1vel para escalar."}),"\n",(0,s.jsx)(o.p,{children:"Mas veja o que conquistamos:"}),"\n",(0,s.jsxs)(o.ul,{children:["\n",(0,s.jsx)(o.li,{children:"Um sistema completo de autentica\xe7\xe3o com m\xfaltiplas op\xe7\xf5es de login e suporte a MFA"}),"\n",(0,s.jsx)(o.li,{children:"Um sistema flex\xedvel de organiza\xe7\xf5es que suporta m\xfaltiplas associa\xe7\xf5es"}),"\n",(0,s.jsx)(o.li,{children:"Controle de acesso baseado em papel dentro das organiza\xe7\xf5es"}),"\n"]}),"\n",(0,s.jsx)(o.p,{children:"E o melhor de tudo? N\xe3o precisamos reinventar a roda. Ao aproveitar ferramentas modernas como o Logto, transformamos o que poderia ser meses de desenvolvimento em quest\xe3o de minutos."}),"\n",(0,s.jsxs)(o.p,{children:["O c\xf3digo-fonte completo deste tutorial est\xe1 dispon\xedvel em: ",(0,s.jsx)(o.a,{href:"https://github.com/logto-io/multi-tenant-saas-sample",children:"Multi-tenant SaaS Sample"}),"."]}),"\n",(0,s.jsx)(o.p,{children:"Esse \xe9 o poder do desenvolvimento moderno em 2025 \u2014 podemos focar em construir recursos \xfanicos de produto em vez de lutar com infraestrutura. Agora \xe9 sua vez de construir algo incr\xedvel!"}),"\n",(0,s.jsxs)(o.p,{children:["Explore todos os recursos do Logto, do Logto Cloud ao Logto OSS, no ",(0,s.jsx)(o.a,{href:"https://logto.io/",children:"site do Logto"})," ou cadastre-se no ",(0,s.jsx)(o.a,{href:"https://cloud.logto.io/?sign_up",children:"Logto cloud"})," hoje mesmo."]})]})}function u(e={}){const{wrapper:o}={...(0,i.R)(),...e.components};return o?(0,s.jsx)(o,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},79621:(e,o,n)=>{n.d(o,{R:()=>r,x:()=>t});var a=n(58101);const s={},i=a.createContext(s);function r(e){const o=a.useContext(i);return a.useMemo((function(){return"function"==typeof e?e(o):{...o,...e}}),[o,e])}function t(e){let o;return o=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),a.createElement(i.Provider,{value:o},e.children)}}}]);