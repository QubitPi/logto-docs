"use strict";(self.webpackChunk_logto_docs=self.webpackChunk_logto_docs||[]).push([[2035],{95766:(e,o,i)=>{i.r(o),i.d(o,{assets:()=>d,contentTitle:()=>r,default:()=>u,frontMatter:()=>t,metadata:()=>a,toc:()=>c});const a=JSON.parse('{"id":"end-user-flows/sign-out","title":"Logout (Sign-out)","description":"O processo de logout no Logto (como um provedor de identidade baseado em OIDC) \xe9 um conceito multifacetado devido ao envolvimento tanto da sess\xe3o centralizada de login gerenciada pelo Logto quanto do status de autentica\xe7\xe3o distribu\xeddo gerenciado pelos aplicativos clientes.","source":"@site/i18n/pt-BR/docusaurus-plugin-content-docs/current/end-user-flows/sign-out.mdx","sourceDirName":"end-user-flows","slug":"/end-user-flows/sign-out","permalink":"/pt-BR/end-user-flows/sign-out","draft":false,"unlisted":false,"editUrl":"https://github.com/logto-io/docs/tree/master/i18n/pt-BR/docusaurus-plugin-content-docs/current/end-user-flows/sign-out.mdx","tags":[],"version":"current","sidebarPosition":6,"frontMatter":{"sidebar_position":6},"sidebar":"docsSidebar","previous":{"title":"Tela de consentimento (Consent screen)","permalink":"/pt-BR/end-user-flows/consent-screen"},"next":{"title":"Configura\xe7\xf5es de conta","permalink":"/pt-BR/end-user-flows/account-settings/"}}');var s=i(25105),n=i(79621);const t={sidebar_position:6},r="Logout (Sign-out)",d={},c=[{value:"Sess\xe3o de login",id:"sign-in-session",level:2},{value:"Componentes",id:"components",level:2},{value:"Sess\xe3o de login centralizada gerenciada pelo Logto",id:"centralized-sign-in-session-managed-by-logto",level:3},{value:"Status de autentica\xe7\xe3o distribu\xeddo gerenciado pelos aplicativos clientes",id:"distributed-authentication-status-managed-by-the-client-applications",level:2},{value:"Mecanismos de logout",id:"sign-out-mechanisms",level:2},{value:"Limpar tokens e sess\xe3o local no lado do cliente",id:"clear-tokens-and-local-session-at-the-client-side",level:3},{value:"Limpar a sess\xe3o de login no Logto",id:"clear-sign-in-session-at-logto",level:3},{value:"Logout federado: Back-channel logout",id:"federated-sign-out-back-channel-logout",level:2},{value:"M\xe9todos de logout nos SDKs do Logto",id:"sign-out-methods-in-logto-sdks",level:2},{value:"Exigir reautentica\xe7\xe3o em cada acesso",id:"enforce-re-authentication-on-every-access",level:2},{value:"Perguntas frequentes",id:"faqs",level:2},{value:"N\xe3o estou recebendo as notifica\xe7\xf5es de back-channel logout.",id:"im-not-receiving-the-back-channel-logout-notifications",level:3},{value:"Recursos relacionados",id:"related-resources",level:2}];function l(e){const o={a:"a",admonition:"admonition",br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",mermaid:"mermaid",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,n.R)(),...e.components},{Details:i,Url:a}=o;return i||p("Details",!0),a||p("Url",!0),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(o.header,{children:(0,s.jsx)(o.h1,{id:"logout-sign-out",children:"Logout (Sign-out)"})}),"\n",(0,s.jsx)(o.p,{children:"O processo de logout no Logto (como um provedor de identidade baseado em OIDC) \xe9 um conceito multifacetado devido ao envolvimento tanto da sess\xe3o centralizada de login gerenciada pelo Logto quanto do status de autentica\xe7\xe3o distribu\xeddo gerenciado pelos aplicativos clientes."}),"\n",(0,s.jsx)(o.h2,{id:"sign-in-session",children:"Sess\xe3o de login"}),"\n",(0,s.jsx)(o.p,{children:"Para entender melhor o processo de logout, \xe9 importante primeiro compreender como as sess\xf5es de login do usu\xe1rio e seu status de autentica\xe7\xe3o s\xe3o gerenciados no Logto."}),"\n",(0,s.jsx)(o.mermaid,{value:"  sequenceDiagram\n    autonumber\n    actor User\n\n    box Relying Party (RP)\n      participant Client as Aplicativo cliente\n    end\n\n    box Logto (IdP)\n      participant OIDC as Provedor OIDC\n      participant SignIn as P\xe1gina de login\n    end\n\n    User ->> Client: Acessa o aplicativo web\n    Client ->> OIDC: Redireciona o usu\xe1rio para o OIDC para autentica\xe7\xe3o\n    OIDC --\x3e> OIDC: Verifica a sess\xe3o de login do usu\xe1rio\n    OIDC ->> SignIn: Solicita que o usu\xe1rio fa\xe7a login\n    SignIn ->> OIDC: Identifica o usu\xe1rio e envia o resultado da intera\xe7\xe3o\n    OIDC --\x3e> OIDC: Estabelece a sess\xe3o de login do usu\xe1rio e concess\xe3o de autentica\xe7\xe3o\n    OIDC ->> Client: Redireciona o usu\xe1rio de volta ao aplicativo web com o c\xf3digo de autentica\xe7\xe3o (Fluxo de C\xf3digo de Autoriza\xe7\xe3o)\n    Client ->> OIDC: Troca o c\xf3digo por tokens\n    OIDC --\x3e> Client: Retorna os tokens"}),"\n",(0,s.jsxs)(o.ol,{children:["\n",(0,s.jsx)(o.li,{children:"O usu\xe1rio acessa o aplicativo web (RP)."}),"\n",(0,s.jsxs)(o.li,{children:["O aplicativo cliente redireciona o usu\xe1rio para o Logto (IdP) para ",(0,s.jsx)(o.a,{href:"https://auth.wiki/authentication",children:"autentica\xe7\xe3o (Authentication)"}),"."]}),"\n",(0,s.jsx)(o.li,{children:"O provedor OIDC verifica o status da sess\xe3o de login do usu\xe1rio. Se n\xe3o existir sess\xe3o ou se a sess\xe3o tiver expirado, o usu\xe1rio ser\xe1 solicitado a fazer login."}),"\n",(0,s.jsx)(o.li,{children:"O usu\xe1rio interage com a p\xe1gina de login para ser autenticado."}),"\n",(0,s.jsx)(o.li,{children:"Ap\xf3s o login bem-sucedido, o Logto cria uma nova sess\xe3o para o usu\xe1rio e redireciona de volta para o aplicativo cliente com um c\xf3digo de autoriza\xe7\xe3o."}),"\n",(0,s.jsx)(o.li,{children:"O provedor OIDC cria uma nova sess\xe3o de login e concess\xe3o de autentica\xe7\xe3o para o usu\xe1rio."}),"\n",(0,s.jsxs)(o.li,{children:["O provedor OIDC redireciona o usu\xe1rio de volta ao cliente com um c\xf3digo de autentica\xe7\xe3o (",(0,s.jsx)(o.a,{href:"https://auth.wiki/authorization-code-flow",children:"Fluxo de C\xf3digo de Autoriza\xe7\xe3o"}),")."]}),"\n",(0,s.jsx)(o.li,{children:"O cliente recebe o c\xf3digo de autentica\xe7\xe3o e o troca por tokens para acessar as informa\xe7\xf5es do usu\xe1rio."}),"\n",(0,s.jsx)(o.li,{children:"Concede tokens ao aplicativo cliente."}),"\n"]}),"\n",(0,s.jsx)(o.h2,{id:"components",children:"Componentes"}),"\n",(0,s.jsx)(o.h3,{id:"centralized-sign-in-session-managed-by-logto",children:"Sess\xe3o de login centralizada gerenciada pelo Logto"}),"\n",(0,s.jsx)(o.p,{children:"No fluxo acima, a sess\xe3o de login centralizada \xe9 gerenciada pelo Logto. A sess\xe3o \xe9 criada quando o usu\xe1rio faz login com sucesso e \xe9 destru\xedda quando o usu\xe1rio faz logout. A sess\xe3o tamb\xe9m \xe9 destru\xedda quando expira."}),"\n",(0,s.jsx)(o.p,{children:"A sess\xe3o de login do Logto \xe9 gerenciada usando cookies de sess\xe3o. O cookie de sess\xe3o \xe9 definido quando o usu\xe1rio faz login. Todas as solicita\xe7\xf5es de autentica\xe7\xe3o s\xe3o validadas em rela\xe7\xe3o ao cookie de sess\xe3o. Se o cookie de sess\xe3o estiver presente e v\xe1lido, o usu\xe1rio ser\xe1 autenticado automaticamente e redirecionado diretamente para o aplicativo cliente com o c\xf3digo de autoriza\xe7\xe3o. Caso contr\xe1rio, o usu\xe1rio ser\xe1 solicitado a fazer login."}),"\n",(0,s.jsxs)(o.ol,{children:["\n",(0,s.jsxs)(o.li,{children:["\n",(0,s.jsxs)(o.p,{children:["Cookie de sess\xe3o compartilhado do Logto",(0,s.jsx)(o.br,{}),"\n","Para um usu\xe1rio que faz login em v\xe1rios aplicativos clientes a partir do mesmo agente de usu\xe1rio (por exemplo, navegador), o usu\xe1rio ter\xe1 um cookie de sess\xe3o compartilhado sob o dom\xednio do Logto. Isso significa que o usu\xe1rio s\xf3 precisa fazer login uma vez e ser\xe1 autenticado automaticamente nos outros aplicativos clientes."]}),"\n",(0,s.jsx)(o.mermaid,{value:" flowchart TD\n subgraph User [Agente de usu\xe1rio A]\n   U[Usu\xe1rio]\n\n   subgraph Layer1 [Dom\xednio do cliente A]\n     A[Aplicativo Cliente A]\n   end\n\n   subgraph Layer1 [Dom\xednio do cliente B]\n     B[Aplicativo Cliente B]\n   end\n\n   subgraph Layer2 [Dom\xednio Logto]\n       C{{Sess\xe3o de login Logto?}}\n       D[P\xe1gina de login]\n   end\n end\n\n U --\x3e |Login| A\n A --\x3e |Redireciona para Logto| C\n U --\x3e |Login| B\n B --\x3e |Redireciona para Logto| C\n C --\x3e |N\xe3o| D\n D --\x3e |Criar sess\xe3o| C"}),"\n"]}),"\n",(0,s.jsxs)(o.li,{children:["\n",(0,s.jsxs)(o.p,{children:["Cookie de sess\xe3o isolado do Logto",(0,s.jsx)(o.br,{}),"\n","Para um usu\xe1rio que faz login em diferentes aplicativos clientes a partir de dispositivos ou navegadores diferentes, o usu\xe1rio ter\xe1 cookies de sess\xe3o isolados sob o dom\xednio do Logto. Isso significa que o usu\xe1rio precisa fazer login separadamente para cada aplicativo cliente."]}),"\n",(0,s.jsx)(o.mermaid,{value:" flowchart TD\n U[Usu\xe1rio]\n\n subgraph DeviceA [Agente de usu\xe1rio A]\n   subgraph Layer1 [Dom\xednio do cliente A]\n     A[Aplicativo Cliente A]\n   end\n\n   subgraph Layer2 [Dom\xednio Logto]\n       C{{Sess\xe3o de login Logto?}}\n       D[P\xe1gina de login]\n   end\n end\n\n subgraph DeviceB [Agente de usu\xe1rio B]\n   subgraph Layer3 [Dom\xednio do cliente B]\n     B[Aplicativo Cliente B]\n   end\n\n   subgraph Layer4 [Dom\xednio Logto]\n       E{{Sess\xe3o de login Logto?}}\n       F[P\xe1gina de login]\n   end\n end\n\n U --\x3e |Login| A\n A --\x3e |Redireciona para Logto| C\n U --\x3e |Login| B\n B --\x3e |Redireciona para Logto| E\n C --\x3e |N\xe3o| D\n E --\x3e |N\xe3o| F\n D --\x3e |Criar sess\xe3o| C\n F --\x3e |Criar sess\xe3o| E"}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(o.h2,{id:"distributed-authentication-status-managed-by-the-client-applications",children:"Status de autentica\xe7\xe3o distribu\xeddo gerenciado pelos aplicativos clientes"}),"\n",(0,s.jsx)(o.p,{children:"Cada aplicativo cliente mant\xe9m seu pr\xf3prio status de autentica\xe7\xe3o. Seja um aplicativo Nativo, SPA ou Web, todos t\xeam sua pr\xf3pria maneira de gerenciar o status de autentica\xe7\xe3o do usu\xe1rio."}),"\n",(0,s.jsxs)(o.p,{children:["Ap\xf3s o login bem-sucedido, o aplicativo cliente pode receber um ",(0,s.jsx)(o.a,{href:"https://auth.wiki/id-token",children:"Token de ID (ID token)"})," e um ",(0,s.jsx)(o.a,{href:"https://auth.wiki/access-token",children:"Token de acesso (Access token)"}),". O aplicativo cliente pode usar o Token de ID para determinar a identidade do usu\xe1rio e o Token de acesso para acessar os recursos do usu\xe1rio. O status de autentica\xe7\xe3o do usu\xe1rio \xe9 representado pelo tempo de expira\xe7\xe3o do Token de acesso."]}),"\n",(0,s.jsxs)(o.ul,{children:["\n",(0,s.jsxs)(o.li,{children:["Aplicativos Nativos e SPA:",(0,s.jsx)(o.br,{}),"\n","O aplicativo cliente precisa armazenar e gerenciar esses tokens de forma segura para manter o status de autentica\xe7\xe3o do usu\xe1rio. Por exemplo, armazenar os tokens no local storage ou session storage, e limpar os tokens quando o usu\xe1rio fizer logout."]}),"\n",(0,s.jsxs)(o.li,{children:["Aplicativos Web:",(0,s.jsx)(o.br,{}),"\n","Aplicativos web, como aqueles constru\xeddos com frameworks como Next.js, geralmente gerenciam sua pr\xf3pria sess\xe3o para usu\xe1rios autenticados juntamente com os tokens emitidos pelo Logto. Uma vez que o usu\xe1rio faz login e o app web recebe os tokens do Logto, ele pode armazenar os tokens no lado do cliente como aplicativos SPA, ou pode armazenar os tokens no lado do servidor e gerenciar a sess\xe3o usando cookies ou outros mecanismos."]}),"\n"]}),"\n",(0,s.jsx)(o.h2,{id:"sign-out-mechanisms",children:"Mecanismos de logout"}),"\n",(0,s.jsx)(o.h3,{id:"clear-tokens-and-local-session-at-the-client-side",children:"Limpar tokens e sess\xe3o local no lado do cliente"}),"\n",(0,s.jsx)(o.p,{children:"No lado do cliente, um logout simples envolve limpar a sess\xe3o local e remover os tokens (Token de ID, Token de acesso, Token de atualiza\xe7\xe3o) do local storage ou session storage. Isso resulta em um logout apenas do lado do cliente, onde a sess\xe3o centralizada permanece intacta. Usu\xe1rios que fazem logout dessa maneira ainda podem acessar outros aplicativos sob a mesma sess\xe3o do servidor de autoriza\xe7\xe3o at\xe9 que a sess\xe3o centralizada expire ou seja destru\xedda ativamente."}),"\n",(0,s.jsx)(o.h3,{id:"clear-sign-in-session-at-logto",children:"Limpar a sess\xe3o de login no Logto"}),"\n",(0,s.jsxs)(o.p,{children:["Para efetuar o logout expl\xedcito do usu\xe1rio e limpar a sess\xe3o no Logto, o aplicativo cliente precisa redirecionar o usu\xe1rio para o ",(0,s.jsx)(o.strong,{children:"endpoint de encerramento de sess\xe3o"})," do Logto."]}),"\n",(0,s.jsxs)(o.p,{children:["Exemplo: ",(0,s.jsx)(o.code,{children:"https://{seu-dominio-logto}/oidc/session/end"})]}),"\n",(0,s.jsxs)(o.p,{children:["O ",(0,s.jsx)(o.strong,{children:"endpoint de encerramento de sess\xe3o"})," \xe9 um endpoint padr\xe3o do OIDC que permite ao aplicativo cliente notificar o servidor de autoriza\xe7\xe3o de que o usu\xe1rio fez logout. O endpoint ir\xe1 limpar a sess\xe3o de login centralizada no Logto."]}),"\n",(0,s.jsx)(o.p,{children:"Uma vez que a sess\xe3o \xe9 limpa, qualquer solicita\xe7\xe3o de autoriza\xe7\xe3o subsequente exigir\xe1 que o usu\xe1rio fa\xe7a login novamente."}),"\n",(0,s.jsxs)(o.p,{children:["Se um ",(0,s.jsx)(o.strong,{children:"post-logout redirect URI"})," for fornecido, o usu\xe1rio ser\xe1 redirecionado para o URI especificado ap\xf3s a sess\xe3o ser limpa. Caso contr\xe1rio, o usu\xe1rio ser\xe1 redirecionado para a p\xe1gina padr\xe3o de p\xf3s-logout hospedada pelo Logto."]}),"\n",(0,s.jsx)(o.h2,{id:"federated-sign-out-back-channel-logout",children:"Logout federado: Back-channel logout"}),"\n",(0,s.jsxs)(o.p,{children:["Para um gerenciamento de logout mais consistente, o Logto suporta o ",(0,s.jsx)(o.a,{href:"https://openid.net/specs/openid-connect-backchannel-1_0-final.html",children:"back-channel logout"}),". O back-channel logout \xe9 um mecanismo que permite ao Logto notificar todos os aplicativos clientes sob a mesma sess\xe3o de login quando o usu\xe1rio faz logout."]}),"\n",(0,s.jsx)(o.p,{children:"Isso \xe9 especialmente \xfatil em cen\xe1rios onde o usu\xe1rio faz logout de um aplicativo cliente e espera ser desconectado de todos os outros aplicativos clientes sob a mesma sess\xe3o de login do Logto."}),"\n",(0,s.jsx)(o.p,{children:"Para habilitar o back-channel logout para seus aplicativos clientes, acesse a p\xe1gina de detalhes do aplicativo no painel do Logto e registre um URI de back-channel logout. O Logto enviar\xe1 um token de logout para todos os URIs registrados quando o usu\xe1rio iniciar uma solicita\xe7\xe3o de logout de qualquer aplicativo cliente."}),"\n",(0,s.jsxs)(o.p,{children:["Se seu aplicativo cliente exigir que a sess\xe3o de login seja inclu\xedda no token de logout, ative a configura\xe7\xe3o ",(0,s.jsx)(o.code,{children:"Is session required"})," na configura\xe7\xe3o de back-channel logout. Uma reivindica\xe7\xe3o ",(0,s.jsx)(o.code,{children:"sid"})," ser\xe1 inclu\xedda no token de logout para identificar a sess\xe3o de login do usu\xe1rio no Logto."]}),"\n",(0,s.jsxs)(o.ol,{children:["\n",(0,s.jsx)(o.li,{children:"O usu\xe1rio inicia uma solicita\xe7\xe3o de logout a partir de um aplicativo cliente."}),"\n",(0,s.jsx)(o.li,{children:"O Logto recebe a solicita\xe7\xe3o de encerramento de sess\xe3o, gera um token de logout e envia o token de logout para todos os URIs de back-channel logout registrados."}),"\n",(0,s.jsx)(o.li,{children:"Cada aplicativo cliente recebe o token de logout e executa as a\xe7\xf5es de logout."}),"\n"]}),"\n",(0,s.jsx)(o.p,{children:"A\xe7\xf5es de logout para cada aplicativo cliente ao receber o token de logout:"}),"\n",(0,s.jsxs)(o.ul,{children:["\n",(0,s.jsx)(o.li,{children:"Validar o token de logout."}),"\n",(0,s.jsx)(o.li,{children:"Limpar a sess\xe3o local e remover tokens do local storage ou session storage."}),"\n"]}),"\n",(0,s.jsx)(o.h2,{id:"sign-out-methods-in-logto-sdks",children:"M\xe9todos de logout nos SDKs do Logto"}),"\n",(0,s.jsx)(o.p,{children:"Se voc\xea est\xe1 integrando o Logto com seu aplicativo cliente usando os SDKs do Logto:"}),"\n",(0,s.jsxs)(o.ul,{children:["\n",(0,s.jsxs)(o.li,{children:["Para aplicativos SPA e web, o m\xe9todo ",(0,s.jsx)(o.code,{children:"client.signOut()"})," ir\xe1 limpar o armazenamento local de tokens e redirecionar o usu\xe1rio para o endpoint de encerramento de sess\xe3o do Logto. Voc\xea pode especificar um ",(0,s.jsx)(o.strong,{children:"post-logout redirect URI"})," para redirecionar o usu\xe1rio ap\xf3s a sess\xe3o ser limpa."]}),"\n",(0,s.jsxs)(o.li,{children:["Para aplicativos nativos (incluindo apps h\xedbridos como ",(0,s.jsx)(o.strong,{children:"React Native"})," e ",(0,s.jsx)(o.strong,{children:"Flutter"}),"), apenas o armazenamento local de tokens \xe9 limpo. Isso ocorre porque, em aplicativos nativos, usamos o webview sem sess\xe3o para lidar com o processo de login. Nenhum cookie de sess\xe3o \xe9 armazenado no navegador nativo, ent\xe3o n\xe3o h\xe1 necessidade de limpar a sess\xe3o de login no Logto. Cada solicita\xe7\xe3o de autentica\xe7\xe3o \xe9 independente e n\xe3o carrega cookies de sess\xe3o."]}),"\n"]}),"\n",(0,s.jsx)(o.admonition,{type:"note",children:(0,s.jsxs)(o.p,{children:["Para aplicativos nativos que n\xe3o suportam webview sem sess\xe3o ou n\xe3o reconhecem as configura\xe7\xf5es ",(0,s.jsx)(o.code,{children:"emphasized"})," (aplicativo Android usando o SDK ",(0,s.jsx)(o.strong,{children:"React Native"})," ou ",(0,s.jsx)(o.strong,{children:"Flutter"}),"), voc\xea pode for\xe7ar o usu\xe1rio a ser solicitado a fazer login novamente passando o par\xe2metro ",(0,s.jsx)(o.code,{children:"prompt=login"})," na solicita\xe7\xe3o de autoriza\xe7\xe3o."]})}),"\n",(0,s.jsx)(o.h2,{id:"enforce-re-authentication-on-every-access",children:"Exigir reautentica\xe7\xe3o em cada acesso"}),"\n",(0,s.jsxs)(o.p,{children:["Em cen\xe1rios de alta seguran\xe7a \u2014 como verificar a identidade do usu\xe1rio antes de a\xe7\xf5es sens\xedveis \u2014 voc\xea pode querer exigir que o usu\xe1rio se reautentique em cada acesso. Para impor esse comportamento, inclua ",(0,s.jsx)(o.code,{children:"prompt=login"})," em sua solicita\xe7\xe3o de autentica\xe7\xe3o."]}),"\n",(0,s.jsxs)(o.p,{children:["Definir ",(0,s.jsx)(o.code,{children:"prompt=login"})," for\xe7a o Logto a sempre exibir a p\xe1gina de login, independentemente de o usu\xe1rio ter uma sess\xe3o ativa ou ter feito login recentemente. Isso ignora o comportamento de autentica\xe7\xe3o \xfanica (SSO) e garante que o usu\xe1rio seja solicitado a inserir suas credenciais a cada vez."]}),"\n",(0,s.jsxs)(o.p,{children:["Se seu aplicativo solicitar o escopo offline_access (para receber um Token de atualiza\xe7\xe3o), a especifica\xe7\xe3o OpenID Connect exige que voc\xea tamb\xe9m inclua ",(0,s.jsx)(o.code,{children:"prompt=consent"}),".\nNa maioria dos casos, para impor tanto a reautentica\xe7\xe3o quanto garantir a emiss\xe3o do Token de atualiza\xe7\xe3o, defina:"]}),"\n",(0,s.jsx)(o.pre,{children:(0,s.jsx)(o.code,{children:"prompt=login consent\n"})}),"\n",(0,s.jsx)(o.p,{children:"Isso garante que o usu\xe1rio seja reautenticado e consinta explicitamente com o acesso offline."}),"\n",(0,s.jsx)(o.h2,{id:"faqs",children:"Perguntas frequentes"}),"\n",(0,s.jsxs)(i,{children:[(0,s.jsx)("summary",{children:(0,s.jsx)(o.h3,{id:"im-not-receiving-the-back-channel-logout-notifications",children:"N\xe3o estou recebendo as notifica\xe7\xf5es de back-channel logout."})}),(0,s.jsxs)(o.ul,{children:["\n",(0,s.jsx)(o.li,{children:"Certifique-se de que o URI de back-channel logout est\xe1 corretamente registrado no painel do Logto."}),"\n",(0,s.jsx)(o.li,{children:"Certifique-se de que seu aplicativo cliente possui uma sess\xe3o de login ativa v\xe1lida e \xe9 a mesma sess\xe3o que iniciou a solicita\xe7\xe3o de logout."}),"\n"]})]}),"\n",(0,s.jsx)(o.h2,{id:"related-resources",children:"Recursos relacionados"}),"\n",(0,s.jsx)(a,{href:"https://blog.logto.io/oidc-back-channel-logout/",children:(0,s.jsx)(o.p,{children:"Entendendo o back-channel logout do OIDC."})})]})}function u(e={}){const{wrapper:o}={...(0,n.R)(),...e.components};return o?(0,s.jsx)(o,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}function p(e,o){throw new Error("Expected "+(o?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},79621:(e,o,i)=>{i.d(o,{R:()=>t,x:()=>r});var a=i(58101);const s={},n=a.createContext(s);function t(e){const o=a.useContext(n);return a.useMemo((function(){return"function"==typeof e?e(o):{...o,...e}}),[o,e])}function r(e){let o;return o=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:t(e.components),a.createElement(n.Provider,{value:o},e.children)}}}]);