"use strict";(self.webpackChunk_logto_docs=self.webpackChunk_logto_docs||[]).push([[9176],{97273:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>ve,contentTitle:()=>je,default:()=>ye,frontMatter:()=>fe,metadata:()=>o,toc:()=>Ae});const o=JSON.parse('{"id":"authorization/validate-access-tokens/README","title":"Como validar tokens de acesso no seu servi\xe7o de API ou backend","description":"Validar tokens de acesso \xe9 uma parte cr\xedtica para impor o controle de acesso baseado em papel (RBAC) no Logto. Este guia mostra como verificar JWTs emitidos pelo Logto em seu backend/API, checando assinatura, emissor (issuer), p\xfablico (audience), expira\xe7\xe3o, permiss\xf5es (escopos) e contexto de organiza\xe7\xe3o.","source":"@site/i18n/pt-BR/docusaurus-plugin-content-docs/current/authorization/validate-access-tokens/README.mdx","sourceDirName":"authorization/validate-access-tokens","slug":"/authorization/validate-access-tokens/","permalink":"/pt-BR/authorization/validate-access-tokens/","draft":false,"unlisted":false,"editUrl":"https://github.com/logto-io/docs/tree/master/i18n/pt-BR/docusaurus-plugin-content-docs/current/authorization/validate-access-tokens/README.mdx","tags":[],"version":"current","sidebarPosition":6,"frontMatter":{"sidebar_position":6,"sidebar_label":"Validar tokens de acesso na API"},"sidebar":"docsSidebar","previous":{"title":"Proteger recursos de API em n\xedvel de organiza\xe7\xe3o","permalink":"/pt-BR/authorization/organization-level-api-resources"},"next":{"title":"Autoriza\xe7\xe3o (Authorization)","permalink":"/pt-BR/authorization/"}}');var t=r(25105),a=r(79621),s=r(38552),i=r(22002),c=r(12655),d=r(34576),l=r(34035),u=r(9511),p=r(23328),h=r(43951),m=r(22821),g=r(18627),x=r(17479),f=r(32910),j=r(62763),v=r(5575);const A=[...v.RM,...f.RM,...j.RM,...x.RM];function w(e){return(0,t.jsxs)(i.A,{groupId:"go-framework",children:[(0,t.jsx)(s.A,{value:"gin",label:"Gin",children:(0,t.jsx)(v.Ay,{})}),(0,t.jsx)(s.A,{value:"echo",label:"Echo",children:(0,t.jsx)(f.Ay,{})}),(0,t.jsx)(s.A,{value:"fiber",label:"Fiber",children:(0,t.jsx)(j.Ay,{})}),(0,t.jsx)(s.A,{value:"chi",label:"Chi",children:(0,t.jsx)(x.Ay,{})})]})}function y(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(w,{...e})}):w()}var b=r(23207),k=r(78221),_=r(64487),z=r(42305),S=r(40019),R=r(13261);const I=[...S.RM,...z.RM,..._.RM,...R.RM];function q(e){return(0,t.jsxs)(i.A,{groupId:"api-framework",children:[(0,t.jsx)(s.A,{value:"spring-boot",label:"Spring Boot",children:(0,t.jsx)(S.Ay,{})}),(0,t.jsx)(s.A,{value:"quarkus",label:"Quarkus",children:(0,t.jsx)(z.Ay,{})}),(0,t.jsx)(s.A,{value:"micronaut",label:"Micronaut",children:(0,t.jsx)(_.Ay,{})}),(0,t.jsx)(s.A,{value:"vertx-web",label:"Vert.x Web",children:(0,t.jsx)(R.Ay,{})})]})}function E(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(q,{...e})}):q()}var P=r(52429),T=r(86927);function C(e){const n={code:"code",pre:"pre",...(0,a.R)(),...e.components};return(0,t.jsxs)(i.A,{groupId:"api-framework",children:[(0,t.jsx)(s.A,{value:"express",label:"Express.js",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",metastring:'title="app.ts"',children:"import express from 'express';\nimport { verifyAccessToken } from './auth-middleware.js';\n\nconst app = express();\n\napp.get('/api/protected', verifyAccessToken, (req, res) => {\n  // Acesse as informa\xe7\xf5es de autentica\xe7\xe3o diretamente de req.auth\n  res.json({ auth: req.auth });\n});\n\napp.get('/api/protected/detailed', verifyAccessToken, (req, res) => {\n  // Sua l\xf3gica de endpoint protegido\n  res.json({\n    auth: req.auth,\n    message: 'Dados protegidos acessados com sucesso',\n  });\n});\n\napp.listen(3000);\n"})})}),(0,t.jsx)(s.A,{value:"koa",label:"Koa.js",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",metastring:'title="app.ts"',children:"import Koa from 'koa';\nimport Router from '@koa/router';\nimport { koaVerifyAccessToken } from './auth-middleware.js';\n\nconst app = new Koa();\nconst router = new Router();\n\nrouter.get('/api/protected', koaVerifyAccessToken, (ctx) => {\n  // Acesse as informa\xe7\xf5es de autentica\xe7\xe3o diretamente de ctx.state.auth\n  ctx.body = { auth: ctx.state.auth };\n});\n\nrouter.get('/api/protected/detailed', koaVerifyAccessToken, (ctx) => {\n  // Sua l\xf3gica de endpoint protegido\n  ctx.body = {\n    auth: ctx.state.auth,\n    message: 'Dados protegidos acessados com sucesso',\n  };\n});\n\napp.use(router.routes());\napp.listen(3000);\n"})})}),(0,t.jsx)(s.A,{value:"fastify",label:"Fastify",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",metastring:'title="app.ts"',children:"import Fastify from 'fastify';\nimport { fastifyVerifyAccessToken } from './auth-middleware.js';\n\nconst fastify = Fastify();\n\nserver.get('/api/protected', { preHandler: fastifyVerifyAccessToken }, (request, reply) => {\n  // Acesse as informa\xe7\xf5es de autentica\xe7\xe3o diretamente de request.auth\n  reply.send({ auth: request.auth });\n});\n\nserver.get(\n  '/api/protected/detailed',\n  { preHandler: fastifyVerifyAccessToken },\n  (request, reply) => {\n    // Sua l\xf3gica de endpoint protegido\n    reply.send({\n      auth: request.auth,\n      message: 'Dados protegidos acessados com sucesso',\n    });\n  }\n);\n\nfastify.listen({ port: 3000 });\n"})})}),(0,t.jsx)(s.A,{value:"hapi",label:"Hapi.js",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",metastring:'title="app.ts"',children:"import Hapi from '@hapi/hapi';\nimport { hapiVerifyAccessToken } from './auth-middleware.js';\n\nconst server = Hapi.server({ port: 3000 });\n\nserver.route({\n  method: 'GET',\n  path: '/api/protected',\n  options: {\n    pre: [{ method: hapiVerifyAccessToken }],\n    handler: (request, h) => {\n      // Acesse as informa\xe7\xf5es de autentica\xe7\xe3o de request.app.auth\n      return { auth: request.app.auth };\n    },\n  },\n});\n\nserver.route({\n  method: 'GET',\n  path: '/api/protected/detailed',\n  options: {\n    pre: [{ method: hapiVerifyAccessToken }],\n    handler: (request, h) => {\n      // Sua l\xf3gica de endpoint protegido\n      return {\n        auth: request.app.auth,\n        message: 'Dados protegidos acessados com sucesso',\n      };\n    },\n  },\n});\n\nawait server.start();\n"})})}),(0,t.jsx)(s.A,{value:"nestjs",label:"NestJS",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",metastring:'title="protected.controller.ts"',children:"import { Controller, Get, UseGuards, Req } from '@nestjs/common';\nimport { AccessTokenGuard } from './access-token.guard.js';\n\n@Controller('api')\nexport class ProtectedController {\n  @Get('protected')\n  @UseGuards(AccessTokenGuard)\n  getProtected(@Req() req: any) {\n    // Acesse as informa\xe7\xf5es de autentica\xe7\xe3o de req.auth\n    return { auth: req.auth };\n  }\n\n  @Get('protected/detailed')\n  @UseGuards(AccessTokenGuard)\n  getDetailedProtected(@Req() req: any) {\n    // Sua l\xf3gica de endpoint protegido\n    return {\n      auth: req.auth,\n      message: 'Dados protegidos acessados com sucesso',\n    };\n  }\n}\n"})})})]})}function J(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(C,{...e})}):C(e)}var V=r(34704),N=r(1555),$=r(33435),M=r(29770),O=r(47824),W=r(94186);const F=[...M.RM,...W.RM,...O.RM];function H(e){return(0,t.jsxs)(i.A,{groupId:"api-framework",children:[(0,t.jsx)(s.A,{value:"laravel",label:(0,$.My)("laravel"),children:(0,t.jsx)(M.Ay,{})}),(0,t.jsx)(s.A,{value:"symfony",label:(0,$.My)("symfony"),children:(0,t.jsx)(W.Ay,{})}),(0,t.jsx)(s.A,{value:"slim",label:(0,$.My)("slim"),children:(0,t.jsx)(O.Ay,{})})]})}function D(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(H,{...e})}):H()}var L=r(12457),U=r(82042),B=r(80968),K=r(53017),G=r(91751),Y=r(89054);const Q=[...G.RM,...Y.RM,...B.RM,...K.RM];function X(e){return(0,t.jsxs)(i.A,{groupId:"api-framework",children:[(0,t.jsx)(s.A,{value:"fastapi",label:(0,$.My)("fastapi"),children:(0,t.jsx)(G.Ay,{})}),(0,t.jsx)(s.A,{value:"flask",label:(0,$.My)("flask"),children:(0,t.jsx)(Y.Ay,{})}),(0,t.jsx)(s.A,{value:"django",label:(0,$.My)("django"),children:(0,t.jsx)(B.Ay,{})}),(0,t.jsx)(s.A,{value:"django-rest",label:(0,$.My)("django-rest"),children:(0,t.jsx)(K.Ay,{})})]})}function Z(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(X,{...e})}):X()}var ee=r(18731),ne=r(67837),re=r(65280),oe=r(23354),te=r(25821);const ae=[...oe.RM,...te.RM,...re.RM];function se(e){return(0,t.jsxs)(i.A,{groupId:"api-framework",children:[(0,t.jsx)(s.A,{value:"rails",label:(0,$.My)("rails"),children:(0,t.jsx)(oe.Ay,{})}),(0,t.jsx)(s.A,{value:"sinatra",label:(0,$.My)("sinatra"),children:(0,t.jsx)(te.Ay,{})}),(0,t.jsx)(s.A,{value:"grape",label:(0,$.My)("grape"),children:(0,t.jsx)(re.Ay,{})})]})}function ie(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(se,{...e})}):se()}var ce=r(74869),de=r(86966),le=r(79131),ue=r(82896),pe=r(44207);const he=[...ue.RM,...le.RM,...pe.RM];function me(e){return(0,t.jsxs)(i.A,{groupId:"api-framework",children:[(0,t.jsx)(s.A,{value:"axum",label:(0,$.My)("axum"),children:(0,t.jsx)(ue.Ay,{})}),(0,t.jsx)(s.A,{value:"actix-web",label:(0,$.My)("actix-web"),children:(0,t.jsx)(le.Ay,{})}),(0,t.jsx)(s.A,{value:"rocket",label:(0,$.My)("rocket"),children:(0,t.jsx)(pe.Ay,{})})]})}function ge(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(me,{...e})}):me()}var xe=r(97495);const fe={sidebar_position:6,sidebar_label:"Validar tokens de acesso na API"},je="Como validar tokens de acesso no seu servi\xe7o de API ou backend",ve={},Ae=[{value:"Antes de come\xe7ar",id:"before-you-start",level:2},{value:"Passo 1: Inicializar constantes e utilit\xe1rios",id:"step-1-initialize-constants-and-utilities",level:2},...u.RM,...V.RM,...ee.RM,...b.RM,...P.RM,...l.RM,...L.RM,...ce.RM,...xe.RM,{value:"Passo 2: Recupere informa\xe7\xf5es sobre seu tenant Logto",id:"step-2-retrieve-info-about-your-logto-tenant",level:2},...p.RM,{value:"Passo 3: Valide o token e as permiss\xf5es",id:"step-3-validate-the-token-and-permissions",level:2},...m.RM,{value:"Adicione a l\xf3gica de valida\xe7\xe3o",id:"add-the-validation-logic",level:3},...T.RM,...U.RM,...g.RM,...k.RM,...c.RM,...N.RM,...ne.RM,...de.RM,{value:"Passo 4: Aplique o middleware \xe0 sua API",id:"step-4-apply-middleware-to-your-api",level:2},...Q,...A,...I,...d.RM,...F,...ae,...he,{value:"Passo 5: Teste sua implementa\xe7\xe3o",id:"step-5-test-your-implementation",level:2},...h.RM,{value:"Recursos relacionados",id:"related-resources",level:2}];function we(e){const n={a:"a",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",ul:"ul",...(0,a.R)(),...e.components},{Url:r}=n;return r||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Url",!0),(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"como-validar-tokens-de-acesso-no-seu-servi\xe7o-de-api-ou-backend",children:"Como validar tokens de acesso no seu servi\xe7o de API ou backend"})}),"\n",(0,t.jsxs)(n.p,{children:["Validar tokens de acesso \xe9 uma parte cr\xedtica para impor o ",(0,t.jsx)(n.a,{href:"/authorization/role-based-access-control",children:"controle de acesso baseado em papel (RBAC)"})," no Logto. Este guia mostra como verificar JWTs emitidos pelo Logto em seu backend/API, checando assinatura, emissor (issuer), p\xfablico (audience), expira\xe7\xe3o, permiss\xf5es (escopos) e contexto de organiza\xe7\xe3o."]}),"\n",(0,t.jsx)(n.h2,{id:"before-you-start",children:"Antes de come\xe7ar"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Este guia assume que voc\xea est\xe1 familiarizado com os conceitos de RBAC do Logto."}),"\n",(0,t.jsxs)(n.li,{children:["Se voc\xea est\xe1 protegendo recursos de API, este guia assume que voc\xea j\xe1 passou pelo guia ",(0,t.jsx)(n.a,{href:"/authorization/global-api-resources",children:"Proteger recursos globais de API"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:["Se voc\xea est\xe1 protegendo funcionalidades ou fluxos internos do aplicativo (permiss\xf5es n\xe3o relacionadas \xe0 API), este guia assume que voc\xea j\xe1 passou pelo guia ",(0,t.jsx)(n.a,{href:"/authorization/organization-permissions",children:"Proteger permiss\xf5es de organiza\xe7\xe3o (n\xe3o relacionadas \xe0 API)"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:["Se voc\xea est\xe1 protegendo recursos de API em n\xedvel de organiza\xe7\xe3o, este guia assume que voc\xea j\xe1 passou pelo guia ",(0,t.jsx)(n.a,{href:"/authorization/organization-level-api-resources",children:"Proteger recursos de API em n\xedvel de organiza\xe7\xe3o"}),"."]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"step-1-initialize-constants-and-utilities",children:"Passo 1: Inicializar constantes e utilit\xe1rios"}),"\n",(0,t.jsx)(u.Ay,{}),"\n",(0,t.jsxs)(i.A,{groupId:"api-language",children:[(0,t.jsx)(s.A,{value:"node",label:"Node.js",children:(0,t.jsx)(V.Ay,{})}),(0,t.jsx)(s.A,{value:"python",label:"Python",children:(0,t.jsx)(ee.Ay,{})}),(0,t.jsx)(s.A,{value:"go",label:"Go",children:(0,t.jsx)(b.Ay,{})}),(0,t.jsx)(s.A,{value:"java",label:"Java",children:(0,t.jsx)(P.Ay,{})}),(0,t.jsx)(s.A,{value:"dotnet",label:".NET",children:(0,t.jsx)(l.Ay,{})}),(0,t.jsx)(s.A,{value:"php",label:"PHP",children:(0,t.jsx)(L.Ay,{})}),(0,t.jsx)(s.A,{value:"ruby",label:"Ruby",children:(0,t.jsx)(ce.Ay,{})}),(0,t.jsx)(s.A,{value:"rust",label:"Rust",children:(0,t.jsx)(xe.Ay,{})})]}),"\n",(0,t.jsx)(n.h2,{id:"step-2-retrieve-info-about-your-logto-tenant",children:"Passo 2: Recupere informa\xe7\xf5es sobre seu tenant Logto"}),"\n",(0,t.jsx)(p.Ay,{}),"\n",(0,t.jsx)(n.h2,{id:"step-3-validate-the-token-and-permissions",children:"Passo 3: Valide o token e as permiss\xf5es"}),"\n",(0,t.jsx)(m.Ay,{}),"\n",(0,t.jsx)(n.h3,{id:"add-the-validation-logic",children:"Adicione a l\xf3gica de valida\xe7\xe3o"}),"\n",(0,t.jsxs)(i.A,{groupId:"api-language",children:[(0,t.jsx)(s.A,{value:"node",label:"Node.js",children:(0,t.jsx)(T.Ay,{})}),(0,t.jsx)(s.A,{value:"python",label:"Python",children:(0,t.jsx)(U.Ay,{})}),(0,t.jsx)(s.A,{value:"go",label:"Go",children:(0,t.jsx)(g.Ay,{})}),(0,t.jsx)(s.A,{value:"java",label:"Java",children:(0,t.jsx)(k.Ay,{})}),(0,t.jsx)(s.A,{value:"dotnet",label:".NET",children:(0,t.jsx)(c.Ay,{})}),(0,t.jsx)(s.A,{value:"php",label:"PHP",children:(0,t.jsx)(N.Ay,{})}),(0,t.jsx)(s.A,{value:"ruby",label:"Ruby",children:(0,t.jsx)(ne.Ay,{})}),(0,t.jsx)(s.A,{value:"rust",label:"Rust",children:(0,t.jsx)(de.Ay,{})})]}),"\n",(0,t.jsx)(n.h2,{id:"step-4-apply-middleware-to-your-api",children:"Passo 4: Aplique o middleware \xe0 sua API"}),"\n",(0,t.jsx)(n.p,{children:"Aplique o middleware \xe0s rotas protegidas da sua API."}),"\n",(0,t.jsxs)(i.A,{groupId:"api-language",children:[(0,t.jsx)(s.A,{value:"node",label:"Node.js",children:(0,t.jsx)(J,{})}),(0,t.jsx)(s.A,{value:"python",label:"Python",children:(0,t.jsx)(Z,{})}),(0,t.jsx)(s.A,{value:"go",label:"Go",children:(0,t.jsx)(y,{})}),(0,t.jsx)(s.A,{value:"java",label:"Java",children:(0,t.jsx)(E,{})}),(0,t.jsx)(s.A,{value:"dotnet",label:".NET",children:(0,t.jsx)(d.Ay,{})}),(0,t.jsx)(s.A,{value:"php",label:"PHP",children:(0,t.jsx)(D,{})}),(0,t.jsx)(s.A,{value:"ruby",label:"Ruby",children:(0,t.jsx)(ie,{})}),(0,t.jsx)(s.A,{value:"rust",label:"Rust",children:(0,t.jsx)(ge,{})})]}),"\n",(0,t.jsx)(n.h2,{id:"step-5-test-your-implementation",children:"Passo 5: Teste sua implementa\xe7\xe3o"}),"\n",(0,t.jsx)(h.Ay,{}),"\n",(0,t.jsx)(n.h2,{id:"related-resources",children:"Recursos relacionados"}),"\n",(0,t.jsx)(r,{href:"/developers/custom-token-claims",children:"Personalizando reivindica\xe7\xf5es de token"}),"\n",(0,t.jsx)(r,{href:"https://auth.wiki/jwt",children:"JSON Web Token (JWT)"}),"\n",(0,t.jsx)(r,{href:"https://openid.net/specs/openid-connect-discovery-1_0.html",children:(0,t.jsx)(n.p,{children:"OpenID Connect Discovery"})}),"\n",(0,t.jsx)(r,{href:"https://www.rfc-editor.org/rfc/rfc8707.html",children:"RFC 8707: Indicadores de recurso"})]})}function ye(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(we,{...e})}):we(e)}},12655:(e,n,r)=>{r.d(n,{Ay:()=>d,RM:()=>i});var o=r(25105),t=r(79621),a=r(38552),s=r(22002);const i=[];function c(e){const n={code:"code",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.p,{children:"Adicione o pacote NuGet necess\xe1rio para autentica\xe7\xe3o JWT:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-xml",children:'<PackageReference Include="Microsoft.AspNetCore.Authentication.JwtBearer" Version="8.0.0" />\n'})}),"\n",(0,o.jsx)(n.p,{children:"Crie um servi\xe7o de valida\xe7\xe3o para lidar com a valida\xe7\xe3o do token:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-csharp",metastring:'title="JwtValidationService.cs"',children:'using System.Security.Claims;\nusing Microsoft.AspNetCore.Authentication.JwtBearer;\nusing YourApiNamespace.Exceptions;\n\nnamespace YourApiNamespace.Services\n{\n    public interface IJwtValidationService\n    {\n        Task ValidateTokenAsync(TokenValidatedContext context);\n    }\n\n    public class JwtValidationService : IJwtValidationService\n    {\n        public async Task ValidateTokenAsync(TokenValidatedContext context)\n        {\n            var principal = context.Principal!;\n\n            try\n            {\n                // Adicione sua l\xf3gica de valida\xe7\xe3o aqui com base no modelo de permiss\xe3o\n                ValidatePayload(principal);\n            }\n            catch (AuthorizationException)\n            {\n                throw; // Relan\xe7a exce\xe7\xf5es de autoriza\xe7\xe3o\n            }\n            catch (Exception ex)\n            {\n                throw new AuthorizationException($"Falha na valida\xe7\xe3o do token: {ex.Message}", 401);\n            }\n        }\n\n        private void ValidatePayload(ClaimsPrincipal principal)\n        {\n            // Implemente sua l\xf3gica de verifica\xe7\xe3o aqui com base no modelo de permiss\xe3o\n            // Isso ser\xe1 mostrado na se\xe7\xe3o de modelos de permiss\xe3o abaixo\n        }\n    }\n}\n'})}),"\n",(0,o.jsxs)(n.p,{children:["Configure a autentica\xe7\xe3o JWT no seu ",(0,o.jsx)(n.code,{children:"Program.cs"}),":"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-csharp",metastring:'title="Program.cs"',children:'using Microsoft.AspNetCore.Authentication.JwtBearer;\nusing Microsoft.IdentityModel.Tokens;\nusing YourApiNamespace.Services;\nusing YourApiNamespace.Exceptions;\n\nvar builder = WebApplication.CreateBuilder(args);\n\n// Adicione servi\xe7os ao cont\xeainer\nbuilder.Services.AddControllers();\nbuilder.Services.AddScoped<IJwtValidationService, JwtValidationService>();\n\n// Configure a autentica\xe7\xe3o JWT\nbuilder.Services.AddAuthentication(JwtBearerDefaults.AuthenticationScheme)\n    .AddJwtBearer(options =>\n    {\n        options.Authority = AuthConstants.Issuer;\n        options.MetadataAddress = $"{AuthConstants.Issuer}/.well-known/openid_configuration";\n        options.RequireHttpsMetadata = true;\n        options.TokenValidationParameters = new TokenValidationParameters\n        {\n            ValidateIssuer = true,\n            ValidIssuer = AuthConstants.Issuer,\n            ValidateAudience = false, // A audi\xeancia ser\xe1 validada manualmente com base no modelo de permiss\xe3o\n            ValidateLifetime = true,\n            ValidateIssuerSigningKey = true,\n            ClockSkew = TimeSpan.FromMinutes(5)\n        };\n\n        options.Events = new JwtBearerEvents\n        {\n            OnTokenValidated = async context =>\n            {\n                var validationService = context.HttpContext.RequestServices\n                    .GetRequiredService<IJwtValidationService>();\n\n                await validationService.ValidateTokenAsync(context);\n            },\n            OnAuthenticationFailed = context =>\n            {\n                // Trate erros da biblioteca JWT como 401\n                context.Response.StatusCode = 401;\n                context.Response.ContentType = "application/json";\n                context.Response.WriteAsync($"{{\\"error\\": \\"Token inv\xe1lido\\"}}");\n                context.HandleResponse();\n                return Task.CompletedTask;\n            }\n        };\n    });\n\nbuilder.Services.AddAuthorization();\n\nvar app = builder.Build();\n\n// Tratamento global de erros para falhas de autentica\xe7\xe3o/autoriza\xe7\xe3o\napp.Use(async (context, next) =>\n{\n    try\n    {\n        await next();\n    }\n    catch (AuthorizationException ex)\n    {\n        context.Response.StatusCode = ex.StatusCode;\n        context.Response.ContentType = "application/json";\n        await context.Response.WriteAsync($"{{\\"error\\": \\"{ex.Message}\\"}}");\n    }\n});\n\n// Configure o pipeline de requisi\xe7\xf5es HTTP\napp.UseAuthentication();\napp.UseAuthorization();\n\napp.MapControllers();\n\napp.Run();\n'})}),"\n",(0,o.jsxs)(n.p,{children:["De acordo com seu modelo de permiss\xe3o, implemente a l\xf3gica de valida\xe7\xe3o apropriada em ",(0,o.jsx)(n.code,{children:"JwtValidationService"}),":"]}),"\n",(0,o.jsxs)(s.A,{groupId:"permission-models",children:[(0,o.jsx)(a.A,{value:"global-api-resources",label:"Recursos globais de API",children:(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-csharp",metastring:'title="JwtValidationService.cs"',children:'private void ValidatePayload(ClaimsPrincipal principal)\n{\n    // Verifique se a reivindica\xe7\xe3o de audi\xeancia corresponde ao seu indicador de recurso de API\n    var audiences = principal.FindAll("aud").Select(c => c.Value).ToList();\n    if (!audiences.Contains("https://your-api-resource-indicator"))\n    {\n        throw new AuthorizationException("Audi\xeancia inv\xe1lida");\n    }\n\n    // Verifique os escopos necess\xe1rios para recursos globais de API\n    var requiredScopes = new[] { "api:read", "api:write" }; // Substitua pelos escopos necess\xe1rios\n    var tokenScopes = principal.FindFirst("scope")?.Value?.Split(\' \') ?? Array.Empty<string>();\n\n    if (!requiredScopes.All(scope => tokenScopes.Contains(scope)))\n    {\n        throw new AuthorizationException("Escopo insuficiente");\n    }\n}\n'})})}),(0,o.jsx)(a.A,{value:"organization-permissions",label:"Permiss\xf5es de organiza\xe7\xe3o (n\xe3o-API)",children:(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-csharp",metastring:'title="JwtValidationService.cs"',children:'private void ValidatePayload(ClaimsPrincipal principal)\n{\n    // Verifique se a reivindica\xe7\xe3o de audi\xeancia corresponde ao formato de organiza\xe7\xe3o\n    var audiences = principal.FindAll("aud").Select(c => c.Value).ToList();\n    var hasOrgAudience = audiences.Any(aud => aud.StartsWith("urn:logto:organization:"));\n\n    if (!hasOrgAudience)\n    {\n        throw new AuthorizationException("Audi\xeancia inv\xe1lida para permiss\xf5es de organiza\xe7\xe3o");\n    }\n\n    // Verifique se o ID da organiza\xe7\xe3o corresponde ao contexto (voc\xea pode precisar extrair isso do contexto da requisi\xe7\xe3o)\n    var expectedOrgId = "your-organization-id"; // Extraia do contexto da requisi\xe7\xe3o\n    var expectedAud = $"urn:logto:organization:{expectedOrgId}";\n    if (!audiences.Contains(expectedAud))\n    {\n        throw new AuthorizationException("ID da organiza\xe7\xe3o n\xe3o corresponde");\n    }\n\n    // Verifique os escopos necess\xe1rios da organiza\xe7\xe3o\n    var requiredScopes = new[] { "invite:users", "manage:settings" }; // Substitua pelos escopos necess\xe1rios\n    var tokenScopes = principal.FindFirst("scope")?.Value?.Split(\' \') ?? Array.Empty<string>();\n\n    if (!requiredScopes.All(scope => tokenScopes.Contains(scope)))\n    {\n        throw new AuthorizationException("Escopo de organiza\xe7\xe3o insuficiente");\n    }\n}\n'})})}),(0,o.jsx)(a.A,{value:"organization-level-api-resources",label:"Recursos de API em n\xedvel de organiza\xe7\xe3o",children:(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-csharp",metastring:'title="JwtValidationService.cs"',children:'private void ValidatePayload(ClaimsPrincipal principal)\n{\n    // Verifique se a reivindica\xe7\xe3o de audi\xeancia corresponde ao seu indicador de recurso de API\n    var audiences = principal.FindAll("aud").Select(c => c.Value).ToList();\n    if (!audiences.Contains("https://your-api-resource-indicator"))\n    {\n        throw new AuthorizationException("Audi\xeancia inv\xe1lida para recursos de API em n\xedvel de organiza\xe7\xe3o");\n    }\n\n    // Verifique se o ID da organiza\xe7\xe3o corresponde ao contexto (voc\xea pode precisar extrair isso do contexto da requisi\xe7\xe3o)\n    var expectedOrgId = "your-organization-id"; // Extraia do contexto da requisi\xe7\xe3o\n    var orgId = principal.FindFirst("organization_id")?.Value;\n    if (!expectedOrgId.Equals(orgId))\n    {\n        throw new AuthorizationException("ID da organiza\xe7\xe3o n\xe3o corresponde");\n    }\n\n    // Verifique os escopos necess\xe1rios para recursos de API em n\xedvel de organiza\xe7\xe3o\n    var requiredScopes = new[] { "api:read", "api:write" }; // Substitua pelos escopos necess\xe1rios\n    var tokenScopes = principal.FindFirst("scope")?.Value?.Split(\' \') ?? Array.Empty<string>();\n\n    if (!requiredScopes.All(scope => tokenScopes.Contains(scope)))\n    {\n        throw new AuthorizationException("Escopos insuficientes para recursos de API em n\xedvel de organiza\xe7\xe3o");\n    }\n}\n'})})})]})]})}function d(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(c,{...e})}):c(e)}},34576:(e,n,r)=>{r.d(n,{Ay:()=>i,RM:()=>a});var o=r(25105),t=r(79621);const a=[];function s(e){const n={code:"code",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.p,{children:"J\xe1 configuramos o middleware de autentica\xe7\xe3o (Authentication) e autoriza\xe7\xe3o (Authorization) nas se\xe7\xf5es anteriores. Agora podemos criar um controlador protegido que valida tokens de acesso (Access tokens) e extrai reivindica\xe7\xf5es (Claims) de solicita\xe7\xf5es autenticadas."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-csharp",metastring:'title="ProtectedController.cs"',children:'using Microsoft.AspNetCore.Authorization;\nusing Microsoft.AspNetCore.Mvc;\nusing System.Security.Claims;\n\nnamespace YourApiNamespace.Controllers\n{\n    [ApiController]\n    [Route("api/[controller]")]\n    [Authorize] // Requer autentica\xe7\xe3o para todas as a\xe7\xf5es neste controlador\n    public class ProtectedController : ControllerBase\n    {\n        [HttpGet]\n        public IActionResult GetProtectedData()\n        {\n            // Informa\xe7\xf5es do token de acesso (Access token) diretamente das reivindica\xe7\xf5es (Claims) do usu\xe1rio\n            var sub = User.FindFirst(ClaimTypes.NameIdentifier)?.Value ?? User.FindFirst("sub")?.Value;\n            var clientId = User.FindFirst("client_id")?.Value;\n            var organizationId = User.FindFirst("organization_id")?.Value;\n            var scopes = User.FindFirst("scope")?.Value?.Split(\' \') ?? Array.Empty<string>();\n            var audience = User.FindAll("aud").Select(c => c.Value).ToArray();\n\n            return Ok(new {\n                sub,\n                client_id = clientId,\n                organization_id = organizationId,\n                scopes,\n                audience\n            });\n        }\n\n        [HttpGet("claims")]\n        public IActionResult GetAllClaims()\n        {\n            // Retorna todas as reivindica\xe7\xf5es (Claims) para depura\xe7\xe3o/inspe\xe7\xe3o\n            var claims = User.Claims.Select(c => new { c.Type, c.Value }).ToList();\n            return Ok(new { claims });\n        }\n    }\n}\n'})})]})}function i(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(s,{...e})}):s(e)}},34035:(e,n,r)=>{r.d(n,{Ay:()=>i,RM:()=>a});var o=r(25105),t=r(79621);const a=[];function s(e){const n={code:"code",pre:"pre",...(0,t.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-csharp",metastring:'title="AuthConstants.cs"',children:'namespace YourApiNamespace\n{\n    public static class AuthConstants\n    {\n        public const string Issuer = "https://your-tenant.logto.app/oidc";\n    }\n}\n'})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-csharp",metastring:'title="AuthenticationExceptions.cs"',children:"namespace YourApiNamespace.Exceptions\n{\n    public class AuthorizationException : Exception\n    {\n        public int StatusCode { get; }\n\n        public AuthorizationException(string message, int statusCode = 403) : base(message)\n        {\n            StatusCode = statusCode;\n        }\n    }\n}\n"})})]})}function i(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(s,{...e})}):s(e)}},9511:(e,n,r)=>{r.d(n,{Ay:()=>i,RM:()=>a});var o=r(25105),t=r(79621);const a=[];function s(e){const n={code:"code",p:"p",...(0,t.R)(),...e.components};return(0,o.jsxs)(n.p,{children:["Defina as constantes e utilit\xe1rios necess\xe1rios em seu c\xf3digo para lidar com a extra\xe7\xe3o e valida\xe7\xe3o do token. Uma solicita\xe7\xe3o v\xe1lida deve incluir um cabe\xe7alho ",(0,o.jsx)(n.code,{children:"Authorization"})," no formato ",(0,o.jsx)(n.code,{children:"Bearer <token de acesso (access token)>"}),"."]})}function i(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(s,{...e})}):s(e)}},23328:(e,n,r)=>{r.d(n,{Ay:()=>i,RM:()=>a});var o=r(25105),t=r(79621);const a=[{value:"Buscar no endpoint de descoberta do OpenID Connect",id:"fetch-from-openid-connect-discovery-endpoint",level:3},{value:"Definir manualmente no seu c\xf3digo (n\xe3o recomendado)",id:"hardcode-in-your-code-not-recommended",level:3}];function s(e){const n={code:"code",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.p,{children:"Voc\xea precisar\xe1 dos seguintes valores para validar tokens emitidos pelo Logto:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"URI do JSON Web Key Set (JWKS): A URL para as chaves p\xfablicas do Logto, usada para verificar assinaturas de JWT."}),"\n",(0,o.jsx)(n.li,{children:"Emissor (Issuer): O valor esperado do emissor (URL OIDC do Logto)."}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:"Primeiro, encontre o endpoint do seu tenant Logto. Voc\xea pode encontr\xe1-lo em v\xe1rios lugares:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["No Logto Console, em ",(0,o.jsx)(n.strong,{children:"Configura\xe7\xf5es"})," \u2192 ",(0,o.jsx)(n.strong,{children:"Dom\xednios"}),"."]}),"\n",(0,o.jsxs)(n.li,{children:["Em qualquer configura\xe7\xe3o de aplicativo onde voc\xea configurou no Logto, ",(0,o.jsx)(n.strong,{children:"Configura\xe7\xf5es"})," \u2192 ",(0,o.jsx)(n.strong,{children:"Endpoints & Credenciais"}),"."]}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"fetch-from-openid-connect-discovery-endpoint",children:"Buscar no endpoint de descoberta do OpenID Connect"}),"\n",(0,o.jsx)(n.p,{children:"Esses valores podem ser obtidos no endpoint de descoberta do OpenID Connect do Logto:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"https://<seu-endpoint-logto>/oidc/.well-known/openid-configuration\n"})}),"\n",(0,o.jsx)(n.p,{children:"Aqui est\xe1 um exemplo de resposta (outros campos omitidos para brevidade):"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-json",children:'{\n  "jwks_uri": "https://your-tenant.logto.app/oidc/jwks",\n  "issuer": "https://your-tenant.logto.app/oidc"\n}\n'})}),"\n",(0,o.jsx)(n.h3,{id:"hardcode-in-your-code-not-recommended",children:"Definir manualmente no seu c\xf3digo (n\xe3o recomendado)"}),"\n",(0,o.jsx)(n.p,{children:"Como o Logto n\xe3o permite personalizar o URI do JWKS ou o emissor, voc\xea pode definir esses valores manualmente no seu c\xf3digo. No entanto, isso n\xe3o \xe9 recomendado para aplica\xe7\xf5es em produ\xe7\xe3o, pois pode aumentar a sobrecarga de manuten\xe7\xe3o caso alguma configura\xe7\xe3o mude no futuro."}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["URI do JWKS: ",(0,o.jsx)(n.code,{children:"https://<seu-endpoint-logto>/oidc/jwks"})]}),"\n",(0,o.jsxs)(n.li,{children:["Emissor: ",(0,o.jsx)(n.code,{children:"https://<seu-endpoint-logto>/oidc"})]}),"\n"]})]})}function i(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(s,{...e})}):s(e)}},43951:(e,n,r)=>{r.d(n,{Ay:()=>d,RM:()=>i});var o=r(25105),t=r(79621),a=r(38552),s=r(22002);const i=[{value:"Obter tokens de acesso (Access tokens)",id:"get-access-tokens",level:3},{value:"Testar endpoints protegidos",id:"test-protected-endpoints",level:3},{value:"Testes espec\xedficos do modelo de permiss\xe3o",id:"permission-model-specific-testing",level:3}];function c(e){const n={a:"a",admonition:"admonition",code:"code",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components},{Details:r}=n;return r||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h3,{id:"get-access-tokens",children:"Obter tokens de acesso (Access tokens)"}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Do seu aplicativo cliente:"}),"\nSe voc\xea configurou uma integra\xe7\xe3o de cliente, seu aplicativo pode obter tokens automaticamente. Extraia o token de acesso e use-o nas requisi\xe7\xf5es de API."]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Para testes com curl / Postman:"})}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Tokens de usu\xe1rio:"})," Use as ferramentas de desenvolvedor do seu aplicativo cliente para copiar o token de acesso do localStorage ou da aba de rede."]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Tokens m\xe1quina para m\xe1quina:"})," Use o fluxo de credenciais do cliente. Aqui est\xe1 um exemplo n\xe3o normativo usando curl:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:'curl -X POST https://your-tenant.logto.app/oidc/token \\\n  -H "Content-Type: application/x-www-form-urlencoded" \\\n  -d "grant_type=client_credentials" \\\n  -d "client_id=your-m2m-client-id" \\\n  -d "client_secret=your-m2m-client-secret" \\\n  -d "resource=https://your-api-resource-indicator" \\\n  -d "scope=api:read api:write"\n'})}),"\n",(0,o.jsxs)(n.p,{children:["Pode ser necess\xe1rio ajustar os par\xe2metros ",(0,o.jsx)(n.code,{children:"resource"})," e ",(0,o.jsx)(n.code,{children:"scope"})," de acordo com seu recurso de API e permiss\xf5es; um par\xe2metro ",(0,o.jsx)(n.code,{children:"organization_id"})," tamb\xe9m pode ser exigido se sua API for voltada para organiza\xe7\xe3o."]}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(n.admonition,{type:"tip",children:(0,o.jsxs)(n.p,{children:["Precisa inspecionar o conte\xfado do token? Use nosso ",(0,o.jsx)(n.a,{href:"https://logto.io/jwt-decoder",children:"decodificador de JWT"})," para decodificar e verificar seus JWTs."]})}),"\n",(0,o.jsx)(n.h3,{id:"test-protected-endpoints",children:"Testar endpoints protegidos"}),"\n",(0,o.jsxs)(r,{children:[(0,o.jsx)("summary",{children:(0,o.jsx)(n.strong,{children:"Requisi\xe7\xe3o com token v\xe1lido"})}),(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:'curl -H "Authorization: Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9..." \\\n  http://localhost:3000/api/protected\n'})}),(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Resposta esperada:"})}),(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-json",children:'{\n  "auth": {\n    "sub": "user123",\n    "clientId": "app456",\n    "organizationId": "org789",\n    "scopes": ["api:read", "api:write"],\n    "audience": ["https://your-api-resource-indicator"]\n  }\n}\n'})})]}),"\n",(0,o.jsxs)(r,{children:[(0,o.jsx)("summary",{children:(0,o.jsx)(n.strong,{children:"Token ausente"})}),(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"curl http://localhost:3000/api/protected\n"})}),(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Resposta esperada (401):"})}),(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-json",children:'{\n  "error": "Authorization header is missing"\n}\n'})})]}),"\n",(0,o.jsxs)(r,{children:[(0,o.jsx)("summary",{children:(0,o.jsx)(n.strong,{children:"Token inv\xe1lido"})}),(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:'curl -H "Authorization: Bearer invalid-token" \\\n  http://localhost:3000/api/protected\n'})}),(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Resposta esperada (401):"})}),(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-json",children:'{\n  "error": "Invalid token"\n}\n'})})]}),"\n",(0,o.jsx)(n.h3,{id:"permission-model-specific-testing",children:"Testes espec\xedficos do modelo de permiss\xe3o"}),"\n",(0,o.jsxs)(s.A,{groupId:"permission-models",children:[(0,o.jsxs)(a.A,{value:"global-api-resources",label:"Recursos de API globais",children:[(0,o.jsx)(n.p,{children:"Cen\xe1rios de teste para APIs protegidas com escopos globais:"}),(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Escopos v\xe1lidos:"})," Teste com tokens que incluam os escopos de API necess\xe1rios (por exemplo, ",(0,o.jsx)(n.code,{children:"api:read"}),", ",(0,o.jsx)(n.code,{children:"api:write"}),")"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Escopos ausentes:"})," Espere ",(0,o.jsx)(n.strong,{children:"403 Proibido"})," quando o token n\xe3o tiver os escopos necess\xe1rios"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"P\xfablico errado:"})," Espere ",(0,o.jsx)(n.strong,{children:"403 Proibido"})," quando o p\xfablico n\xe3o corresponder ao recurso de API"]}),"\n"]}),(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:'# Token sem escopos necess\xe1rios - espera-se 403\ncurl -H "Authorization: Bearer token-without-required-scopes" \\\n  http://localhost:3000/api/protected\n'})})]}),(0,o.jsxs)(a.A,{value:"organization-permissions",label:"Permiss\xf5es de organiza\xe7\xe3o (n\xe3o-API)",children:[(0,o.jsx)(n.p,{children:"Cen\xe1rios de teste para controle de acesso espec\xedfico de organiza\xe7\xe3o:"}),(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Token de organiza\xe7\xe3o v\xe1lido:"})," Teste com tokens que incluam o contexto correto da organiza\xe7\xe3o (ID da organiza\xe7\xe3o e escopos)"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Escopos ausentes:"})," Espere ",(0,o.jsx)(n.strong,{children:"403 Proibido"})," quando o usu\xe1rio n\xe3o tiver permiss\xf5es para a a\xe7\xe3o solicitada"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Organiza\xe7\xe3o errada:"})," Espere ",(0,o.jsx)(n.strong,{children:"403 Proibido"})," quando o p\xfablico n\xe3o corresponder ao contexto da organiza\xe7\xe3o (",(0,o.jsx)(n.code,{children:"urn:logto:organization:<organization_id>"}),")"]}),"\n"]}),(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:'# Token para organiza\xe7\xe3o errada - espera-se 403\ncurl -H "Authorization: Bearer token-for-different-organization" \\\n  http://localhost:3000/api/protected\n'})})]}),(0,o.jsxs)(a.A,{value:"organization-level-api-resources",label:"Recursos de API em n\xedvel de organiza\xe7\xe3o",children:[(0,o.jsx)(n.p,{children:"Cen\xe1rios de teste combinando valida\xe7\xe3o de recurso de API com contexto de organiza\xe7\xe3o:"}),(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Organiza\xe7\xe3o v\xe1lida + escopos de API:"})," Teste com tokens que tenham tanto o contexto da organiza\xe7\xe3o quanto os escopos de API necess\xe1rios"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Escopos de API ausentes:"})," Espere ",(0,o.jsx)(n.strong,{children:"403 Proibido"})," quando o token de organiza\xe7\xe3o n\xe3o tiver as permiss\xf5es de API necess\xe1rias"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Organiza\xe7\xe3o errada:"})," Espere ",(0,o.jsx)(n.strong,{children:"403 Proibido"})," ao acessar a API com token de outra organiza\xe7\xe3o"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"P\xfablico errado:"})," Espere ",(0,o.jsx)(n.strong,{children:"403 Proibido"})," quando o p\xfablico n\xe3o corresponder ao recurso de API em n\xedvel de organiza\xe7\xe3o"]}),"\n"]}),(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:'# Token de organiza\xe7\xe3o sem escopos de API - espera-se 403\ncurl -H "Authorization: Bearer organization-token-without-api-scopes" \\\n  http://localhost:3000/api/protected\n'})})]})]})]})}function d(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(c,{...e})}):c(e)}},22821:(e,n,r)=>{r.d(n,{Ay:()=>d,RM:()=>i});var o=r(25105),t=r(79621),a=r(38552),s=r(22002);const i=[{value:"O que verificar para cada modelo de permiss\xe3o",id:"what-to-check-for-each-permission-model",level:3}];function c(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h3:"h3",li:"li",p:"p",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.p,{children:"Ap\xf3s extrair o token e buscar a configura\xe7\xe3o OIDC, valide o seguinte:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Assinatura:"})," O JWT deve ser v\xe1lido e assinado pelo Logto (via JWKS)."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Emissor (Issuer):"})," Deve corresponder ao emissor do seu tenant Logto."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"P\xfablico (Audience):"})," Deve corresponder ao indicador de recurso da API registrado no Logto, ou ao contexto da organiza\xe7\xe3o se aplic\xe1vel."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Expira\xe7\xe3o:"})," O token n\xe3o pode estar expirado."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Permiss\xf5es (escopos) (Permissions (scopes)):"})," O token deve incluir os escopos necess\xe1rios para sua API / a\xe7\xe3o. Os escopos s\xe3o strings separadas por espa\xe7o na reivindica\xe7\xe3o ",(0,o.jsx)(n.code,{children:"scope"}),"."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Contexto da organiza\xe7\xe3o:"})," Se estiver protegendo recursos de API em n\xedvel de organiza\xe7\xe3o, valide a reivindica\xe7\xe3o ",(0,o.jsx)(n.code,{children:"organization_id"}),"."]}),"\n"]}),"\n",(0,o.jsxs)(n.p,{children:["Veja ",(0,o.jsx)(n.a,{href:"https://auth.wiki/jwt",children:"JSON Web Token"})," para saber mais sobre a estrutura e reivindica\xe7\xf5es do JWT."]}),"\n",(0,o.jsx)(n.h3,{id:"what-to-check-for-each-permission-model",children:"O que verificar para cada modelo de permiss\xe3o"}),"\n",(0,o.jsx)(n.p,{children:"As reivindica\xe7\xf5es e regras de valida\xe7\xe3o diferem conforme o modelo de permiss\xe3o:"}),"\n",(0,o.jsxs)(s.A,{groupId:"permission-models",children:[(0,o.jsx)(a.A,{value:"global-api-resources",label:"Recursos de API globais",children:(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsxs)(n.strong,{children:["Reivindica\xe7\xe3o de p\xfablico (",(0,o.jsx)(n.code,{children:"aud"}),"):"]})," Indicador de recurso de API"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsxs)(n.strong,{children:["Reivindica\xe7\xe3o de organiza\xe7\xe3o (",(0,o.jsx)(n.code,{children:"organization_id"}),"):"]})," ",(0,o.jsx)(n.em,{children:"N\xe3o presente"})]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsxs)(n.strong,{children:["Escopos (permiss\xf5es) a verificar (",(0,o.jsx)(n.code,{children:"scope"}),"):"]})," Permiss\xf5es do recurso de API"]}),"\n"]})}),(0,o.jsx)(a.A,{value:"organization-permissions",label:"Permiss\xf5es de organiza\xe7\xe3o (n\xe3o-API)",children:(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsxs)(n.strong,{children:["Reivindica\xe7\xe3o de p\xfablico (",(0,o.jsx)(n.code,{children:"aud"}),"):"]})," ",(0,o.jsx)(n.code,{children:"urn:logto:organization:<id>"})," (contexto da organiza\xe7\xe3o est\xe1 em ",(0,o.jsx)(n.code,{children:"aud"}),")"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsxs)(n.strong,{children:["Reivindica\xe7\xe3o de organiza\xe7\xe3o (",(0,o.jsx)(n.code,{children:"organization_id"}),"):"]})," ",(0,o.jsx)(n.em,{children:"N\xe3o presente"})]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsxs)(n.strong,{children:["Escopos (permiss\xf5es) a verificar (",(0,o.jsx)(n.code,{children:"scope"}),"):"]})," Permiss\xf5es da organiza\xe7\xe3o"]}),"\n"]})}),(0,o.jsx)(a.A,{value:"organization-level-api-resources",label:"Recursos de API em n\xedvel de organiza\xe7\xe3o",children:(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsxs)(n.strong,{children:["Reivindica\xe7\xe3o de p\xfablico (",(0,o.jsx)(n.code,{children:"aud"}),"):"]})," Indicador de recurso de API"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsxs)(n.strong,{children:["Reivindica\xe7\xe3o de organiza\xe7\xe3o (",(0,o.jsx)(n.code,{children:"organization_id"}),"):"]})," ID da organiza\xe7\xe3o (deve corresponder \xe0 requisi\xe7\xe3o)"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsxs)(n.strong,{children:["Escopos (permiss\xf5es) a verificar (",(0,o.jsx)(n.code,{children:"scope"}),"):"]})," Permiss\xf5es do recurso de API"]}),"\n"]})})]}),"\n",(0,o.jsx)("small",{children:(0,o.jsxs)(n.p,{children:["Para permiss\xf5es de organiza\xe7\xe3o que n\xe3o s\xe3o de API, o contexto da organiza\xe7\xe3o \xe9 representado pela\nreivindica\xe7\xe3o ",(0,o.jsx)(n.code,{children:"aud"})," (por exemplo, ",(0,o.jsx)(n.code,{children:"urn:logto:organization:abc123"}),"). A reivindica\xe7\xe3o\n",(0,o.jsx)(n.code,{children:"organization_id"})," s\xf3 est\xe1 presente para tokens de recursos de API em n\xedvel de organiza\xe7\xe3o."]})}),"\n",(0,o.jsx)(n.admonition,{type:"tip",children:(0,o.jsx)(n.p,{children:"Sempre valide tanto as permiss\xf5es (escopos) quanto o contexto (p\xfablico, organiza\xe7\xe3o) para APIs multi-tenant seguras."})})]})}function d(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(c,{...e})}):c(e)}},18627:(e,n,r)=>{r.d(n,{Ay:()=>g,RM:()=>h});var o=r(25105),t=r(79621),a=r(33435),s=r(38552),i=r(22002);function c(e){const n={code:"code",pre:"pre",...(0,t.R)(),...e.components};return(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-go",metastring:'title="auth_middleware.go"',children:'import (\n    "context"\n    "encoding/json"\n    "net/http"\n)\n\ntype contextKey string\n\nconst AuthContextKey contextKey = "auth"\n\nfunc VerifyAccessToken(next http.Handler) http.Handler {\n    return http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {\n        tokenString, err := extractBearerTokenFromHeaders(r)\n        if err != nil {\n            authErr := err.(*AuthorizationError)\n            w.Header().Set("Content-Type", "application/json")\n            w.WriteHeader(authErr.Status)\n            json.NewEncoder(w).Encode(map[string]string{"error": authErr.Message})\n            return\n        }\n\n        token, err := validateJWT(tokenString)\n        if err != nil {\n            authErr := err.(*AuthorizationError)\n            w.Header().Set("Content-Type", "application/json")\n            w.WriteHeader(authErr.Status)\n            json.NewEncoder(w).Encode(map[string]string{"error": authErr.Message})\n            return\n        }\n\n        // Armazena o token no contexto para uso gen\xe9rico\n        ctx := context.WithValue(r.Context(), AuthContextKey, token)\n        next.ServeHTTP(w, r.WithContext(ctx))\n    })\n}\n'})})}function d(e){const n={code:"code",pre:"pre",...(0,t.R)(),...e.components};return(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-go",metastring:'title="auth_middleware.go"',children:'import "github.com/labstack/echo/v4"\n\nfunc VerifyAccessToken(next echo.HandlerFunc) echo.HandlerFunc {\n    return func(c echo.Context) error {\n        tokenString, err := extractBearerTokenFromHeaders(c.Request())\n        if err != nil {\n            authErr := err.(*AuthorizationError)\n            return c.JSON(authErr.Status, echo.Map{"error": authErr.Message})\n        }\n\n        token, err := validateJWT(tokenString)\n        if err != nil {\n            authErr := err.(*AuthorizationError)\n            return c.JSON(authErr.Status, echo.Map{"error": authErr.Message})\n        }\n\n        // Armazene o token no contexto para uso gen\xe9rico\n        c.Set("auth", token)\n        return next(c)\n    }\n}\n'})})}function l(e){const n={code:"code",pre:"pre",...(0,t.R)(),...e.components};return(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-go",metastring:'title="auth_middleware.go"',children:'import (\n    "net/http"\n    "github.com/gofiber/fiber/v2"\n)\n\nfunc VerifyAccessToken(c *fiber.Ctx) error {\n    // Converter requisi\xe7\xe3o fiber para http.Request para compatibilidade\n    req := &http.Request{\n        Header: make(http.Header),\n    }\n    req.Header.Set("Authorization", c.Get("Authorization"))\n\n    tokenString, err := extractBearerTokenFromHeaders(req)\n    if err != nil {\n        authErr := err.(*AuthorizationError)\n        return c.Status(authErr.Status).JSON(fiber.Map{"error": authErr.Message})\n    }\n\n    token, err := validateJWT(tokenString)\n    if err != nil {\n        authErr := err.(*AuthorizationError)\n        return c.Status(authErr.Status).JSON(fiber.Map{"error": authErr.Message})\n    }\n\n    // Armazenar token em locals para uso gen\xe9rico\n    c.Locals("auth", token)\n    return c.Next()\n}\n'})})}function u(e){const n={code:"code",pre:"pre",...(0,t.R)(),...e.components};return(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-go",metastring:'title="auth_middleware.go"',children:'import "github.com/gin-gonic/gin"\n\nfunc VerifyAccessToken() gin.HandlerFunc {\n    return func(c *gin.Context) {\n        tokenString, err := extractBearerTokenFromHeaders(c.Request)\n        if err != nil {\n            authErr := err.(*AuthorizationError)\n            c.JSON(authErr.Status, gin.H{"error": authErr.Message})\n            c.Abort()\n            return\n        }\n\n        token, err := validateJWT(tokenString)\n        if err != nil {\n            authErr := err.(*AuthorizationError)\n            c.JSON(authErr.Status, gin.H{"error": authErr.Message})\n            c.Abort()\n            return\n        }\n\n        // Armazene o token no contexto para uso gen\xe9rico (Store token in context for generic use)\n        c.Set("auth", token)\n        c.Next()\n    }\n}\n'})})}const p=Object.freeze({gin:(0,o.jsx)((function(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(u,{...e})}):u(e)}),{}),fiber:(0,o.jsx)((function(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}),{}),echo:(0,o.jsx)((function(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}),{}),chi:(0,o.jsx)((function(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(c,{...e})}):c(e)}),{})}),h=[];function m(e){const n={a:"a",code:"code",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsxs)(n.p,{children:["Utilizamos ",(0,o.jsx)(n.a,{href:"https://github.com/lestrrat-go/jwx",children:"github.com/lestrrat-go/jwx"})," para validar JWTs. Instale-o caso ainda n\xe3o tenha feito isso:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"go mod init seu-projeto\ngo get github.com/lestrrat-go/jwx/v3\n"})}),"\n",(0,o.jsxs)(n.p,{children:["Primeiro, adicione estes componentes compartilhados ao seu ",(0,o.jsx)(n.code,{children:"auth_middleware.go"}),":"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-go",metastring:'title="auth_middleware.go"',children:'import (\n    "context"\n    "strings"\n    "time"\n\n    "github.com/lestrrat-go/jwx/v3/jwk"\n    "github.com/lestrrat-go/jwx/v3/jwt"\n)\n\nvar jwkSet jwk.Set\n\nfunc init() {\n    // Inicializa o cache do JWKS\n    ctx, cancel := context.WithTimeout(context.Background(), 10*time.Second)\n    defer cancel()\n\n    var err error\n    jwkSet, err = jwk.Fetch(ctx, JWKS_URI)\n    if err != nil {\n        panic("Falha ao buscar JWKS: " + err.Error())\n    }\n}\n\n// validateJWT valida o JWT e retorna o token analisado\nfunc validateJWT(tokenString string) (jwt.Token, error) {\n    token, err := jwt.Parse([]byte(tokenString), jwt.WithKeySet(jwkSet))\n    if err != nil {\n        return nil, NewAuthorizationError("Token inv\xe1lido: "+err.Error(), http.StatusUnauthorized)\n    }\n\n    // Verifica o emissor\n    if token.Issuer() != ISSUER {\n        return nil, NewAuthorizationError("Emissor inv\xe1lido", http.StatusUnauthorized)\n    }\n\n    if err := verifyPayload(token); err != nil {\n        return nil, err\n    }\n\n    return token, nil\n}\n\n// Fun\xe7\xf5es auxiliares para extrair dados do token\nfunc getStringClaim(token jwt.Token, key string) string {\n    if val, ok := token.Get(key); ok {\n        if str, ok := val.(string); ok {\n            return str\n        }\n    }\n    return ""\n}\n\nfunc getScopesFromToken(token jwt.Token) []string {\n    if val, ok := token.Get("scope"); ok {\n        if scope, ok := val.(string); ok && scope != "" {\n            return strings.Split(scope, " ")\n        }\n    }\n    return []string{}\n}\n\nfunc getAudienceFromToken(token jwt.Token) []string {\n    return token.Audience()\n}\n'})}),"\n",(0,o.jsx)(n.p,{children:"Em seguida, implemente o middleware para verificar o token de acesso:"}),"\n",e.framework?p[e.framework]:(0,o.jsx)(i.A,{groupId:"api-framework",children:Object.entries(p).map((([e,n])=>(0,o.jsx)(s.A,{value:e,label:(0,a.My)(e),children:n},e)))}),"\n",(0,o.jsxs)(n.p,{children:["De acordo com seu modelo de permiss\xe3o, pode ser necess\xe1rio adotar uma l\xf3gica diferente para ",(0,o.jsx)(n.code,{children:"verifyPayload"}),":"]}),"\n",(0,o.jsxs)(i.A,{groupId:"permission-models",children:[(0,o.jsx)(s.A,{value:"global-api-resources",label:"Recursos globais de API",children:(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-go",metastring:'title="auth_middleware.go"',children:'func verifyPayload(token jwt.Token) error {\n    // Verifica se a reivindica\xe7\xe3o de p\xfablico corresponde ao seu indicador de recurso de API\n    if !hasAudience(token, "https://your-api-resource-indicator") {\n        return NewAuthorizationError("P\xfablico inv\xe1lido")\n    }\n\n    // Verifica os escopos necess\xe1rios para recursos globais de API\n    requiredScopes := []string{"api:read", "api:write"} // Substitua pelos escopos necess\xe1rios\n    if !hasRequiredScopes(token, requiredScopes) {\n        return NewAuthorizationError("Escopo insuficiente")\n    }\n\n    return nil\n}\n'})})}),(0,o.jsx)(s.A,{value:"organization-permissions",label:"Permiss\xf5es de organiza\xe7\xe3o (n\xe3o-API)",children:(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-go",metastring:'title="auth_middleware.go"',children:'func verifyPayload(token jwt.Token) error {\n    // Verifica se a reivindica\xe7\xe3o de p\xfablico corresponde ao formato de organiza\xe7\xe3o\n    if !hasOrganizationAudience(token) {\n        return NewAuthorizationError("P\xfablico inv\xe1lido para permiss\xf5es de organiza\xe7\xe3o")\n    }\n\n    // Verifica se o ID da organiza\xe7\xe3o corresponde ao contexto (voc\xea pode precisar extrair isso do contexto da requisi\xe7\xe3o)\n    expectedOrgID := "your-organization-id" // Extraia do contexto da requisi\xe7\xe3o\n    if !hasMatchingOrganization(token, expectedOrgID) {\n        return NewAuthorizationError("ID da organiza\xe7\xe3o n\xe3o corresponde")\n    }\n\n    // Verifica os escopos necess\xe1rios da organiza\xe7\xe3o\n    requiredScopes := []string{"invite:users", "manage:settings"} // Substitua pelos escopos necess\xe1rios\n    if !hasRequiredScopes(token, requiredScopes) {\n        return NewAuthorizationError("Escopo de organiza\xe7\xe3o insuficiente")\n    }\n\n    return nil\n}\n'})})}),(0,o.jsx)(s.A,{value:"organization-level-api-resources",label:"Recursos de API em n\xedvel de organiza\xe7\xe3o",children:(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-go",metastring:'title="auth_middleware.go"',children:'func verifyPayload(token jwt.Token) error {\n    // Verifica se a reivindica\xe7\xe3o de p\xfablico corresponde ao seu indicador de recurso de API\n    if !hasAudience(token, "https://your-api-resource-indicator") {\n        return NewAuthorizationError("P\xfablico inv\xe1lido para recursos de API em n\xedvel de organiza\xe7\xe3o")\n    }\n\n    // Verifica se o ID da organiza\xe7\xe3o corresponde ao contexto (voc\xea pode precisar extrair isso do contexto da requisi\xe7\xe3o)\n    expectedOrgID := "your-organization-id" // Extraia do contexto da requisi\xe7\xe3o\n    if !hasMatchingOrganizationID(token, expectedOrgID) {\n        return NewAuthorizationError("ID da organiza\xe7\xe3o n\xe3o corresponde")\n    }\n\n    // Verifica os escopos necess\xe1rios para recursos de API em n\xedvel de organiza\xe7\xe3o\n    requiredScopes := []string{"api:read", "api:write"} // Substitua pelos escopos necess\xe1rios\n    if !hasRequiredScopes(token, requiredScopes) {\n        return NewAuthorizationError("Escopos de API em n\xedvel de organiza\xe7\xe3o insuficientes")\n    }\n\n    return nil\n}\n'})})})]}),"\n",(0,o.jsx)(n.p,{children:"Adicione estas fun\xe7\xf5es auxiliares para verifica\xe7\xe3o do payload:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-go",metastring:'title="auth_middleware.go"',children:'// hasAudience verifica se o token possui o p\xfablico especificado\nfunc hasAudience(token jwt.Token, expectedAud string) bool {\n    audiences := token.Audience()\n    for _, aud := range audiences {\n        if aud == expectedAud {\n            return true\n        }\n    }\n    return false\n}\n\n// hasOrganizationAudience verifica se o token possui formato de p\xfablico de organiza\xe7\xe3o\nfunc hasOrganizationAudience(token jwt.Token) bool {\n    audiences := token.Audience()\n    for _, aud := range audiences {\n        if strings.HasPrefix(aud, "urn:logto:organization:") {\n            return true\n        }\n    }\n    return false\n}\n\n// hasRequiredScopes verifica se o token possui todos os escopos necess\xe1rios\nfunc hasRequiredScopes(token jwt.Token, requiredScopes []string) bool {\n    scopes := getScopesFromToken(token)\n    for _, required := range requiredScopes {\n        found := false\n        for _, scope := range scopes {\n            if scope == required {\n                found = true\n                break\n            }\n        }\n        if !found {\n            return false\n        }\n    }\n    return true\n}\n\n// hasMatchingOrganization verifica se o p\xfablico do token corresponde \xe0 organiza\xe7\xe3o esperada\nfunc hasMatchingOrganization(token jwt.Token, expectedOrgID string) bool {\n    expectedAud := fmt.Sprintf("urn:logto:organization:%s", expectedOrgID)\n    return hasAudience(token, expectedAud)\n}\n\n// hasMatchingOrganizationID verifica se o organization_id do token corresponde ao esperado\nfunc hasMatchingOrganizationID(token jwt.Token, expectedOrgID string) bool {\n    orgID := getStringClaim(token, "organization_id")\n    return orgID == expectedOrgID\n}\n'})})]})}function g(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(m,{...e})}):m(e)}},23207:(e,n,r)=>{r.d(n,{Ay:()=>i,RM:()=>a});var o=r(25105),t=r(79621);const a=[];function s(e){const n={code:"code",pre:"pre",...(0,t.R)(),...e.components};return(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-go",metastring:'title="auth_middleware.go"',children:'package main\n\nimport (\n    "fmt"\n    "net/http"\n    "strings"\n)\n\nconst (\n    JWKS_URI = "https://your-tenant.logto.app/oidc/jwks"\n    ISSUER   = "https://your-tenant.logto.app/oidc"\n)\n\ntype AuthorizationError struct {\n    Message string\n    Status  int\n}\n\nfunc (e *AuthorizationError) Error() string {\n    return e.Message\n}\n\nfunc NewAuthorizationError(message string, status ...int) *AuthorizationError {\n    statusCode := http.StatusForbidden // Padr\xe3o para 403 Proibido\n    if len(status) > 0 {\n        statusCode = status[0]\n    }\n    return &AuthorizationError{\n        Message: message,\n        Status:  statusCode,\n    }\n}\n\nfunc extractBearerTokenFromHeaders(r *http.Request) (string, error) {\n    const bearerPrefix = "Bearer "\n\n    authorization := r.Header.Get("Authorization")\n    if authorization == "" {\n        return "", NewAuthorizationError("Cabe\xe7alho Authorization est\xe1 ausente", http.StatusUnauthorized)\n    }\n\n    if !strings.HasPrefix(authorization, bearerPrefix) {\n        return "", NewAuthorizationError(fmt.Sprintf("O cabe\xe7alho Authorization deve come\xe7ar com \\"%s\\"", bearerPrefix), http.StatusUnauthorized)\n    }\n\n    return strings.TrimPrefix(authorization, bearerPrefix), nil\n}\n'})})}function i(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(s,{...e})}):s(e)}},17479:(e,n,r)=>{r.d(n,{Ay:()=>i,RM:()=>a});var o=r(25105),t=r(79621);const a=[];function s(e){const n={code:"code",p:"p",pre:"pre",strong:"strong",...(0,t.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-go",metastring:'title="main.go"',children:'package main\n\nimport (\n    "encoding/json"\n    "net/http"\n\n    "github.com/go-chi/chi/v5"\n    "github.com/lestrrat-go/jwx/v3/jwt"\n)\n\nfunc main() {\n    r := chi.NewRouter()\n\n    // Aplicar middleware \xe0s rotas protegidas\n    r.With(VerifyAccessToken).Get("/api/protected", func(w http.ResponseWriter, r *http.Request) {\n        // Informa\xe7\xf5es do token de acesso diretamente do contexto\n        tokenInterface := r.Context().Value(AuthContextKey)\n        if tokenInterface == nil {\n            w.Header().Set("Content-Type", "application/json")\n            w.WriteHeader(http.StatusInternalServerError)\n            json.NewEncoder(w).Encode(map[string]string{"error": "Token n\xe3o encontrado"})\n            return\n        }\n\n        token := tokenInterface.(jwt.Token)\n\n        w.Header().Set("Content-Type", "application/json")\n        json.NewEncoder(w).Encode(map[string]interface{}{\n            "sub":             token.Subject(),\n            "client_id":       getStringClaim(token, "client_id"),\n            "organization_id": getStringClaim(token, "organization_id"),\n            "scopes":          getScopesFromToken(token),\n            "audience":        getAudienceFromToken(token),\n        })\n    })\n\n    http.ListenAndServe(":8080", r)\n}\n'})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Ou usando grupos de rotas:"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-go",metastring:'title="main.go"',children:'package main\n\nimport (\n    "encoding/json"\n    "net/http"\n\n    "github.com/go-chi/chi/v5"\n    "github.com/lestrrat-go/jwx/v3/jwt"\n)\n\nfunc main() {\n    r := chi.NewRouter()\n\n    // Criar grupo de rotas protegidas\n    r.Route("/api", func(r chi.Router) {\n        r.Use(VerifyAccessToken)\n        r.Get("/protected", func(w http.ResponseWriter, r *http.Request) {\n            // Informa\xe7\xf5es do token de acesso diretamente do contexto\n            token := r.Context().Value(AuthContextKey).(jwt.Token)\n\n            w.Header().Set("Content-Type", "application/json")\n            json.NewEncoder(w).Encode(map[string]interface{}{\n                "sub":             token.Subject(),\n                "client_id":       getStringClaim(token, "client_id"),\n                "organization_id": getStringClaim(token, "organization_id"),\n                "scopes":          getScopesFromToken(token),\n                "audience":        getAudienceFromToken(token),\n                "message":         "Dados protegidos acessados com sucesso",\n            })\n        })\n    })\n\n    http.ListenAndServe(":8080", r)\n}\n'})})]})}function i(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(s,{...e})}):s(e)}},32910:(e,n,r)=>{r.d(n,{Ay:()=>i,RM:()=>a});var o=r(25105),t=r(79621);const a=[];function s(e){const n={code:"code",p:"p",pre:"pre",strong:"strong",...(0,t.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-go",metastring:'title="main.go"',children:'package main\n\nimport (\n    "net/http"\n\n    "github.com/labstack/echo/v4"\n    "github.com/lestrrat-go/jwx/v3/jwt"\n)\n\nfunc main() {\n    e := echo.New()\n\n    // Aplicar middleware \xe0s rotas protegidas\n    e.GET("/api/protected", func(c echo.Context) error {\n        // Informa\xe7\xf5es do token de acesso diretamente do contexto\n        tokenInterface := c.Get("auth")\n        if tokenInterface == nil {\n            return c.JSON(http.StatusInternalServerError, echo.Map{"error": "Token n\xe3o encontrado"})\n        }\n\n        token := tokenInterface.(jwt.Token)\n\n        return c.JSON(http.StatusOK, echo.Map{\n            "sub":             token.Subject(),\n            "client_id":       getStringClaim(token, "client_id"),\n            "organization_id": getStringClaim(token, "organization_id"),\n            "scopes":          getScopesFromToken(token),\n            "audience":        getAudienceFromToken(token),\n        })\n    }, VerifyAccessToken)\n\n    e.Start(":8080")\n}\n'})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Ou usando grupos de rotas:"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-go",metastring:'title="main.go"',children:'package main\n\nimport (\n    "github.com/labstack/echo/v4"\n    "github.com/lestrrat-go/jwx/v3/jwt"\n)\n\nfunc main() {\n    e := echo.New()\n\n    // Criar grupo de rotas protegidas\n    api := e.Group("/api", VerifyAccessToken)\n    api.GET("/protected", func(c echo.Context) error {\n        // Informa\xe7\xf5es do token de acesso diretamente do contexto\n        token := c.Get("auth").(jwt.Token)\n\n        return c.JSON(200, echo.Map{\n            "sub":             token.Subject(),\n            "client_id":       getStringClaim(token, "client_id"),\n            "organization_id": getStringClaim(token, "organization_id"),\n            "scopes":          getScopesFromToken(token),\n            "audience":        getAudienceFromToken(token),\n            "message":         "Dados protegidos acessados com sucesso",\n        })\n    })\n\n    e.Start(":8080")\n}\n'})})]})}function i(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(s,{...e})}):s(e)}},62763:(e,n,r)=>{r.d(n,{Ay:()=>i,RM:()=>a});var o=r(25105),t=r(79621);const a=[];function s(e){const n={code:"code",p:"p",pre:"pre",strong:"strong",...(0,t.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-go",metastring:'title="main.go"',children:'package main\n\nimport (\n    "github.com/gofiber/fiber/v2"\n    "github.com/lestrrat-go/jwx/v3/jwt"\n)\n\nfunc main() {\n    app := fiber.New()\n\n    // Aplique o middleware \xe0s rotas protegidas\n    app.Get("/api/protected", VerifyAccessToken, func(c *fiber.Ctx) error {\n        // Informa\xe7\xf5es do token de acesso diretamente dos locals\n        tokenInterface := c.Locals("auth")\n        if tokenInterface == nil {\n            return c.Status(fiber.StatusInternalServerError).JSON(fiber.Map{"error": "Token n\xe3o encontrado"})\n        }\n\n        token := tokenInterface.(jwt.Token)\n\n        return c.JSON(fiber.Map{\n            "sub":             token.Subject(),\n            "client_id":       getStringClaim(token, "client_id"),\n            "organization_id": getStringClaim(token, "organization_id"),\n            "scopes":          getScopesFromToken(token),\n            "audience":        getAudienceFromToken(token),\n        })\n    })\n\n    app.Listen(":8080")\n}\n'})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Ou usando grupos de rotas:"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-go",metastring:'title="main.go"',children:'package main\n\nimport (\n    "github.com/gofiber/fiber/v2"\n    "github.com/lestrrat-go/jwx/v3/jwt"\n)\n\nfunc main() {\n    app := fiber.New()\n\n    // Crie um grupo de rotas protegidas\n    api := app.Group("/api", VerifyAccessToken)\n    api.Get("/protected", func(c *fiber.Ctx) error {\n        // Informa\xe7\xf5es do token de acesso diretamente dos locals\n        token := c.Locals("auth").(jwt.Token)\n\n        return c.JSON(fiber.Map{\n            "sub":             token.Subject(),\n            "client_id":       getStringClaim(token, "client_id"),\n            "organization_id": getStringClaim(token, "organization_id"),\n            "scopes":          getScopesFromToken(token),\n            "audience":        getAudienceFromToken(token),\n            "message":         "Dados protegidos acessados com sucesso",\n        })\n    })\n\n    app.Listen(":8080")\n}\n'})})]})}function i(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(s,{...e})}):s(e)}},5575:(e,n,r)=>{r.d(n,{Ay:()=>i,RM:()=>a});var o=r(25105),t=r(79621);const a=[];function s(e){const n={code:"code",pre:"pre",...(0,t.R)(),...e.components};return(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-go",metastring:'title="main.go"',children:'package main\n\nimport (\n    "net/http"\n\n    "github.com/gin-gonic/gin"\n    "github.com/lestrrat-go/jwx/v3/jwt"\n)\n\nfunc main() {\n    r := gin.Default()\n\n    // Aplicar middleware \xe0s rotas protegidas\n    r.GET("/api/protected", VerifyAccessToken(), func(c *gin.Context) {\n        // Informa\xe7\xf5es do token de acesso diretamente do contexto\n        tokenInterface, exists := c.Get("auth")\n        if !exists {\n            c.JSON(http.StatusInternalServerError, gin.H{"error": "Token n\xe3o encontrado"})\n            return\n        }\n\n        token := tokenInterface.(jwt.Token)\n\n        c.JSON(http.StatusOK, gin.H{\n            "sub":             token.Subject(),\n            "client_id":       getStringClaim(token, "client_id"),\n            "organization_id": getStringClaim(token, "organization_id"),\n            "scopes":          getScopesFromToken(token),\n            "audience":        getAudienceFromToken(token),\n        })\n    })\n\n    r.Run(":8080")\n}\n'})})}function i(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(s,{...e})}):s(e)}},78221:(e,n,r)=>{r.d(n,{Ay:()=>g,RM:()=>h});var o=r(25105),t=r(79621),a=r(33435),s=r(38552),i=r(22002);function c(e){const n={code:"code",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsxs)(n.p,{children:["Adicione ao seu ",(0,o.jsx)(n.code,{children:"pom.xml"}),":"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-xml",children:"<dependency>\n    <groupId>io.micronaut.security</groupId>\n    <artifactId>micronaut-security-jwt</artifactId>\n</dependency>\n<dependency>\n    <groupId>io.micronaut</groupId>\n    <artifactId>micronaut-http-server-netty</artifactId>\n</dependency>\n"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",metastring:'title="application.yml"',children:"micronaut:\n  security:\n    authentication: bearer\n    token:\n      jwt:\n        signatures:\n          jwks:\n            logto:\n              url: ${JWKS_URI:https://your-tenant.logto.app/oidc/jwks}\n        claims-validators:\n          issuer: ${JWT_ISSUER:https://your-tenant.logto.app/oidc}\n"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-java",metastring:'title="JwtClaimsValidator.java"',children:'import io.micronaut.security.token.Claims;\nimport io.micronaut.security.token.validator.TokenValidator;\nimport jakarta.inject.Singleton;\nimport org.reactivestreams.Publisher;\nimport reactor.core.publisher.Mono;\nimport java.util.Arrays;\nimport java.util.List;\n\n@Singleton\npublic class JwtClaimsValidator implements TokenValidator {\n\n    @Override\n    public Publisher<Boolean> validateToken(String token, Claims claims) {\n        try {\n            verifyPayload(claims);\n            return Mono.just(true);\n        } catch (AuthorizationException e) {\n            // O Micronaut ir\xe1 lidar com o c\xf3digo de status adequadamente\n            return Mono.just(false);\n        }\n    }\n\n    private void verifyPayload(Claims claims) {\n        // A valida\xe7\xe3o do emissor (Issuer) \xe9 tratada automaticamente pela configura\xe7\xe3o JWT do Micronaut\n        // Implemente aqui sua l\xf3gica adicional de verifica\xe7\xe3o baseada no modelo de permiss\xe3o\n        // Use os m\xe9todos auxiliares abaixo para extra\xe7\xe3o de reivindica\xe7\xf5es (claims)\n\n        // Exemplo: throw new AuthorizationException("Permiss\xf5es insuficientes");\n    }\n\n    // M\xe9todos auxiliares para JWT no Micronaut\n    @SuppressWarnings("unchecked")\n    private List<String> extractAudiences(Claims claims) {\n        Object aud = claims.get("aud");\n        if (aud instanceof List) {\n            return (List<String>) aud;\n        } else if (aud instanceof String) {\n            return Arrays.asList((String) aud);\n        }\n        return List.of();\n    }\n\n    private String extractScopes(Claims claims) {\n        return (String) claims.get("scope");\n    }\n\n    private String extractOrganizationId(Claims claims) {\n        return (String) claims.get("organization_id");\n    }\n}\n'})})]})}function d(e){const n={code:"code",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsxs)(n.p,{children:["Adicione ao seu ",(0,o.jsx)(n.code,{children:"pom.xml"}),":"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-xml",children:"<dependency>\n    <groupId>io.quarkus</groupId>\n    <artifactId>quarkus-smallrye-jwt</artifactId>\n</dependency>\n<dependency>\n    <groupId>io.quarkus</groupId>\n    <artifactId>quarkus-resteasy-reactive</artifactId>\n</dependency>\n"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-properties",metastring:'title="application.properties"',children:"# Configura\xe7\xe3o do JWT\nmp.jwt.verify.publickey.location=${JWKS_URI:https://your-tenant.logto.app/oidc/jwks}\nmp.jwt.verify.issuer=${JWT_ISSUER:https://your-tenant.logto.app/oidc}\n"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-java",metastring:'title="JwtVerificationFilter.java"',children:'import org.eclipse.microprofile.jwt.JsonWebToken;\nimport jakarta.enterprise.context.ApplicationScoped;\nimport jakarta.inject.Inject;\nimport jakarta.ws.rs.container.ContainerRequestContext;\nimport jakarta.ws.rs.container.ContainerRequestFilter;\nimport jakarta.ws.rs.core.Response;\nimport jakarta.ws.rs.ext.Provider;\nimport java.util.ArrayList;\nimport java.util.List;\n\n@Provider\n@ApplicationScoped\npublic class JwtVerificationFilter implements ContainerRequestFilter {\n\n    @Inject\n    JsonWebToken jwt;\n\n    @Override\n    public void filter(ContainerRequestContext requestContext) {\n        if (requestContext.getUriInfo().getPath().startsWith("/api/protected")) {\n            try {\n                verifyPayload(jwt);\n                requestContext.setProperty("auth", jwt);\n            } catch (AuthorizationException e) {\n                requestContext.abortWith(\n                    Response.status(e.getStatusCode())\n                        .entity("{\\"error\\": \\"" + e.getMessage() + "\\"}")\n                        .build()\n                );\n            } catch (Exception e) {\n                requestContext.abortWith(\n                    Response.status(401)\n                        .entity("{\\"error\\": \\"Token inv\xe1lido\\"}")\n                        .build()\n                );\n            }\n        }\n    }\n\n    private void verifyPayload(JsonWebToken jwt) {\n        // A valida\xe7\xe3o do emissor (Issuer) \xe9 feita automaticamente pela extens\xe3o Quarkus JWT\n        // Implemente aqui sua l\xf3gica adicional de verifica\xe7\xe3o com base no modelo de permiss\xe3o\n        // Use os m\xe9todos auxiliares abaixo para extra\xe7\xe3o de reivindica\xe7\xf5es (claims)\n    }\n\n    // M\xe9todos auxiliares para Quarkus JWT\n    private List<String> extractAudiences(JsonWebToken jwt) {\n        return new ArrayList<>(jwt.getAudience());\n    }\n\n    private String extractScopes(JsonWebToken jwt) {\n        return jwt.getClaim("scope");\n    }\n\n    private String extractOrganizationId(JsonWebToken jwt) {\n        return jwt.getClaim("organization_id");\n    }\n}\n'})})]})}function l(e){const n={code:"code",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsxs)(n.p,{children:["Adicione ao seu ",(0,o.jsx)(n.code,{children:"pom.xml"}),":"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-xml",children:"<dependency>\n    <groupId>org.springframework.boot</groupId>\n    <artifactId>spring-boot-starter-security</artifactId>\n</dependency>\n<dependency>\n    <groupId>org.springframework.security</groupId>\n    <artifactId>spring-security-oauth2-resource-server</artifactId>\n</dependency>\n<dependency>\n    <groupId>org.springframework.security</groupId>\n    <artifactId>spring-security-oauth2-jose</artifactId>\n</dependency>\n"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-java",metastring:'title="JwtSecurityConfig.java"',children:'import org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.security.config.annotation.web.builders.HttpSecurity;\nimport org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;\nimport org.springframework.security.oauth2.jwt.JwtDecoder;\nimport org.springframework.security.oauth2.jwt.NimbusJwtDecoder;\nimport org.springframework.security.web.SecurityFilterChain;\n\n@Configuration\n@EnableWebSecurity\npublic class JwtSecurityConfig {\n\n    @Bean\n    public SecurityFilterChain filterChain(HttpSecurity http) throws Exception {\n        http\n            .authorizeHttpRequests(authz -> authz\n                .requestMatchers("/api/protected/**").authenticated()\n                .anyRequest().permitAll()\n            )\n            .oauth2ResourceServer(oauth2 -> oauth2\n                .jwt(jwt -> jwt.decoder(jwtDecoder()))\n            );\n        return http.build();\n    }\n\n    @Bean\n    public JwtDecoder jwtDecoder() {\n        // Lembre-se de definir essas vari\xe1veis de ambiente em seu ambiente de implanta\xe7\xe3o\n        String jwksUri = System.getenv("JWKS_URI");\n        String issuer = System.getenv("JWT_ISSUER");\n\n        return NimbusJwtDecoder.withJwkSetUri(jwksUri)\n            .issuer(issuer)\n            .build();\n    }\n}\n'})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-java",metastring:'title="JwtValidator.java"',children:'import org.springframework.security.oauth2.jwt.Jwt;\nimport org.springframework.stereotype.Component;\nimport java.util.List;\n\n@Component\npublic class JwtValidator {\n\n    public void verifyPayload(Jwt jwt) {\n        // A valida\xe7\xe3o do emissor (Issuer) \xe9 tratada automaticamente pelo decodificador JWT do Spring Security\n        // Implemente aqui sua l\xf3gica adicional de verifica\xe7\xe3o com base no modelo de permiss\xe3o\n        // Use os m\xe9todos auxiliares abaixo para extra\xe7\xe3o de reivindica\xe7\xf5es (claims)\n\n        // Exemplo: throw new AuthorizationException("Permiss\xf5es insuficientes");\n        // O c\xf3digo de status ser\xe1 tratado pelo tratamento de exce\xe7\xf5es do Spring Security\n    }\n\n    // M\xe9todos auxiliares para JWT no Spring Boot\n    private List<String> extractAudiences(Jwt jwt) {\n        return jwt.getAudience();\n    }\n\n    private String extractScopes(Jwt jwt) {\n        return jwt.getClaimAsString("scope");\n    }\n\n    private String extractOrganizationId(Jwt jwt) {\n        return jwt.getClaimAsString("organization_id");\n    }\n}\n'})})]})}function u(e){const n={code:"code",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsxs)(n.p,{children:["Adicione ao seu ",(0,o.jsx)(n.code,{children:"pom.xml"}),":"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-xml",children:"<dependency>\n    <groupId>io.vertx</groupId>\n    <artifactId>vertx-web</artifactId>\n</dependency>\n<dependency>\n    <groupId>io.vertx</groupId>\n    <artifactId>vertx-auth-jwt</artifactId>\n</dependency>\n<dependency>\n    <groupId>io.vertx</groupId>\n    <artifactId>vertx-web-client</artifactId>\n</dependency>\n"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-java",metastring:'title="JwtAuthHandler.java"',children:'import io.vertx.core.Future;\nimport io.vertx.core.Handler;\nimport io.vertx.core.Vertx;\nimport io.vertx.core.json.JsonArray;\nimport io.vertx.core.json.JsonObject;\nimport io.vertx.ext.auth.jwt.JWTAuth;\nimport io.vertx.ext.auth.jwt.JWTAuthOptions;\nimport io.vertx.ext.web.RoutingContext;\nimport io.vertx.ext.web.client.WebClient;\nimport java.util.List;\nimport java.util.ArrayList;\n\npublic class JwtAuthHandler implements Handler<RoutingContext> {\n\n    private final JWTAuth jwtAuth;\n    private final WebClient webClient;\n    private final String expectedIssuer;\n    private final String jwksUri;\n\n    public JwtAuthHandler(Vertx vertx) {\n        this.webClient = WebClient.create(vertx);\n        this.jwtAuth = JWTAuth.create(vertx, new JWTAuthOptions());\n\n        // Lembre-se de definir essas vari\xe1veis de ambiente em seu deployment\n        this.expectedIssuer = System.getenv("JWT_ISSUER");\n        this.jwksUri = System.getenv("JWKS_URI");\n\n        // Buscar JWKS e configurar autentica\xe7\xe3o JWT\n        fetchJWKS().onSuccess(jwks -> {\n            // Configurar JWKS (simplificado - talvez voc\xea precise de um parser JWKS adequado)\n        });\n    }\n\n    @Override\n    public void handle(RoutingContext context) {\n        String authHeader = context.request().getHeader("Authorization");\n        if (authHeader == null || !authHeader.startsWith("Bearer ")) {\n            context.response()\n                .setStatusCode(401)\n                .putHeader("Content-Type", "application/json")\n                .end("{\\"error\\": \\"Authorization header missing or invalid\\"}");\n            return;\n        }\n\n        String token = authHeader.substring(7);\n        jwtAuth.authenticate(new JsonObject().put("jwt", token))\n            .onSuccess(user -> {\n                try {\n                    JsonObject principal = user.principal();\n                    verifyPayload(principal);\n                    context.put("auth", principal);\n                    context.next();\n                } catch (AuthorizationException e) {\n                    context.response()\n                        .setStatusCode(e.getStatusCode())  // Usar o status code da exce\xe7\xe3o\n                        .putHeader("Content-Type", "application/json")\n                        .end("{\\"error\\": \\"" + e.getMessage() + "\\"}");\n                } catch (Exception e) {\n                    context.response()\n                        .setStatusCode(401)\n                        .putHeader("Content-Type", "application/json")\n                        .end("{\\"error\\": \\"Invalid token\\"}");\n                }\n            })\n            .onFailure(err -> {\n                context.response()\n                    .setStatusCode(401)\n                    .putHeader("Content-Type", "application/json")\n                    .end("{\\"error\\": \\"Invalid token: " + err.getMessage() + "\\"}");\n            });\n    }\n\n    private Future<JsonObject> fetchJWKS() {\n        return webClient.getAbs(this.jwksUri)\n            .send()\n            .map(response -> response.bodyAsJsonObject());\n    }\n\n    private void verifyPayload(JsonObject principal) {\n        // Verificar emissor manualmente para Vert.x\n        String issuer = principal.getString("iss");\n        if (issuer == null || !expectedIssuer.equals(issuer)) {\n            throw new AuthorizationException("Invalid issuer: " + issuer);\n        }\n\n        // Implemente aqui sua l\xf3gica adicional de verifica\xe7\xe3o baseada no modelo de permiss\xe3o\n        // Use os m\xe9todos auxiliares abaixo para extra\xe7\xe3o de reivindica\xe7\xf5es\n    }\n\n    // M\xe9todos auxiliares para JWT no Vert.x\n    private List<String> extractAudiences(JsonObject principal) {\n        JsonArray audiences = principal.getJsonArray("aud");\n        if (audiences != null) {\n            List<String> result = new ArrayList<>();\n            for (Object aud : audiences) {\n                result.add(aud.toString());\n            }\n            return result;\n        }\n        return List.of();\n    }\n\n    private String extractScopes(JsonObject principal) {\n        return principal.getString("scope");\n    }\n\n    private String extractOrganizationId(JsonObject principal) {\n        return principal.getString("organization_id");\n    }\n}\n'})})]})}const p=Object.freeze({"spring-boot":(0,o.jsx)((function(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}),{}),quarkus:(0,o.jsx)((function(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}),{}),micronaut:(0,o.jsx)((function(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(c,{...e})}):c(e)}),{}),"vertx-web":(0,o.jsx)((function(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(u,{...e})}):u(e)}),{})}),h=[];function m(e){const n={code:"code",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.p,{children:"Utilizamos diferentes bibliotecas JWT dependendo do framework. Instale as depend\xeancias necess\xe1rias:"}),"\n",e.framework?p[e.framework]:(0,o.jsx)(i.A,{groupId:"api-framework",children:Object.entries(p).map((([e,n])=>(0,o.jsx)(s.A,{value:e,label:(0,a.My)(e),children:n},e)))}),"\n",(0,o.jsx)(n.p,{children:"De acordo com seu modelo de permiss\xe3o, implemente a l\xf3gica de verifica\xe7\xe3o apropriada:"}),"\n",(0,o.jsxs)(i.A,{groupId:"permission-models",children:[(0,o.jsx)(s.A,{value:"global-api-resources",label:"Recursos globais de API",children:(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-java",children:'// Verifique se a reivindica\xe7\xe3o de p\xfablico corresponde ao seu indicador de recurso de API\nList<String> audiences = extractAudiences(token); // Extra\xe7\xe3o espec\xedfica do framework\nif (!audiences.contains("https://your-api-resource-indicator")) {\n    throw new AuthorizationException("P\xfablico inv\xe1lido");\n}\n\n// Verifique os escopos necess\xe1rios para recursos globais de API\nList<String> requiredScopes = Arrays.asList("api:read", "api:write"); // Substitua pelos seus escopos necess\xe1rios\nString scopes = extractScopes(token); // Extra\xe7\xe3o espec\xedfica do framework\nList<String> tokenScopes = scopes != null ? Arrays.asList(scopes.split(" ")) : List.of();\n\nif (!tokenScopes.containsAll(requiredScopes)) {\n    throw new AuthorizationException("Escopo insuficiente");\n}\n'})})}),(0,o.jsx)(s.A,{value:"organization-permissions",label:"Permiss\xf5es de organiza\xe7\xe3o (n\xe3o-API)",children:(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-java",children:'// Verifique se a reivindica\xe7\xe3o de p\xfablico corresponde ao formato da organiza\xe7\xe3o\nList<String> audiences = extractAudiences(token); // Extra\xe7\xe3o espec\xedfica do framework\nboolean hasOrgAudience = audiences.stream()\n    .anyMatch(aud -> aud.startsWith("urn:logto:organization:"));\n\nif (!hasOrgAudience) {\n    throw new AuthorizationException("P\xfablico inv\xe1lido para permiss\xf5es de organiza\xe7\xe3o");\n}\n\n// Verifique se o ID da organiza\xe7\xe3o corresponde ao contexto (voc\xea pode precisar extrair isso do contexto da requisi\xe7\xe3o)\nString expectedOrgId = "your-organization-id"; // Extraia do contexto da requisi\xe7\xe3o\nString expectedAud = "urn:logto:organization:" + expectedOrgId;\nif (!audiences.contains(expectedAud)) {\n    throw new AuthorizationException("ID da organiza\xe7\xe3o n\xe3o corresponde");\n}\n\n// Verifique os escopos necess\xe1rios da organiza\xe7\xe3o\nList<String> requiredScopes = Arrays.asList("invite:users", "manage:settings"); // Substitua pelos seus escopos necess\xe1rios\nString scopes = extractScopes(token); // Extra\xe7\xe3o espec\xedfica do framework\nList<String> tokenScopes = scopes != null ? Arrays.asList(scopes.split(" ")) : List.of();\n\nif (!tokenScopes.containsAll(requiredScopes)) {\n    throw new AuthorizationException("Escopo de organiza\xe7\xe3o insuficiente");\n}\n'})})}),(0,o.jsx)(s.A,{value:"organization-level-api-resources",label:"Recursos de API em n\xedvel de organiza\xe7\xe3o",children:(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-java",children:'// Verifique se a reivindica\xe7\xe3o de p\xfablico corresponde ao seu indicador de recurso de API\nList<String> audiences = extractAudiences(token); // Extra\xe7\xe3o espec\xedfica do framework\nif (!audiences.contains("https://your-api-resource-indicator")) {\n    throw new AuthorizationException("P\xfablico inv\xe1lido para recursos de API em n\xedvel de organiza\xe7\xe3o");\n}\n\n// Verifique se o ID da organiza\xe7\xe3o corresponde ao contexto (voc\xea pode precisar extrair isso do contexto da requisi\xe7\xe3o)\nString expectedOrgId = "your-organization-id"; // Extraia do contexto da requisi\xe7\xe3o\nString orgId = extractOrganizationId(token); // Extra\xe7\xe3o espec\xedfica do framework\nif (!expectedOrgId.equals(orgId)) {\n    throw new AuthorizationException("ID da organiza\xe7\xe3o n\xe3o corresponde");\n}\n\n// Verifique os escopos necess\xe1rios para recursos de API em n\xedvel de organiza\xe7\xe3o\nList<String> requiredScopes = Arrays.asList("api:read", "api:write"); // Substitua pelos seus escopos necess\xe1rios\nString scopes = extractScopes(token); // Extra\xe7\xe3o espec\xedfica do framework\nList<String> tokenScopes = scopes != null ? Arrays.asList(scopes.split(" ")) : List.of();\n\nif (!tokenScopes.containsAll(requiredScopes)) {\n    throw new AuthorizationException("Escopos de API em n\xedvel de organiza\xe7\xe3o insuficientes");\n}\n'})})})]}),"\n",(0,o.jsx)(n.p,{children:"Os m\xe9todos auxiliares para extra\xe7\xe3o de reivindica\xe7\xf5es s\xe3o espec\xedficos de cada framework. Veja os detalhes da implementa\xe7\xe3o nos arquivos de valida\xe7\xe3o espec\xedficos do framework acima."})]})}function g(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(m,{...e})}):m(e)}},52429:(e,n,r)=>{r.d(n,{Ay:()=>i,RM:()=>a});var o=r(25105),t=r(79621);const a=[];function s(e){const n={code:"code",pre:"pre",...(0,t.R)(),...e.components};return(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-java",metastring:'title="AuthorizationException.java"',children:"public class AuthorizationException extends RuntimeException {\n    private final int statusCode;\n\n    public AuthorizationException(String message) {\n        this(message, 403); // Padr\xe3o para 403 Proibido (Forbidden)\n    }\n\n    public AuthorizationException(String message, int statusCode) {\n        super(message);\n        this.statusCode = statusCode;\n    }\n\n    public int getStatusCode() {\n        return statusCode;\n    }\n}\n"})})}function i(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(s,{...e})}):s(e)}},64487:(e,n,r)=>{r.d(n,{Ay:()=>i,RM:()=>a});var o=r(25105),t=r(79621);const a=[];function s(e){const n={code:"code",pre:"pre",...(0,t.R)(),...e.components};return(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-java",metastring:'title="ProtectedController.java"',children:'import io.micronaut.http.annotation.Controller;\nimport io.micronaut.http.annotation.Get;\nimport io.micronaut.security.annotation.Secured;\nimport io.micronaut.security.authentication.Authentication;\nimport io.micronaut.security.rules.SecurityRule;\nimport java.util.Arrays;\nimport java.util.List;\nimport java.util.Map;\n\n@Controller("/api")\n@Secured(SecurityRule.IS_AUTHENTICATED)\npublic class ProtectedController {\n\n    @Get("/protected")\n    public Map<String, Object> protectedEndpoint(Authentication authentication) {\n        // Informa\xe7\xf5es do token de acesso (Access token) diretamente da autentica\xe7\xe3o (Authentication)\n        String scopes = (String) authentication.getAttributes().get("scope");\n        List<String> scopeList = scopes != null ? Arrays.asList(scopes.split(" ")) : List.of();\n\n        return Map.of(\n            "sub", authentication.getName(),\n            "client_id", authentication.getAttributes().get("client_id"),\n            "organization_id", authentication.getAttributes().get("organization_id"),\n            "scopes", scopeList,\n            "audience", authentication.getAttributes().get("aud")\n        );\n    }\n}\n'})})}function i(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(s,{...e})}):s(e)}},42305:(e,n,r)=>{r.d(n,{Ay:()=>i,RM:()=>a});var o=r(25105),t=r(79621);const a=[];function s(e){const n={code:"code",pre:"pre",...(0,t.R)(),...e.components};return(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-java",metastring:'title="ProtectedResource.java"',children:'import org.eclipse.microprofile.jwt.JsonWebToken;\nimport jakarta.inject.Inject;\nimport jakarta.ws.rs.GET;\nimport jakarta.ws.rs.Path;\nimport jakarta.ws.rs.Produces;\nimport jakarta.ws.rs.core.MediaType;\nimport jakarta.ws.rs.core.Context;\nimport jakarta.ws.rs.container.ContainerRequestContext;\nimport java.util.Arrays;\nimport java.util.List;\nimport java.util.Map;\n\n@Path("/api")\npublic class ProtectedResource {\n\n    @Inject\n    JsonWebToken jwt;\n\n    @GET\n    @Path("/protected")\n    @Produces(MediaType.APPLICATION_JSON)\n    public Map<String, Object> protectedEndpoint(@Context ContainerRequestContext requestContext) {\n        // Acessa o JWT diretamente da inje\xe7\xe3o ou do contexto\n        JsonWebToken token = (JsonWebToken) requestContext.getProperty("auth");\n        if (token == null) {\n            token = jwt; // Alternativa para o JWT injetado\n        }\n\n        String scopes = token.getClaim("scope");\n        List<String> scopeList = scopes != null ? Arrays.asList(scopes.split(" ")) : List.of();\n\n        return Map.of(\n            "sub", token.getSubject(),\n            "client_id", token.<String>getClaim("client_id"),\n            "organization_id", token.<String>getClaim("organization_id"),\n            "scopes", scopeList,\n            "audience", token.getAudience()\n        );\n    }\n}\n'})})}function i(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(s,{...e})}):s(e)}},40019:(e,n,r)=>{r.d(n,{Ay:()=>i,RM:()=>a});var o=r(25105),t=r(79621);const a=[];function s(e){const n={code:"code",pre:"pre",...(0,t.R)(),...e.components};return(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-java",metastring:'title="ProtectedController.java"',children:'import org.springframework.security.core.annotation.AuthenticationPrincipal;\nimport org.springframework.security.oauth2.jwt.Jwt;\nimport org.springframework.web.bind.annotation.GetMapping;\nimport org.springframework.web.bind.annotation.RestController;\nimport java.util.Arrays;\nimport java.util.List;\nimport java.util.Map;\n\n@RestController\npublic class ProtectedController {\n\n    @GetMapping("/api/protected")\n    public Map<String, Object> protectedEndpoint(@AuthenticationPrincipal Jwt jwt) {\n        // Informa\xe7\xf5es do token de acesso diretamente do JWT\n        String scopes = jwt.getClaimAsString("scope");\n        List<String> scopeList = scopes != null ? Arrays.asList(scopes.split(" ")) : List.of();\n\n        return Map.of(\n            "sub", jwt.getSubject(),\n            "client_id", jwt.getClaimAsString("client_id"),\n            "organization_id", jwt.getClaimAsString("organization_id"),\n            "scopes", scopeList,\n            "audience", jwt.getAudience()\n        );\n    }\n}\n'})})}function i(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(s,{...e})}):s(e)}},13261:(e,n,r)=>{r.d(n,{Ay:()=>i,RM:()=>a});var o=r(25105),t=r(79621);const a=[];function s(e){const n={code:"code",pre:"pre",...(0,t.R)(),...e.components};return(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-java",metastring:'title="MainVerticle.java"',children:'import io.vertx.core.AbstractVerticle;\nimport io.vertx.core.Promise;\nimport io.vertx.core.json.JsonObject;\nimport io.vertx.ext.web.Router;\nimport io.vertx.ext.web.RoutingContext;\n\npublic class MainVerticle extends AbstractVerticle {\n\n    @Override\n    public void start(Promise<Void> startPromise) throws Exception {\n        Router router = Router.router(vertx);\n\n        // Aplicar middleware \xe0s rotas protegidas\n        router.route("/api/protected*").handler(new JwtAuthHandler(vertx));\n        router.get("/api/protected").handler(this::protectedEndpoint);\n\n        vertx.createHttpServer()\n            .requestHandler(router)\n            .listen(8080, result -> {\n                if (result.succeeded()) {\n                    startPromise.complete();\n                } else {\n                    startPromise.fail(result.cause());\n                }\n            });\n    }\n\n    private void protectedEndpoint(RoutingContext context) {\n        // Acessar o principal do JWT diretamente do contexto\n        JsonObject principal = context.get("auth");\n        if (principal == null) {\n            context.response()\n                .setStatusCode(500)\n                .putHeader("Content-Type", "application/json")\n                .end("{\\"error\\": \\"Principal do JWT n\xe3o encontrado\\"}");\n            return;\n        }\n\n        String scopes = principal.getString("scope");\n        JsonObject response = new JsonObject()\n            .put("sub", principal.getString("sub"))\n            .put("client_id", principal.getString("client_id"))\n            .put("organization_id", principal.getString("organization_id"))\n            .put("scopes", scopes != null ? scopes.split(" ") : new String[0])\n            .put("audience", principal.getJsonArray("aud"));\n\n        context.response()\n            .putHeader("Content-Type", "application/json")\n            .end(response.encode());\n    }\n}\n'})})}function i(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(s,{...e})}):s(e)}},86927:(e,n,r)=>{r.d(n,{Ay:()=>x,RM:()=>m});var o=r(25105),t=r(79621),a=r(33435),s=r(38552),i=r(22002);function c(e){const n={code:"code",pre:"pre",...(0,t.R)(),...e.components};return(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-ts",metastring:'title="auth-middleware.ts"',children:"import { Request, Response, NextFunction } from 'express';\nimport { validateJwt, createAuthInfo } from './jwt-validator.js';\n\n// Estende a interface Request do Express para incluir auth\ndeclare global {\n  namespace Express {\n    interface Request {\n      auth?: AuthInfo;\n    }\n  }\n}\n\nexport async function verifyAccessToken(req: Request, res: Response, next: NextFunction) {\n  try {\n    const token = extractBearerTokenFromHeaders(req.headers);\n    const payload = await validateJwt(token);\n\n    // Armazena as informa\xe7\xf5es de autentica\xe7\xe3o na requisi\xe7\xe3o para uso gen\xe9rico\n    req.auth = createAuthInfo(payload);\n\n    next();\n  } catch (err: any) {\n    return res.status(err.status ?? 401).json({ error: err.message });\n  }\n}\n"})})}function d(e){const n={code:"code",pre:"pre",...(0,t.R)(),...e.components};return(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-ts",metastring:'title="auth-middleware.ts"',children:"import { FastifyRequest, FastifyReply } from 'fastify';\nimport { validateJwt, createAuthInfo } from './jwt-validator.js';\n\n// Estende a interface Fastify Request para incluir auth\ndeclare module 'fastify' {\n  interface FastifyRequest {\n    auth?: AuthInfo;\n  }\n}\n\nexport async function fastifyVerifyAccessToken(request: FastifyRequest, reply: FastifyReply) {\n  try {\n    const token = extractBearerTokenFromHeaders(request.headers);\n    const payload = await validateJwt(token);\n\n    // Armazena as informa\xe7\xf5es de autentica\xe7\xe3o na requisi\xe7\xe3o para uso gen\xe9rico\n    request.auth = createAuthInfo(payload);\n  } catch (err: any) {\n    reply.code(err.status ?? 401).send({ error: err.message });\n  }\n}\n"})})}function l(e){const n={code:"code",pre:"pre",...(0,t.R)(),...e.components};return(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-ts",metastring:'title="auth-middleware.ts"',children:"import { Request, ResponseToolkit } from '@hapi/hapi';\nimport { validateJwt, createAuthInfo } from './jwt-validator.js';\n\nexport async function hapiVerifyAccessToken(request: Request, h: ResponseToolkit) {\n  try {\n    const token = extractBearerTokenFromHeaders(request.headers);\n    const payload = await validateJwt(token);\n\n    // Armazene as informa\xe7\xf5es de autentica\xe7\xe3o em request.app para uso gen\xe9rico\n    request.app.auth = createAuthInfo(payload);\n\n    return h.continue;\n  } catch (err: any) {\n    return h\n      .response({ error: err.message })\n      .code(err.status ?? 401)\n      .takeover();\n  }\n}\n"})})}function u(e){const n={code:"code",pre:"pre",...(0,t.R)(),...e.components};return(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-ts",metastring:'title="auth-middleware.ts"',children:"import { Context, Next } from 'koa';\nimport { validateJwt, createAuthInfo } from './jwt-validator.js';\n\nexport async function koaVerifyAccessToken(ctx: Context, next: Next) {\n  try {\n    const token = extractBearerTokenFromHeaders(ctx.request.headers);\n    const payload = await validateJwt(token);\n\n    // Armazene as informa\xe7\xf5es de autentica\xe7\xe3o no state para uso gen\xe9rico\n    ctx.state.auth = createAuthInfo(payload);\n\n    await next();\n  } catch (err: any) {\n    ctx.status = err.status ?? 401;\n    ctx.body = { error: err.message };\n  }\n}\n"})})}function p(e){const n={code:"code",pre:"pre",...(0,t.R)(),...e.components};return(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-ts",metastring:'title="access-token.guard.ts"',children:"import {\n  Injectable,\n  CanActivate,\n  ExecutionContext,\n  UnauthorizedException,\n  ForbiddenException,\n} from '@nestjs/common';\nimport { validateJwt, createAuthInfo } from './jwt-validator.js';\n\n@Injectable()\nexport class AccessTokenGuard implements CanActivate {\n  async canActivate(context: ExecutionContext): Promise<boolean> {\n    const req = context.switchToHttp().getRequest();\n\n    try {\n      const token = extractBearerTokenFromHeaders(req.headers);\n      const payload = await validateJwt(token);\n\n      // Armazene as informa\xe7\xf5es de autentica\xe7\xe3o na requisi\xe7\xe3o para uso gen\xe9rico\n      req.auth = createAuthInfo(payload);\n\n      return true;\n    } catch (err: any) {\n      if (err.status === 401) throw new UnauthorizedException(err.message);\n      throw new ForbiddenException(err.message);\n    }\n  }\n}\n"})})}const h=Object.freeze({express:(0,o.jsx)((function(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(c,{...e})}):c(e)}),{}),fastify:(0,o.jsx)((function(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}),{}),hapi:(0,o.jsx)((function(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}),{}),koa:(0,o.jsx)((function(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(u,{...e})}):u(e)}),{}),nestjs:(0,o.jsx)((function(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(p,{...e})}):p(e)}),{})}),m=[];function g(e){const n={a:"a",code:"code",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsxs)(n.p,{children:["Usamos ",(0,o.jsx)(n.a,{href:"https://github.com/panva/jose",children:"jose"})," neste exemplo para validar o JWT. Instale-o se ainda n\xe3o tiver feito isso:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"npm install jose\n"})}),"\n",(0,o.jsxs)(n.p,{children:["Ou utilize seu gerenciador de pacotes preferido (por exemplo, ",(0,o.jsx)(n.code,{children:"pnpm"})," ou ",(0,o.jsx)(n.code,{children:"yarn"}),")."]}),"\n",(0,o.jsx)(n.p,{children:"Primeiro, adicione estas utilidades compartilhadas para lidar com a valida\xe7\xe3o do JWT:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-ts",metastring:'title="jwt-validator.ts"',children:"import { createRemoteJWKSet, jwtVerify, JWTPayload } from 'jose';\nimport { AuthInfo, AuthorizationError } from './auth-middleware.js';\n\nconst jwks = createRemoteJWKSet(new URL(JWKS_URI));\n\nexport async function validateJwt(token: string): Promise<JWTPayload> {\n  const { payload } = await jwtVerify(token, jwks, {\n    issuer: ISSUER,\n  });\n\n  verifyPayload(payload);\n  return payload;\n}\n\nexport function createAuthInfo(payload: JWTPayload): AuthInfo {\n  const scopes = (payload.scope as string)?.split(' ') ?? [];\n  const audience = Array.isArray(payload.aud) ? payload.aud : payload.aud ? [payload.aud] : [];\n\n  return new AuthInfo(\n    payload.sub!,\n    payload.client_id as string,\n    payload.organization_id as string,\n    scopes,\n    audience\n  );\n}\n\nfunction verifyPayload(payload: JWTPayload): void {\n  // Implemente sua l\xf3gica de verifica\xe7\xe3o aqui com base no modelo de permiss\xe3o\n  // Isso ser\xe1 mostrado na se\xe7\xe3o de modelos de permiss\xe3o abaixo\n}\n"})}),"\n",(0,o.jsx)(n.p,{children:"Em seguida, implemente o middleware para verificar o token de acesso (access token):"}),"\n",e.framework?h[e.framework]:(0,o.jsx)(i.A,{groupId:"api-framework",children:Object.entries(h).map((([e,n])=>(0,o.jsx)(s.A,{value:e,label:(0,a.My)(e),children:n},e)))}),"\n",(0,o.jsxs)(n.p,{children:["De acordo com seu modelo de permiss\xe3o, implemente a l\xf3gica de verifica\xe7\xe3o apropriada em ",(0,o.jsx)(n.code,{children:"jwt-validator.ts"}),":"]}),"\n",(0,o.jsxs)(i.A,{groupId:"permission-models",children:[(0,o.jsx)(s.A,{value:"global-api-resources",label:"Recursos globais de API",children:(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-ts",metastring:'title="jwt-validator.ts"',children:"function verifyPayload(payload: JWTPayload): void {\n  // Verifique se a reivindica\xe7\xe3o de p\xfablico (audience) corresponde ao seu indicador de recurso de API\n  const audiences = Array.isArray(payload.aud) ? payload.aud : payload.aud ? [payload.aud] : [];\n  if (!audiences.includes('https://your-api-resource-indicator')) {\n    throw new AuthorizationError('P\xfablico inv\xe1lido');\n  }\n\n  // Verifique os escopos necess\xe1rios para recursos globais de API\n  const requiredScopes = ['api:read', 'api:write']; // Substitua pelos escopos realmente necess\xe1rios\n  const scopes = (payload.scope as string)?.split(' ') ?? [];\n  if (!requiredScopes.every((scope) => scopes.includes(scope))) {\n    throw new AuthorizationError('Escopo insuficiente');\n  }\n}\n"})})}),(0,o.jsx)(s.A,{value:"organization-permissions",label:"Permiss\xf5es de organiza\xe7\xe3o (n\xe3o-API)",children:(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-ts",metastring:'title="jwt-validator.ts"',children:"function verifyPayload(payload: JWTPayload): void {\n  // Verifique se a reivindica\xe7\xe3o de p\xfablico (audience) corresponde ao formato de organiza\xe7\xe3o\n  const audiences = Array.isArray(payload.aud) ? payload.aud : payload.aud ? [payload.aud] : [];\n  const hasOrgAudience = audiences.some((aud) => aud.startsWith('urn:logto:organization:'));\n\n  if (!hasOrgAudience) {\n    throw new AuthorizationError('P\xfablico inv\xe1lido para permiss\xf5es de organiza\xe7\xe3o');\n  }\n\n  // Verifique se o ID da organiza\xe7\xe3o corresponde ao contexto (voc\xea pode precisar extrair isso do contexto da requisi\xe7\xe3o)\n  const expectedOrgId = 'your-organization-id'; // Extraia do contexto da requisi\xe7\xe3o\n  const expectedAud = `urn:logto:organization:${expectedOrgId}`;\n  if (!audiences.includes(expectedAud)) {\n    throw new AuthorizationError('ID da organiza\xe7\xe3o n\xe3o corresponde');\n  }\n\n  // Verifique os escopos necess\xe1rios para a organiza\xe7\xe3o\n  const requiredScopes = ['invite:users', 'manage:settings']; // Substitua pelos escopos realmente necess\xe1rios\n  const scopes = (payload.scope as string)?.split(' ') ?? [];\n  if (!requiredScopes.every((scope) => scopes.includes(scope))) {\n    throw new AuthorizationError('Escopo de organiza\xe7\xe3o insuficiente');\n  }\n}\n"})})}),(0,o.jsx)(s.A,{value:"organization-level-api-resources",label:"Recursos de API em n\xedvel de organiza\xe7\xe3o",children:(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-ts",metastring:'title="jwt-validator.ts"',children:"function verifyPayload(payload: JWTPayload): void {\n  // Verifique se a reivindica\xe7\xe3o de p\xfablico (audience) corresponde ao seu indicador de recurso de API\n  const audiences = Array.isArray(payload.aud) ? payload.aud : payload.aud ? [payload.aud] : [];\n  if (!audiences.includes('https://your-api-resource-indicator')) {\n    throw new AuthorizationError('P\xfablico inv\xe1lido para recursos de API em n\xedvel de organiza\xe7\xe3o');\n  }\n\n  // Verifique se o ID da organiza\xe7\xe3o corresponde ao contexto (voc\xea pode precisar extrair isso do contexto da requisi\xe7\xe3o)\n  const expectedOrgId = 'your-organization-id'; // Extraia do contexto da requisi\xe7\xe3o\n  const orgId = payload.organization_id as string;\n  if (expectedOrgId !== orgId) {\n    throw new AuthorizationError('ID da organiza\xe7\xe3o n\xe3o corresponde');\n  }\n\n  // Verifique os escopos necess\xe1rios para recursos de API em n\xedvel de organiza\xe7\xe3o\n  const requiredScopes = ['api:read', 'api:write']; // Substitua pelos escopos realmente necess\xe1rios\n  const scopes = (payload.scope as string)?.split(' ') ?? [];\n  if (!requiredScopes.every((scope) => scopes.includes(scope))) {\n    throw new AuthorizationError(\n      'Escopos insuficientes para recursos de API em n\xedvel de organiza\xe7\xe3o'\n    );\n  }\n}\n"})})})]})]})}function x(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(g,{...e})}):g(e)}},34704:(e,n,r)=>{r.d(n,{Ay:()=>i,RM:()=>a});var o=r(25105),t=r(79621);const a=[];function s(e){const n={code:"code",pre:"pre",...(0,t.R)(),...e.components};return(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-ts",metastring:'title="auth-middleware.ts"',children:"import { IncomingHttpHeaders } from 'http';\n\nconst JWKS_URI = 'https://your-tenant.logto.app/oidc/jwks';\nconst ISSUER = 'https://your-tenant.logto.app/oidc';\n\nexport class AuthInfo {\n  constructor(\n    public sub: string,\n    public clientId?: string,\n    public organizationId?: string,\n    public scopes: string[] = [],\n    public audience: string[] = []\n  ) {}\n}\n\nexport class AuthorizationError extends Error {\n  name = 'AuthorizationError';\n  constructor(\n    message: string,\n    public status = 403\n  ) {\n    super(message);\n  }\n}\n\nexport function extractBearerTokenFromHeaders({ authorization }: IncomingHttpHeaders): string {\n  const bearerPrefix = 'Bearer ';\n\n  if (!authorization) {\n    throw new AuthorizationError(\n      'O cabe\xe7alho Authorization est\xe1 ausente (Authorization header is missing)',\n      401\n    );\n  }\n\n  if (!authorization.startsWith(bearerPrefix)) {\n    throw new AuthorizationError(\n      `O cabe\xe7alho Authorization deve come\xe7ar com \"${bearerPrefix}\" (Authorization header must start with \"${bearerPrefix}\")`,\n      401\n    );\n  }\n\n  return authorization.slice(bearerPrefix.length);\n}\n"})})}function i(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(s,{...e})}):s(e)}},1555:(e,n,r)=>{r.d(n,{Ay:()=>m,RM:()=>p});var o=r(25105),t=r(79621),a=r(33435),s=r(38552),i=r(22002);function c(e){const n={code:"code",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-php",metastring:'title="app/Http/Middleware/VerifyAccessToken.php"',children:"<?php\n\nnamespace App\\Http\\Middleware;\n\nuse Closure;\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Http\\Response;\n\nclass VerifyAccessToken\n{\n    use AuthHelpers;\n\n    public function handle(Request $request, Closure $next): Response\n    {\n        try {\n            $token = $this->extractBearerToken($request->headers->all());\n            $payload = JwtValidator::validateJwt($token);\n\n            // Armazene as informa\xe7\xf5es de autentica\xe7\xe3o nos atributos da requisi\xe7\xe3o para uso gen\xe9rico\n            $request->attributes->set('auth', JwtValidator::createAuthInfo($payload));\n\n            return $next($request);\n\n        } catch (AuthorizationException $e) {\n            return response()->json(['error' => $e->getMessage()], $e->statusCode);\n        }\n    }\n}\n"})}),"\n",(0,o.jsxs)(n.p,{children:["Registre o middleware em ",(0,o.jsx)(n.code,{children:"app/Http/Kernel.php"}),":"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-php",metastring:'title="app/Http/Kernel.php"',children:"protected $middlewareAliases = [\n    // ... outros middlewares\n    'auth.token' => \\App\\Http\\Middleware\\VerifyAccessToken::class,\n];\n"})})]})}function d(e){const n={code:"code",pre:"pre",...(0,t.R)(),...e.components};return(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-php",metastring:'title="src/Middleware/JwtMiddleware.php"',children:"<?php\n\nnamespace App\\Middleware;\n\nuse Psr\\Http\\Message\\ResponseInterface;\nuse Psr\\Http\\Message\\ServerRequestInterface;\nuse Psr\\Http\\Server\\MiddlewareInterface;\nuse Psr\\Http\\Server\\RequestHandlerInterface;\nuse Slim\\Psr7\\Response;\n\nclass JwtMiddleware implements MiddlewareInterface\n{\n    use AuthHelpers;\n\n    public function process(ServerRequestInterface $request, RequestHandlerInterface $handler): ResponseInterface\n    {\n        try {\n            $headers = $request->getHeaders();\n            $token = $this->extractBearerToken($headers);\n            $payload = JwtValidator::validateJwt($token);\n\n            // Armazene as informa\xe7\xf5es de autentica\xe7\xe3o nos atributos da requisi\xe7\xe3o para uso gen\xe9rico (Store auth info in request attributes for generic use)\n            $request = $request->withAttribute('auth', JwtValidator::createAuthInfo($payload));\n\n            return $handler->handle($request);\n\n        } catch (AuthorizationException $e) {\n            $response = new Response();\n            $response->getBody()->write(json_encode(['error' => $e->getMessage()]));\n            return $response\n                ->withHeader('Content-Type', 'application/json')\n                ->withStatus($e->statusCode);\n        }\n    }\n}\n"})})}function l(e){const n={code:"code",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-php",metastring:'title="src/Security/JwtAuthenticator.php"',children:"<?php\n\nnamespace App\\Security;\n\nuse Symfony\\Component\\HttpFoundation\\JsonResponse;\nuse Symfony\\Component\\HttpFoundation\\Request;\nuse Symfony\\Component\\HttpFoundation\\Response;\nuse Symfony\\Component\\Security\\Core\\Authentication\\Token\\TokenInterface;\nuse Symfony\\Component\\Security\\Core\\Exception\\AuthenticationException;\nuse Symfony\\Component\\Security\\Http\\Authenticator\\AbstractAuthenticator;\nuse Symfony\\Component\\Security\\Http\\Authenticator\\Passport\\Badge\\UserBadge;\nuse Symfony\\Component\\Security\\Http\\Authenticator\\Passport\\Passport;\nuse Symfony\\Component\\Security\\Http\\Authenticator\\Passport\\SelfValidatingPassport;\n\nclass JwtAuthenticator extends AbstractAuthenticator\n{\n    use AuthHelpers;\n\n    public function supports(Request $request): ?bool\n    {\n        return $request->headers->has('authorization');\n    }\n\n    public function authenticate(Request $request): Passport\n    {\n        try {\n            $token = $this->extractBearerToken($request->headers->all());\n            $payload = JwtValidator::validateJwt($token);\n            $authInfo = JwtValidator::createAuthInfo($payload);\n\n            // Armazene as informa\xe7\xf5es de autentica\xe7\xe3o nos atributos da requisi\xe7\xe3o para uso gen\xe9rico\n            $request->attributes->set('auth', $authInfo);\n\n            return new SelfValidatingPassport(new UserBadge($payload['sub']));\n\n        } catch (AuthorizationException $e) {\n            throw new AuthenticationException($e->getMessage());\n        }\n    }\n\n    public function onAuthenticationSuccess(Request $request, TokenInterface $token, string $firewallName): ?Response\n    {\n        return null; // Continua para o controller\n    }\n\n    public function onAuthenticationFailure(Request $request, AuthenticationException $exception): ?Response\n    {\n        return new JsonResponse(['error' => $exception->getMessage()], Response::HTTP_UNAUTHORIZED);\n    }\n}\n"})}),"\n",(0,o.jsxs)(n.p,{children:["Configure a seguran\xe7a em ",(0,o.jsx)(n.code,{children:"config/packages/security.yaml"}),":"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",metastring:'title="config/packages/security.yaml"',children:"security:\n  firewalls:\n    api:\n      pattern: ^/api/protected\n      stateless: true\n      custom_authenticators:\n        - App\\Security\\JwtAuthenticator\n"})})]})}const u=Object.freeze({laravel:(0,o.jsx)((function(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(c,{...e})}):c(e)}),{}),symfony:(0,o.jsx)((function(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}),{}),slim:(0,o.jsx)((function(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}),{})}),p=[];function h(e){const n={a:"a",code:"code",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsxs)(n.p,{children:["Usamos ",(0,o.jsx)(n.a,{href:"https://github.com/firebase/php-jwt",children:"firebase/php-jwt"})," para validar JWTs. Instale-o usando o Composer:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"composer require firebase/php-jwt\n"})}),"\n",(0,o.jsx)(n.p,{children:"Primeiro, adicione estas utilidades compartilhadas para lidar com a valida\xe7\xe3o de JWT:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-php",metastring:'title="JwtValidator.php"',children:"<?php\n\nuse Firebase\\JWT\\JWT;\nuse Firebase\\JWT\\JWK;\nuse Firebase\\JWT\\Key;\n\nclass JwtValidator\n{\n    use AuthHelpers;\n\n    private static ?array $jwks = null;\n\n    public static function fetchJwks(): array\n    {\n        if (self::$jwks === null) {\n            $jwksData = file_get_contents(AuthConstants::JWKS_URI);\n            if ($jwksData === false) {\n                throw new AuthorizationException('Falha ao buscar JWKS', 401);\n            }\n\n            self::$jwks = json_decode($jwksData, true);\n        }\n\n        return self::$jwks;\n    }\n\n    public static function validateJwt(string $token): array\n    {\n        try {\n            $jwks = self::fetchJwks();\n            $keys = JWK::parseKeySet($jwks);\n\n            $decoded = JWT::decode($token, $keys);\n            $payload = (array) $decoded;\n\n            // Verificar emissor\n            if (($payload['iss'] ?? '') !== AuthConstants::ISSUER) {\n                throw new AuthorizationException('Emissor inv\xe1lido', 401);\n            }\n\n            self::verifyPayload($payload);\n            return $payload;\n\n        } catch (AuthorizationException $e) {\n            throw $e;\n        } catch (Exception $e) {\n            throw new AuthorizationException('Token inv\xe1lido: ' . $e->getMessage(), 401);\n        }\n    }\n\n    public static function createAuthInfo(array $payload): AuthInfo\n    {\n        $scopes = !empty($payload['scope']) ? explode(' ', $payload['scope']) : [];\n        $audience = $payload['aud'] ?? [];\n\n        if (is_string($audience)) {\n            $audience = [$audience];\n        }\n\n        return new AuthInfo(\n            sub: $payload['sub'],\n            clientId: $payload['client_id'] ?? null,\n            organizationId: $payload['organization_id'] ?? null,\n            scopes: $scopes,\n            audience: $audience\n        );\n    }\n\n    private static function verifyPayload(array $payload): void\n    {\n        // Implemente sua l\xf3gica de verifica\xe7\xe3o aqui com base no modelo de permiss\xe3o\n        // Isso ser\xe1 mostrado na se\xe7\xe3o de modelos de permiss\xe3o abaixo\n    }\n}\n"})}),"\n",(0,o.jsx)(n.p,{children:"Em seguida, implemente o middleware para verificar o token de acesso:"}),"\n",e.framework?u[e.framework]:(0,o.jsx)(i.A,{groupId:"api-framework",children:Object.entries(u).map((([e,n])=>(0,o.jsx)(s.A,{value:e,label:(0,a.My)(e),children:n},e)))}),"\n",(0,o.jsxs)(n.p,{children:["De acordo com seu modelo de permiss\xe3o, implemente a l\xf3gica de verifica\xe7\xe3o apropriada em ",(0,o.jsx)(n.code,{children:"JwtValidator"}),":"]}),"\n",(0,o.jsxs)(i.A,{groupId:"permission-models",children:[(0,o.jsx)(s.A,{value:"global-api-resources",label:"Recursos globais de API",children:(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-php",metastring:'title="JwtValidator.php"',children:"private static function verifyPayload(array $payload): void\n{\n    // Verifique se a reivindica\xe7\xe3o de p\xfablico corresponde ao seu indicador de recurso de API\n    $audiences = $payload['aud'] ?? [];\n    if (is_string($audiences)) {\n        $audiences = [$audiences];\n    }\n\n    if (!in_array('https://your-api-resource-indicator', $audiences)) {\n        throw new AuthorizationException('P\xfablico inv\xe1lido');\n    }\n\n    // Verifique os escopos necess\xe1rios para recursos globais de API\n    $requiredScopes = ['api:read', 'api:write']; // Substitua pelos escopos realmente necess\xe1rios\n    $scopes = !empty($payload['scope']) ? explode(' ', $payload['scope']) : [];\n\n    foreach ($requiredScopes as $scope) {\n        if (!in_array($scope, $scopes)) {\n            throw new AuthorizationException('Escopo insuficiente');\n        }\n    }\n}\n"})})}),(0,o.jsx)(s.A,{value:"organization-permissions",label:"Permiss\xf5es de organiza\xe7\xe3o (n\xe3o-API)",children:(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-php",metastring:'title="JwtValidator.php"',children:"private static function verifyPayload(array $payload): void\n{\n    // Verifique se a reivindica\xe7\xe3o de p\xfablico corresponde ao formato da organiza\xe7\xe3o\n    $audiences = $payload['aud'] ?? [];\n    if (is_string($audiences)) {\n        $audiences = [$audiences];\n    }\n\n    $hasOrgAudience = false;\n    foreach ($audiences as $aud) {\n        if (str_starts_with($aud, 'urn:logto:organization:')) {\n            $hasOrgAudience = true;\n            break;\n        }\n    }\n\n    if (!$hasOrgAudience) {\n        throw new AuthorizationException('P\xfablico inv\xe1lido para permiss\xf5es de organiza\xe7\xe3o');\n    }\n\n    // Verifique se o ID da organiza\xe7\xe3o corresponde ao contexto (voc\xea pode precisar extrair isso do contexto da requisi\xe7\xe3o)\n    $expectedOrgId = 'your-organization-id'; // Extraia do contexto da requisi\xe7\xe3o\n    $expectedAud = \"urn:logto:organization:{$expectedOrgId}\";\n    if (!in_array($expectedAud, $audiences)) {\n        throw new AuthorizationException('ID da organiza\xe7\xe3o n\xe3o corresponde');\n    }\n\n    // Verifique os escopos necess\xe1rios da organiza\xe7\xe3o\n    $requiredScopes = ['invite:users', 'manage:settings']; // Substitua pelos escopos realmente necess\xe1rios\n    $scopes = !empty($payload['scope']) ? explode(' ', $payload['scope']) : [];\n\n    foreach ($requiredScopes as $scope) {\n        if (!in_array($scope, $scopes)) {\n            throw new AuthorizationException('Escopo de organiza\xe7\xe3o insuficiente');\n        }\n    }\n}\n"})})}),(0,o.jsx)(s.A,{value:"organization-level-api-resources",label:"Recursos de API em n\xedvel de organiza\xe7\xe3o",children:(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-php",metastring:'title="JwtValidator.php"',children:"private static function verifyPayload(array $payload): void\n{\n    // Verifique se a reivindica\xe7\xe3o de p\xfablico corresponde ao seu indicador de recurso de API\n    $audiences = $payload['aud'] ?? [];\n    if (is_string($audiences)) {\n        $audiences = [$audiences];\n    }\n\n    if (!in_array('https://your-api-resource-indicator', $audiences)) {\n        throw new AuthorizationException('P\xfablico inv\xe1lido para recursos de API em n\xedvel de organiza\xe7\xe3o');\n    }\n\n    // Verifique se o ID da organiza\xe7\xe3o corresponde ao contexto (voc\xea pode precisar extrair isso do contexto da requisi\xe7\xe3o)\n    $expectedOrgId = 'your-organization-id'; // Extraia do contexto da requisi\xe7\xe3o\n    $orgId = $payload['organization_id'] ?? null;\n    if ($expectedOrgId !== $orgId) {\n        throw new AuthorizationException('ID da organiza\xe7\xe3o n\xe3o corresponde');\n    }\n\n    // Verifique os escopos necess\xe1rios para recursos de API em n\xedvel de organiza\xe7\xe3o\n    $requiredScopes = ['api:read', 'api:write']; // Substitua pelos escopos realmente necess\xe1rios\n    $scopes = !empty($payload['scope']) ? explode(' ', $payload['scope']) : [];\n\n    foreach ($requiredScopes as $scope) {\n        if (!in_array($scope, $scopes)) {\n            throw new AuthorizationException('Escopos de API em n\xedvel de organiza\xe7\xe3o insuficientes');\n        }\n    }\n}\n"})})})]})]})}function m(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(h,{...e})}):h(e)}},12457:(e,n,r)=>{r.d(n,{Ay:()=>i,RM:()=>a});var o=r(25105),t=r(79621);const a=[];function s(e){const n={code:"code",pre:"pre",...(0,t.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-php",metastring:'title="AuthConstants.php"',children:"<?php\n\nclass AuthConstants\n{\n    public const JWKS_URI = 'https://your-tenant.logto.app/oidc/jwks';\n    public const ISSUER = 'https://your-tenant.logto.app/oidc';\n}\n"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-php",metastring:'title="AuthInfo.php"',children:"<?php\n\nclass AuthInfo\n{\n    public function __construct(\n        public readonly string $sub,\n        public readonly ?string $clientId = null,\n        public readonly ?string $organizationId = null,\n        public readonly array $scopes = [],\n        public readonly array $audience = []\n    ) {}\n\n    public function toArray(): array\n    {\n        return [\n            'sub' => $this->sub,\n            'client_id' => $this->clientId,\n            'organization_id' => $this->organizationId,\n            'scopes' => $this->scopes,\n            'audience' => $this->audience,\n        ];\n    }\n}\n"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-php",metastring:'title="AuthorizationException.php"',children:"<?php\n\nclass AuthorizationException extends Exception\n{\n    public function __construct(\n        string $message,\n        public readonly int $statusCode = 403\n    ) {\n        parent::__construct($message);\n    }\n}\n"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-php",metastring:'title="AuthHelpers.php"',children:"<?php\n\ntrait AuthHelpers\n{\n    protected function extractBearerToken(array $headers): string\n    {\n        $authorization = $headers['authorization'][0] ?? $headers['Authorization'][0] ?? null;\n\n        if (!$authorization) {\n            throw new AuthorizationException('O cabe\xe7alho de autoriza\xe7\xe3o est\xe1 ausente (Authorization header is missing)', 401);\n        }\n\n        if (!str_starts_with($authorization, 'Bearer ')) {\n            throw new AuthorizationException('O cabe\xe7alho de autoriza\xe7\xe3o deve come\xe7ar com \"Bearer \" (Authorization header must start with \"Bearer \")', 401);\n        }\n\n        return substr($authorization, 7); // Remove o prefixo 'Bearer ' (Remove 'Bearer ' prefix)\n    }\n}\n"})})]})}function i(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(s,{...e})}):s(e)}},29770:(e,n,r)=>{r.d(n,{Ay:()=>i,RM:()=>a});var o=r(25105),t=r(79621);const a=[];function s(e){const n={code:"code",p:"p",pre:"pre",strong:"strong",...(0,t.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-php",metastring:'title="routes/api.php"',children:"<?php\n\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Support\\Facades\\Route;\n\nRoute::middleware('auth.token')->group(function () {\n    Route::get('/api/protected', function (Request $request) {\n        // Acesse as informa\xe7\xf5es de autentica\xe7\xe3o a partir dos atributos da requisi\xe7\xe3o\n        $auth = $request->attributes->get('auth');\n        return ['auth' => $auth->toArray()];\n    });\n});\n"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Ou usando controllers:"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-php",metastring:'title="app/Http/Controllers/Api/ProtectedController.php"',children:"<?php\n\nnamespace App\\Http\\Controllers\\Api;\n\nuse App\\Http\\Controllers\\Controller;\nuse Illuminate\\Http\\Request;\n\nclass ProtectedController extends Controller\n{\n    public function __construct()\n    {\n        $this->middleware('auth.token');\n    }\n\n    public function index(Request $request)\n    {\n        // Acesse as informa\xe7\xf5es de autentica\xe7\xe3o a partir dos atributos da requisi\xe7\xe3o\n        $auth = $request->attributes->get('auth');\n        return ['auth' => $auth->toArray()];\n    }\n\n    public function show(Request $request)\n    {\n        // Sua l\xf3gica de endpoint protegido\n        $auth = $request->attributes->get('auth');\n        return [\n            'auth' => $auth->toArray(),\n            'message' => 'Dados protegidos acessados com sucesso'\n        ];\n    }\n}\n"})})]})}function i(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(s,{...e})}):s(e)}},47824:(e,n,r)=>{r.d(n,{Ay:()=>i,RM:()=>a});var o=r(25105),t=r(79621);const a=[];function s(e){const n={code:"code",pre:"pre",...(0,t.R)(),...e.components};return(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-php",metastring:'title="src/Controllers/ProtectedController.php"',children:"<?php\n\nnamespace App\\Controllers;\n\nuse Psr\\Http\\Message\\ResponseInterface as Response;\nuse Psr\\Http\\Message\\ServerRequestInterface as Request;\n\nclass ProtectedController\n{\n    public function index(Request $request, Response $response): Response\n    {\n        // Acesse as informa\xe7\xf5es de autentica\xe7\xe3o a partir dos atributos da requisi\xe7\xe3o\n        $auth = $request->getAttribute('auth');\n        $response->getBody()->write(json_encode(['auth' => $auth->toArray()]));\n        return $response->withHeader('Content-Type', 'application/json');\n    }\n\n    public function detailed(Request $request, Response $response): Response\n    {\n        // Sua l\xf3gica de endpoint protegido\n        $auth = $request->getAttribute('auth');\n        $data = [\n            'auth' => $auth->toArray(),\n            'message' => 'Dados protegidos acessados com sucesso'\n        ];\n        $response->getBody()->write(json_encode($data));\n        return $response->withHeader('Content-Type', 'application/json');\n    }\n}\n"})})}function i(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(s,{...e})}):s(e)}},94186:(e,n,r)=>{r.d(n,{Ay:()=>i,RM:()=>a});var o=r(25105),t=r(79621);const a=[];function s(e){const n={code:"code",pre:"pre",...(0,t.R)(),...e.components};return(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-php",metastring:'title="src/Controller/Api/ProtectedController.php"',children:"<?php\n\nnamespace App\\Controller\\Api;\n\nuse Symfony\\Bundle\\FrameworkBundle\\Controller\\AbstractController;\nuse Symfony\\Component\\HttpFoundation\\JsonResponse;\nuse Symfony\\Component\\HttpFoundation\\Request;\nuse Symfony\\Component\\Routing\\Annotation\\Route;\nuse Symfony\\Component\\Security\\Http\\Attribute\\IsGranted;\n\n#[Route('/api/protected')]\n#[IsGranted('IS_AUTHENTICATED_FULLY')]\nclass ProtectedController extends AbstractController\n{\n    #[Route('', methods: ['GET'])]\n    public function index(Request $request): JsonResponse\n    {\n        // Acesse as informa\xe7\xf5es de autentica\xe7\xe3o a partir dos atributos da requisi\xe7\xe3o\n        $auth = $request->attributes->get('auth');\n        return $this->json(['auth' => $auth->toArray()]);\n    }\n}\n"})})}function i(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(s,{...e})}):s(e)}},82042:(e,n,r)=>{r.d(n,{Ay:()=>m,RM:()=>p});var o=r(25105),t=r(79621),a=r(33435),s=r(38552),i=r(22002);function c(e){const n={code:"code",pre:"pre",...(0,t.R)(),...e.components};return(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-py",metastring:'title="auth_middleware.py"',children:"from django.http import JsonResponse\nfrom jwt_validator import validate_jwt, create_auth_info\n\ndef require_access_token(view_func):\n    def wrapper(request, *args, **kwargs):\n        try:\n            headers = {key.replace('HTTP_', '').replace('_', '-').lower(): value\n                      for key, value in request.META.items() if key.startswith('HTTP_')}\n\n            token = extract_bearer_token_from_headers(headers)\n            payload = validate_jwt(token)\n\n            # Anexar informa\xe7\xf5es de autentica\xe7\xe3o \xe0 requisi\xe7\xe3o para uso gen\xe9rico (Attach auth info to request for generic use)\n            request.auth = create_auth_info(payload)\n\n            return view_func(request, *args, **kwargs)\n\n        except AuthorizationError as e:\n            return JsonResponse({'error': str(e)}, status=e.status)\n\n    return wrapper\n"})})}function d(e){const n={code:"code",pre:"pre",...(0,t.R)(),...e.components};return(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-py",metastring:'title="auth_middleware.py"',children:"from fastapi import HTTPException, Depends\nfrom fastapi.security import HTTPBearer, HTTPAuthorizationCredentials\nfrom jwt_validator import validate_jwt, create_auth_info\n\nsecurity = HTTPBearer()\n\nasync def verify_access_token(credentials: HTTPAuthorizationCredentials = Depends(security)) -> AuthInfo:\n    try:\n        token = credentials.credentials\n        payload = validate_jwt(token)\n        return create_auth_info(payload)\n\n    except AuthorizationError as e:\n        raise HTTPException(status_code=e.status, detail=str(e))\n"})})}function l(e){const n={code:"code",pre:"pre",...(0,t.R)(),...e.components};return(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-py",metastring:'title="auth_middleware.py"',children:"from functools import wraps\nfrom flask import request, jsonify, g\nfrom jwt_validator import validate_jwt, create_auth_info\n\ndef verify_access_token(f):\n    @wraps(f)\n    def decorated_function(*args, **kwargs):\n        try:\n            token = extract_bearer_token_from_headers(dict(request.headers))\n            payload = validate_jwt(token)\n\n            # Armazene as informa\xe7\xf5es de autentica\xe7\xe3o no objeto g do Flask para uso gen\xe9rico\n            g.auth = create_auth_info(payload)\n\n            return f(*args, **kwargs)\n\n        except AuthorizationError as e:\n            return jsonify({'error': str(e)}), e.status\n\n    return decorated_function\n"})})}const u=Object.freeze({django:(0,o.jsx)((function(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(c,{...e})}):c(e)}),{}),fastapi:(0,o.jsx)((function(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}),{}),flask:(0,o.jsx)((function(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}),{})}),p=[];function h(e){const n={a:"a",code:"code",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsxs)(n.p,{children:["Utilizamos o ",(0,o.jsx)(n.a,{href:"https://github.com/jpadilla/pyjwt",children:"PyJWT"})," para validar JWTs. Instale-o caso ainda n\xe3o tenha feito isso:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"pip install pyjwt[crypto]\n"})}),"\n",(0,o.jsx)(n.p,{children:"Primeiro, adicione estas utilidades compartilhadas para lidar com a valida\xe7\xe3o de JWT:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-py",metastring:'title="jwt_validator.py"',children:"import jwt\nfrom jwt import PyJWKClient\nfrom typing import Dict, Any\nfrom auth_middleware import AuthInfo, AuthorizationError, JWKS_URI, ISSUER\n\njwks_client = PyJWKClient(JWKS_URI)\n\ndef validate_jwt(token: str) -> Dict[str, Any]:\n    \"\"\"Validar JWT e retornar o payload\"\"\"\n    try:\n        signing_key = jwks_client.get_signing_key_from_jwt(token)\n\n        payload = jwt.decode(\n            token,\n            signing_key.key,\n            algorithms=['RS256'],\n            issuer=ISSUER,\n            options={'verify_aud': False}  # Vamos verificar o p\xfablico manualmente\n        )\n\n        verify_payload(payload)\n        return payload\n\n    except jwt.InvalidTokenError as e:\n        raise AuthorizationError(f'Token inv\xe1lido: {str(e)}', 401)\n    except Exception as e:\n        raise AuthorizationError(f'Falha na valida\xe7\xe3o do token: {str(e)}', 401)\n\ndef create_auth_info(payload: Dict[str, Any]) -> AuthInfo:\n    \"\"\"Criar AuthInfo a partir do payload do JWT\"\"\"\n    scopes = payload.get('scope', '').split(' ') if payload.get('scope') else []\n    audience = payload.get('aud', [])\n    if isinstance(audience, str):\n        audience = [audience]\n\n    return AuthInfo(\n        sub=payload.get('sub'),\n        client_id=payload.get('client_id'),\n        organization_id=payload.get('organization_id'),\n        scopes=scopes,\n        audience=audience\n    )\n\ndef verify_payload(payload: Dict[str, Any]) -> None:\n    \"\"\"Verificar payload com base no modelo de permiss\xe3o\"\"\"\n    # Implemente sua l\xf3gica de verifica\xe7\xe3o aqui com base no modelo de permiss\xe3o\n    # Isso ser\xe1 mostrado na se\xe7\xe3o de modelos de permiss\xe3o abaixo\n    pass\n"})}),"\n",(0,o.jsx)(n.p,{children:"Em seguida, implemente o middleware para verificar o token de acesso:"}),"\n",e.framework?u[e.framework]:(0,o.jsx)(i.A,{groupId:"api-framework",children:Object.entries(u).map((([e,n])=>(0,o.jsx)(s.A,{value:e,label:(0,a.My)(e),children:n},e)))}),"\n",(0,o.jsxs)(n.p,{children:["De acordo com seu modelo de permiss\xe3o, implemente a l\xf3gica de verifica\xe7\xe3o apropriada em ",(0,o.jsx)(n.code,{children:"jwt_validator.py"}),":"]}),"\n",(0,o.jsxs)(i.A,{groupId:"permission-models",children:[(0,o.jsx)(s.A,{value:"global-api-resources",label:"Recursos globais de API",children:(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-py",metastring:'title="jwt_validator.py"',children:"def verify_payload(payload: Dict[str, Any]) -> None:\n    \"\"\"Verificar payload para recursos globais de API\"\"\"\n    # Verifique se a reivindica\xe7\xe3o de p\xfablico corresponde ao seu indicador de recurso de API\n    audiences = payload.get('aud', [])\n    if isinstance(audiences, str):\n        audiences = [audiences]\n\n    if 'https://your-api-resource-indicator' not in audiences:\n        raise AuthorizationError('P\xfablico inv\xe1lido')\n\n    # Verifique os escopos necess\xe1rios para recursos globais de API\n    required_scopes = ['api:read', 'api:write']  # Substitua pelos escopos realmente necess\xe1rios\n    scopes = payload.get('scope', '').split(' ') if payload.get('scope') else []\n    if not all(scope in scopes for scope in required_scopes):\n        raise AuthorizationError('Escopo insuficiente')\n"})})}),(0,o.jsx)(s.A,{value:"organization-permissions",label:"Permiss\xf5es de organiza\xe7\xe3o (n\xe3o-API)",children:(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-py",metastring:'title="jwt_validator.py"',children:"def verify_payload(payload: Dict[str, Any]) -> None:\n    \"\"\"Verificar payload para permiss\xf5es de organiza\xe7\xe3o\"\"\"\n    # Verifique se a reivindica\xe7\xe3o de p\xfablico corresponde ao formato da organiza\xe7\xe3o\n    audiences = payload.get('aud', [])\n    if isinstance(audiences, str):\n        audiences = [audiences]\n\n    has_org_audience = any(aud.startswith('urn:logto:organization:') for aud in audiences)\n    if not has_org_audience:\n        raise AuthorizationError('P\xfablico inv\xe1lido para permiss\xf5es de organiza\xe7\xe3o')\n\n    # Verifique se o ID da organiza\xe7\xe3o corresponde ao contexto (voc\xea pode precisar extrair isso do contexto da requisi\xe7\xe3o)\n    expected_org_id = 'your-organization-id'  # Extraia do contexto da requisi\xe7\xe3o\n    expected_aud = f'urn:logto:organization:{expected_org_id}'\n    if expected_aud not in audiences:\n        raise AuthorizationError('ID da organiza\xe7\xe3o n\xe3o corresponde')\n\n    # Verifique os escopos necess\xe1rios da organiza\xe7\xe3o\n    required_scopes = ['invite:users', 'manage:settings']  # Substitua pelos escopos realmente necess\xe1rios\n    scopes = payload.get('scope', '').split(' ') if payload.get('scope') else []\n    if not all(scope in scopes for scope in required_scopes):\n        raise AuthorizationError('Escopo de organiza\xe7\xe3o insuficiente')\n"})})}),(0,o.jsx)(s.A,{value:"organization-level-api-resources",label:"Recursos de API em n\xedvel de organiza\xe7\xe3o",children:(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-py",metastring:'title="jwt_validator.py"',children:"def verify_payload(payload: Dict[str, Any]) -> None:\n    \"\"\"Verificar payload para recursos de API em n\xedvel de organiza\xe7\xe3o\"\"\"\n    # Verifique se a reivindica\xe7\xe3o de p\xfablico corresponde ao seu indicador de recurso de API\n    audiences = payload.get('aud', [])\n    if isinstance(audiences, str):\n        audiences = [audiences]\n\n    if 'https://your-api-resource-indicator' not in audiences:\n        raise AuthorizationError('P\xfablico inv\xe1lido para recursos de API em n\xedvel de organiza\xe7\xe3o')\n\n    # Verifique se o ID da organiza\xe7\xe3o corresponde ao contexto (voc\xea pode precisar extrair isso do contexto da requisi\xe7\xe3o)\n    expected_org_id = 'your-organization-id'  # Extraia do contexto da requisi\xe7\xe3o\n    org_id = payload.get('organization_id')\n    if expected_org_id != org_id:\n        raise AuthorizationError('ID da organiza\xe7\xe3o n\xe3o corresponde')\n\n    # Verifique os escopos necess\xe1rios para recursos de API em n\xedvel de organiza\xe7\xe3o\n    required_scopes = ['api:read', 'api:write']  # Substitua pelos escopos realmente necess\xe1rios\n    scopes = payload.get('scope', '').split(' ') if payload.get('scope') else []\n    if not all(scope in scopes for scope in required_scopes):\n        raise AuthorizationError('Escopos de API em n\xedvel de organiza\xe7\xe3o insuficientes')\n"})})})]})]})}function m(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(h,{...e})}):h(e)}},18731:(e,n,r)=>{r.d(n,{Ay:()=>i,RM:()=>a});var o=r(25105),t=r(79621);const a=[];function s(e){const n={code:"code",pre:"pre",...(0,t.R)(),...e.components};return(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-py",metastring:'title="auth_middleware.py"',children:"JWKS_URI = 'https://your-tenant.logto.app/oidc/jwks'\nISSUER = 'https://your-tenant.logto.app/oidc'\n\nclass AuthInfo:\n    def __init__(self, sub: str, client_id: str = None, organization_id: str = None,\n                 scopes: list = None, audience: list = None):\n        self.sub = sub\n        self.client_id = client_id\n        self.organization_id = organization_id\n        self.scopes = scopes or []\n        self.audience = audience or []\n\n    def to_dict(self):\n        return {\n            'sub': self.sub,\n            'client_id': self.client_id,\n            'organization_id': self.organization_id,\n            'scopes': self.scopes,\n            'audience': self.audience\n        }\n\nclass AuthorizationError(Exception):\n    def __init__(self, message: str, status: int = 403):\n        self.message = message\n        self.status = status\n        super().__init__(self.message)\n\ndef extract_bearer_token_from_headers(headers: dict) -> str:\n    \"\"\"\n    Extrai o token bearer dos cabe\xe7alhos HTTP.\n\n    Observa\xe7\xe3o: FastAPI e Django REST Framework possuem extra\xe7\xe3o de token integrada,\n    ent\xe3o esta fun\xe7\xe3o \xe9 principalmente para Flask e outros frameworks.\n    \"\"\"\n    authorization = headers.get('authorization') or headers.get('Authorization')\n\n    if not authorization:\n        raise AuthorizationError('Cabe\xe7alho de autoriza\xe7\xe3o ausente', 401)\n\n    if not authorization.startswith('Bearer '):\n        raise AuthorizationError('O cabe\xe7alho de autoriza\xe7\xe3o deve come\xe7ar com \"Bearer \"', 401)\n\n    return authorization[7:]  # Remove o prefixo 'Bearer '\n"})})}function i(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(s,{...e})}):s(e)}},53017:(e,n,r)=>{r.d(n,{Ay:()=>i,RM:()=>a});var o=r(25105),t=r(79621);const a=[];function s(e){const n={code:"code",p:"p",pre:"pre",strong:"strong",...(0,t.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-py",metastring:'title="views.py"',children:"from rest_framework.decorators import api_view, authentication_classes\nfrom rest_framework.response import Response\nfrom auth_middleware import AccessTokenAuthentication\n\n@api_view(['GET'])\n@authentication_classes([AccessTokenAuthentication])\ndef protected_view(request):\n    # Acesse as informa\xe7\xf5es de autentica\xe7\xe3o a partir de request.user.auth\n    return Response({\"auth\": request.user.auth.to_dict()})\n"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Ou usando views baseadas em classe:"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-py",metastring:'title="views.py"',children:'from rest_framework.views import APIView\nfrom rest_framework.response import Response\nfrom auth_middleware import AccessTokenAuthentication\n\nclass ProtectedView(APIView):\n    authentication_classes = [AccessTokenAuthentication]\n\n    def get(self, request):\n        # Acesse as informa\xe7\xf5es de autentica\xe7\xe3o a partir de request.user.auth\n        return Response({"auth": request.user.auth.to_dict()})\n'})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-py",metastring:'title="urls.py"',children:"from django.urls import path\nfrom . import views\n\nurlpatterns = [\n    path('api/protected/', views.protected_view, name='protected'),\n    # Ou para views baseadas em classe:\n    # path('api/protected/', views.ProtectedView.as_view(), name='protected'),\n]\n"})})]})}function i(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(s,{...e})}):s(e)}},80968:(e,n,r)=>{r.d(n,{Ay:()=>i,RM:()=>a});var o=r(25105),t=r(79621);const a=[];function s(e){const n={code:"code",pre:"pre",...(0,t.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-py",metastring:'title="views.py"',children:'from django.http import JsonResponse\nfrom auth_middleware import require_access_token\n\n@require_access_token\ndef protected_view(request):\n    # Acesse as informa\xe7\xf5es de autentica\xe7\xe3o a partir de request.auth\n    return JsonResponse({"auth": request.auth.to_dict()})\n'})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-py",metastring:'title="urls.py"',children:"from django.urls import path\nfrom . import views\n\nurlpatterns = [\n    path('api/protected/', views.protected_view, name='protected'),\n]\n"})})]})}function i(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(s,{...e})}):s(e)}},91751:(e,n,r)=>{r.d(n,{Ay:()=>i,RM:()=>a});var o=r(25105),t=r(79621);const a=[];function s(e){const n={code:"code",pre:"pre",...(0,t.R)(),...e.components};return(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-py",metastring:'title="app.py"',children:'from fastapi import FastAPI, Depends\nfrom auth_middleware import verify_access_token, AuthInfo\n\napp = FastAPI()\n\n@app.get("/api/protected")\nasync def protected_endpoint(auth: AuthInfo = Depends(verify_access_token)):\n    # Acesse as informa\xe7\xf5es de autentica\xe7\xe3o diretamente do par\xe2metro auth\n    return {"auth": auth.to_dict()}\n'})})}function i(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(s,{...e})}):s(e)}},89054:(e,n,r)=>{r.d(n,{Ay:()=>i,RM:()=>a});var o=r(25105),t=r(79621);const a=[];function s(e){const n={code:"code",pre:"pre",...(0,t.R)(),...e.components};return(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-py",metastring:'title="app.py"',children:"from flask import Flask, g, jsonify\nfrom auth_middleware import verify_access_token\n\napp = Flask(__name__)\n\n@app.route('/api/protected', methods=['GET'])\n@verify_access_token\ndef protected_endpoint():\n    # Acesse as informa\xe7\xf5es de autentica\xe7\xe3o a partir de g.auth\n    return jsonify({\"auth\": g.auth.to_dict()})\n"})})}function i(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(s,{...e})}):s(e)}},67837:(e,n,r)=>{r.d(n,{Ay:()=>m,RM:()=>p});var o=r(25105),t=r(79621),a=r(33435),s=r(38552),i=r(22002);function c(e){const n={code:"code",pre:"pre",...(0,t.R)(),...e.components};return(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-ruby",metastring:'title="auth_helpers.rb"',children:"module GrapeAuthHelpers\n  include AuthHelpers\n\n  def authenticate_user!\n    begin\n      token = extract_bearer_token(request)\n      decoded_token = JwtValidator.validate_jwt(token)\n\n      # Armazene as informa\xe7\xf5es de autentica\xe7\xe3o para uso gen\xe9rico\n      @auth = JwtValidator.create_auth_info(decoded_token)\n\n    rescue AuthorizationError => e\n      error!({ error: e.message }, e.status)\n    rescue JWT::DecodeError, JWT::VerificationError, JWT::ExpiredSignature => e\n      error!({ error: 'Token inv\xe1lido' }, 401)\n    end\n  end\n\n  def auth\n    @auth\n  end\nend\n"})})}function d(e){const n={code:"code",pre:"pre",...(0,t.R)(),...e.components};return(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-ruby",metastring:'title="app/controllers/concerns/jwt_authentication.rb"',children:"module JwtAuthentication\n  extend ActiveSupport::Concern\n  include AuthHelpers\n\n  included do\n    before_action :verify_access_token, only: [:protected_action] # Adicione a\xe7\xf5es espec\xedficas\n  end\n\n  private\n\n  def verify_access_token\n    begin\n      token = extract_bearer_token(request)\n      decoded_token = JwtValidator.validate_jwt(token)\n\n      # Armazene as informa\xe7\xf5es de autentica\xe7\xe3o para uso gen\xe9rico\n      @auth = JwtValidator.create_auth_info(decoded_token)\n\n    rescue AuthorizationError => e\n      render json: { error: e.message }, status: e.status\n    rescue JWT::DecodeError, JWT::VerificationError, JWT::ExpiredSignature => e\n      render json: { error: 'Token inv\xe1lido' }, status: 401\n    end\n  end\nend\n"})})}function l(e){const n={code:"code",pre:"pre",...(0,t.R)(),...e.components};return(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-ruby",metastring:'title="auth_middleware.rb"',children:"class AuthMiddleware\n  include AuthHelpers\n\n  def initialize(app)\n    @app = app\n  end\n\n  def call(env)\n    request = Rack::Request.new(env)\n\n    # Proteger apenas rotas espec\xedficas\n    if request.path.start_with?('/api/protected')\n      begin\n        token = extract_bearer_token(request)\n        decoded_token = JwtValidator.validate_jwt(token)\n\n        # Armazenar informa\xe7\xf5es de autentica\xe7\xe3o no env para uso gen\xe9rico\n        env['auth'] = JwtValidator.create_auth_info(decoded_token)\n\n      rescue AuthorizationError => e\n        return [e.status, { 'Content-Type' => 'application/json' }, [{ error: e.message }.to_json]]\n      rescue JWT::DecodeError, JWT::VerificationError, JWT::ExpiredSignature => e\n        return [401, { 'Content-Type' => 'application/json' }, [{ error: 'Token inv\xe1lido' }.to_json]]\n      end\n    end\n\n    @app.call(env)\n  end\nend\n"})})}const u=Object.freeze({rails:(0,o.jsx)((function(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}),{}),sinatra:(0,o.jsx)((function(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}),{}),grape:(0,o.jsx)((function(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(c,{...e})}):c(e)}),{})}),p=[];function h(e){const n={a:"a",code:"code",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsxs)(n.p,{children:["Usamos a gem ",(0,o.jsx)(n.a,{href:"https://github.com/jwt/ruby-jwt",children:"jwt"})," para validar JWTs. Adicione-a ao seu Gemfile:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-ruby",metastring:'title="Gemfile"',children:"gem 'jwt'\n# net-http faz parte da biblioteca padr\xe3o do Ruby desde o Ruby 2.7, n\xe3o \xe9 necess\xe1rio adicionar explicitamente\n"})}),"\n",(0,o.jsx)(n.p,{children:"Depois, execute:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"bundle install\n"})}),"\n",(0,o.jsx)(n.p,{children:"Primeiro, adicione estas utilidades compartilhadas para lidar com JWKS e valida\xe7\xe3o de token:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-ruby",metastring:'title="jwt_validator.rb"',children:"require 'jwt'\nrequire 'net/http'\nrequire 'json'\n\nclass JwtValidator\n  include AuthHelpers\n\n  def self.fetch_jwks\n    @jwks ||= begin\n      uri = URI(AuthConstants::JWKS_URI)\n      response = Net::HTTP.get_response(uri)\n      raise AuthorizationError.new('Falha ao buscar JWKS', 401) unless response.is_a?(Net::HTTPSuccess)\n\n      jwks_data = JSON.parse(response.body)\n      JWT::JWK::Set.new(jwks_data)\n    end\n  end\n\n  def self.validate_jwt(token)\n    jwks = fetch_jwks\n\n    # Deixe a biblioteca JWT lidar com a detec\xe7\xe3o do algoritmo a partir do JWKS\n    decoded_token = JWT.decode(token, nil, true, {\n      iss: AuthConstants::ISSUER,\n      verify_iss: true,\n      verify_aud: false, # Vamos verificar o p\xfablico manualmente com base no modelo de permiss\xe3o\n      jwks: jwks\n    })[0]\n\n    verify_payload(decoded_token)\n    decoded_token\n  end\n\n  def self.create_auth_info(payload)\n    scopes = payload['scope']&.split(' ') || []\n    audience = payload['aud'] || []\n\n    AuthInfo.new(\n      payload['sub'],\n      payload['client_id'],\n      payload['organization_id'],\n      scopes,\n      audience\n    )\n  end\n\n  def self.verify_payload(payload)\n    # Implemente sua l\xf3gica de verifica\xe7\xe3o aqui com base no modelo de permiss\xe3o\n    # Isso ser\xe1 mostrado na se\xe7\xe3o de modelos de permiss\xe3o abaixo\n  end\nend\n"})}),"\n",(0,o.jsx)(n.p,{children:"Depois, implemente o middleware para verificar o token de acesso:"}),"\n",e.framework?u[e.framework]:(0,o.jsx)(i.A,{groupId:"api-framework",children:Object.entries(u).map((([e,n])=>(0,o.jsx)(s.A,{value:e,label:(0,a.My)(e),children:n},e)))}),"\n",(0,o.jsxs)(n.p,{children:["De acordo com seu modelo de permiss\xe3o, implemente a l\xf3gica de verifica\xe7\xe3o apropriada em ",(0,o.jsx)(n.code,{children:"JwtValidator"}),":"]}),"\n",(0,o.jsxs)(i.A,{groupId:"permission-models",children:[(0,o.jsx)(s.A,{value:"global-api-resources",label:"Recursos globais de API",children:(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-ruby",metastring:'title="jwt_validator.rb"',children:"def self.verify_payload(payload)\n  # Verifique se a reivindica\xe7\xe3o de p\xfablico corresponde ao seu indicador de recurso de API\n  audiences = payload['aud'] || []\n  unless audiences.include?('https://your-api-resource-indicator')\n    raise AuthorizationError.new('P\xfablico inv\xe1lido')\n  end\n\n  # Verifique os escopos necess\xe1rios para recursos globais de API\n  required_scopes = ['api:read', 'api:write'] # Substitua pelos escopos necess\xe1rios no seu caso\n  token_scopes = payload['scope']&.split(' ') || []\n\n  unless required_scopes.all? { |scope| token_scopes.include?(scope) }\n    raise AuthorizationError.new('Escopo insuficiente')\n  end\nend\n"})})}),(0,o.jsx)(s.A,{value:"organization-permissions",label:"Permiss\xf5es de organiza\xe7\xe3o (n\xe3o-API)",children:(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-ruby",metastring:'title="jwt_validator.rb"',children:"def self.verify_payload(payload)\n  # Verifique se a reivindica\xe7\xe3o de p\xfablico corresponde ao formato da organiza\xe7\xe3o\n  audiences = payload['aud'] || []\n  has_org_audience = audiences.any? { |aud| aud.start_with?('urn:logto:organization:') }\n\n  unless has_org_audience\n    raise AuthorizationError.new('P\xfablico inv\xe1lido para permiss\xf5es de organiza\xe7\xe3o')\n  end\n\n  # Verifique se o ID da organiza\xe7\xe3o corresponde ao contexto (voc\xea pode precisar extrair isso do contexto da requisi\xe7\xe3o)\n  expected_org_id = 'your-organization-id' # Extraia do contexto da requisi\xe7\xe3o\n  expected_aud = \"urn:logto:organization:#{expected_org_id}\"\n  unless audiences.include?(expected_aud)\n    raise AuthorizationError.new('ID da organiza\xe7\xe3o n\xe3o corresponde')\n  end\n\n  # Verifique os escopos necess\xe1rios para a organiza\xe7\xe3o\n  required_scopes = ['invite:users', 'manage:settings'] # Substitua pelos escopos necess\xe1rios no seu caso\n  token_scopes = payload['scope']&.split(' ') || []\n\n  unless required_scopes.all? { |scope| token_scopes.include?(scope) }\n    raise AuthorizationError.new('Escopo de organiza\xe7\xe3o insuficiente')\n  end\nend\n"})})}),(0,o.jsx)(s.A,{value:"organization-level-api-resources",label:"Recursos de API no n\xedvel da organiza\xe7\xe3o",children:(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-ruby",metastring:'title="jwt_validator.rb"',children:"def self.verify_payload(payload)\n  # Verifique se a reivindica\xe7\xe3o de p\xfablico corresponde ao seu indicador de recurso de API\n  audiences = payload['aud'] || []\n  unless audiences.include?('https://your-api-resource-indicator')\n    raise AuthorizationError.new('P\xfablico inv\xe1lido para recursos de API no n\xedvel da organiza\xe7\xe3o')\n  end\n\n  # Verifique se o ID da organiza\xe7\xe3o corresponde ao contexto (voc\xea pode precisar extrair isso do contexto da requisi\xe7\xe3o)\n  expected_org_id = 'your-organization-id' # Extraia do contexto da requisi\xe7\xe3o\n  org_id = payload['organization_id']\n  unless expected_org_id == org_id\n    raise AuthorizationError.new('ID da organiza\xe7\xe3o n\xe3o corresponde')\n  end\n\n  # Verifique os escopos necess\xe1rios para recursos de API no n\xedvel da organiza\xe7\xe3o\n  required_scopes = ['api:read', 'api:write'] # Substitua pelos escopos necess\xe1rios no seu caso\n  token_scopes = payload['scope']&.split(' ') || []\n\n  unless required_scopes.all? { |scope| token_scopes.include?(scope) }\n    raise AuthorizationError.new('Escopos insuficientes para recursos de API no n\xedvel da organiza\xe7\xe3o')\n  end\nend\n"})})})]})]})}function m(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(h,{...e})}):h(e)}},74869:(e,n,r)=>{r.d(n,{Ay:()=>i,RM:()=>a});var o=r(25105),t=r(79621);const a=[];function s(e){const n={code:"code",pre:"pre",...(0,t.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-ruby",metastring:'title="auth_constants.rb"',children:"module AuthConstants\n  JWKS_URI = 'https://your-tenant.logto.app/oidc/jwks'\n  ISSUER = 'https://your-tenant.logto.app/oidc'\nend\n"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-ruby",metastring:'title="auth_info.rb"',children:"class AuthInfo\n  attr_accessor :sub, :client_id, :organization_id, :scopes, :audience\n\n  def initialize(sub, client_id = nil, organization_id = nil, scopes = [], audience = [])\n    @sub = sub\n    @client_id = client_id\n    @organization_id = organization_id\n    @scopes = scopes\n    @audience = audience\n  end\n\n  def to_h\n    {\n      sub: @sub,\n      client_id: @client_id,\n      organization_id: @organization_id,\n      scopes: @scopes,\n      audience: @audience\n    }\n  end\nend\n"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-ruby",metastring:'title="authorization_error.rb"',children:"class AuthorizationError < StandardError\n  attr_reader :status\n\n  def initialize(message, status = 403)\n    super(message)\n    @status = status\n  end\nend\n"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-ruby",metastring:'title="auth_helpers.rb"',children:"module AuthHelpers\n  def extract_bearer_token(request)\n    authorization = request.headers['Authorization']\n\n    raise AuthorizationError.new('O cabe\xe7alho Authorization est\xe1 ausente (Authorization header is missing)', 401) unless authorization\n    raise AuthorizationError.new('O cabe\xe7alho Authorization deve come\xe7ar com \"Bearer \" (Authorization header must start with \"Bearer \")', 401) unless authorization.start_with?('Bearer ')\n\n    authorization[7..-1] # Remove o prefixo 'Bearer '\n  end\nend\n"})})]})}function i(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(s,{...e})}):s(e)}},65280:(e,n,r)=>{r.d(n,{Ay:()=>i,RM:()=>a});var o=r(25105),t=r(79621);const a=[];function s(e){const n={code:"code",pre:"pre",...(0,t.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-ruby",metastring:'title="api.rb"',children:"require 'grape'\nrequire_relative 'auth_helpers'\nrequire_relative 'auth_constants'\nrequire_relative 'auth_info'\nrequire_relative 'authorization_error'\nrequire_relative 'jwt_validator'\n\nclass API < Grape::API\n  format :json\n\n  helpers GrapeAuthHelpers\n\n  namespace :api do\n    namespace :protected do\n      before do\n        authenticate_user!\n      end\n\n      get do\n        # Acesse as informa\xe7\xf5es de autentica\xe7\xe3o a partir do helper de autentica\xe7\xe3o (Access auth information from auth helper)\n        { auth: auth.to_h }\n      end\n    end\n  end\n\n  # Endpoint p\xfablico (n\xe3o protegido) (Public endpoint (not protected))\n  get :public do\n    { message: \"Endpoint p\xfablico (Public endpoint)\" }\n  end\nend\n"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-ruby",metastring:'title="config.ru"',children:"require_relative 'api'\n\nrun API\n"})})]})}function i(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(s,{...e})}):s(e)}},23354:(e,n,r)=>{r.d(n,{Ay:()=>i,RM:()=>a});var o=r(25105),t=r(79621);const a=[];function s(e){const n={code:"code",pre:"pre",...(0,t.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-ruby",metastring:'title="app/controllers/application_controller.rb"',children:"class ApplicationController < ActionController::API # Para aplicativos apenas de API\n# class ApplicationController < ActionController::Base # Para aplicativos Rails completos\n  include JwtAuthentication\nend\n"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-ruby",metastring:'title="app/controllers/api/protected_controller.rb"',children:"class Api::ProtectedController < ApplicationController\n  before_action :verify_access_token\n\n  def index\n    # Acesse as informa\xe7\xf5es de autentica\xe7\xe3o a partir de @auth\n    render json: { auth: @auth.to_h }\n  end\nend\n"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-ruby",metastring:'title="config/routes.rb"',children:"Rails.application.routes.draw do\n  namespace :api do\n    resources :protected, only: [:index]\n  end\nend\n"})})]})}function i(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(s,{...e})}):s(e)}},25821:(e,n,r)=>{r.d(n,{Ay:()=>i,RM:()=>a});var o=r(25105),t=r(79621);const a=[];function s(e){const n={code:"code",pre:"pre",...(0,t.R)(),...e.components};return(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-ruby",metastring:'title="app.rb"',children:"require 'sinatra'\nrequire 'json'\nrequire_relative 'auth_middleware'\nrequire_relative 'auth_constants'\nrequire_relative 'auth_info'\nrequire_relative 'authorization_error'\nrequire_relative 'auth_helpers'\nrequire_relative 'jwt_validator'\n\n# Aplicar middleware\nuse AuthMiddleware\n\nget '/api/protected' do\n  content_type :json\n\n  # Acessar informa\xe7\xf5es de autentica\xe7\xe3o a partir do env\n  auth = env['auth']\n  { auth: auth.to_h }.to_json\nend\n\n# Endpoint p\xfablico (n\xe3o protegido pelo middleware)\nget '/' do\n  content_type :json\n  { message: \"Endpoint p\xfablico\" }.to_json\nend\n"})})}function i(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(s,{...e})}):s(e)}},86966:(e,n,r)=>{r.d(n,{Ay:()=>m,RM:()=>p});var o=r(25105),t=r(79621),a=r(33435),s=r(38552),i=r(22002);function c(e){const n={code:"code",pre:"pre",...(0,t.R)(),...e.components};return(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-rust",metastring:'title="middleware.rs"',children:"use crate::{AuthInfo, AuthorizationError, extract_bearer_token};\nuse crate::jwt_validator::JwtValidator;\nuse actix_web::{\n    dev::{forward_ready, Service, ServiceRequest, ServiceResponse, Transform},\n    web, Error, HttpMessage, HttpResponse,\n};\nuse futures::future::{ok, Ready};\nuse std::sync::Arc;\n\npub struct JwtMiddleware {\n    validator: Arc<JwtValidator>,\n}\n\nimpl JwtMiddleware {\n    pub fn new(validator: Arc<JwtValidator>) -> Self {\n        Self { validator }\n    }\n}\n\nimpl<S, B> Transform<S, ServiceRequest> for JwtMiddleware\nwhere\n    S: Service<ServiceRequest, Response = ServiceResponse<B>, Error = Error>,\n    S::Future: 'static,\n    B: 'static,\n{\n    type Response = ServiceResponse<B>;\n    type Error = Error;\n    type InitError = ();\n    type Transform = JwtMiddlewareService<S>;\n    type Future = Ready<Result<Self::Transform, Self::InitError>>;\n\n    fn new_transform(&self, service: S) -> Self::Future {\n        ok(JwtMiddlewareService {\n            service,\n            validator: self.validator.clone(),\n        })\n    }\n}\n\npub struct JwtMiddlewareService<S> {\n    service: S,\n    validator: Arc<JwtValidator>,\n}\n\nimpl<S, B> Service<ServiceRequest> for JwtMiddlewareService<S>\nwhere\n    S: Service<ServiceRequest, Response = ServiceResponse<B>, Error = Error>,\n    S::Future: 'static,\n    B: 'static,\n{\n    type Response = ServiceResponse<B>;\n    type Error = Error;\n    type Future = futures::future::LocalBoxFuture<'static, Result<Self::Response, Self::Error>>;\n\n    forward_ready!(service);\n\n    fn call(&self, req: ServiceRequest) -> Self::Future {\n        let validator = self.validator.clone();\n\n        Box::pin(async move {\n            let authorization = req\n                .headers()\n                .get(\"authorization\")\n                .and_then(|h| h.to_str().ok());\n\n            match extract_bearer_token(authorization)\n                .and_then(|token| validator.validate_jwt(token))\n            {\n                Ok(auth_info) => {\n                    // Armazena as informa\xe7\xf5es de autentica\xe7\xe3o nas extens\xf5es da requisi\xe7\xe3o para uso gen\xe9rico\n                    req.extensions_mut().insert(auth_info);\n                    let fut = self.service.call(req);\n                    fut.await\n                }\n                Err(e) => {\n                    let response = HttpResponse::build(\n                        actix_web::http::StatusCode::from_u16(e.status_code)\n                            .unwrap_or(actix_web::http::StatusCode::FORBIDDEN),\n                    )\n                    .json(serde_json::json!({ \"error\": e.message }));\n\n                    Ok(req.into_response(response))\n                }\n            }\n        })\n    }\n}\n"})})}function d(e){const n={code:"code",pre:"pre",...(0,t.R)(),...e.components};return(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-rust",metastring:'title="middleware.rs"',children:'use crate::{AuthInfo, AuthorizationError, extract_bearer_token};\nuse crate::jwt_validator::JwtValidator;\nuse axum::{\n    extract::Request,\n    http::{HeaderMap, StatusCode},\n    middleware::Next,\n    response::{IntoResponse, Response},\n    Extension, Json,\n};\nuse serde_json::json;\nuse std::sync::Arc;\n\n// Middleware JWT para autentica\xe7\xe3o/autoriza\xe7\xe3o\npub async fn jwt_middleware(\n    Extension(validator): Extension<Arc<JwtValidator>>,\n    headers: HeaderMap,\n    mut request: Request,\n    next: Next,\n) -> Result<Response, AuthorizationError> {\n    let authorization = headers\n        .get("authorization")\n        .and_then(|h| h.to_str().ok());\n\n    let token = extract_bearer_token(authorization)?;\n    let auth_info = validator.validate_jwt(token)?;\n\n    // Armazena as informa\xe7\xf5es de autentica\xe7\xe3o nas extens\xf5es da requisi\xe7\xe3o para uso gen\xe9rico\n    request.extensions_mut().insert(auth_info);\n\n    Ok(next.run(request).await)\n}\n\nimpl IntoResponse for AuthorizationError {\n    fn into_response(self) -> Response {\n        let status = StatusCode::from_u16(self.status_code).unwrap_or(StatusCode::FORBIDDEN);\n        (status, Json(json!({ "error": self.message }))).into_response()\n    }\n}\n'})})}function l(e){const n={code:"code",pre:"pre",...(0,t.R)(),...e.components};return(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-rust",metastring:'title="guards.rs"',children:"use crate::{AuthInfo, AuthorizationError, extract_bearer_token};\nuse crate::jwt_validator::JwtValidator;\nuse rocket::{\n    http::Status,\n    outcome::Outcome,\n    request::{self, FromRequest, Request},\n    State,\n};\n\n#[rocket::async_trait]\nimpl<'r> FromRequest<'r> for AuthInfo {\n    type Error = AuthorizationError;\n\n    async fn from_request(req: &'r Request<'_>) -> request::Outcome<Self, Self::Error> {\n        let validator = match req.guard::<&State<JwtValidator>>().await {\n            Outcome::Success(validator) => validator,\n            Outcome::Failure((status, _)) => {\n                return Outcome::Failure((\n                    status,\n                    AuthorizationError::with_status(\"Validador de JWT n\xe3o encontrado\", 500),\n                ))\n            }\n            Outcome::Forward(()) => {\n                return Outcome::Forward(())\n            }\n        };\n\n        let authorization = req.headers().get_one(\"authorization\");\n\n        match extract_bearer_token(authorization)\n            .and_then(|token| validator.validate_jwt(token))\n        {\n            Ok(auth_info) => Outcome::Success(auth_info),\n            Err(e) => {\n                let status = Status::from_code(e.status_code).unwrap_or(Status::Forbidden);\n                Outcome::Failure((status, e))\n            }\n        }\n    }\n}\n"})})}const u=Object.freeze({axum:(0,o.jsx)((function(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}),{}),"actix-web":(0,o.jsx)((function(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(c,{...e})}):c(e)}),{}),rocket:(0,o.jsx)((function(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}),{})}),p=[];function h(e){const n={a:"a",code:"code",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsxs)(n.p,{children:["Usamos ",(0,o.jsx)(n.a,{href:"https://github.com/Keats/jsonwebtoken",children:"jsonwebtoken"})," para validar JWTs. Adicione as depend\xeancias necess\xe1rias ao seu ",(0,o.jsx)(n.code,{children:"Cargo.toml"}),":"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-toml",metastring:'title="Cargo.toml"',children:'[dependencies]\njsonwebtoken = "9.0"\nserde = { version = "1.0", features = ["derive"] }\nserde_json = "1.0"\nreqwest = { version = "0.11", features = ["json"] }\ntokio = { version = "1.0", features = ["full"] }\n'})}),"\n",(0,o.jsx)(n.p,{children:"Primeiro, adicione estas utilidades compartilhadas para lidar com a valida\xe7\xe3o de JWT:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-rust",metastring:'title="jwt_validator.rs"',children:'use crate::{AuthInfo, AuthorizationError, ISSUER, JWKS_URI};\nuse jsonwebtoken::{decode, decode_header, Algorithm, DecodingKey, Validation};\nuse serde_json::Value;\nuse std::collections::HashMap;\n\npub struct JwtValidator {\n    jwks: HashMap<String, DecodingKey>,\n}\n\nimpl JwtValidator {\n    pub async fn new() -> Result<Self, AuthorizationError> {\n        let jwks = Self::fetch_jwks().await?;\n        Ok(Self { jwks })\n    }\n\n    async fn fetch_jwks() -> Result<HashMap<String, DecodingKey>, AuthorizationError> {\n        let response = reqwest::get(JWKS_URI).await.map_err(|e| {\n            AuthorizationError::with_status(format!("Falha ao buscar JWKS: {}", e), 401)\n        })?;\n\n        let jwks: Value = response.json().await.map_err(|e| {\n            AuthorizationError::with_status(format!("Falha ao analisar JWKS: {}", e), 401)\n        })?;\n\n        let mut keys = HashMap::new();\n\n        if let Some(keys_array) = jwks["keys"].as_array() {\n            for key in keys_array {\n                if let (Some(kid), Some(kty), Some(n), Some(e)) = (\n                    key["kid"].as_str(),\n                    key["kty"].as_str(),\n                    key["n"].as_str(),\n                    key["e"].as_str(),\n                ) {\n                    if kty == "RSA" {\n                        if let Ok(decoding_key) = DecodingKey::from_rsa_components(n, e) {\n                            keys.insert(kid.to_string(), decoding_key);\n                        }\n                    }\n                }\n            }\n        }\n\n        if keys.is_empty() {\n            return Err(AuthorizationError::with_status("Nenhuma chave v\xe1lida encontrada no JWKS", 401));\n        }\n\n        Ok(keys)\n    }\n\n    pub fn validate_jwt(&self, token: &str) -> Result<AuthInfo, AuthorizationError> {\n        let header = decode_header(token).map_err(|e| {\n            AuthorizationError::with_status(format!("Cabe\xe7alho do token inv\xe1lido: {}", e), 401)\n        })?;\n\n        let kid = header.kid.ok_or_else(|| {\n            AuthorizationError::with_status("Token sem reivindica\xe7\xe3o kid", 401)\n        })?;\n\n        let key = self.jwks.get(&kid).ok_or_else(|| {\n            AuthorizationError::with_status("ID de chave desconhecido", 401)\n        })?;\n\n        let mut validation = Validation::new(Algorithm::RS256);\n        validation.set_issuer(&[ISSUER]);\n        validation.validate_aud = false; // Vamos verificar o p\xfablico manualmente\n\n        let token_data = decode::<Value>(token, key, &validation).map_err(|e| {\n            AuthorizationError::with_status(format!("Token inv\xe1lido: {}", e), 401)\n        })?;\n\n        let claims = token_data.claims;\n        self.verify_payload(&claims)?;\n\n        Ok(self.create_auth_info(claims))\n    }\n\n    fn verify_payload(&self, claims: &Value) -> Result<(), AuthorizationError> {\n        // Implemente sua l\xf3gica de verifica\xe7\xe3o aqui com base no modelo de permiss\xe3o\n        // Isso ser\xe1 mostrado na se\xe7\xe3o de modelos de permiss\xe3o abaixo\n        Ok(())\n    }\n\n    fn create_auth_info(&self, claims: Value) -> AuthInfo {\n        let scopes = claims["scope"]\n            .as_str()\n            .map(|s| s.split(\' \').map(|s| s.to_string()).collect())\n            .unwrap_or_default();\n\n        let audience = match &claims["aud"] {\n            Value::Array(arr) => arr.iter().filter_map(|v| v.as_str().map(|s| s.to_string())).collect(),\n            Value::String(s) => vec![s.clone()],\n            _ => vec![],\n        };\n\n        AuthInfo::new(\n            claims["sub"].as_str().unwrap_or_default().to_string(),\n            claims["client_id"].as_str().map(|s| s.to_string()),\n            claims["organization_id"].as_str().map(|s| s.to_string()),\n            scopes,\n            audience,\n        )\n    }\n}\n'})}),"\n",(0,o.jsx)(n.p,{children:"Em seguida, implemente o middleware para verificar o token de acesso:"}),"\n",e.framework?u[e.framework]:(0,o.jsx)(i.A,{groupId:"api-framework",children:Object.entries(u).map((([e,n])=>(0,o.jsx)(s.A,{value:e,label:(0,a.My)(e),children:n},e)))}),"\n",(0,o.jsxs)(n.p,{children:["De acordo com seu modelo de permiss\xe3o, implemente a l\xf3gica de verifica\xe7\xe3o apropriada em ",(0,o.jsx)(n.code,{children:"JwtValidator"}),":"]}),"\n",(0,o.jsxs)(i.A,{groupId:"permission-models",children:[(0,o.jsx)(s.A,{value:"global-api-resources",label:"Recursos globais de API",children:(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-rust",metastring:'title="jwt_validator.rs"',children:'fn verify_payload(&self, claims: &Value) -> Result<(), AuthorizationError> {\n    // Verifique se a reivindica\xe7\xe3o de p\xfablico corresponde ao seu indicador de recurso de API\n    let audiences = match &claims["aud"] {\n        Value::Array(arr) => arr.iter().filter_map(|v| v.as_str()).collect::<Vec<_>>(),\n        Value::String(s) => vec![s.as_str()],\n        _ => vec![],\n    };\n\n    if !audiences.contains(&"https://your-api-resource-indicator") {\n        return Err(AuthorizationError::new("P\xfablico inv\xe1lido"));\n    }\n\n    // Verifique os escopos necess\xe1rios para recursos globais de API\n    let required_scopes = vec!["api:read", "api:write"]; // Substitua pelos escopos necess\xe1rios\n    let scopes = claims["scope"]\n        .as_str()\n        .map(|s| s.split(\' \').collect::<Vec<_>>())\n        .unwrap_or_default();\n\n    for required_scope in &required_scopes {\n        if !scopes.contains(required_scope) {\n            return Err(AuthorizationError::new("Escopo insuficiente"));\n        }\n    }\n\n    Ok(())\n}\n'})})}),(0,o.jsx)(s.A,{value:"organization-permissions",label:"Permiss\xf5es de organiza\xe7\xe3o (n\xe3o-API)",children:(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-rust",metastring:'title="jwt_validator.rs"',children:'fn verify_payload(&self, claims: &Value) -> Result<(), AuthorizationError> {\n    // Verifique se a reivindica\xe7\xe3o de p\xfablico corresponde ao formato da organiza\xe7\xe3o\n    let audiences = match &claims["aud"] {\n        Value::Array(arr) => arr.iter().filter_map(|v| v.as_str()).collect::<Vec<_>>(),\n        Value::String(s) => vec![s.as_str()],\n        _ => vec![],\n    };\n\n    let has_org_audience = audiences.iter().any(|aud| aud.starts_with("urn:logto:organization:"));\n    if !has_org_audience {\n        return Err(AuthorizationError::new("P\xfablico inv\xe1lido para permiss\xf5es de organiza\xe7\xe3o"));\n    }\n\n    // Verifique se o ID da organiza\xe7\xe3o corresponde ao contexto (voc\xea pode precisar extrair isso do contexto da requisi\xe7\xe3o)\n    let expected_org_id = "your-organization-id"; // Extraia do contexto da requisi\xe7\xe3o\n    let expected_aud = format!("urn:logto:organization:{}", expected_org_id);\n    if !audiences.contains(&expected_aud.as_str()) {\n        return Err(AuthorizationError::new("ID da organiza\xe7\xe3o n\xe3o corresponde"));\n    }\n\n    // Verifique os escopos necess\xe1rios da organiza\xe7\xe3o\n    let required_scopes = vec!["invite:users", "manage:settings"]; // Substitua pelos escopos necess\xe1rios\n    let scopes = claims["scope"]\n        .as_str()\n        .map(|s| s.split(\' \').collect::<Vec<_>>())\n        .unwrap_or_default();\n\n    for required_scope in &required_scopes {\n        if !scopes.contains(required_scope) {\n            return Err(AuthorizationError::new("Escopo de organiza\xe7\xe3o insuficiente"));\n        }\n    }\n\n    Ok(())\n}\n'})})}),(0,o.jsx)(s.A,{value:"organization-level-api-resources",label:"Recursos de API em n\xedvel de organiza\xe7\xe3o",children:(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-rust",metastring:'title="jwt_validator.rs"',children:'fn verify_payload(&self, claims: &Value) -> Result<(), AuthorizationError> {\n    // Verifique se a reivindica\xe7\xe3o de p\xfablico corresponde ao seu indicador de recurso de API\n    let audiences = match &claims["aud"] {\n        Value::Array(arr) => arr.iter().filter_map(|v| v.as_str()).collect::<Vec<_>>(),\n        Value::String(s) => vec![s.as_str()],\n        _ => vec![],\n    };\n\n    if !audiences.contains(&"https://your-api-resource-indicator") {\n        return Err(AuthorizationError::new("P\xfablico inv\xe1lido para recursos de API em n\xedvel de organiza\xe7\xe3o"));\n    }\n\n    // Verifique se o ID da organiza\xe7\xe3o corresponde ao contexto (voc\xea pode precisar extrair isso do contexto da requisi\xe7\xe3o)\n    let expected_org_id = "your-organization-id"; // Extraia do contexto da requisi\xe7\xe3o\n    let org_id = claims["organization_id"].as_str().unwrap_or_default();\n    if expected_org_id != org_id {\n        return Err(AuthorizationError::new("ID da organiza\xe7\xe3o n\xe3o corresponde"));\n    }\n\n    // Verifique os escopos necess\xe1rios para recursos de API em n\xedvel de organiza\xe7\xe3o\n    let required_scopes = vec!["api:read", "api:write"]; // Substitua pelos escopos necess\xe1rios\n    let scopes = claims["scope"]\n        .as_str()\n        .map(|s| s.split(\' \').collect::<Vec<_>>())\n        .unwrap_or_default();\n\n    for required_scope in &required_scopes {\n        if !scopes.contains(required_scope) {\n            return Err(AuthorizationError::new("Escopos de API em n\xedvel de organiza\xe7\xe3o insuficientes"));\n        }\n    }\n\n    Ok(())\n}\n'})})})]})]})}function m(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(h,{...e})}):h(e)}},97495:(e,n,r)=>{r.d(n,{Ay:()=>i,RM:()=>a});var o=r(25105),t=r(79621);const a=[];function s(e){const n={code:"code",pre:"pre",...(0,t.R)(),...e.components};return(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-rust",metastring:'title="lib.rs"',children:'use serde::{Deserialize, Serialize};\nuse std::fmt;\n\npub const JWKS_URI: &str = "https://your-tenant.logto.app/oidc/jwks";\npub const ISSUER: &str = "https://your-tenant.logto.app/oidc";\n\n#[derive(Debug, Clone, Serialize, Deserialize)]\npub struct AuthInfo {\n    pub sub: String,\n    pub client_id: Option<String>,\n    pub organization_id: Option<String>,\n    pub scopes: Vec<String>,\n    pub audience: Vec<String>,\n}\n\nimpl AuthInfo {\n    pub fn new(\n        sub: String,\n        client_id: Option<String>,\n        organization_id: Option<String>,\n        scopes: Vec<String>,\n        audience: Vec<String>,\n    ) -> Self {\n        Self {\n            sub,\n            client_id,\n            organization_id,\n            scopes,\n            audience,\n        }\n    }\n}\n\n#[derive(Debug)]\npub struct AuthorizationError {\n    pub message: String,\n    pub status_code: u16,\n}\n\nimpl AuthorizationError {\n    pub fn new(message: impl Into<String>) -> Self {\n        Self {\n            message: message.into(),\n            status_code: 403,\n        }\n    }\n\n    pub fn with_status(message: impl Into<String>, status_code: u16) -> Self {\n        Self {\n            message: message.into(),\n            status_code,\n        }\n    }\n}\n\nimpl fmt::Display for AuthorizationError {\n    fn fmt(&self, f: &mut fmt::Formatter<\'_>) -> fmt::Result {\n        write!(f, "{}", self.message)\n    }\n}\n\nimpl std::error::Error for AuthorizationError {}\n\npub fn extract_bearer_token(authorization: Option<&str>) -> Result<&str, AuthorizationError> {\n    let auth_header = authorization.ok_or_else(|| {\n        AuthorizationError::with_status("Cabe\xe7alho de autoriza\xe7\xe3o est\xe1 ausente (Authorization header is missing)", 401)\n    })?;\n\n    if !auth_header.starts_with("Bearer ") {\n        return Err(AuthorizationError::with_status(\n            "O cabe\xe7alho de autoriza\xe7\xe3o deve come\xe7ar com \\"Bearer \\" (Authorization header must start with \\"Bearer \\")",\n            401,\n        ));\n    }\n\n    Ok(&auth_header[7..]) // Remove o prefixo \'Bearer \' (Remove \'Bearer \' prefix)\n}\n'})})}function i(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(s,{...e})}):s(e)}},79131:(e,n,r)=>{r.d(n,{Ay:()=>i,RM:()=>a});var o=r(25105),t=r(79621);const a=[];function s(e){const n={code:"code",pre:"pre",...(0,t.R)(),...e.components};return(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-rust",metastring:'title="main.rs"',children:'use actix_web::{middleware::Logger, web, App, HttpRequest, HttpServer, Result};\nuse serde_json::{json, Value};\nuse std::sync::Arc;\n\nmod lib;\nmod jwt_validator;\nmod middleware as jwt_middleware;\n\nuse lib::AuthInfo;\nuse jwt_validator::JwtValidator;\nuse jwt_middleware::JwtMiddleware;\n\n#[actix_web::main]\nasync fn main() -> std::io::Result<()> {\n    let validator = Arc::new(JwtValidator::new().await.expect("Falha ao inicializar o validador de JWT"));\n\n    HttpServer::new(move || {\n        App::new()\n            .app_data(web::Data::new(validator.clone()))\n            .wrap(Logger::default())\n            .service(\n                web::scope("/api/protected")\n                    .wrap(JwtMiddleware::new(validator.clone()))\n                    .route("", web::get().to(protected_handler))\n            )\n    })\n    .bind("127.0.0.1:8080")?\n    .run()\n    .await\n}\n\nasync fn protected_handler(req: HttpRequest) -> Result<web::Json<Value>> {\n    // Acessa as informa\xe7\xf5es de autentica\xe7\xe3o das extens\xf5es da requisi\xe7\xe3o\n    let auth = req.extensions().get::<AuthInfo>().unwrap();\n    Ok(web::Json(json!({ "auth": auth })))\n}\n'})})}function i(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(s,{...e})}):s(e)}},82896:(e,n,r)=>{r.d(n,{Ay:()=>i,RM:()=>a});var o=r(25105),t=r(79621);const a=[];function s(e){const n={code:"code",pre:"pre",...(0,t.R)(),...e.components};return(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-rust",metastring:'title="main.rs"',children:'use axum::{\n    extract::Extension,\n    http::StatusCode,\n    middleware,\n    response::Json,\n    routing::get,\n    Router,\n};\nuse serde_json::{json, Value};\nuse std::sync::Arc;\nuse tower_http::cors::CorsLayer;\n\nmod lib;\nmod jwt_validator;\nmod middleware as jwt_middleware;\n\nuse lib::AuthInfo;\nuse jwt_validator::JwtValidator;\n\n#[tokio::main]\nasync fn main() {\n    let validator = Arc::new(JwtValidator::new().await.expect("Falha ao inicializar o validador de JWT"));\n\n    let app = Router::new()\n        .route("/api/protected", get(protected_handler))\n        .layer(middleware::from_fn(jwt_middleware::jwt_middleware))\n        .layer(Extension(validator))\n        .layer(CorsLayer::permissive());\n\n    let listener = tokio::net::TcpListener::bind("0.0.0.0:3000").await.unwrap();\n    axum::serve(listener, app).await.unwrap();\n}\n\nasync fn protected_handler(Extension(auth): Extension<AuthInfo>) -> Json<Value> {\n    // Acesse as informa\xe7\xf5es de autentica\xe7\xe3o diretamente da Extension\n    Json(json!({ "auth": auth }))\n}\n'})})}function i(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(s,{...e})}):s(e)}},44207:(e,n,r)=>{r.d(n,{Ay:()=>i,RM:()=>a});var o=r(25105),t=r(79621);const a=[];function s(e){const n={code:"code",pre:"pre",...(0,t.R)(),...e.components};return(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-rust",metastring:'title="main.rs"',children:'use rocket::{get, launch, routes, serde::json::Json};\nuse serde_json::{json, Value};\n\nmod lib;\nmod jwt_validator;\nmod guards;\n\nuse lib::AuthInfo;\nuse jwt_validator::JwtValidator;\n\n#[get("/api/protected")]\nfn protected_handler(auth: AuthInfo) -> Json<Value> {\n    // Acesse as informa\xe7\xf5es de autentica\xe7\xe3o diretamente do request guard (Access auth information directly from request guard)\n    Json(json!({ "auth": auth }))\n}\n\n#[launch]\nasync fn rocket() -> _ {\n    let validator = JwtValidator::new().await.expect("Falha ao inicializar o validador de JWT (Failed to initialize JWT validator)");\n\n    rocket::build()\n        .manage(validator)\n        .mount("/", routes![protected_handler])\n}\n'})})}function i(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(s,{...e})}):s(e)}},38552:(e,n,r)=>{r.d(n,{A:()=>s});r(58101);var o=r(13526);const t={tabItem:"tabItem_dgSZ"};var a=r(25105);function s(e){let{children:n,hidden:r,className:s}=e;return(0,a.jsx)("div",{role:"tabpanel",className:(0,o.A)(t.tabItem,s),hidden:r,children:n})}},22002:(e,n,r)=>{r.d(n,{A:()=>y});var o=r(58101),t=r(13526),a=r(60755),s=r(55234),i=r(6635),c=r(4100),d=r(35661),l=r(42752);function u(e){return o.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,o.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function p(e){const{values:n,children:r}=e;return(0,o.useMemo)((()=>{const e=n??function(e){return u(e).map((e=>{let{props:{value:n,label:r,attributes:o,default:t}}=e;return{value:n,label:r,attributes:o,default:t}}))}(r);return function(e){const n=(0,d.XI)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,r])}function h(e){let{value:n,tabValues:r}=e;return r.some((e=>e.value===n))}function m(e){let{queryString:n=!1,groupId:r}=e;const t=(0,s.W6)(),a=function(e){let{queryString:n=!1,groupId:r}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!r)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return r??null}({queryString:n,groupId:r});return[(0,c.aZ)(a),(0,o.useCallback)((e=>{if(!a)return;const n=new URLSearchParams(t.location.search);n.set(a,e),t.replace({...t.location,search:n.toString()})}),[a,t])]}function g(e){const{defaultValue:n,queryString:r=!1,groupId:t}=e,a=p(e),[s,c]=(0,o.useState)((()=>function(e){let{defaultValue:n,tabValues:r}=e;if(0===r.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!h({value:n,tabValues:r}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${r.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const o=r.find((e=>e.default))??r[0];if(!o)throw new Error("Unexpected error: 0 tabValues");return o.value}({defaultValue:n,tabValues:a}))),[d,u]=m({queryString:r,groupId:t}),[g,x]=function(e){let{groupId:n}=e;const r=function(e){return e?`docusaurus.tab.${e}`:null}(n),[t,a]=(0,l.Dv)(r);return[t,(0,o.useCallback)((e=>{r&&a.set(e)}),[r,a])]}({groupId:t}),f=(()=>{const e=d??g;return h({value:e,tabValues:a})?e:null})();(0,i.A)((()=>{f&&c(f)}),[f]);return{selectedValue:s,selectValue:(0,o.useCallback)((e=>{if(!h({value:e,tabValues:a}))throw new Error(`Can't select invalid tab value=${e}`);c(e),u(e),x(e)}),[u,x,a]),tabValues:a}}var x=r(21929);const f={tabList:"tabList_osvQ",tabItem:"tabItem_dc4O"};var j=r(25105);function v(e){let{className:n,block:r,selectedValue:o,selectValue:s,tabValues:i}=e;const c=[],{blockElementScrollPositionUntilNextRender:d}=(0,a.a_)(),l=e=>{const n=e.currentTarget,r=c.indexOf(n),t=i[r].value;t!==o&&(d(n),s(t))},u=e=>{let n=null;switch(e.key){case"Enter":l(e);break;case"ArrowRight":{const r=c.indexOf(e.currentTarget)+1;n=c[r]??c[0];break}case"ArrowLeft":{const r=c.indexOf(e.currentTarget)-1;n=c[r]??c[c.length-1];break}}n?.focus()};return(0,j.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,t.A)("tabs",{"tabs--block":r},n),children:i.map((e=>{let{value:n,label:r,attributes:a}=e;return(0,j.jsx)("li",{role:"tab",tabIndex:o===n?0:-1,"aria-selected":o===n,ref:e=>{c.push(e)},onKeyDown:u,onClick:l,...a,className:(0,t.A)("tabs__item",f.tabItem,a?.className,{"tabs__item--active":o===n}),children:r??n},n)}))})}function A(e){let{lazy:n,children:r,selectedValue:a}=e;const s=(Array.isArray(r)?r:[r]).filter(Boolean);if(n){const e=s.find((e=>e.props.value===a));return e?(0,o.cloneElement)(e,{className:(0,t.A)("margin-top--md",e.props.className)}):null}return(0,j.jsx)("div",{className:"margin-top--md",children:s.map(((e,n)=>(0,o.cloneElement)(e,{key:n,hidden:e.props.value!==a})))})}function w(e){const n=g(e);return(0,j.jsxs)("div",{className:(0,t.A)("tabs-container",f.tabList),children:[(0,j.jsx)(v,{...n,...e}),(0,j.jsx)(A,{...n,...e})]})}function y(e){const n=(0,x.A)();return(0,j.jsx)(w,{...e,children:u(e.children)},String(n))}},33435:(e,n,r)=>{r.d(n,{Id:()=>s,My:()=>a});const o=Object.freeze({dotnet:{name:".NET"},go:{name:"Go"},java:{name:"Java"},nodejs:{name:"Node.js"},php:{name:"PHP"},python:{name:"Python"},ruby:{name:"Ruby"},rust:{name:"Rust"}}),t=Object.freeze({express:{name:"Express.js",language:"nodejs"},koa:{name:"Koa.js",language:"nodejs"},fastify:{name:"Fastify",language:"nodejs"},hapi:{name:"Hapi.js",language:"nodejs"},nestjs:{name:"NestJS",language:"nodejs"},gin:{name:"Gin",language:"go"},fiber:{name:"Fiber",language:"go"},echo:{name:"Echo",language:"go"},chi:{name:"Chi",language:"go"},"spring-boot":{name:"Spring Boot",language:"java"},quarkus:{name:"Quarkus",language:"java"},micronaut:{name:"Micronaut",language:"java"},"vertx-web":{name:"Vert.x Web",language:"java"},laravel:{name:"Laravel",language:"php"},symfony:{name:"Symfony",language:"php"},slim:{name:"Slim",language:"php"},rails:{name:"Ruby on Rails",language:"ruby"},sinatra:{name:"Sinatra",language:"ruby"},grape:{name:"Grape",language:"ruby"},fastapi:{name:"FastAPI",language:"python"},flask:{name:"Flask",language:"python"},django:{name:"Django",language:"python"},"django-rest":{name:"Django REST Framework",language:"python"},axum:{name:"Axum",language:"rust"},"actix-web":{name:"Actix Web",language:"rust"},rocket:{name:"Rocket",language:"rust"},"aspnet-core":{name:"ASP.NET Core",language:"dotnet"}}),a=e=>t[e].name,s=e=>o[t[e].language].name},79621:(e,n,r)=>{r.d(n,{R:()=>s,x:()=>i});var o=r(58101);const t={},a=o.createContext(t);function s(e){const n=o.useContext(a);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:s(e.components),o.createElement(a.Provider,{value:n},e.children)}}}]);