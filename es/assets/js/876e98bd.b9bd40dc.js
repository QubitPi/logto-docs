"use strict";(self.webpackChunk_logto_docs=self.webpackChunk_logto_docs||[]).push([[58310],{68028:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>u,contentTitle:()=>c,default:()=>h,frontMatter:()=>l,metadata:()=>o,toc:()=>d});const o=JSON.parse('{"id":"authorization/api-resources/spring-boot","title":"Gu\xeda: Spring Boot","description":"En este tutorial, asumimos que el cliente ha obtenido un access_token v\xe1lido y lo ha adjuntado al encabezado de la solicitud como Authorization: Bearer","source":"@site/i18n/es/docusaurus-plugin-content-docs/current/authorization/api-resources/spring-boot.mdx","sourceDirName":"authorization/api-resources","slug":"/authorization/api-resources/spring-boot","permalink":"/es/authorization/api-resources/spring-boot","draft":false,"unlisted":false,"editUrl":"https://github.com/logto-io/docs/tree/master/i18n/es/docusaurus-plugin-content-docs/current/authorization/api-resources/spring-boot.mdx","tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"sidebar_position":4},"sidebar":"docsSidebar","previous":{"title":"Gu\xeda: Node (Express)","permalink":"/es/authorization/api-resources/node-express"},"next":{"title":"Control de acceso basado en roles","permalink":"/es/authorization/role-based-access-control/"}}');var i=n(25105),t=n(79621),a=n(3768),s=n(11043);const l={sidebar_position:4},c="Gu\xeda: Spring Boot",u={},d=[{value:"Iniciar un proyecto Spring Boot",id:"start-a-spring-boot-project",level:2},{value:"A\xf1adir dependencias",id:"add-dependencies",level:2},{value:"Obtener emisor y URI de JWKS",id:"get-issuer-and-jwks-uri",level:2},{value:"Configurar la aplicaci\xf3n",id:"configure-application",level:2},{value:"Proveer validador de audiencia",id:"provide-audience-validator",level:2},{value:"Configurar la seguridad de Spring",id:"configure-spring-security",level:2},{value:"A\xf1adir APIs",id:"add-apis",level:2},{value:"Acceder a la API protegida",id:"access-protected-api",level:2}];function p(e){const r={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(r.header,{children:(0,i.jsx)(r.h1,{id:"gu\xeda-spring-boot",children:"Gu\xeda: Spring Boot"})}),"\n",(0,i.jsxs)(r.p,{children:["En este tutorial, asumimos que el cliente ha obtenido un ",(0,i.jsx)(r.code,{children:"access_token"})," v\xe1lido y lo ha adjuntado al encabezado de la solicitud como ",(0,i.jsx)(r.code,{children:"Authorization: Bearer <access_token>"})]}),"\n",(0,i.jsx)(r.p,{children:"Tu aplicaci\xf3n web puede ejecutarse en el lado del servidor utilizando el framework Spring Boot. Por ahora, necesitas integrar Logto en Spring Boot manualmente. Este art\xedculo te gu\xeda sobre c\xf3mo hacerlo paso a paso. Y usamos Gradle, Java y Spring Security para el ejemplo."}),"\n",(0,i.jsx)(r.h2,{id:"start-a-spring-boot-project",children:"Iniciar un proyecto Spring Boot"}),"\n",(0,i.jsxs)(r.p,{children:["Con ",(0,i.jsx)(r.a,{href:"https://start.spring.io/",children:"Spring Initializr"}),", puedes iniciar r\xe1pidamente un proyecto Spring Boot. Usa las siguientes opciones:"]}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsx)(r.li,{children:"Proyecto Gradle"}),"\n",(0,i.jsx)(r.li,{children:"Lenguaje: Java"}),"\n",(0,i.jsx)(r.li,{children:"Spring Boot: 2.7.2"}),"\n"]}),"\n",(0,i.jsx)(r.p,{children:"Genera y abre el proyecto."}),"\n",(0,i.jsx)(r.h2,{id:"add-dependencies",children:"A\xf1adir dependencias"}),"\n",(0,i.jsxs)(r.p,{children:["A\xf1ade las dependencias a tu archivo de construcci\xf3n del proyecto Gradle ",(0,i.jsx)(r.code,{children:"build.gradle"}),":"]}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-groovy",children:"dependencies {\n    implementation 'org.springframework.boot:spring-boot-starter-web'\n    implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'\n}\n"})}),"\n",(0,i.jsxs)(r.admonition,{type:"note",children:[(0,i.jsx)(r.p,{children:"Dado que Spring Boot y Spring Security tienen soporte incorporado tanto para el servidor de recursos OAuth2 como para la validaci\xf3n de JWT, NO necesitas a\xf1adir bibliotecas adicionales de Logto para integrar."}),(0,i.jsxs)(r.p,{children:["Consulta ",(0,i.jsx)(r.a,{href:"https://docs.spring.io/spring-security/reference/servlet/oauth2/resource-server/index.html",children:"Spring Security OAuth 2.0 Resource Server"})," y ",(0,i.jsx)(r.a,{href:"https://spring.io/guides/topicals/spring-security-architecture",children:"Spring Security Architecture"})," para m\xe1s detalles."]})]}),"\n",(0,i.jsx)(r.h2,{id:"get-issuer-and-jwks-uri",children:"Obtener emisor y URI de JWKS"}),"\n",(0,i.jsxs)(r.p,{children:["Todos los tokens son emitidos por el ",(0,i.jsx)(r.a,{href:"https://openid.net/specs/openid-connect-core-1_0.html#IssuerIdentifier",children:"emisor (Issuer)"}),", y firmados con ",(0,i.jsx)(r.a,{href:"https://datatracker.ietf.org/doc/html/rfc7517",children:"JWK"})," (Consulta ",(0,i.jsx)(r.a,{href:"https://datatracker.ietf.org/doc/html/rfc7515",children:"JWS"})," para m\xe1s detalles)."]}),"\n",(0,i.jsxs)(r.p,{children:["Antes de continuar, necesitar\xe1s obtener un emisor y un URI de JWKS para verificar el emisor y la firma del Bearer Token (",(0,i.jsx)(r.code,{children:"access_token"}),")."]}),"\n",(0,i.jsxs)(r.p,{children:["Por defecto, el emisor y el URI de JWKS de tu Logto son ",(0,i.jsx)(r.code,{children:"https://<your-logto-domain>/oidc"})," y ",(0,i.jsx)(r.code,{children:"https://<your-logto-domain>/oidc/jwks"})]}),"\n",(0,i.jsxs)(r.p,{children:["Todas las configuraciones m\xe1s recientes del Servidor de Autorizaci\xf3n de Logto se pueden encontrar en ",(0,i.jsx)(r.code,{children:"https://<your-logto-domain>/oidc/.well-known/openid-configuration"}),", incluyendo el ",(0,i.jsx)(r.strong,{children:"emisor"}),", ",(0,i.jsx)(r.strong,{children:"jwks_uri"})," y otras configuraciones de autorizaci\xf3n. Por ejemplo:"]}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-json",children:'{\n  // ...\n  "issuer": "https://<your-logto-domain>/oidc",\n  "jwks_uri": "https://<your-logto-domain>/oidc/jwks"\n  // ...\n}\n'})}),"\n",(0,i.jsx)(r.h2,{id:"configure-application",children:"Configurar la aplicaci\xf3n"}),"\n",(0,i.jsxs)(r.p,{children:["Usa un archivo ",(0,i.jsx)(r.code,{children:"application.yml"})," (en lugar del ",(0,i.jsx)(r.code,{children:"application.properties"})," predeterminado) para configurar el puerto del servidor, la audiencia y el servidor de recursos OAuth2."]}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-yaml",children:"# path/to/project/src/main/resources/application.yaml\nserver:\n  port: 3000\n\nlogto:\n  audience: http://localhost:3000/\n\nspring:\n  security:\n    oauth2:\n      resourceserver:\n        jwt:\n          issuer-uri: <your-logto-issuer-uri>\n          jwk-set-uri: <your-logto-jwks-uri>\n"})}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.code,{children:"audience"}),": El identificador \xfanico de la API (es decir, indicador de API) de tu recurso de API protegido."]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.code,{children:"spring.security.oauth2.resourceserver.jwt.issuer-uri"}),": El valor del reclamo ",(0,i.jsx)(r.code,{children:"iss"})," y el URI del emisor en el JWT emitido por Logto. Completa el valor del ",(0,i.jsx)(r.code,{children:"issuer"})," de la secci\xf3n anterior."]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.code,{children:"spring.security.oauth2.resourceserver.jwt.jwk-set-uri"}),": Spring Security utiliza este URI para obtener las claves p\xfablicas del servidor de autorizaci\xf3n para validar las firmas JWT. Completa el valor del ",(0,i.jsx)(r.code,{children:"jwks_uri"})," de la secci\xf3n anterior."]}),"\n"]}),"\n",(0,i.jsx)(r.h2,{id:"provide-audience-validator",children:"Proveer validador de audiencia"}),"\n",(0,i.jsxs)(r.p,{children:["Proporciona tu propia clase ",(0,i.jsx)(r.code,{children:"AudienceValidator"})," que implemente la interfaz ",(0,i.jsx)(r.code,{children:"OAuth2TokenValidator"})," para validar si la audiencia requerida est\xe1 presente en el JWT."]}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-java",children:'// path/to/project/src/main/java/io/logto/springboot/sample/validator/AudienceValidator.java\npackage io.logto.springboot.sample.validator;\n\nimport org.springframework.security.oauth2.core.OAuth2Error;\nimport org.springframework.security.oauth2.core.OAuth2TokenValidator;\nimport org.springframework.security.oauth2.core.OAuth2TokenValidatorResult;\nimport org.springframework.security.oauth2.jwt.Jwt;\n\npublic class AudienceValidator implements OAuth2TokenValidator<Jwt> {\n\n    private final String audience;\n\n    public AudienceValidator(String audience) {\n        this.audience = audience;\n    }\n\n    @Override\n    public OAuth2TokenValidatorResult validate(Jwt jwt) {\n        if (!jwt.getAudience().contains(audience)) {\n            return OAuth2TokenValidatorResult.failure(new OAuth2Error("invalid_token", "Required audience not found", null));\n        }\n\n\t      // Opcional: Para RBAC valida los alcances del JWT.\n\t      String scopes = jwt.getClaimAsString("scope");\n\t      if (scopes == null || !scopes.contains("read:profile")) {\n\t          return OAuth2TokenValidatorResult.failure(new OAuth2Error("invalid_token", "Insufficient permission", null));\n\t      }\n\n        return OAuth2TokenValidatorResult.success();\n    }\n}\n'})}),"\n",(0,i.jsx)(r.h2,{id:"configure-spring-security",children:"Configurar la seguridad de Spring"}),"\n",(0,i.jsx)(r.p,{children:"Spring Security facilita la configuraci\xf3n de tu aplicaci\xf3n como un Servidor de Recursos y la validaci\xf3n del JWT del Bearer Token en el encabezado de la solicitud."}),"\n",(0,i.jsxs)(r.p,{children:["Necesitas proporcionar instancias de ",(0,i.jsx)(r.code,{children:"JwtDecoder"})," y ",(0,i.jsx)(r.code,{children:"SecurityFilterChain"})," (como beans de Spring), y a\xf1adir la anotaci\xf3n ",(0,i.jsx)(r.code,{children:"@EnableWebSecurity"}),"."]}),"\n",(0,i.jsx)(r.admonition,{type:"note",children:(0,i.jsxs)(r.p,{children:["Logto utiliza el algoritmo ",(0,i.jsx)(r.code,{children:"ES384"})," para firmar los JWT por defecto. Para decodificar los JWT, necesitas establecer el ",(0,i.jsx)(r.code,{children:"jwsAlgorithm"})," en ",(0,i.jsx)(r.code,{children:"ES384"})," expl\xedcitamente. Si prefieres usar ",(0,i.jsx)(r.code,{children:"RSA"}),", si\xe9ntete libre de rotar el algoritmo de firma en el Logto Admin Console. Por favor, consulta ",(0,i.jsx)(r.a,{href:"/developers/signing-keys",children:"Claves de firma"})," para m\xe1s detalles."]})}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-java",children:'// path/to/project/src/main/java/io/logto/springboot/sample/configuration/SecurityConfiguration.java\npackage io.logto.springboot.sample.configuration;\n\nimport com.nimbusds.jose.JOSEObjectType;\nimport com.nimbusds.jose.proc.DefaultJOSEObjectTypeVerifier;\nimport com.nimbusds.jose.proc.SecurityContext;\nimport io.logto.springboot.sample.validator.AudienceValidator;\nimport org.springframework.beans.factory.annotation.Value;\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.security.config.Customizer;\nimport org.springframework.security.config.annotation.web.builders.HttpSecurity;\nimport org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;\nimport org.springframework.security.config.annotation.web.configurers.oauth2.server.resource.OAuth2ResourceServerConfigurer;\nimport org.springframework.security.oauth2.core.DelegatingOAuth2TokenValidator;\nimport org.springframework.security.oauth2.core.OAuth2TokenValidator;\nimport org.springframework.security.oauth2.jwt.JwtDecoder;\nimport org.springframework.security.oauth2.jwt.JwtValidators;\nimport org.springframework.security.oauth2.jwt.NimbusJwtDecoder;\nimport org.springframework.security.oauth2.jose.jws.SignatureAlgorithm;\nimport org.springframework.security.web.DefaultSecurityFilterChain;\n\n@Configuration\n@EnableWebSecurity\npublic class SecurityConfiguration {\n\n    @Value("${logto.audience}")\n    private String audience;\n\n    @Value("${spring.security.oauth2.resourceserver.jwt.issuer-uri}")\n    private String issuer;\n\n    @Value("${spring.security.oauth2.resourceserver.jwt.jwk-set-uri}")\n    private String jwksUri;\n\n    @Bean\n    public JwtDecoder jwtDecoder() {\n        NimbusJwtDecoder jwtDecoder = NimbusJwtDecoder.withJwkSetUri(jwksUri)\n                // Logto utiliza el algoritmo ES384 para firmar los JWT por defecto.\n                .jwsAlgorithm(ES384)\n                // El decodificador debe soportar el tipo de token: Token de acceso + JWT.\n                .jwtProcessorCustomizer(customizer -> customizer.setJWSTypeVerifier(\n                        new DefaultJOSEObjectTypeVerifier<SecurityContext>(new JOSEObjectType("at+jwt"))))\n                .build();\n\n        jwtDecoder.setJwtValidator(new DelegatingOAuth2TokenValidator<>(\n                new AudienceValidator(audience),\n                new JwtIssuerValidator(issuer),\n                new JwtTimestampValidator()));\n\n        return jwtDecoder;\n    }\n\n    @Bean\n    public DefaultSecurityFilterChain securityFilterChain(HttpSecurity http) throws Exception {\n         http\n          .securityMatcher("/api/**")\n          .oauth2ResourceServer(oauth2 -> oauth2\n              .jwt(Customizer.withDefaults()))\n          .authorizeHttpRequests(requests -> requests\n              // Permitir todas las solicitudes a las APIs p\xfablicas.\n              .requestMatchers("/api/.wellknown/**").permitAll()\n              // Requerir validaci\xf3n de token jwt para las APIs protegidas.\n              .anyRequest().authenticated());\n\n        return http.build();\n    }\n}\n'})}),"\n",(0,i.jsx)(r.h2,{id:"add-apis",children:"A\xf1adir APIs"}),"\n",(0,i.jsx)(r.p,{children:"A\xf1ade un controlador para proporcionar las APIs protegidas y p\xfablicas:"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-java",children:'// path/to/project/src/main/java/io/logto/springboot/sample/controller/ProtectedController.java\npackage io.logto.springboot.sample.controller;\n\nimport org.springframework.web.bind.annotation.CrossOrigin;\nimport org.springframework.web.bind.annotation.GetMapping;\nimport org.springframework.web.bind.annotation.RestController;\n\n// Solo permitir todos los or\xedgenes para el ejemplo.\n// (Las aplicaciones de producci\xf3n deben configurar CORS cuidadosamente.)\n@CrossOrigin(origins = "*")\n@RestController\npublic class ProtectedController {\n    @GetMapping("/api/profile")\n    public String protectedProfile() {\n        return "Perfil protegido.";\n    }\n\n    @GetMapping("/api/.wellknown/config.json")\n    public String publicConfig() {\n        return "Configuraci\xf3n p\xfablica.";\n    }\n}\n\n'})}),"\n",(0,i.jsx)(r.h2,{id:"access-protected-api",children:"Acceder a la API protegida"}),"\n",(0,i.jsxs)(r.p,{children:["Construye y ejecuta tu aplicaci\xf3n web Spring Boot, por ejemplo, ejecuta la tarea ",(0,i.jsx)(r.code,{children:"bootRun"})," de Gradle."]}),"\n",(0,i.jsxs)(s.A,{children:[(0,i.jsx)(a.A,{value:"linux-or-macos",label:"Linux o macOS",children:(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-bash",children:"./gradlew bootRun\n"})})}),(0,i.jsx)(a.A,{value:"windows",label:"Windows",children:(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-bash",children:"gradlew.bat bootRun\n"})})})]}),"\n",(0,i.jsx)(r.admonition,{type:"note",children:(0,i.jsxs)(r.p,{children:["Este tutorial asume que tienes el Token de Acceso para un recurso de API ",(0,i.jsx)(r.code,{children:"http://localhost:3000/"})," antes de hacer una solicitud. Si no est\xe1s listo, ",(0,i.jsx)(r.a,{href:"/authorization/api-resources/protect-your-api",children:"lee esto"})," antes de continuar."]})}),"\n",(0,i.jsxs)(r.p,{children:["Solicita tu API protegida con el Token de Acceso como el token Bearer en el encabezado de Autorizaci\xf3n, por ejemplo, ejecuta el comando ",(0,i.jsx)(r.code,{children:"curl"}),"."]}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-bash",children:"curl --include 'http://localhost:3000/api/profile' --header 'Authorization: Bearer <your-access-token>'\n"})}),"\n",(0,i.jsx)(r.p,{children:"Si tiene \xe9xito, obtendr\xe1s una respuesta con estado 200:"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-bash",children:"HTTP/1.1 200\n...\n"})}),"\n",(0,i.jsx)(r.p,{children:"De lo contrario, obtendr\xe1s una respuesta con estado 401 como esta:"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{children:'HTTP/1.1 401\n...\nWWW-Authenticate: Bearer error="invalid_token", error_description="An error occurred while attempting to decode the Jwt: Signed JWT rejected: Invalid signature", error_uri="https://tools.ietf.org/html/rfc6750#section-3.1"\n...\n'})})]})}function h(e={}){const{wrapper:r}={...(0,t.R)(),...e.components};return r?(0,i.jsx)(r,{...e,children:(0,i.jsx)(p,{...e})}):p(e)}},3768:(e,r,n)=>{n.d(r,{A:()=>a});n(58101);var o=n(13526);const i={tabItem:"tabItem_y6LR"};var t=n(25105);function a(e){let{children:r,hidden:n,className:a}=e;return(0,t.jsx)("div",{role:"tabpanel",className:(0,o.A)(i.tabItem,a),hidden:n,children:r})}},11043:(e,r,n)=>{n.d(r,{A:()=>y});var o=n(58101),i=n(13526),t=n(32571),a=n(55234),s=n(87394),l=n(87276),c=n(31637),u=n(16063);function d(e){return o.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,o.isValidElement)(e)&&function(e){const{props:r}=e;return!!r&&"object"==typeof r&&"value"in r}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function p(e){const{values:r,children:n}=e;return(0,o.useMemo)((()=>{const e=r??function(e){return d(e).map((e=>{let{props:{value:r,label:n,attributes:o,default:i}}=e;return{value:r,label:n,attributes:o,default:i}}))}(n);return function(e){const r=(0,c.XI)(e,((e,r)=>e.value===r.value));if(r.length>0)throw new Error(`Docusaurus error: Duplicate values "${r.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[r,n])}function h(e){let{value:r,tabValues:n}=e;return n.some((e=>e.value===r))}function g(e){let{queryString:r=!1,groupId:n}=e;const i=(0,a.W6)(),t=function(e){let{queryString:r=!1,groupId:n}=e;if("string"==typeof r)return r;if(!1===r)return null;if(!0===r&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:r,groupId:n});return[(0,l.aZ)(t),(0,o.useCallback)((e=>{if(!t)return;const r=new URLSearchParams(i.location.search);r.set(t,e),i.replace({...i.location,search:r.toString()})}),[t,i])]}function m(e){const{defaultValue:r,queryString:n=!1,groupId:i}=e,t=p(e),[a,l]=(0,o.useState)((()=>function(e){let{defaultValue:r,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(r){if(!h({value:r,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${r}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return r}const o=n.find((e=>e.default))??n[0];if(!o)throw new Error("Unexpected error: 0 tabValues");return o.value}({defaultValue:r,tabValues:t}))),[c,d]=g({queryString:n,groupId:i}),[m,j]=function(e){let{groupId:r}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(r),[i,t]=(0,u.Dv)(n);return[i,(0,o.useCallback)((e=>{n&&t.set(e)}),[n,t])]}({groupId:i}),f=(()=>{const e=c??m;return h({value:e,tabValues:t})?e:null})();(0,s.A)((()=>{f&&l(f)}),[f]);return{selectedValue:a,selectValue:(0,o.useCallback)((e=>{if(!h({value:e,tabValues:t}))throw new Error(`Can't select invalid tab value=${e}`);l(e),d(e),j(e)}),[d,j,t]),tabValues:t}}var j=n(27034);const f={tabList:"tabList_swUI",tabItem:"tabItem_BXZ5"};var b=n(25105);function x(e){let{className:r,block:n,selectedValue:o,selectValue:a,tabValues:s}=e;const l=[],{blockElementScrollPositionUntilNextRender:c}=(0,t.a_)(),u=e=>{const r=e.currentTarget,n=l.indexOf(r),i=s[n].value;i!==o&&(c(r),a(i))},d=e=>{let r=null;switch(e.key){case"Enter":u(e);break;case"ArrowRight":{const n=l.indexOf(e.currentTarget)+1;r=l[n]??l[0];break}case"ArrowLeft":{const n=l.indexOf(e.currentTarget)-1;r=l[n]??l[l.length-1];break}}r?.focus()};return(0,b.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.A)("tabs",{"tabs--block":n},r),children:s.map((e=>{let{value:r,label:n,attributes:t}=e;return(0,b.jsx)("li",{role:"tab",tabIndex:o===r?0:-1,"aria-selected":o===r,ref:e=>l.push(e),onKeyDown:d,onClick:u,...t,className:(0,i.A)("tabs__item",f.tabItem,t?.className,{"tabs__item--active":o===r}),children:n??r},r)}))})}function v(e){let{lazy:r,children:n,selectedValue:t}=e;const a=(Array.isArray(n)?n:[n]).filter(Boolean);if(r){const e=a.find((e=>e.props.value===t));return e?(0,o.cloneElement)(e,{className:(0,i.A)("margin-top--md",e.props.className)}):null}return(0,b.jsx)("div",{className:"margin-top--md",children:a.map(((e,r)=>(0,o.cloneElement)(e,{key:r,hidden:e.props.value!==t})))})}function w(e){const r=m(e);return(0,b.jsxs)("div",{className:(0,i.A)("tabs-container",f.tabList),children:[(0,b.jsx)(x,{...r,...e}),(0,b.jsx)(v,{...r,...e})]})}function y(e){const r=(0,j.A)();return(0,b.jsx)(w,{...e,children:d(e.children)},String(r))}},79621:(e,r,n)=>{n.d(r,{R:()=>a,x:()=>s});var o=n(58101);const i={},t=o.createContext(i);function a(e){const r=o.useContext(t);return o.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function s(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),o.createElement(t.Provider,{value:r},e.children)}}}]);