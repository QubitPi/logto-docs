"use strict";(self.webpackChunk_logto_docs=self.webpackChunk_logto_docs||[]).push([[9786],{18682:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>c,contentTitle:()=>t,default:()=>u,frontMatter:()=>r,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"use-cases/multi-tenancy/build-multi-tenant-saas-application","title":"build-multi-tenant-saas-application","description":"Aprende c\xf3mo construir eficientemente una aplicaci\xf3n SaaS multi-inquilino con autenticaci\xf3n robusta, gesti\xf3n de organizaciones y control de acceso basado en roles.","source":"@site/i18n/es/docusaurus-plugin-content-docs/current/use-cases/multi-tenancy/build-multi-tenant-saas-application.mdx","sourceDirName":"use-cases/multi-tenancy","slug":"/use-cases/multi-tenancy/build-multi-tenant-saas-application","permalink":"/es/use-cases/multi-tenancy/build-multi-tenant-saas-application","draft":false,"unlisted":false,"editUrl":"https://github.com/logto-io/docs/tree/master/i18n/es/docusaurus-plugin-content-docs/current/use-cases/multi-tenancy/build-multi-tenant-saas-application.mdx","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2,"sidebar_label":"Construye una aplicaci\xf3n SaaS multi-inquilino","description":"Aprende c\xf3mo construir eficientemente una aplicaci\xf3n SaaS multi-inquilino con autenticaci\xf3n robusta, gesti\xf3n de organizaciones y control de acceso basado en roles."},"sidebar":"useCasesSidebar","previous":{"title":"Multi-tenencia","permalink":"/es/use-cases/multi-tenancy/"},"next":{"title":"IA","permalink":"/es/use-cases/ai/"}}');var o=a(25105),s=a(79621);const r={sidebar_position:2,sidebar_label:"Construye una aplicaci\xf3n SaaS multi-inquilino",description:"Aprende c\xf3mo construir eficientemente una aplicaci\xf3n SaaS multi-inquilino con autenticaci\xf3n robusta, gesti\xf3n de organizaciones y control de acceso basado en roles."},t="Construye una aplicaci\xf3n SaaS multi-inquilino: Una gu\xeda completa desde el dise\xf1o hasta la implementaci\xf3n",c={},d=[{value:"\xbfQu\xe9 caracter\xedsticas se requieren para la autenticaci\xf3n y autorizaci\xf3n SaaS?",id:"what-features-are-required-for-saas-authentication-and-authorization",level:2},{value:"Arquitectura multi-inquilino",id:"multi-tenant-architecture",level:3},{value:"Membres\xeda",id:"membership",level:3},{value:"Dise\xf1o de roles y permisos",id:"role-and-permission-design",level:3},{value:"Flujo de registro e inicio de sesi\xf3n",id:"sign-up-and-login-flow",level:3},{value:"Creaci\xf3n de inquilinos e invitaci\xf3n",id:"tenant-creation-and-invitation",level:3},{value:"Arquitectura t\xe9cnica y dise\xf1o del sistema",id:"technical-architecture-and-system-design",level:2},{value:"Definir la estrategia de autenticaci\xf3n",id:"define-authentication-strategy",level:3},{value:"Establecer la arquitectura multi-inquilino",id:"establish-multi-tenant-architecture",level:3},{value:"Habilitar el control de acceso en la app multi-inquilino",id:"enable-access-control-in-multi-tenant-app",level:3},{value:"Stack tecnol\xf3gico",id:"tech-stack",level:2},{value:"A\xf1ade el flujo b\xe1sico de autenticaci\xf3n a tu app",id:"add-basic-authentication-flow-to-your-app",level:2},{value:"Instala Logto en tu app",id:"install-logto-to-your-app",level:3},{value:"Personaliza los m\xe9todos de inicio de sesi\xf3n y registro",id:"customize-sign-in-and-sign-up-methods",level:3},{value:"Habilita la autenticaci\xf3n multifactor",id:"enable-multi-factor-authentication",level:3},{value:"A\xf1adiendo experiencia de organizaci\xf3n multi-inquilino",id:"adding-multi-tenant-organization-experience",level:2},{value:"Obtener la informaci\xf3n de organizaci\xf3n de un usuario",id:"get-a-user-s-organization-information",level:3},{value:"Crear organizaci\xf3n en la consola de Logto",id:"create-organization-in-logto-console",level:3},{value:"Implementar experiencia de creaci\xf3n de organizaci\xf3n self-serve",id:"implement-self-serve-organization-creation-experience",level:2},{value:"Comprender el flujo de interacci\xf3n de autenticaci\xf3n de organizaci\xf3n",id:"understand-organization-auth-interaction-flow",level:3},{value:"Protege tu API backend",id:"protect-your-backend-api",level:3},{value:"Llamando a la Management API de Logto",id:"calling-logto-management-api",level:3},{value:"Implementar control de acceso en tu app multi-inquilino",id:"implement-access-control-to-your-multi-tenant-app",level:2},{value:"Usando el token de organizaci\xf3n de Logto",id:"using-logto-organization-token",level:3},{value:"Implementar dise\xf1o de control de acceso basado en roles a nivel de organizaci\xf3n",id:"implement-organization-level-role-based-access-control-design",level:3},{value:"A\xf1ade m\xe1s funciones de app multi-inquilino",id:"add-more-multi-tenant-app-features",level:2},{value:"Resumen",id:"summary",level:2}];function l(e){const n={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",img:"img",li:"li",mermaid:"mermaid",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.R)(),...e.components},{Head:a}=n;return a||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Head",!0),(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(a,{children:(0,o.jsx)("link",{rel:"canonical",href:"https://blog.logto.io/build-multi-tenant-saas-application"})}),"\n",(0,o.jsx)("style",{children:"\n  .twoColumn {\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    gap: 24px;\n  }\n  .twoColumn + .twoColumn {\n    margin-top: 24px;\n  }\n"}),"\n",(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"construye-una-aplicaci\xf3n-saas-multi-inquilino-una-gu\xeda-completa-desde-el-dise\xf1o-hasta-la-implementaci\xf3n",children:"Construye una aplicaci\xf3n SaaS multi-inquilino: Una gu\xeda completa desde el dise\xf1o hasta la implementaci\xf3n"})}),"\n",(0,o.jsx)(n.p,{children:"\xbfC\xf3mo se construyen aplicaciones como Notion, Slack o Figma? Estas aplicaciones SaaS multi-inquilino parecen simples de usar, pero \xbfconstruir una t\xfa mismo? Eso es otra historia."}),"\n",(0,o.jsx)(n.p,{children:"Cuando pens\xe9 por primera vez en construir una bestia tan compleja, mi mente explot\xf3:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Los usuarios necesitan m\xfaltiples opciones de inicio de sesi\xf3n (correo electr\xf3nico, Google, GitHub)"}),"\n",(0,o.jsx)(n.li,{children:"Cada usuario puede crear y pertenecer a m\xfaltiples organizaciones"}),"\n",(0,o.jsx)(n.li,{children:"Diferentes niveles de permisos dentro de cada organizaci\xf3n"}),"\n",(0,o.jsx)(n.li,{children:"Organizaciones empresariales que requieren uni\xf3n autom\xe1tica para dominios de correo espec\xedficos"}),"\n",(0,o.jsx)(n.li,{children:"Requisitos de MFA para operaciones sensibles"}),"\n",(0,o.jsx)(n.li,{children:"Y m\xe1s..."}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:'"Jefe, hablemos del dise\xf1o del producto en dos semanas. Ahora mismo estoy atascado."'}),"\n",(0,o.jsxs)(n.p,{children:["Pero cuando realmente empec\xe9 a trabajar en ello, ",(0,o.jsx)(n.strong,{children:"descubr\xed que no es tan abrumador como parece."})]}),"\n",(0,o.jsxs)(n.p,{children:["\xa1Acabo de ",(0,o.jsx)(n.strong,{children:"construir un sistema con todas estas funciones con sorprendentemente poco esfuerzo!"})]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.img,{src:"https://uploads.strapi.logto.io/documind_home_page_e72468b8c9.png",alt:"documind-home-page.png"})}),"\n",(0,o.jsxs)("div",{className:"twoColumn",children:[(0,o.jsx)("img",{alt:"Panel de Documind",src:"https://uploads.strapi.logto.io/documind_dashboard_4bd2a540d2.png",width:"500"}),(0,o.jsx)("img",{alt:"P\xe1gina de organizaci\xf3n de Documind",src:"https://uploads.strapi.logto.io/documind_org_page_8157e40cd8.png",width:"500"})]}),"\n",(0,o.jsx)(n.p,{children:"Te mostrar\xe9 exactamente c\xf3mo dise\xf1ar e implementar un sistema as\xed desde cero, y te sorprender\xe1s de lo simple que realmente es en 2025 con herramientas modernas y el enfoque arquitect\xf3nico adecuado."}),"\n",(0,o.jsxs)(n.blockquote,{children:["\n",(0,o.jsx)(n.p,{children:(0,o.jsxs)(n.strong,{children:["El c\xf3digo fuente completo est\xe1 disponible en este ",(0,o.jsx)(n.a,{href:"https://github.com/logto-io/multi-tenant-saas-sample",children:"Repositorio de Github"}),". \xa1Vamos all\xe1!"]})}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:"Comenzaremos con un producto SaaS de documentaci\xf3n con IA llamado DocuMind."}),"\n",(0,o.jsx)(n.p,{children:"DocuMind es un producto SaaS de documentaci\xf3n con IA dise\xf1ado con un modelo multi-inquilino para soportar usuarios individuales, peque\xf1as empresas y empresas."}),"\n",(0,o.jsx)(n.p,{children:"La plataforma proporciona potentes capacidades de IA para la gesti\xf3n de documentos, incluyendo generaci\xf3n autom\xe1tica de res\xfamenes, extracci\xf3n de puntos clave y recomendaciones inteligentes de contenido dentro de las organizaciones."}),"\n",(0,o.jsx)(n.h2,{id:"what-features-are-required-for-saas-authentication-and-authorization",children:"\xbfQu\xe9 caracter\xedsticas se requieren para la autenticaci\xf3n y autorizaci\xf3n SaaS?"}),"\n",(0,o.jsx)(n.p,{children:"Primero, revisemos los requisitos necesarios. \xbfQu\xe9 caracter\xedsticas necesitas?"}),"\n",(0,o.jsx)(n.h3,{id:"multi-tenant-architecture",children:"Arquitectura multi-inquilino"}),"\n",(0,o.jsxs)(n.p,{children:["Para habilitar una arquitectura multi-inquilino, necesitar\xe1s una capa de entidad llamada ",(0,o.jsx)(n.strong,{children:"organizaci\xf3n"}),". Imagina tener un solo grupo de usuarios que pueden acceder a m\xfaltiples espacios de trabajo. Cada organizaci\xf3n representa un espacio de trabajo, y los usuarios mantienen una sola identidad mientras acceden a diferentes espacios de trabajo (organizaciones) seg\xfan sus roles asignados."]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.img,{src:"https://uploads.strapi.logto.io/multi_tenant_app_architecture_89ed9779f8.svg",alt:"multi-tenant-app-architecture.svg"})}),"\n",(0,o.jsx)(n.p,{children:"Es una caracter\xedstica ampliamente utilizada en los proveedores de autenticaci\xf3n. Una organizaci\xf3n en un sistema de gesti\xf3n de identidad corresponde al espacio de trabajo, proyecto o inquilino de tu aplicaci\xf3n SaaS."}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.img,{src:"https://uploads.strapi.logto.io/organization_examples_dc60ad68bb.png",alt:"organization-examples.png"})}),"\n",(0,o.jsx)(n.h3,{id:"membership",children:"Membres\xeda"}),"\n",(0,o.jsx)(n.p,{children:"Un miembro es un concepto temporal utilizado para indicar el estado de membres\xeda de una identidad dentro de una organizaci\xf3n."}),"\n",(0,o.jsxs)(n.p,{children:["Por ejemplo, Sarah se registra en tu aplicaci\xf3n usando su correo electr\xf3nico, ",(0,o.jsx)(n.strong,{children:(0,o.jsx)(n.a,{href:"mailto:sarah@gmail.com",children:"sarah@gmail.com"})}),". Ella puede pertenecer a diferentes espacios de trabajo. Si Sarah es parte de ",(0,o.jsx)(n.strong,{children:"Workspace A"})," pero no de ",(0,o.jsx)(n.strong,{children:"Workspace B"}),", se considera miembro de ",(0,o.jsx)(n.strong,{children:"Workspace A"})," pero no de ",(0,o.jsx)(n.strong,{children:"Workspace B"}),"."]}),"\n",(0,o.jsx)(n.h3,{id:"role-and-permission-design",children:"Dise\xf1o de roles y permisos"}),"\n",(0,o.jsxs)(n.p,{children:["En una arquitectura multi-inquilino, los usuarios necesitan ",(0,o.jsx)(n.strong,{children:"roles"})," con ",(0,o.jsx)(n.strong,{children:"permisos"})," espec\xedficos para acceder a los recursos de su inquilino.\nLos permisos son controles de acceso detallados que definen acciones espec\xedficas, como ",(0,o.jsx)(n.code,{children:"read: order"})," o ",(0,o.jsx)(n.code,{children:"write: order"}),". Determinan qu\xe9 acciones se pueden realizar sobre recursos particulares."]}),"\n",(0,o.jsx)(n.p,{children:"Los roles son un conjunto de permisos asignados a los miembros en un entorno multi-inquilino."}),"\n",(0,o.jsx)(n.p,{children:"Necesitar\xe1s definir estos roles y permisos, luego asignar roles a los usuarios, y a veces puede incluir procesos automatizados. Por ejemplo:"}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsxs)(n.li,{children:["Los usuarios que se unen a una organizaci\xf3n obtienen autom\xe1ticamente el rol de ",(0,o.jsx)(n.strong,{children:"miembro"}),"."]}),"\n",(0,o.jsxs)(n.li,{children:["El primer usuario que crea un espacio de trabajo recibe autom\xe1ticamente el rol de ",(0,o.jsx)(n.strong,{children:"administrador"}),"."]}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"sign-up-and-login-flow",children:"Flujo de registro e inicio de sesi\xf3n"}),"\n",(0,o.jsx)(n.p,{children:"Asegura un proceso de registro y autenticaci\xf3n f\xe1cil de usar y seguro, incluyendo opciones b\xe1sicas de inicio de sesi\xf3n y registro:"}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Inicio de sesi\xf3n con correo electr\xf3nico y contrase\xf1a"}),": M\xe9todo tradicional de inicio de sesi\xf3n con correo electr\xf3nico y contrase\xf1a."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Inicio de sesi\xf3n sin contrase\xf1a"}),": Usa c\xf3digos de verificaci\xf3n por correo electr\xf3nico para un acceso f\xe1cil y seguro."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Gesti\xf3n de cuentas"}),": Un centro de cuentas donde los usuarios pueden actualizar su correo electr\xf3nico, contrase\xf1a y otros detalles."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Inicio de sesi\xf3n social"}),": Opciones como Google y GitHub para un inicio de sesi\xf3n r\xe1pido."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Autenticaci\xf3n multifactor (MFA)"}),": Mejora la seguridad permitiendo el inicio de sesi\xf3n mediante aplicaciones autenticadoras como Duo."]}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"tenant-creation-and-invitation",children:"Creaci\xf3n de inquilinos e invitaci\xf3n"}),"\n",(0,o.jsx)(n.p,{children:"En una aplicaci\xf3n SaaS multi-inquilino, una diferencia clave en el flujo de usuario es la necesidad de soportar la creaci\xf3n de inquilinos e invitaciones a miembros. Este proceso requiere una planificaci\xf3n y ejecuci\xf3n cuidadosa, ya que juega un papel clave en la activaci\xf3n y el crecimiento del producto."}),"\n",(0,o.jsx)(n.p,{children:"Aqu\xed tienes algunos flujos de uso t\xedpicos que debes considerar:"}),"\n",(0,o.jsxs)(n.table,{children:[(0,o.jsx)(n.thead,{children:(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.th,{children:"Tipo de usuario"}),(0,o.jsx)(n.th,{children:"Punto de entrada"})]})}),(0,o.jsxs)(n.tbody,{children:[(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:"Nueva cuenta"}),(0,o.jsx)(n.td,{children:"Entra desde la p\xe1gina de inicio de sesi\xf3n y registro para crear un nuevo inquilino"})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:"Cuenta existente"}),(0,o.jsx)(n.td,{children:"Crea otro inquilino dentro del producto"})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:"La cuenta existente recibi\xf3 una invitaci\xf3n a un nuevo inquilino"}),(0,o.jsx)(n.td,{children:"Entra desde la p\xe1gina de inicio de sesi\xf3n y registro"})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:"La cuenta existente recibi\xf3 una invitaci\xf3n a un nuevo inquilino"}),(0,o.jsx)(n.td,{children:"Entra desde el correo de invitaci\xf3n"})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:"La nueva cuenta recibi\xf3 una invitaci\xf3n a un nuevo inquilino"}),(0,o.jsx)(n.td,{children:"Entra desde la p\xe1gina de inicio de sesi\xf3n y registro"})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:"La nueva cuenta recibi\xf3 una invitaci\xf3n a un nuevo inquilino"}),(0,o.jsx)(n.td,{children:"Entra desde el correo de invitaci\xf3n"})]})]})]}),"\n",(0,o.jsx)(n.p,{children:"Aqu\xed tienes algunos escenarios comunes que se encuentran en casi todas las aplicaciones SaaS. \xdasalos como referencia para inspirar a tu equipo de producto y dise\xf1o, y si\xe9ntete libre de crear tus propios flujos seg\xfan sea necesario."}),"\n",(0,o.jsxs)("div",{className:"twoColumn",children:[(0,o.jsx)("img",{alt:"Una nueva cuenta crea un inquilino",src:"https://uploads.strapi.logto.io/a_new_account_creates_a_tenant_516d2e1132.png",width:"500"}),(0,o.jsx)("img",{alt:"Un usuario existente crea otro inquilino",src:"https://uploads.strapi.logto.io/an_existing_user_creates_another_tenant_7f1340cee0.png",width:"500"})]}),"\n",(0,o.jsxs)("div",{className:"twoColumn",children:[(0,o.jsx)("img",{alt:"Un usuario existente inicia sesi\xf3n",src:"https://uploads.strapi.logto.io/an_existing_user_sign_in_3c5f87b929.png",width:"500"}),(0,o.jsx)("img",{alt:"Un usuario existente se une a trav\xe9s del correo electr\xf3nico",src:"https://uploads.strapi.logto.io/an_existing_user_join_through_email_7aa94ea6f2.png",width:"500"})]}),"\n",(0,o.jsxs)("div",{className:"twoColumn",children:[(0,o.jsx)("img",{alt:"Un nuevo usuario inicia sesi\xf3n",src:"https://uploads.strapi.logto.io/a_new_user_sign_in_e91499991c.png",width:"500"}),(0,o.jsx)("img",{alt:"Un nuevo usuario se une a trav\xe9s del correo electr\xf3nico",src:"https://uploads.strapi.logto.io/an_new_user_join_through_email_e16ef2cf79.png",width:"500"})]}),"\n",(0,o.jsx)(n.h2,{id:"technical-architecture-and-system-design",children:"Arquitectura t\xe9cnica y dise\xf1o del sistema"}),"\n",(0,o.jsx)(n.p,{children:"Una vez que entendemos todos los requisitos del producto, pasemos a la implementaci\xf3n."}),"\n",(0,o.jsx)(n.h3,{id:"define-authentication-strategy",children:"Definir la estrategia de autenticaci\xf3n"}),"\n",(0,o.jsx)(n.p,{children:"La autenticaci\xf3n puede parecer intimidante. Los usuarios necesitan:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Registro / inicio de sesi\xf3n con correo electr\xf3nico y contrase\xf1a"}),"\n",(0,o.jsx)(n.li,{children:"Inicio de sesi\xf3n con un clic usando Google / Github"}),"\n",(0,o.jsx)(n.li,{children:"Restablecimiento de contrase\xf1a cuando la olvidan"}),"\n",(0,o.jsx)(n.li,{children:"Inicio de sesi\xf3n para todo el equipo para clientes empresariales"}),"\n",(0,o.jsx)(n.li,{children:"..."}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:"Implementar solo estas funciones b\xe1sicas podr\xeda llevar semanas de desarrollo."}),"\n",(0,o.jsxs)(n.p,{children:["Pero ahora, ",(0,o.jsx)(n.strong,{children:"\xa1no necesitamos construir NADA de esto nosotros mismos!"})]}),"\n",(0,o.jsxs)(n.p,{children:["Los proveedores de autenticaci\xf3n modernos (esta vez elegir\xe9 ",(0,o.jsx)(n.a,{href:"https://logto.io/",children:"Logto"}),") han empaquetado todas estas funciones para nosotros. El flujo de autenticaci\xf3n es sencillo:"]}),"\n",(0,o.jsx)(n.mermaid,{value:'sequenceDiagram\n  actor u as Usuario\n  participant a as App\n  participant auth as ProveedorDeAutenticaci\xf3n\n\n  u->>a: Clic en "Iniciar sesi\xf3n"\n  a->>auth: Redirigir a la p\xe1gina de autenticaci\xf3n\n  auth->>u: Mostrar p\xe1gina de inicio de sesi\xf3n\n  u->>auth: Ingresar credenciales\n  auth->>a: Redirigir con token\n  a->>u: Inicio de sesi\xf3n exitoso'}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"\xa1De semanas de desarrollo a 15 minutos de configuraci\xf3n!"})," Logto maneja todos los flujos complejos por nosotros. Cubriremos los pasos de integraci\xf3n en la secci\xf3n de implementaci\xf3n m\xe1s adelante. \xa1Ahora podemos centrarnos en construir las funciones principales de DocuMind!"]}),"\n",(0,o.jsx)(n.h3,{id:"establish-multi-tenant-architecture",children:"Establecer la arquitectura multi-inquilino"}),"\n",(0,o.jsx)(n.p,{children:"El sistema de organizaciones permite a los usuarios crear y unirse a m\xfaltiples organizaciones. Comprendamos las relaciones principales:"}),"\n",(0,o.jsx)(n.mermaid,{value:'erDiagram\n    Usuario ||--o{ MiembroDeOrganizaci\xf3n : "pertenece a"\n    Organizaci\xf3n ||--o{ MiembroDeOrganizaci\xf3n : "tiene"\n\n    Usuario {\n        uuid id\n        string email\n        string nombre\n    }\n    Organizaci\xf3n {\n        uuid id\n        string nombre\n        string descripci\xf3n\n    }\n    MiembroDeOrganizaci\xf3n {\n        uuid userId\n        uuid organizationId\n    }'}),"\n",(0,o.jsx)(n.p,{children:"En este sistema, cada usuario puede pertenecer a m\xfaltiples organizaciones y cada organizaci\xf3n puede tener m\xfaltiples miembros."}),"\n",(0,o.jsx)(n.mermaid,{value:"graph TD\n    App[Aplicaci\xf3n]\n    O1[Organizaci\xf3n 1]\n    O2[Organizaci\xf3n 2]\n    M1[Miembro]\n    M2[Miembro]\n    M3[Miembro]\n\n    App --\x3e O1\n    App --\x3e O2\n    O1 --\x3e M1\n    O1 --\x3e M2\n    O2 --\x3e M2\n    O2 --\x3e M3\n\n    style O1 fill:#e6ffe6\n    style O2 fill:#e6ffe6"}),"\n",(0,o.jsx)(n.h3,{id:"enable-access-control-in-multi-tenant-app",children:"Habilitar el control de acceso en la app multi-inquilino"}),"\n",(0,o.jsx)(n.p,{children:"El Control de Acceso Basado en Roles (RBAC) es importante para garantizar la seguridad y escalabilidad en aplicaciones SaaS multi-inquilino."}),"\n",(0,o.jsx)(n.p,{children:"En una app multi-inquilino, el dise\xf1o de permisos y roles suele ser consistente, ya que proviene del dise\xf1o del producto. Por ejemplo, en m\xfaltiples espacios de trabajo, normalmente hay un rol de administrador y un rol de miembro. Logto como proveedor de autenticaci\xf3n tiene el siguiente dise\xf1o de control de acceso basado en roles a nivel de organizaci\xf3n:"}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Definiciones de permisos unificadas"}),": Los permisos se definen a nivel de sistema y se aplican de manera consistente en todas las organizaciones, asegurando una gesti\xf3n de permisos mantenible y coherente."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Plantillas de organizaci\xf3n"}),": Combinaciones predefinidas de roles y permisos a trav\xe9s de plantillas de organizaci\xf3n, simplificando la inicializaci\xf3n de organizaciones."]}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:"La relaci\xf3n de permisos se ve as\xed:"}),"\n",(0,o.jsx)(n.mermaid,{value:"graph TD\n    subgraph plantilla_organizaci\xf3n[PlantillaDeOrganizaci\xf3n]\n        subgraph rol_2[Rol2]\n            permiso_c[Permiso C]\n            permiso_d[Permiso D]\n        end\n\n        subgraph rol_1[Rol1]\n            permiso_a[Permiso A]\n            permiso_b[Permiso B]\n        end\n    end\n\n    style plantilla_organizaci\xf3n fill:#e6ffe6\n    style rol_1 fill:#ffe6e6\n    style rol_2 fill:#ffe6e6"}),"\n",(0,o.jsx)(n.p,{children:"Como cada usuario necesita su propio(s) rol(es) dentro de cada organizaci\xf3n, la relaci\xf3n entre roles y organizaciones debe reflejar los roles asignados a cada usuario:"}),"\n",(0,o.jsx)(n.mermaid,{value:"erDiagram\n    MiembroDeOrganizaci\xf3n {\n        uuid userId\n        uuid organizationId\n        uuid[] roleIds\n        datetime joinedAt\n    }\n"}),"\n",(0,o.jsx)(n.p,{children:"\xa1Hemos dise\xf1ado el sistema de organizaciones y el sistema de control de acceso, y ahora podemos empezar a construir nuestro producto!"}),"\n",(0,o.jsx)(n.h2,{id:"tech-stack",children:"Stack tecnol\xf3gico"}),"\n",(0,o.jsx)(n.p,{children:"Eleg\xed un stack amigable para principiantes y port\xe1til:"}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Frontend"}),": React (f\xe1cilmente transferible a Vue / Angular / Svelte)"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Backend"}),": Express (API simple e intuitiva)"]}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:"\xbfPor qu\xe9 separar frontend y backend? Porque tiene una arquitectura clara, f\xe1cil de aprender y simple de cambiar de stack. Y para proveedores de autenticaci\xf3n, uso Logto como ejemplo."}),"\n",(0,o.jsxs)(n.p,{children:["Y para las siguientes gu\xedas, ",(0,o.jsx)(n.strong,{children:"estos patrones funcionan con: cualquier frontend, cualquier backend y cualquier sistema de autenticaci\xf3n."})]}),"\n",(0,o.jsx)(n.h2,{id:"add-basic-authentication-flow-to-your-app",children:"A\xf1ade el flujo b\xe1sico de autenticaci\xf3n a tu app"}),"\n",(0,o.jsx)(n.p,{children:"Este es el paso m\xe1s f\xe1cil. Solo necesitamos integrar Logto en nuestro proyecto. Luego podemos configurar los m\xe9todos de inicio de sesi\xf3n / registro de usuarios en la Consola de Logto seg\xfan nuestras necesidades."}),"\n",(0,o.jsx)(n.h3,{id:"install-logto-to-your-app",children:"Instala Logto en tu app"}),"\n",(0,o.jsxs)(n.p,{children:["Primero, inicia sesi\xf3n en ",(0,o.jsx)(n.a,{href:"https://cloud.logto.io/",children:"Logto Cloud"}),". Puedes registrarte para una cuenta gratuita si no tienes una. Crea un Tenant de Desarrollo para pruebas."]}),"\n",(0,o.jsx)(n.p,{children:'En la Consola del Tenant, haz clic en el bot\xf3n "Application" a la izquierda. Luego selecciona React para empezar a construir nuestra aplicaci\xf3n.'}),"\n",(0,o.jsx)(n.p,{children:"Sigue la gu\xeda en la p\xe1gina. \xa1Puedes completar la integraci\xf3n de Logto en unos 5 minutos!"}),"\n",(0,o.jsx)(n.p,{children:"Aqu\xed tienes mi c\xf3digo de integraci\xf3n:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-jsx",children:'const config: LogtoConfig = {\n  endpoint: "<YOUR_LOGTO_ENDPOINT>",\n  appId: "<YOUR_LOGTO_APP_ID>",\n};\n\nfunction App() {\n  return (\n    <LogtoProvider config={config}>\n      <div className="min-h-screen bg-gradient-to-b from-gray-50 to-gray-100">\n        <Routes>\n          {/* Este callback maneja la redirecci\xf3n de inicio de sesi\xf3n de usuario desde Logto */}\n          <Route path="/callback" element={<Callback />} />\n          <Route path="/*" element={<AppContent />} />\n        </Routes>\n      </div>\n    </LogtoProvider>\n  );\n}\n\nfunction AppContent() {\n  const { isAuthenticated } = useLogto();\n\n  if (!isAuthenticated) {\n    // Mostrar p\xe1gina de bienvenida para usuarios no autenticados\n    return <Landing />;\n  }\n\n  // Mostrar app principal para usuarios autenticados\n  return (\n    <Routes>\n      {/* El panel muestra todas las organizaciones disponibles */}\n      <Route path="/" element={<Dashboard />} />\n\n      {/* P\xe1gina de organizaci\xf3n despu\xe9s de hacer clic en una organizaci\xf3n en el panel */}\n      <Route path="/:orgId" element={<Organization />} />\n    </Routes>\n  );\n}\n'})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.img,{src:"https://uploads.strapi.logto.io/documind_home_page_e72468b8c9.png",alt:"documind-home-page.png"})}),"\n",(0,o.jsxs)(n.p,{children:["Un truco \xfatil: Nuestra p\xe1gina de inicio de sesi\xf3n tiene botones de Iniciar sesi\xf3n y Registrarse. El bot\xf3n de Registro lleva directamente a la p\xe1gina de registro de Logto. Esto funciona gracias a la funci\xf3n ",(0,o.jsx)(n.a,{href:"/end-user-flows/authentication-parameters/first-screen",children:"first screen"})," de Logto. Determina qu\xe9 paso del flujo de autenticaci\xf3n ven los usuarios primero."]}),"\n",(0,o.jsx)(n.p,{children:"Puedes establecer la p\xe1gina de registro por defecto cuando tu producto espera muchos usuarios nuevos."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-jsx",children:'function LandingPage() {\n  const { signIn } = useLogto();\n\n  return (\n    <div className="landing-container">\n      <div className="auth-buttons">\n        <button\n          className="sign-in-button"\n          onClick={() => {\n            signIn({\n              redirectUri: \'<YOUR_APP_CALLBACK_URL>\',\n            });\n          }}\n        >\n          Iniciar sesi\xf3n\n        </button>\n\n        <button\n          className="register-button"\n          onClick={() => {\n            signIn({\n              redirectUri: \'<YOUR_APP_CALLBACK_URL>\',\n              firstScreen: \'register\',\n            });\n          }}\n        >\n          Registrarse\n        </button>\n      </div>\n    </div>\n  );\n}\n'})}),"\n",(0,o.jsx)(n.p,{children:"Despu\xe9s de hacer clic en iniciar sesi\xf3n, ir\xe1s a la p\xe1gina de inicio de sesi\xf3n de Logto. \xa1Al iniciar sesi\xf3n (o registrarte) con \xe9xito, felicidades! Tu app tiene su primer usuario (\xa1t\xfa!)."}),"\n",(0,o.jsxs)(n.p,{children:["Y llama a la funci\xf3n ",(0,o.jsx)(n.code,{children:"signOut"})," del hook ",(0,o.jsx)(n.code,{children:"useLogto"})," para cerrar sesi\xf3n del usuario cuando lo desees."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-jsx",children:"function SignOutButton() {\n  const { signOut } = useLogto();\n\n  return <button onClick={() => signOut('<YOUR_POST_LOGOUT_REDIRECT_URL>')}>Cerrar sesi\xf3n</button>;\n}\n"})}),"\n",(0,o.jsx)(n.h3,{id:"customize-sign-in-and-sign-up-methods",children:"Personaliza los m\xe9todos de inicio de sesi\xf3n y registro"}),"\n",(0,o.jsx)(n.p,{children:'En la Consola de Logto, haz clic en "Sign-in Experience" en el men\xfa de la izquierda. Luego haz clic en la pesta\xf1a "Sign-up and sign-in".\nEn esta p\xe1gina, sigue las instrucciones para configurar los m\xe9todos de inicio de sesi\xf3n / registro de Logto.'}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.img,{src:"https://uploads.strapi.logto.io/sign_in_experience_settings_68690b84f4.png",alt:"sign-in-experience-settings.png"})}),"\n",(0,o.jsx)(n.p,{children:"Y el flujo de inicio de sesi\xf3n se ver\xe1 as\xed:"}),"\n",(0,o.jsx)("img",{alt:"P\xe1gina de inicio de sesi\xf3n de Logto",src:"https://uploads.strapi.logto.io/sign_in_page_88ea6b5292.png",width:"500"}),"\n",(0,o.jsx)(n.h3,{id:"enable-multi-factor-authentication",children:"Habilita la autenticaci\xf3n multifactor"}),"\n",(0,o.jsx)(n.p,{children:'Con Logto, habilitar MFA es simple. Solo haz clic en el bot\xf3n "Multi-factor auth" en la Consola de Logto. Luego act\xedvalo en la p\xe1gina de autenticaci\xf3n multifactor.'}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.img,{src:"https://uploads.strapi.logto.io/mfa_settings_d74c5492d7.png",alt:"mfa-settings.png"})}),"\n",(0,o.jsx)(n.p,{children:"Y el flujo de MFA se ver\xe1 as\xed:"}),"\n",(0,o.jsxs)("div",{className:"twoColumn",children:[(0,o.jsx)("img",{alt:"Paso de verificaci\xf3n MFA",src:"https://uploads.strapi.logto.io/verification_step_852fffe7da.png",width:"500"}),(0,o.jsx)("img",{alt:"Escanear c\xf3digo QR en la app autenticadora",src:"https://uploads.strapi.logto.io/scan_auth_app_qr_code_68c2e26277.png",width:"500"})]}),"\n",(0,o.jsx)(n.p,{children:"\xa1Todo es tan simple! \xa1Hemos configurado un sistema de autenticaci\xf3n de usuarios complejo en solo unos minutos!"}),"\n",(0,o.jsx)(n.h2,{id:"adding-multi-tenant-organization-experience",children:"A\xf1adiendo experiencia de organizaci\xf3n multi-inquilino"}),"\n",(0,o.jsx)(n.p,{children:"\xa1Ahora tenemos nuestro primer usuario! Sin embargo, este usuario a\xfan no pertenece a ninguna organizaci\xf3n, y no hemos creado ninguna organizaci\xf3n."}),"\n",(0,o.jsx)(n.p,{children:"Logto proporciona soporte integrado para multi-inquilinato. Puedes crear cualquier n\xfamero de organizaciones en Logto. Cada organizaci\xf3n puede tener m\xfaltiples miembros."}),"\n",(0,o.jsx)(n.mermaid,{value:"graph TD\n    T[Tenant de Logto] --\x3e OrgA[Organizaci\xf3n A]\n    T --\x3e OrgB[Organizaci\xf3n B]\n    OrgA --\x3e MA1[Miembro]\n    OrgA --\x3e MA2[Miembro]\n    OrgB --\x3e MB1[Miembro]\n    OrgB --\x3e MB2[Miembro]\n\n    style OrgA fill:#e6ffe6\n    style OrgB fill:#e6ffe6\n"}),"\n",(0,o.jsx)(n.p,{children:"Cada usuario puede obtener su informaci\xf3n de organizaci\xf3n desde Logto. Esto habilita el soporte multi-inquilino."}),"\n",(0,o.jsx)(n.h3,{id:"get-a-user-s-organization-information",children:"Obtener la informaci\xf3n de organizaci\xf3n de un usuario"}),"\n",(0,o.jsx)(n.p,{children:"Para obtener la informaci\xf3n de organizaci\xf3n de un usuario desde Logto, sigue estos dos pasos:"}),"\n",(0,o.jsxs)(n.p,{children:["Declara el acceso a la informaci\xf3n de organizaci\xf3n en el Logto Config. Esto se hace configurando los ",(0,o.jsx)(n.code,{children:"scopes"})," y ",(0,o.jsx)(n.code,{children:"resources"})," apropiados."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-jsx",children:'import { UserScope, ReservedResource } from "@logto/react";\nconst config: LogtoConfig = {\n  endpoint: "<YOUR_LOGTO_ENDPOINT>",\n  appId: "<YOUR_LOGTO_APP_ID>",\n  scopes: [UserScope.Organizations], // Valor: "urn:logto:scope:organizations"\n  resources: [ReservedResource.Organization], // Valor: "urn:logto:resource:organizations"\n};\n\n'})}),"\n",(0,o.jsxs)(n.p,{children:["Usa el m\xe9todo ",(0,o.jsx)(n.code,{children:"fetchUserInfo"})," de Logto para obtener la informaci\xf3n del usuario, incluyendo los datos de organizaci\xf3n."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-jsx",children:"function Dashboard() {\n  // Obtener informaci\xf3n del usuario\n  const { fetchUserInfo } = useLogto();\n  const [organizations, setOrganizations] = useState<OrganizationData[]>([]);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    const loadOrganizations = async () => {\n      try {\n        setLoading(true);\n        // Obtener informaci\xf3n del usuario\n        const userInfo = await fetchUserInfo();\n        // Obtener informaci\xf3n de organizaci\xf3n del usuario\n        const organizationData = userInfo?.organization_data || [];\n        setOrganizations(organizationData);\n      } catch (error) {\n        console.error('No se pudieron obtener las organizaciones:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    loadOrganizations();\n  }, [fetchUserInfo]);\n\n  if (loading) {\n    return <div>Cargando...</div>;\n  }\n\n  if (organizations.length === 0) {\n    return <div>A\xfan no eres miembro de ninguna organizaci\xf3n</div>;\n  }\n\n  return <div>Organizaciones: {organizations.map(org => org.name).join(', ')}</div>;\n}\n\n"})}),"\n",(0,o.jsx)(n.p,{children:"Despu\xe9s de completar estos pasos, necesitas cerrar sesi\xf3n e iniciar sesi\xf3n de nuevo. Esto es necesario porque modificamos el scope y el recurso solicitados."}),"\n",(0,o.jsx)(n.p,{children:'Por ahora, no has creado ninguna organizaci\xf3n. El usuario tampoco se ha unido a ninguna organizaci\xf3n. El panel mostrar\xe1 "A\xfan no tienes ninguna organizaci\xf3n".'}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.img,{src:"https://uploads.strapi.logto.io/dashboard_no_orgs_94678fe16f.png",alt:"dashboard-no-orgs.png"})}),"\n",(0,o.jsx)(n.p,{children:"A continuaci\xf3n, crearemos una organizaci\xf3n para nuestros usuarios y los a\xf1adiremos a ella."}),"\n",(0,o.jsx)(n.p,{children:"Gracias a Logto, no necesitamos construir relaciones complejas de organizaci\xf3n. Solo necesitamos crear una organizaci\xf3n en Logto y a\xf1adir usuarios a ella. Logto maneja toda la complejidad por nosotros. Hay dos formas de crear Organizaciones:"}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsx)(n.li,{children:"Crear organizaciones manualmente a trav\xe9s de la Consola de Logto"}),"\n",(0,o.jsx)(n.li,{children:"Usar la Management API de Logto para crear organizaciones, especialmente al dise\xf1ar un flujo SaaS que permita a los usuarios crear sus propias organizaciones (espacios de trabajo)."}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"create-organization-in-logto-console",children:"Crear organizaci\xf3n en la consola de Logto"}),"\n",(0,o.jsx)(n.p,{children:'Haz clic en el bot\xf3n "Organizations" en el men\xfa de la izquierda de la Consola de Logto. Crea una organizaci\xf3n.'}),"\n",(0,o.jsx)(n.p,{children:"Ahora tienes tu primera organizaci\xf3n."}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.img,{src:"https://uploads.strapi.logto.io/console_organizations_7312c72766.png",alt:"console-organizations.png"})}),"\n",(0,o.jsx)(n.p,{children:"A continuaci\xf3n, a\xf1adamos el usuario a esta organizaci\xf3n."}),"\n",(0,o.jsx)(n.p,{children:'Ve a la p\xe1gina de detalles de la organizaci\xf3n. Cambia a la pesta\xf1a Miembros. Haz clic en el bot\xf3n "+ Add member". Selecciona tu usuario de inicio de sesi\xf3n de la lista de la izquierda. Haz clic en el bot\xf3n "Add members" en la parte inferior derecha. Ahora has a\xf1adido con \xe9xito el usuario a esta organizaci\xf3n.'}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.img,{src:"https://uploads.strapi.logto.io/console_add_member_to_orgs_ad21beb58f.png",alt:"console-add-member-to-orgs.png"})}),"\n",(0,o.jsx)(n.p,{children:"Actualiza la p\xe1gina de tu APP. \xa1Ver\xe1s que el usuario ahora pertenece a una organizaci\xf3n!"}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.img,{src:"https://uploads.strapi.logto.io/dashboard_has_orgs_568a44cc1f.png",alt:"dashboard-has-orgs.png"})}),"\n",(0,o.jsx)(n.h2,{id:"implement-self-serve-organization-creation-experience",children:"Implementar experiencia de creaci\xf3n de organizaci\xf3n self-serve"}),"\n",(0,o.jsx)(n.p,{children:"Crear una organizaci\xf3n en la consola no es suficiente. Tu aplicaci\xf3n SaaS necesita un flujo que permita a los usuarios finales crear y gestionar f\xe1cilmente sus propios espacios de trabajo. Para implementar esta funcionalidad, usa la Management API de Logto."}),"\n",(0,o.jsxs)(n.p,{children:["Para orientaci\xf3n, consulta la documentaci\xf3n ",(0,o.jsx)(n.a,{href:"/integrate-logto/interact-with-management-api",children:"Interactuar con Management API"})," para configurar la comunicaci\xf3n API con Logto."]}),"\n",(0,o.jsx)(n.h3,{id:"understand-organization-auth-interaction-flow",children:"Comprender el flujo de interacci\xf3n de autenticaci\xf3n de organizaci\xf3n"}),"\n",(0,o.jsx)(n.p,{children:"Tomemos el flujo de creaci\xf3n de organizaci\xf3n como ejemplo. As\xed es como funciona el proceso de creaci\xf3n de organizaci\xf3n:"}),"\n",(0,o.jsx)(n.mermaid,{value:"sequenceDiagram\n  actor A as Usuario\n  participant B as Frontend\n  participant C as Backend\n  participant D as Logto\n\n  A->>B: Solicita crear organizaci\xf3n\n  B->>C: POST /organizations\n  C->>D: POST /api/organizations\n  D--\x3e>C: Organizaci\xf3n creada\n  C->>D: POST /api/organizations/{id}/users\n  D--\x3e>C: Usuario a\xf1adido a la organizaci\xf3n\n  C--\x3e>B: Respuesta exitosa\n  B--\x3e>A: Mostrar mensaje de \xe9xito"}),"\n",(0,o.jsx)(n.p,{children:"Este flujo tiene dos requisitos clave de autenticaci\xf3n:"}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Proteger la API del servicio backend"}),":","\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"El acceso del frontend a nuestra API de servicio backend requiere autenticaci\xf3n"}),"\n",(0,o.jsx)(n.li,{children:"Los endpoints de la API est\xe1n protegidos validando el Access Token de Logto del usuario"}),"\n",(0,o.jsx)(n.li,{children:"Garantiza que solo los usuarios autenticados puedan acceder a nuestros servicios"}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Acceso a la Management API de Logto"}),":","\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"El servicio backend necesita llamar de forma segura a la Management API de Logto"}),"\n",(0,o.jsxs)(n.li,{children:["Sigue la gu\xeda ",(0,o.jsx)(n.a,{href:"/integrate-logto/interact-with-management-api",children:"Interactuar con Management API"})," para la configuraci\xf3n"]}),"\n",(0,o.jsx)(n.li,{children:"Usa autenticaci\xf3n m\xe1quina a m\xe1quina para obtener credenciales de acceso"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"protect-your-backend-api",children:"Protege tu API backend"}),"\n",(0,o.jsx)(n.p,{children:"Primero, creemos un endpoint API en nuestro servicio backend para crear organizaciones."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-jsx",children:"app.post('/organizations', async (req, res) => {\n  // Implementaci\xf3n usando la Management API de Logto\n  // ...\n});\n"})}),"\n",(0,o.jsx)(n.p,{children:"Nuestra API de servicio backend solo permite usuarios autenticados. Necesitamos usar Logto para proteger nuestra API. Tambi\xe9n necesitamos saber la informaci\xf3n del usuario actual (como el user ID)."}),"\n",(0,o.jsx)(n.p,{children:"En el concepto de Logto (y OAuth 2.0), nuestro servicio backend act\xfaa como un servidor de recursos. Los usuarios acceden al servidor de recursos DocuMind con un Access token desde el frontend. El servidor de recursos verifica este token. Si es v\xe1lido, devuelve los recursos solicitados."}),"\n",(0,o.jsx)(n.p,{children:"Creemos un API Resource para representar nuestro servicio backend."}),"\n",(0,o.jsx)(n.p,{children:"Ve a la Consola de Logto."}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsx)(n.li,{children:'Haz clic en el bot\xf3n "API resources" a la derecha.'}),"\n",(0,o.jsx)(n.li,{children:'Haz clic en "Create API resource". Selecciona Express en el popup.'}),"\n",(0,o.jsxs)(n.li,{children:['Rellena "DocuMind API" como nombre de la API. Usa "',(0,o.jsx)(n.a,{href:"https://api.documind.com/",children:"https://api.documind.com"}),'" como identificador de la API.']}),"\n",(0,o.jsx)(n.li,{children:"Haz clic en crear."}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:"No te preocupes por esta URL de identificador de API. Es solo un identificador \xfanico para tu API en Logto. No est\xe1 relacionado con la URL real de tu servicio backend."}),"\n",(0,o.jsx)(n.p,{children:"Ver\xe1s un tutorial para usar el recurso de API. Puedes seguir ese tutorial o nuestros pasos a continuaci\xf3n."}),"\n",(0,o.jsx)(n.p,{children:"Creemos un middleware requireAuth para proteger nuestro endpoint POST /organizations."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-jsx",children:"const { createRemoteJWKSet, jwtVerify } = require('jose');\n\nconst getTokenFromHeader = (headers) => {\n  const { authorization } = headers;\n  const bearerTokenIdentifier = 'Bearer';\n\n  if (!authorization) {\n    throw new Error('Falta el encabezado Authorization');\n  }\n\n  if (!authorization.startsWith(bearerTokenIdentifier)) {\n    throw new Error('Tipo de token de autorizaci\xf3n no soportado');\n  }\n\n  return authorization.slice(bearerTokenIdentifier.length + 1);\n};\n\nconst requireAuth = (resource) => {\n  if (!resource) {\n    throw new Error('El par\xe1metro resource es obligatorio para la autenticaci\xf3n');\n  }\n\n  return async (req, res, next) => {\n    try {\n      // Extraer el token\n      const token = getTokenFromHeader(req.headers);\n\n      const { payload } = await jwtVerify(\n        token,\n        createRemoteJWKSet(new URL(process.env.LOGTO_JWKS_URL)),\n        {\n          issuer: process.env.LOGTO_ISSUER,\n          audience: resource,\n        }\n      );\n\n      // A\xf1adir informaci\xf3n de usuario a la request\n      req.user = {\n        id: payload.sub,\n      };\n\n      next();\n    } catch (error) {\n      console.error('Error de autenticaci\xf3n:', error);\n      res.status(401).json({ error: 'No autorizado' });\n    }\n  };\n};\n\nmodule.exports = {\n  requireAuth,\n};\n"})}),"\n",(0,o.jsx)(n.p,{children:"Para usar este middleware, necesitamos estas variables de entorno:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"LOGTO_JWKS_URL"}),"\n",(0,o.jsx)(n.li,{children:"LOGTO_ISSUER"}),"\n"]}),"\n",(0,o.jsxs)(n.p,{children:["Obt\xe9n estas variables desde el endpoint OpenID Configuration de tu tenant de Logto. Visita ",(0,o.jsx)(n.code,{children:"https://<your-tenant-id>.logto.app/oidc/.well-known/openid-configuration"}),". Encontrar\xe1s la informaci\xf3n necesaria en el JSON devuelto:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-json",children:'{\n  "jwks_uri": "<https://tenant-id.logto.app/oidc/jwks>",\n  "issuer": "<https://tenant-id.logto.app/oidc>"\n}\n'})}),"\n",(0,o.jsx)(n.p,{children:"Ahora usa el middleware requireAuth en nuestro endpoint POST /organizations."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-jsx",children:"app.post('/organizations', requireAuth('<https://api.documind.com>'), async (req, res) => {\n  // L\xf3gica de creaci\xf3n de organizaci\xf3n\n  // ...\n});\n"})}),"\n",(0,o.jsx)(n.p,{children:"Esto protege nuestro endpoint POST /organizations. Solo los usuarios con access tokens v\xe1lidos de Logto pueden acceder a \xe9l."}),"\n",(0,o.jsx)(n.p,{children:"Ahora podemos obtener el token de Logto en nuestro frontend. Los usuarios pueden crear organizaciones a trav\xe9s de nuestro servicio backend con este token. El middleware tambi\xe9n nos da el user ID. Esto ayuda al a\xf1adir usuarios a organizaciones."}),"\n",(0,o.jsx)(n.p,{children:"En el c\xf3digo frontend, declara este recurso de API en el config de Logto. A\xf1ade su identificador al array de resources."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-jsx",children:'const config: LogtoConfig = {\n  endpoint: "<YOUR_LOGTO_ENDPOINT>",\n  appId: "<YOUR_LOGTO_APP_ID>",\n  scopes: [UserScope.Organizations],\n  resources: [ReservedResource.Organization, "<https://api.documind.com>"], // Identificador del recurso de API reci\xe9n creado\n};\n\n'})}),"\n",(0,o.jsx)(n.p,{children:"Como antes, los usuarios deben iniciar sesi\xf3n de nuevo despu\xe9s de actualizar el config de Logto."}),"\n",(0,o.jsx)(n.p,{children:"En el Dashboard, obt\xe9n el Access Token de Logto al crear una organizaci\xf3n. Usa este token para acceder a nuestra API de servicio backend."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-jsx",children:"// Obtener access token para \"DocuMind API\"\nconst token = await getAccessToken('<https://api.documind.com>');\n\n// Acceder a nuestra API de servicio backend con el token\nconst response = await fetch('<http://localhost:3000/organizations>', {\n  method: 'POST',\n  headers: {\n    'Content-Type': 'application/json',\n    Authorization: `Bearer ${token}`,\n  },\n  body: JSON.stringify({\n    name: 'Organization A',\n    description: 'Organization A description',\n  }),\n});\n"})}),"\n",(0,o.jsx)(n.p,{children:"Ahora podemos acceder correctamente a la API de servicio backend de DocuMind."}),"\n",(0,o.jsx)(n.h3,{id:"calling-logto-management-api",children:"Llamando a la Management API de Logto"}),"\n",(0,o.jsx)(n.p,{children:"Implementemos la creaci\xf3n de organizaci\xf3n usando la Management API de Logto."}),"\n",(0,o.jsx)(n.p,{children:"Al igual que las peticiones del frontend al servicio backend, las peticiones del backend a Logto necesitan Access tokens."}),"\n",(0,o.jsxs)(n.p,{children:["En Logto, usamos autenticaci\xf3n m\xe1quina a m\xe1quina para los access tokens. Consulta ",(0,o.jsx)(n.a,{href:"/integrate-logto/interact-with-management-api",children:"Interactuar con Management API"}),"."]}),"\n",(0,o.jsx)(n.p,{children:'Ve a la p\xe1gina de aplicaciones en la Consola de Logto. Crea una aplicaci\xf3n m\xe1quina a m\xe1quina. Asigna el rol "Logto Management API access". Copia el endpoint de Token, App ID y App Secret. Usaremos estos para los access tokens.'}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.img,{src:"https://uploads.strapi.logto.io/m2m_application_d882b6386e.png",alt:"m2m-application.png"})}),"\n",(0,o.jsx)(n.p,{children:"Ahora podemos obtener access tokens de la Management API de Logto a trav\xe9s de esta aplicaci\xf3n M2M."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-jsx",children:"async function fetchLogtoManagementApiAccessToken() {\n  const response = await fetch(process.env.LOGTO_MANAGEMENT_API_TOKEN_ENDPOINT, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/x-www-form-urlencoded',\n      Authorization: `Basic ${Buffer.from(\n        `${process.env.LOGTO_MANAGEMENT_API_APPLICATION_ID}:${process.env.LOGTO_MANAGEMENT_API_APPLICATION_SECRET}`\n      ).toString('base64')}`,\n    },\n    body: new URLSearchParams({\n      grant_type: 'client_credentials',\n      resource: process.env.LOGTO_MANAGEMENT_API_RESOURCE,\n      scope: 'all',\n    }).toString(),\n  });\n  const data = await response.json();\n  return data.access_token;\n}\n"})}),"\n",(0,o.jsx)(n.p,{children:"Usa este access token para llamar a la Management API de Logto."}),"\n",(0,o.jsx)(n.p,{children:"Usaremos estas APIs de Management:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"POST /api/organizations"}),": Crear organizaci\xf3n (ver: ",(0,o.jsx)(n.a,{href:"https://openapi.logto.io/operation/operation-createorganization",children:"Referencia API Crear organizaci\xf3n"}),")"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"POST /api/organizations/{id}/users"}),": A\xf1adir usuarios a la organizaci\xf3n (ver: ",(0,o.jsx)(n.a,{href:"https://openapi.logto.io/operation/operation-addusers",children:"Referencia API A\xf1adir usuarios a organizaci\xf3n"}),")"]}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-jsx",children:"app.post('/organizations', requireAuth('<https://api.documind.com>'), async (req, res) => {\n  const accessToken = await fetchLogtoManagementApiAccessToken();\n  // Crear organizaci\xf3n en Logto y a\xf1adir usuario\n  const response = await fetch(`${process.env.LOGTO_ENDPOINT}/api/organizations`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${accessToken}`,\n    },\n    body: JSON.stringify({\n      name: req.body.name,\n      description: req.body.description,\n    }),\n  });\n\n  const createdOrganization = await response.json();\n\n  await fetch(`${process.env.LOGTO_ENDPOINT}/api/organizations/${createdOrganization.id}/users`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${accessToken}`,\n    },\n    body: JSON.stringify({\n      userIds: [req.user.id],\n    }),\n  });\n\n  res.json({ data: createdOrganization });\n});\n"})}),"\n",(0,o.jsx)(n.p,{children:"Ahora hemos implementado la creaci\xf3n de organizaciones a trav\xe9s de la Management API de Logto. Tambi\xe9n podemos a\xf1adir usuarios a organizaciones."}),"\n",(0,o.jsx)(n.p,{children:"Probemos esta funci\xf3n en el Dashboard."}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.img,{src:"https://uploads.strapi.logto.io/dashboard_create_org_b703f1125b.png",alt:"dashboard-create-org.png"})}),"\n",(0,o.jsx)(n.p,{children:"y haz clic en \u201cCrear organizaci\xf3n\u201d"}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.img,{src:"https://uploads.strapi.logto.io/dashboard_has_orgs_568a44cc1f.png",alt:"dashboard-has-orgs.png"})}),"\n",(0,o.jsx)(n.p,{children:"\xa1Creaci\xf3n exitosa!"}),"\n",(0,o.jsxs)(n.p,{children:["El siguiente paso ser\xeda invitar usuarios a una organizaci\xf3n. No implementaremos esta funci\xf3n en nuestro tutorial a\xfan. Ya sabes c\xf3mo usar la Management API. Puedes consultar esta ",(0,o.jsx)(n.a,{href:"#tenant-creation-and-invitation",children:(0,o.jsx)(n.strong,{children:"Creaci\xf3n de inquilinos e invitaci\xf3n"})})," como referencia de dise\xf1o de producto y f\xe1cilmente implementar esta funci\xf3n siguiendo este post: ",(0,o.jsx)(n.a,{href:"https://blog.logto.io/implement-user-collaboration-in-your-app",children:"C\xf3mo implementamos la colaboraci\xf3n de usuarios en una app multi-inquilino"}),"."]}),"\n",(0,o.jsx)(n.h2,{id:"implement-access-control-to-your-multi-tenant-app",children:"Implementar control de acceso en tu app multi-inquilino"}),"\n",(0,o.jsx)(n.p,{children:"Ahora pasemos al control de acceso de la organizaci\xf3n."}),"\n",(0,o.jsx)(n.p,{children:"Queremos lograr:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["Los usuarios solo pueden acceder a recursos que pertenecen a sus propias organizaciones: Esto se puede hacer a trav\xe9s del ",(0,o.jsx)(n.code,{children:"token de organizaci\xf3n"})," de Logto"]}),"\n",(0,o.jsx)(n.li,{children:"Los usuarios tienen roles espec\xedficos dentro de las organizaciones (con diferentes permisos) para realizar acciones autorizadas: Esto se puede implementar mediante la funci\xf3n de plantilla de organizaci\xf3n de Logto"}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:"Veamos c\xf3mo implementar estas funciones."}),"\n",(0,o.jsx)(n.h3,{id:"using-logto-organization-token",children:"Usando el token de organizaci\xf3n de Logto"}),"\n",(0,o.jsx)(n.p,{children:"Similar al access token de Logto que mencionamos antes, Logto emite un access token correspondiente a un recurso espec\xedfico, y los usuarios usan este token para acceder a recursos protegidos en el servicio backend. Correspondientemente, Logto emite un token de organizaci\xf3n correspondiente a una organizaci\xf3n espec\xedfica, y los usuarios usan este token para acceder a recursos protegidos de la organizaci\xf3n en el servicio backend."}),"\n",(0,o.jsxs)(n.p,{children:["En la aplicaci\xf3n frontend, podemos usar el m\xe9todo ",(0,o.jsx)(n.code,{children:"getOrganizationToken"})," de Logto para obtener un token para acceder a una organizaci\xf3n espec\xedfica."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-jsx",children:"const { getOrganizationToken } = useLogto();\nconst organizationToken = await getOrganizationToken(organizationId);\n"})}),"\n",(0,o.jsxs)(n.p,{children:["Aqu\xed, ",(0,o.jsx)(n.code,{children:"organizationId"})," es el id de la organizaci\xf3n a la que pertenece el usuario."]}),"\n",(0,o.jsxs)(n.p,{children:["Antes de usar ",(0,o.jsx)(n.code,{children:"getOrganization"})," o cualquier funci\xf3n de organizaci\xf3n, debemos asegurarnos de que el scope ",(0,o.jsx)(n.code,{children:"urn:logto:scope:organizations"})," y el recurso ",(0,o.jsx)(n.code,{children:"urn:logto:resource:organization"})," est\xe9n incluidos en el config de Logto. Como ya los declaramos antes, no lo repetiremos."]}),"\n",(0,o.jsx)(n.p,{children:"En nuestra p\xe1gina de organizaci\xf3n, usamos el token de organizaci\xf3n para obtener documentos dentro de la organizaci\xf3n."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-jsx",children:"function OrganizationPage() {\n  const { organizationId } = useParams();\n  const navigate = useNavigate();\n  const { signOut, getOrganizationToken } = useLogto();\n  const [error, setError] = useState<Error | null>(null);\n  const [documents, setDocuments] = useState([]);\n\n  const fetchDocuments = useCallback(async () => {\n    if (!organizationId) return;\n\n    try {\n      const organizationToken = await getOrganizationToken(organizationId);\n      const response = await fetch(`http://localhost:3000/documents`, {\n          headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${organizationToken}`,\n        },\n      });\n      const documents = await response.json();\n      setDocuments(documents);\n    } catch (error: unknown) {\n      if (error instanceof Error) {\n        setError(error);\n      } else {\n        setError(new Error(String(error)));\n      }\n    }\n  },[getOrganizationToken, organizationId]);\n\n  useEffect(() => {\n    void fetchDocuments();\n  }, [fetchDocuments]);\n\n  if (error) {\n    return <div>Error: {error.message}</div>;\n  }\n\n  return <div>\n    <h1>Documentos de la organizaci\xf3n</h1>\n    <ul>\n      {documents.map((document) => (\n        <li key={document.id}>{document.name}</li>\n      ))}\n    </ul>\n  </div>\n}\n\n"})}),"\n",(0,o.jsx)(n.p,{children:"Hay dos puntos importantes a tener en cuenta en esta implementaci\xf3n:"}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsxs)(n.li,{children:["Si el ",(0,o.jsx)(n.code,{children:"organizationId"})," pasado a ",(0,o.jsx)(n.code,{children:"getOrganizationToken"})," no es un id de organizaci\xf3n que pertenezca al usuario actual, este m\xe9todo no podr\xe1 obtener un token, asegurando as\xed que los usuarios solo puedan acceder a sus propias organizaciones."]}),"\n",(0,o.jsxs)(n.li,{children:["Al solicitar recursos de organizaci\xf3n, usamos el token de organizaci\xf3n en lugar del access token porque para recursos que pertenecen a una organizaci\xf3n, queremos usar el control de permisos de organizaci\xf3n en vez del control de permisos de usuario (lo entender\xe1s mejor cuando implementemos la API ",(0,o.jsx)(n.code,{children:"GET /documents"})," m\xe1s adelante)."]}),"\n"]}),"\n",(0,o.jsxs)(n.p,{children:["A continuaci\xf3n, creamos una API ",(0,o.jsx)(n.code,{children:"GET /documents"})," en nuestro servicio backend. Similar a c\xf3mo usamos el recurso de API para proteger la API ",(0,o.jsx)(n.code,{children:"POST /organizations"}),", usamos indicadores de recurso espec\xedficos de organizaci\xf3n para proteger la API ",(0,o.jsx)(n.code,{children:"GET /documents"}),"."]}),"\n",(0,o.jsxs)(n.p,{children:["Primero, creemos un middleware ",(0,o.jsx)(n.code,{children:"requireOrganizationAccess"})," para proteger los recursos de Organizaci\xf3n."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-jsx",children:"const getTokenFromHeader = (headers) => {\n  const { authorization } = headers;\n  const bearerTokenIdentifier = 'Bearer';\n\n  if (!authorization) {\n    throw new Error('Falta el encabezado Authorization');\n  }\n\n  if (!authorization.startsWith(bearerTokenIdentifier)) {\n    throw new Error('Tipo de token de autorizaci\xf3n no soportado');\n  }\n\n  return authorization.slice(bearerTokenIdentifier.length + 1);\n};\n\nconst extractOrganizationId = (aud) => {\n  if (!aud || typeof aud !== 'string' || !aud.startsWith('urn:logto:organization:')) {\n    throw new Error('Token de organizaci\xf3n inv\xe1lido');\n  }\n  return aud.replace('urn:logto:organization:', '');\n};\n\nconst decodeJwtPayload = (token) => {\n  try {\n    const [, payloadBase64] = token.split('.');\n    if (!payloadBase64) {\n      throw new Error('Formato de token inv\xe1lido');\n    }\n    const payloadJson = Buffer.from(payloadBase64, 'base64').toString('utf-8');\n    return JSON.parse(payloadJson);\n  } catch (error) {\n    throw new Error('No se pudo decodificar el payload del token');\n  }\n};\n\nconst requireOrganizationAccess = () => {\n  return async (req, res, next) => {\n    try {\n      // Extraer el token\n      const token = getTokenFromHeader(req.headers);\n\n      // Obtener din\xe1micamente la audiencia del token\n      const { aud } = decodeJwtPayload(token);\n      if (!aud) {\n        throw new Error('Falta la audiencia en el token');\n      }\n\n      // Verificar el token con la audiencia\n      const { payload } = await jwtVerify(\n        token,\n        createRemoteJWKSet(new URL(process.env.LOGTO_JWKS_URL)),\n        {\n          issuer: process.env.LOGTO_ISSUER,\n          audience: aud,\n        }\n      );\n\n      // Extraer el id de organizaci\xf3n del claim de audiencia\n      const organizationId = extractOrganizationId(payload.aud);\n\n      // A\xf1adir informaci\xf3n de organizaci\xf3n a la request\n      req.user = {\n        id: payload.sub,\n        organizationId,\n      };\n\n      next();\n    } catch (error) {\n      console.error('Error de autenticaci\xf3n de organizaci\xf3n:', error);\n      res.status(401).json({ error: 'No autorizado - Acceso a organizaci\xf3n inv\xe1lido' });\n    }\n  };\n};\n"})}),"\n",(0,o.jsxs)(n.p,{children:["Luego usamos el middleware ",(0,o.jsx)(n.code,{children:"requireOrganizationAccess"})," para proteger la API ",(0,o.jsx)(n.code,{children:"GET /documents"}),"."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-jsx",children:"app.get('/documents', requireOrganizationAccess(), async (req, res) => {\n  // Puedes obtener el id del usuario actual y organizationId a trav\xe9s de req.user\n  console.log('userId', req.user.id);\n  console.log('organizationId', req.user.organizationId);\n\n  // Obtener documentos de la base de datos por organizationId\n  // ....\n  const documents = await getDocumentsByOrganizationId(req.user.organizationId);\n\n  res.json(documents);\n});\n"})}),"\n",(0,o.jsx)(n.p,{children:"De esta manera, hemos implementado el uso de tokens de organizaci\xf3n para acceder a recursos de organizaci\xf3n. En el servicio backend, puedes recuperar los recursos correspondientes de la base de datos seg\xfan el id de organizaci\xf3n."}),"\n",(0,o.jsxs)(n.p,{children:["Algunos softwares requieren aislamiento de datos entre organizaciones. Para m\xe1s discusi\xf3n e implementaci\xf3n, puedes consultar el post: ",(0,o.jsx)(n.a,{href:"https://blog.logto.io/implement-multi-tenancy",children:"Implementaci\xf3n multi-inquilino con PostgreSQL: Aprende con un ejemplo real sencillo"}),"."]}),"\n",(0,o.jsx)(n.h3,{id:"implement-organization-level-role-based-access-control-design",children:"Implementar dise\xf1o de control de acceso basado en roles a nivel de organizaci\xf3n"}),"\n",(0,o.jsx)(n.p,{children:"Hemos implementado el uso de tokens de organizaci\xf3n para acceder a recursos de organizaci\xf3n. Ahora, implementaremos el control de permisos de usuario dentro de las organizaciones usando RBAC."}),"\n",(0,o.jsx)(n.p,{children:"Supongamos que DocuMind tiene dos roles: Admin y Colaborador."}),"\n",(0,o.jsx)(n.p,{children:"Los administradores pueden crear y acceder a documentos, mientras que los Colaboradores solo pueden acceder a documentos."}),"\n",(0,o.jsx)(n.p,{children:"Por lo tanto, nuestra Organizaci\xf3n necesita tener estos dos roles: Admin y Colaborador."}),"\n",(0,o.jsxs)(n.p,{children:["Admin tiene los permisos ",(0,o.jsx)(n.code,{children:"read:documents"})," y ",(0,o.jsx)(n.code,{children:"create:documents"}),", mientras que Colaborador solo tiene el permiso ",(0,o.jsx)(n.code,{children:"read:documents"}),"."]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["Admin","\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.code,{children:"read:documents"})}),"\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.code,{children:"create:documents"})}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["Colaborador","\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.code,{children:"read:documents"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:"Aqu\xed es donde entra en juego la funci\xf3n de plantilla de organizaci\xf3n de Logto."}),"\n",(0,o.jsx)(n.p,{children:"Una plantilla de organizaci\xf3n es un plano del modelo de control de acceso para cada organizaci\xf3n: define los roles y permisos que se aplican a todas las organizaciones."}),"\n",(0,o.jsxs)(n.blockquote,{children:["\n",(0,o.jsx)(n.p,{children:"\xbfPor qu\xe9 plantilla de organizaci\xf3n?"}),"\n",(0,o.jsx)(n.p,{children:"Porque la escalabilidad es uno de los requisitos m\xe1s importantes para productos SaaS. En otras palabras, lo que funciona para un cliente debe funcionar para todos los clientes."}),"\n"]}),"\n",(0,o.jsxs)(n.p,{children:["Vamos a Logto Console > Organization Templates > Organization permissions y creamos dos permisos: ",(0,o.jsx)(n.code,{children:"read:documents"})," y ",(0,o.jsx)(n.code,{children:"create:documents"}),"."]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.img,{src:"https://uploads.strapi.logto.io/org_template_permission_f0ad59f5b5.png",alt:"org-template-permission.png"})}),"\n",(0,o.jsx)(n.p,{children:"Luego ve a la pesta\xf1a de roles de organizaci\xf3n para crear dos roles de usuario: Admin y Colaborador, y asigna los permisos correspondientes a estos roles."}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.img,{src:"https://uploads.strapi.logto.io/organization_details_9293d7965d.png",alt:"organization-details.png"})}),"\n",(0,o.jsx)(n.p,{children:"De esta manera, hemos creado un modelo de permisos RBAC para cada organizaci\xf3n."}),"\n",(0,o.jsx)(n.p,{children:"A continuaci\xf3n, vamos a la p\xe1gina de detalles de nuestra Organizaci\xf3n para asignar los roles apropiados a nuestros miembros."}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.img,{src:"https://uploads.strapi.logto.io/org_template_role_0137f5a8ca.png",alt:"org-template-role.png"})}),"\n",(0,o.jsx)(n.p,{children:"\xa1Ahora nuestros usuarios de organizaci\xf3n tienen roles!\nPuedes realizar estos pasos v\xeda la Management API de Logto:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-jsx",children:"// Asignar el rol 'Admin' al creador de la organizaci\xf3n\napp.post('/organizations', requireAuth('https://api.documind.com'), async (req, res) => {\n  const accessToken = await fetchLogtoManagementApiAccessToken();\n  // Crear organizaci\xf3n en Logto\n  // c\xf3digos existentes...\n\n  // A\xf1adir usuario a la organizaci\xf3n en Logto\n  await fetch(`${process.env.LOGTO_ENDPOINT}/api/organizations/${createdOrganization.id}/users`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${accessToken}`,\n    },\n    body: JSON.stringify({\n      userIds: [req.user.id],\n    }),\n  });\n\n  // Asignar el rol `Admin` al primer usuario.\n  const rolesResponse = await fetch(`${process.env.LOGTO_ENDPOINT}/api/organization-roles`, {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${accessToken}`,\n    },\n  });\n\n  const roles = await rolesResponse.json();\n\n  // Encontrar el rol `Admin`\n  const adminRole = roles.find((role) => role.name === 'Admin');\n\n  // Asignar el rol `Admin` al primer usuario.\n  await fetch(\n    `${process.env.LOGTO_ENDPOINT}/api/organizations/${createdOrganization.id}/users/${req.user.id}/roles`,\n    {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${accessToken}`,\n      },\n      body: JSON.stringify({\n        organizationRoleIds: [adminRole.id],\n      }),\n    }\n  );\n\n  // c\xf3digos existentes...\n});\n"})}),"\n",(0,o.jsx)(n.p,{children:"Ahora podemos implementar el control de permisos de usuario comprobando sus permisos."}),"\n",(0,o.jsx)(n.p,{children:"En nuestro c\xf3digo, necesitamos hacer que el token de organizaci\xf3n del usuario lleve la informaci\xf3n de permisos, y luego verificar estos permisos en el backend."}),"\n",(0,o.jsxs)(n.p,{children:["En el config de Logto del frontend, necesitamos declarar los permisos que los usuarios deben solicitar dentro de la organizaci\xf3n. A\xf1adamos los permisos ",(0,o.jsx)(n.code,{children:"read:documents"})," y ",(0,o.jsx)(n.code,{children:"create:documents"})," a los ",(0,o.jsx)(n.code,{children:"scopes"}),"."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-jsx",children:'const config: LogtoConfig = {\n  endpoint: "<YOUR_LOGTO_ENDPOINT>",\n  appId: "<YOUR_LOGTO_APP_ID>",\n  scopes: [UserScope.Organizations, "read:documents", "create:documents"],\n  resources: [ReservedResource.Organization, "<https://api.documind.com>"], // Identificador del recurso de API reci\xe9n creado\n};\n\n'})}),"\n",(0,o.jsx)(n.p,{children:"Como siempre, inicia sesi\xf3n de nuevo con tu usuario para que estas configuraciones tengan efecto."}),"\n",(0,o.jsxs)(n.p,{children:["Luego, en el middleware ",(0,o.jsx)(n.code,{children:"requireOrganizationAccess"})," del backend, a\xf1adimos la verificaci\xf3n de permisos de usuario."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-jsx",children:"const hasRequiredScopes = (tokenScopes, requiredScopes) => {\n  if (!requiredScopes || requiredScopes.length === 0) {\n    return true;\n  }\n  const scopeSet = new Set(tokenScopes);\n  return requiredScopes.every((scope) => scopeSet.has(scope));\n};\n\nconst requireOrganizationAccess = ({ requiredScopes = [] } = {}) => {\n  return async (req, res, next) => {\n    try {\n      //...\n\n      // Verificar el token con la audiencia\n      const { payload } = await jwtVerify(\n        token,\n        createRemoteJWKSet(new URL(process.env.LOGTO_JWKS_URL)),\n        {\n          issuer: process.env.LOGTO_ISSUER,\n          audience: aud,\n        }\n      );\n\n      //...\n\n      // Obtener scopes del token\n      const scopes = payload.scope?.split(' ') || [];\n\n      // Verificar los scopes requeridos\n      if (!hasRequiredScopes(scopes, requiredScopes)) {\n        throw new Error('Permisos insuficientes');\n      }\n\n      //...\n\n      next();\n    } catch (error) {\n      //...\n    }\n  };\n};\n"})}),"\n",(0,o.jsxs)(n.p,{children:["Luego crea una API POST /documents, y usa el middleware ",(0,o.jsx)(n.code,{children:"requireOrganizationAccess"})," con la configuraci\xf3n requiredScopes para proteger esta API y la anterior API ",(0,o.jsx)(n.code,{children:"GET /documents"}),"."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-jsx",children:"// API para crear documentos\napp.post(\n  '/documents',\n  requireOrganizationAccess({ requiredScopes: ['create:documents'] }),\n  async (req, res) => {\n    //...\n  }\n);\n\n// API para obtener documentos\napp.get(\n  '/documents',\n  requireOrganizationAccess({ requiredScopes: ['read:documents'] }),\n  async (req, res) => {\n    //...\n  }\n);\n"})}),"\n",(0,o.jsx)(n.p,{children:"De esta manera, hemos implementado el control de permisos de usuario comprobando los permisos del usuario."}),"\n",(0,o.jsxs)(n.p,{children:["En el frontend, puedes obtener la informaci\xf3n de permisos del usuario decodificando el token de organizaci\xf3n o llamando al m\xe9todo ",(0,o.jsx)(n.code,{children:"getOrganizationTokenClaims"})," de Logto."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-jsx",children:"const [scopes, setScopes] = useState([]);\nconst { getOrganizationTokenClaims } = useLogto();\n\nconst loadScopes = async () => {\n  const claims = await getOrganizationTokenClaims(organizationId);\n  setScopes(claims.scope.split(' '));\n};\n\n// ...\n"})}),"\n",(0,o.jsx)(n.p,{children:"Controla los elementos de la p\xe1gina seg\xfan los permisos del usuario comprobando los scopes en los claims."}),"\n",(0,o.jsx)(n.h2,{id:"add-more-multi-tenant-app-features",children:"A\xf1ade m\xe1s funciones de app multi-inquilino"}),"\n",(0,o.jsx)(n.p,{children:"\xa1Hasta ahora, hemos implementado las funciones b\xe1sicas de usuario y organizaci\xf3n en un sistema SaaS multi-inquilino! Sin embargo, todav\xeda hay algunas funciones que no hemos cubierto, como personalizar la marca de la p\xe1gina de inicio de sesi\xf3n para cada Organizaci\xf3n, a\xf1adir autom\xe1ticamente usuarios con correos de dominio espec\xedfico a ciertas organizaciones e integrar funcionalidad SSO a nivel empresarial."}),"\n",(0,o.jsx)(n.p,{children:"Todas estas son funciones listas para usar, y puedes encontrar m\xe1s informaci\xf3n sobre ellas en la documentaci\xf3n de Logto:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"/end-user-flows/enterprise-sso",children:"Integraci\xf3n SSO empresarial"})}),"\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"/organizations/just-in-time-provisioning",children:"Aprovisionamiento Just-in-Time (JIT)"})}),"\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"/customization/match-your-brand#organization-specific-branding",children:"Personalizaci\xf3n de marca a nivel de organizaci\xf3n"})}),"\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"/organizations/organization-management#require-mfa-for-organization-members",children:"Autenticaci\xf3n multifactor a nivel de organizaci\xf3n (MFA)"})}),"\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"/end-user-flows/organization-experience/organization-management",children:"Gesti\xf3n a nivel de organizaci\xf3n"})}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"summary",children:"Resumen"}),"\n",(0,o.jsx)(n.p,{children:"\xbfRecuerdas lo abrumador que parec\xeda al principio? Usuarios, organizaciones, permisos, funciones empresariales... parec\xeda una monta\xf1a interminable por escalar."}),"\n",(0,o.jsx)(n.p,{children:"Pero mira lo que hemos logrado:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Un sistema de autenticaci\xf3n completo con m\xfaltiples opciones de inicio de sesi\xf3n y soporte MFA"}),"\n",(0,o.jsx)(n.li,{children:"Un sistema de organizaciones flexible que soporta m\xfaltiples membres\xedas"}),"\n",(0,o.jsx)(n.li,{children:"Control de acceso basado en roles dentro de las organizaciones"}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:"\xbfY lo mejor? No tuvimos que reinventar la rueda. Aprovechando herramientas modernas como Logto, transformamos lo que podr\xeda haber sido meses de desarrollo en cuesti\xf3n de minutos."}),"\n",(0,o.jsxs)(n.p,{children:["El c\xf3digo fuente completo de este tutorial est\xe1 disponible en: ",(0,o.jsx)(n.a,{href:"https://github.com/logto-io/multi-tenant-saas-sample",children:"Ejemplo SaaS multi-inquilino"}),"."]}),"\n",(0,o.jsx)(n.p,{children:"Este es el poder del desarrollo moderno en 2025: podemos centrarnos en construir funciones \xfanicas de producto en lugar de luchar con la infraestructura. \xa1Ahora es tu turno de construir algo incre\xedble!"}),"\n",(0,o.jsxs)(n.p,{children:["Explora todas las funciones de Logto, desde Logto Cloud hasta Logto OSS, en el ",(0,o.jsx)(n.a,{href:"https://logto.io/",children:"sitio web de Logto"})," o reg\xedstrate en ",(0,o.jsx)(n.a,{href:"https://cloud.logto.io/?sign_up",children:"Logto cloud"})," hoy mismo."]})]})}function u(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}},79621:(e,n,a)=>{a.d(n,{R:()=>r,x:()=>t});var i=a(58101);const o={},s=i.createContext(o);function r(e){const n=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);