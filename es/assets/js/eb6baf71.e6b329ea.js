"use strict";(self.webpackChunk_logto_docs=self.webpackChunk_logto_docs||[]).push([[14771],{1830:(e,o,n)=>{n.r(o),n.d(o,{assets:()=>i,contentTitle:()=>d,default:()=>u,frontMatter:()=>r,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"logto-oss/develop-your-connector/connector-file-structure","title":"Estructura de archivos del conector","description":"Adjunto se encuentra un \xe1rbol de archivos para demostrar c\xf3mo est\xe1n organizados los archivos de los conectores como un proyecto de TypeScript.","source":"@site/i18n/es/docusaurus-plugin-content-docs/current/logto-oss/develop-your-connector/connector-file-structure.mdx","sourceDirName":"logto-oss/develop-your-connector","slug":"/logto-oss/develop-your-connector/connector-file-structure","permalink":"/es/logto-oss/develop-your-connector/connector-file-structure","draft":false,"unlisted":false,"editUrl":"https://github.com/logto-io/docs/tree/master/i18n/es/docusaurus-plugin-content-docs/current/logto-oss/develop-your-connector/connector-file-structure.mdx","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"docsSidebar","previous":{"title":"Desarrolla tu conector","permalink":"/es/logto-oss/develop-your-connector/"},"next":{"title":"Implementar conectores","permalink":"/es/logto-oss/develop-your-connector/implement-connectors"}}');var t=n(25105),c=n(79621);const r={sidebar_position:1},d="Estructura de archivos del conector",i={},l=[{value:"package.json",id:"packagejson",level:3},{value:"README.md",id:"readmemd",level:3},{value:"logo.svg",id:"logosvg",level:3},{value:"logo-dark.svg",id:"logo-darksvg",level:3},{value:"index.ts",id:"indexts",level:3},{value:"index.test.ts",id:"indextestts",level:3},{value:"types.ts",id:"typests",level:3},{value:"constant.ts",id:"constantts",level:3},{value:"mock.ts",id:"mockts",level:3},{value:"utils.ts",id:"utilsts",level:3}];function a(e){const o={a:"a",admonition:"admonition",code:"code",h1:"h1",h3:"h3",header:"header",p:"p",pre:"pre",...(0,c.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(o.header,{children:(0,t.jsx)(o.h1,{id:"estructura-de-archivos-del-conector",children:"Estructura de archivos del conector"})}),"\n",(0,t.jsx)(o.p,{children:"Adjunto se encuentra un \xe1rbol de archivos para demostrar c\xf3mo est\xe1n organizados los archivos de los conectores como un proyecto de TypeScript."}),"\n",(0,t.jsxs)(o.p,{children:["Los archivos cuyo nombre termina con ",(0,t.jsx)(o.code,{children:"^"})," se refieren a un archivo opcional, de lo contrario, son obligatorios."]}),"\n",(0,t.jsx)(o.pre,{children:(0,t.jsx)(o.code,{children:"ConnectorRootDir/\n\u251c\u2500\u2500 package.json\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 logo.svg\n\u251c\u2500\u2500 logo-dark.svg^\n\u2514\u2500\u2500 src/\n    \u251c\u2500\u2500 index.ts\n    \u251c\u2500\u2500 index.test.ts\n    \u251c\u2500\u2500 types.ts\n    \u251c\u2500\u2500 constant.ts\n    \u251c\u2500\u2500 mock.ts^\n    \u251c\u2500\u2500 utils.ts^\n    \u251c\u2500\u2500 utils.test.ts^\n    \u2514\u2500\u2500 ...\n"})}),"\n",(0,t.jsx)(o.p,{children:"Basado en la estructura de archivos del conector, revisemos cada archivo y descubramos c\xf3mo funcionan juntos como un sistema completo."}),"\n",(0,t.jsx)(o.h3,{id:"packagejson",children:"package.json"}),"\n",(0,t.jsxs)(o.p,{children:[(0,t.jsx)(o.code,{children:"package.json"})," contiene configuraciones de este repositorio del conector. Se fusionar\xe1 con un ",(0,t.jsx)(o.code,{children:"package.json"})," compartido, que contiene dependencias y atributos comunes."]}),"\n",(0,t.jsx)(o.h3,{id:"readmemd",children:"README.md"}),"\n",(0,t.jsxs)(o.p,{children:[(0,t.jsx)(o.code,{children:"README.md"})," es una gu\xeda detallada para configurar la configuraci\xf3n del conector."]}),"\n",(0,t.jsx)(o.h3,{id:"logosvg",children:"logo.svg"}),"\n",(0,t.jsxs)(o.p,{children:[(0,t.jsx)(o.code,{children:"logo.svg"})," es un archivo que almacena el logotipo del conector en formato de imagen vectorial."]}),"\n",(0,t.jsx)(o.h3,{id:"logo-darksvg",children:"logo-dark.svg"}),"\n",(0,t.jsxs)(o.p,{children:["El archivo ",(0,t.jsx)(o.code,{children:"logo-dark.svg"})," contiene el gr\xe1fico vectorial del logotipo del conector en modo oscuro."]}),"\n",(0,t.jsx)(o.admonition,{type:"note",children:(0,t.jsxs)(o.p,{children:["Consulta ",(0,t.jsx)(o.a,{href:"/connectors/connector-data-structure/#logo",children:"logo del conector"})," para saber m\xe1s sobre la relaci\xf3n entre ",(0,t.jsx)(o.code,{children:"logo.svg"})," y ",(0,t.jsx)(o.code,{children:"logo-dark.svg"}),"."]})}),"\n",(0,t.jsx)(o.h3,{id:"indexts",children:"index.ts"}),"\n",(0,t.jsxs)(o.p,{children:[(0,t.jsx)(o.code,{children:"index.ts"})," es el archivo para la implementaci\xf3n de la clase del conector."]}),"\n",(0,t.jsx)(o.h3,{id:"indextestts",children:"index.test.ts"}),"\n",(0,t.jsxs)(o.p,{children:[(0,t.jsx)(o.code,{children:"index.test.ts"})," es un archivo que contiene pruebas unitarias (UTs) correspondientes para las implementaciones en ",(0,t.jsx)(o.code,{children:"index.ts"}),"."]}),"\n",(0,t.jsx)(o.h3,{id:"typests",children:"types.ts"}),"\n",(0,t.jsxs)(o.p,{children:[(0,t.jsx)(o.code,{children:"types.ts"})," es donde debes definir los tipos de las variables."]}),"\n",(0,t.jsx)(o.h3,{id:"constantts",children:"constant.ts"}),"\n",(0,t.jsxs)(o.p,{children:[(0,t.jsx)(o.code,{children:"constant.ts"})," es donde debes colocar las constantes relacionadas con el conector, incluidos los endpoints, metadatos del conector, etc."]}),"\n",(0,t.jsx)(o.h3,{id:"mockts",children:"mock.ts"}),"\n",(0,t.jsxs)(o.p,{children:[(0,t.jsx)(o.code,{children:"mock.ts"})," es el archivo donde puedes colocar valores simulados para prop\xf3sitos de prueba."]}),"\n",(0,t.jsx)(o.h3,{id:"utilsts",children:"utils.ts"}),"\n",(0,t.jsxs)(o.p,{children:[(0,t.jsx)(o.code,{children:"utils.ts"})," es el archivo donde los desarrolladores colocan funciones de utilidad, y ",(0,t.jsx)(o.code,{children:"utils.test.ts"})," debe contener las UTs relacionadas."]})]})}function u(e={}){const{wrapper:o}={...(0,c.R)(),...e.components};return o?(0,t.jsx)(o,{...e,children:(0,t.jsx)(a,{...e})}):a(e)}},79621:(e,o,n)=>{n.d(o,{R:()=>r,x:()=>d});var s=n(58101);const t={},c=s.createContext(t);function r(e){const o=s.useContext(c);return s.useMemo((function(){return"function"==typeof e?e(o):{...o,...e}}),[o,e])}function d(e){let o;return o=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),s.createElement(c.Provider,{value:o},e.children)}}}]);