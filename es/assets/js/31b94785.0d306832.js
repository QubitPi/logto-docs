"use strict";(self.webpackChunk_logto_docs=self.webpackChunk_logto_docs||[]).push([[9270],{51780:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>t,contentTitle:()=>c,default:()=>u,frontMatter:()=>a,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"use-cases/authorization/rbac-in-practice","title":"rbac-in-practice","description":"Una gu\xeda pr\xe1ctica sobre el control de acceso basado en roles (RBAC): Aprende c\xf3mo dise\xf1ar permisos, gestionar roles y configurar una autorizaci\xf3n segura en tu CMS.","source":"@site/i18n/es/docusaurus-plugin-content-docs/current/use-cases/authorization/rbac-in-practice.mdx","sourceDirName":"use-cases/authorization","slug":"/use-cases/authorization/rbac-in-practice","permalink":"/es/use-cases/authorization/rbac-in-practice","draft":false,"unlisted":false,"editUrl":"https://github.com/logto-io/docs/tree/master/i18n/es/docusaurus-plugin-content-docs/current/use-cases/authorization/rbac-in-practice.mdx","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1,"sidebar_label":"RBAC en la pr\xe1ctica","description":"Una gu\xeda pr\xe1ctica sobre el control de acceso basado en roles (RBAC): Aprende c\xf3mo dise\xf1ar permisos, gestionar roles y configurar una autorizaci\xf3n segura en tu CMS."},"sidebar":"useCasesSidebar","previous":{"title":"Autorizaci\xf3n","permalink":"/es/use-cases/authorization/"},"next":{"title":"Multi-tenencia","permalink":"/es/use-cases/multi-tenancy/"}}');var i=n(25105),o=n(79621);const a={sidebar_position:1,sidebar_label:"RBAC en la pr\xe1ctica",description:"Una gu\xeda pr\xe1ctica sobre el control de acceso basado en roles (RBAC): Aprende c\xf3mo dise\xf1ar permisos, gestionar roles y configurar una autorizaci\xf3n segura en tu CMS."},c="RBAC en la pr\xe1ctica: Implementando autorizaci\xf3n segura para tu aplicaci\xf3n",t={},l=[{value:"Entendiendo los fundamentos de RBAC",id:"understanding-rbac-fundamentals",level:2},{value:"Dise\xf1o de permisos granulares",id:"fine-grained-permission-design",level:3},{value:"Propiedad de recursos y control de acceso",id:"resource-ownership-and-access-control",level:3},{value:"Dise\xf1ando APIs seguras",id:"designing-a-secure-apis",level:2},{value:"Implementar control de acceso para tu API",id:"implement-access-control-for-your-api",level:3},{value:"Crear un sistema de permisos que escale",id:"creating-a-permission-system-that-scales",level:3},{value:"Construyendo roles efectivos",id:"building-effective-roles",level:2},{value:"Configurar RBAC en Logto",id:"config-rbac-in-logto",level:2},{value:"Configurando tu aplicaci\xf3n",id:"setting-up-your-application",level:3},{value:"Configurando recursos de API y permisos",id:"configuring-api-resources-and-permissions",level:3},{value:"Creando roles",id:"creating-roles",level:3},{value:"Asignando roles a los usuarios",id:"assigning-roles-to-users",level:3},{value:"Integra tu frontend con Logto RBAC",id:"integrate-your-frontend-with-logto-rbac",level:2},{value:"Integra tu backend con Logto RBAC",id:"integrate-your-backend-with-logto-rbac",level:2},{value:"Middleware de autorizaci\xf3n en el backend",id:"backend-authorization-middleware",level:3},{value:"Protegiendo endpoints de API",id:"protecting-api-endpoints",level:3},{value:"Prueba la implementaci\xf3n de RBAC en el CMS",id:"test-the-cms-rbac-implementation",level:2},{value:"Conclusi\xf3n",id:"conclusion",level:2}];function d(e){const s={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,o.R)(),...e.components},{Head:n}=s;return n||function(e,s){throw new Error("Expected "+(s?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Head",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n,{children:(0,i.jsx)("link",{rel:"canonical",href:"https://blog.logto.io/rbac-in-practice"})}),"\n",(0,i.jsx)(s.header,{children:(0,i.jsx)(s.h1,{id:"rbac-en-la-pr\xe1ctica-implementando-autorizaci\xf3n-segura-para-tu-aplicaci\xf3n",children:"RBAC en la pr\xe1ctica: Implementando autorizaci\xf3n segura para tu aplicaci\xf3n"})}),"\n",(0,i.jsx)(s.p,{children:"\xbfTienes dificultades para implementar un sistema de autorizaci\xf3n seguro y escalable para tu aplicaci\xf3n? El control de acceso basado en roles (RBAC) es el est\xe1ndar de la industria para gestionar los permisos de los usuarios, pero implementarlo correctamente puede ser un reto. Este tutorial te mostrar\xe1 c\xf3mo construir un sistema RBAC robusto usando un ejemplo real de un sistema de gesti\xf3n de contenidos (CMS)."}),"\n",(0,i.jsx)(s.p,{children:"Siguiendo esta gu\xeda, aprender\xe1s:"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"\u2728 C\xf3mo dise\xf1ar e implementar permisos granulares que te den control preciso"}),"\n",(0,i.jsx)(s.li,{children:"\ud83d\udd12 Mejores pr\xe1cticas para organizar permisos en roles significativos"}),"\n",(0,i.jsx)(s.li,{children:"\ud83d\udc64 T\xe9cnicas para gestionar la propiedad de recursos de manera efectiva"}),"\n",(0,i.jsx)(s.li,{children:"\ud83d\ude80 Formas de hacer que tu sistema de autorizaci\xf3n sea escalable y mantenible"}),"\n",(0,i.jsx)(s.li,{children:"\ud83d\udca1 Implementaci\xf3n pr\xe1ctica usando un ejemplo real de CMS"}),"\n"]}),"\n",(0,i.jsxs)(s.p,{children:["El c\xf3digo fuente completo de este tutorial est\xe1 disponible en ",(0,i.jsx)(s.a,{href:"https://github.com/logto-io/rbac-sample",children:"GitHub"}),"."]}),"\n",(0,i.jsx)(s.h2,{id:"understanding-rbac-fundamentals",children:"Entendiendo los fundamentos de RBAC"}),"\n",(0,i.jsx)(s.p,{children:"El control de acceso basado en roles es m\xe1s que solo asignar permisos a los usuarios. Se trata de crear un enfoque estructurado para la autorizaci\xf3n que equilibre la seguridad con la mantenibilidad."}),"\n",(0,i.jsxs)(s.p,{children:["Puedes aprender m\xe1s sobre ",(0,i.jsx)(s.a,{href:"https://auth-wiki.logto.io/rbac",children:"\xbfQu\xe9 es RBAC?"})," en Auth Wiki."]}),"\n",(0,i.jsx)(s.p,{children:"Estos son los principios clave que seguiremos en nuestra implementaci\xf3n:"}),"\n",(0,i.jsx)(s.h3,{id:"fine-grained-permission-design",children:"Dise\xf1o de permisos granulares"}),"\n",(0,i.jsx)(s.p,{children:'Los permisos granulares te dan control preciso sobre lo que los usuarios pueden hacer en tu sistema. En lugar de niveles de acceso amplios como "admin" o "usuario", definimos acciones espec\xedficas que los usuarios pueden realizar sobre los recursos. Por ejemplo:'}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.code,{children:"read:articles"})," - Ver cualquier art\xedculo en el sistema"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.code,{children:"create:articles"})," - Crear nuevos art\xedculos"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.code,{children:"update:articles"})," - Modificar art\xedculos existentes"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.code,{children:"publish:articles"})," - Cambiar el estado de publicaci\xf3n de los art\xedculos"]}),"\n"]}),"\n",(0,i.jsx)(s.h3,{id:"resource-ownership-and-access-control",children:"Propiedad de recursos y control de acceso"}),"\n",(0,i.jsx)(s.p,{children:"La propiedad de recursos es un concepto fundamental en el dise\xf1o de autorizaci\xf3n de nuestro CMS. Mientras que RBAC define qu\xe9 acciones pueden realizar los diferentes roles, la propiedad a\xf1ade una dimensi\xf3n personal al control de acceso:"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Los autores tienen acceso autom\xe1ticamente a los art\xedculos que crearon"}),"\n",(0,i.jsx)(s.li,{children:"Este modelo de propiedad natural significa que los autores siempre pueden ver y editar su propio contenido"}),"\n",(0,i.jsx)(s.li,{children:"El sistema verifica tanto los permisos de rol O la propiedad al manejar operaciones sobre art\xedculos"}),"\n",(0,i.jsxs)(s.li,{children:["Por ejemplo, incluso sin el permiso ",(0,i.jsx)(s.code,{children:"update:articles"}),", un autor puede editar sus propios art\xedculos"]}),"\n",(0,i.jsx)(s.li,{children:"Este dise\xf1o reduce la necesidad de permisos extra de rol mientras mantiene la seguridad"}),"\n"]}),"\n",(0,i.jsx)(s.p,{children:"Este enfoque de doble capa (roles + propiedad) crea un sistema m\xe1s intuitivo y seguro. Los editores y administradores pueden seguir gestionando todo el contenido a trav\xe9s de sus permisos de rol, mientras que los autores mantienen el control sobre su propio trabajo."}),"\n",(0,i.jsx)(s.h2,{id:"designing-a-secure-apis",children:"Dise\xf1ando APIs seguras"}),"\n",(0,i.jsx)(s.p,{children:"Comencemos dise\xf1ando la funcionalidad principal de nuestro CMS a trav\xe9s de sus endpoints de API:"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{children:"GET    /api/articles         # Listar todos los art\xedculos\nGET    /api/articles/:id     # Obtener un art\xedculo espec\xedfico\nPOST   /api/articles         # Crear un nuevo art\xedculo\nPATCH  /api/articles/:id     # Actualizar un art\xedculo\nDELETE /api/articles/:id     # Eliminar un art\xedculo\nPATCH  /api/articles/:id/published  # Cambiar el estado de publicaci\xf3n\n"})}),"\n",(0,i.jsx)(s.h3,{id:"implement-access-control-for-your-api",children:"Implementar control de acceso para tu API"}),"\n",(0,i.jsx)(s.p,{children:"Para cada endpoint, necesitamos considerar dos aspectos del control de acceso:"}),"\n",(0,i.jsxs)(s.ol,{children:["\n",(0,i.jsx)(s.li,{children:"Propiedad del recurso - \xbfEl usuario es due\xf1o de este recurso?"}),"\n",(0,i.jsx)(s.li,{children:"Permisos basados en roles - \xbfEl rol del usuario permite esta operaci\xf3n?"}),"\n"]}),"\n",(0,i.jsx)(s.p,{children:"As\xed es como gestionaremos el acceso para cada endpoint:"}),"\n",(0,i.jsxs)(s.table,{children:[(0,i.jsx)(s.thead,{children:(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.th,{children:"Endpoint"}),(0,i.jsx)(s.th,{children:"L\xf3gica de control de acceso"})]})}),(0,i.jsxs)(s.tbody,{children:[(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"GET /api/articles"}),(0,i.jsxs)(s.td,{children:["- Cualquiera con el permiso ",(0,i.jsx)(s.code,{children:"list:articles"}),", O autores pueden ver sus propios art\xedculos"]})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsxs)(s.td,{children:["GET /api/articles/",":id"]}),(0,i.jsxs)(s.td,{children:["- Cualquiera con el permiso ",(0,i.jsx)(s.code,{children:"read:articles"}),", O autor del art\xedculo"]})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"POST /api/articles"}),(0,i.jsxs)(s.td,{children:["- Cualquiera con el permiso ",(0,i.jsx)(s.code,{children:"create:articles"})]})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsxs)(s.td,{children:["PATCH /api/articles/",":id"]}),(0,i.jsxs)(s.td,{children:["- Cualquiera con el permiso ",(0,i.jsx)(s.code,{children:"update:articles"}),", O autor del art\xedculo"]})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsxs)(s.td,{children:["DELETE /api/articles/",":id"]}),(0,i.jsxs)(s.td,{children:["- Cualquiera con el permiso ",(0,i.jsx)(s.code,{children:"delete:articles"}),", O autor del art\xedculo"]})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsxs)(s.td,{children:["PATCH /api/articles/",":id","/published"]}),(0,i.jsxs)(s.td,{children:["- Solo usuarios con el permiso ",(0,i.jsx)(s.code,{children:"publish:articles"})]})]})]})]}),"\n",(0,i.jsx)(s.h3,{id:"creating-a-permission-system-that-scales",children:"Crear un sistema de permisos que escale"}),"\n",(0,i.jsx)(s.p,{children:"Seg\xfan los requisitos de acceso de nuestra API, podemos definir estos permisos:"}),"\n",(0,i.jsxs)(s.table,{children:[(0,i.jsx)(s.thead,{children:(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.th,{children:"Permiso"}),(0,i.jsx)(s.th,{children:"Descripci\xf3n"})]})}),(0,i.jsxs)(s.tbody,{children:[(0,i.jsxs)(s.tr,{children:[(0,i.jsxs)(s.td,{children:["list",":articles"]}),(0,i.jsx)(s.td,{children:"Ver la lista de todos los art\xedculos en el sistema"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsxs)(s.td,{children:["read",":articles"]}),(0,i.jsx)(s.td,{children:"Leer el contenido completo de cualquier art\xedculo"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsxs)(s.td,{children:["create",":articles"]}),(0,i.jsx)(s.td,{children:"Crear nuevos art\xedculos"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsxs)(s.td,{children:["update",":articles"]}),(0,i.jsx)(s.td,{children:"Modificar cualquier art\xedculo"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsxs)(s.td,{children:["delete",":articles"]}),(0,i.jsx)(s.td,{children:"Eliminar cualquier art\xedculo"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsxs)(s.td,{children:["publish",":articles"]}),(0,i.jsx)(s.td,{children:"Cambiar el estado de publicaci\xf3n"})]})]})]}),"\n",(0,i.jsx)(s.p,{children:"Ten en cuenta que estos permisos solo son necesarios al acceder a recursos que no posees. Los propietarios de los art\xedculos pueden autom\xe1ticamente:"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["Ver sus propios art\xedculos (no se necesita ",(0,i.jsx)(s.code,{children:"read:articles"}),")"]}),"\n",(0,i.jsxs)(s.li,{children:["Editar sus propios art\xedculos (no se necesita ",(0,i.jsx)(s.code,{children:"update:articles"}),")"]}),"\n",(0,i.jsxs)(s.li,{children:["Eliminar sus propios art\xedculos (no se necesita ",(0,i.jsx)(s.code,{children:"delete:articles"}),")"]}),"\n"]}),"\n",(0,i.jsx)(s.h2,{id:"building-effective-roles",children:"Construyendo roles efectivos"}),"\n",(0,i.jsx)(s.p,{children:"Ahora que tenemos nuestra API y permisos definidos, podemos crear roles que agrupen estos permisos l\xf3gicamente:"}),"\n",(0,i.jsxs)(s.table,{children:[(0,i.jsx)(s.thead,{children:(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.th,{children:"Permiso/Rol"}),(0,i.jsx)(s.th,{children:"\ud83d\udc51 Admin"}),(0,i.jsx)(s.th,{children:"\ud83d\udcdd Publisher"}),(0,i.jsx)(s.th,{children:"\u270d\ufe0f Author"})]})}),(0,i.jsxs)(s.tbody,{children:[(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.strong,{children:"Descripci\xf3n"})}),(0,i.jsx)(s.td,{children:"Acceso total al sistema para la gesti\xf3n completa"}),(0,i.jsx)(s.td,{children:"Puede ver todos los art\xedculos y controlar la publicaci\xf3n"}),(0,i.jsx)(s.td,{children:"Puede crear nuevos art\xedculos en el sistema"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsxs)(s.td,{children:["list",":articles"]}),(0,i.jsx)(s.td,{children:"\u2705"}),(0,i.jsx)(s.td,{children:"\u2705"}),(0,i.jsx)(s.td,{children:"\u274c"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsxs)(s.td,{children:["read",":articles"]}),(0,i.jsx)(s.td,{children:"\u2705"}),(0,i.jsx)(s.td,{children:"\u2705"}),(0,i.jsx)(s.td,{children:"\u274c"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsxs)(s.td,{children:["create",":articles"]}),(0,i.jsx)(s.td,{children:"\u2705"}),(0,i.jsx)(s.td,{children:"\u274c"}),(0,i.jsx)(s.td,{children:"\u2705"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsxs)(s.td,{children:["update",":articles"]}),(0,i.jsx)(s.td,{children:"\u2705"}),(0,i.jsx)(s.td,{children:"\u274c"}),(0,i.jsx)(s.td,{children:"\u274c"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsxs)(s.td,{children:["delete",":articles"]}),(0,i.jsx)(s.td,{children:"\u2705"}),(0,i.jsx)(s.td,{children:"\u274c"}),(0,i.jsx)(s.td,{children:"\u274c"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsxs)(s.td,{children:["publish",":articles"]}),(0,i.jsx)(s.td,{children:"\u2705"}),(0,i.jsx)(s.td,{children:"\u2705"}),(0,i.jsx)(s.td,{children:"\u274c"})]})]})]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Nota"}),": Los autores tienen autom\xe1ticamente permisos de lectura / actualizaci\xf3n / eliminaci\xf3n para sus propios art\xedculos, independientemente de los permisos de rol."]}),"\n",(0,i.jsx)(s.p,{children:"Cada rol est\xe1 dise\xf1ado con responsabilidades espec\xedficas en mente:"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Admin"}),": Tiene control total sobre el CMS, incluidas todas las operaciones sobre art\xedculos"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Publisher"}),": Se enfoca en la revisi\xf3n de contenido y la gesti\xf3n de la publicaci\xf3n"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Author"}),": Se especializa en la creaci\xf3n de contenido"]}),"\n"]}),"\n",(0,i.jsx)(s.p,{children:"Esta estructura de roles crea una clara separaci\xf3n de responsabilidades:"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Los autores se enfocan en crear contenido"}),"\n",(0,i.jsx)(s.li,{children:"Los editores gestionan la calidad y visibilidad del contenido"}),"\n",(0,i.jsx)(s.li,{children:"Los administradores mantienen el control general del sistema"}),"\n"]}),"\n",(0,i.jsx)(s.h2,{id:"config-rbac-in-logto",children:"Configurar RBAC en Logto"}),"\n",(0,i.jsxs)(s.p,{children:["Antes de comenzar, necesitas crear una cuenta en ",(0,i.jsx)(s.a,{href:"https://cloud.logto.io",children:"Logto Cloud"}),", o tambi\xe9n puedes usar una instancia autogestionada de Logto utilizando la ",(0,i.jsx)(s.a,{href:"/logto-oss",children:"versi\xf3n Logto OSS"}),"."]}),"\n",(0,i.jsx)(s.p,{children:"Pero para este tutorial, usaremos Logto Cloud por simplicidad."}),"\n",(0,i.jsx)(s.h3,{id:"setting-up-your-application",children:"Configurando tu aplicaci\xf3n"}),"\n",(0,i.jsxs)(s.ol,{children:["\n",(0,i.jsxs)(s.li,{children:['Ve a "Applications" en Logto Console para crear una nueva aplicaci\xf3n react',"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Nombre de la aplicaci\xf3n: Content Management System"}),"\n",(0,i.jsx)(s.li,{children:"Tipo de aplicaci\xf3n: Traditional Web Application"}),"\n",(0,i.jsxs)(s.li,{children:["Redirect URIs: ",(0,i.jsx)(s.a,{href:"http://localhost:5173/callback",children:"http://localhost:5173/callback"})]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.img,{src:"https://uploads.strapi.logto.io/cms_application_3ed42f2256.png",alt:"Aplicaci\xf3n React CMS"})}),"\n",(0,i.jsx)(s.h3,{id:"configuring-api-resources-and-permissions",children:"Configurando recursos de API y permisos"}),"\n",(0,i.jsxs)(s.ol,{children:["\n",(0,i.jsxs)(s.li,{children:['Ve a "API Resources" en Logto Console para crear un nuevo recurso de API',"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Nombre de la API: CMS API"}),"\n",(0,i.jsxs)(s.li,{children:["Identificador de la API: ",(0,i.jsx)(s.a,{href:"https://api.cms.com",children:"https://api.cms.com"})]}),"\n",(0,i.jsxs)(s.li,{children:["A\xf1ade permisos al recurso de API","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:(0,i.jsx)(s.code,{children:"list:articles"})}),"\n",(0,i.jsx)(s.li,{children:(0,i.jsx)(s.code,{children:"read:articles"})}),"\n",(0,i.jsx)(s.li,{children:(0,i.jsx)(s.code,{children:"create:articles"})}),"\n",(0,i.jsx)(s.li,{children:(0,i.jsx)(s.code,{children:"update:articles"})}),"\n",(0,i.jsx)(s.li,{children:(0,i.jsx)(s.code,{children:"publish:articles"})}),"\n",(0,i.jsx)(s.li,{children:(0,i.jsx)(s.code,{children:"delete:articles"})}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.img,{src:"https://uploads.strapi.logto.io/cms_api_resource_b15ae2b91a.png",alt:"Detalles del recurso de API CMS"})}),"\n",(0,i.jsx)(s.h3,{id:"creating-roles",children:"Creando roles"}),"\n",(0,i.jsx)(s.p,{children:"Ve a Roles en Logto Console para crear los siguientes roles para el CMS"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["Admin","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"con todos los permisos"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["Publisher","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["con ",(0,i.jsx)(s.code,{children:"read:articles"}),", ",(0,i.jsx)(s.code,{children:"list:articles"}),", ",(0,i.jsx)(s.code,{children:"publish:articles"})]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["Author","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["con ",(0,i.jsx)(s.code,{children:"create:articles"})]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.img,{src:"https://uploads.strapi.logto.io/admin_role_53edb35ecf.png",alt:"Rol Admin"})}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.img,{src:"https://uploads.strapi.logto.io/publisher_role_2ac205cc32.png",alt:"Rol Publisher"})}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.img,{src:"https://uploads.strapi.logto.io/author_role_f89cd99543.png",alt:"Rol Author"})}),"\n",(0,i.jsx)(s.h3,{id:"assigning-roles-to-users",children:"Asignando roles a los usuarios"}),"\n",(0,i.jsx)(s.p,{children:'Ve a la secci\xf3n "User management" en Logto Console para crear usuarios.'}),"\n",(0,i.jsx)(s.p,{children:'En la pesta\xf1a "Roles" de los detalles del usuario, puedes asignar roles al usuario.'}),"\n",(0,i.jsx)(s.p,{children:"En nuestro ejemplo, creamos 3 usuarios con los siguientes roles:"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Alex: Admin"}),"\n",(0,i.jsx)(s.li,{children:"Bob: Publisher"}),"\n",(0,i.jsx)(s.li,{children:"Charlie: Author"}),"\n"]}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.img,{src:"https://uploads.strapi.logto.io/user_management_c0bc17119f.png",alt:"Gesti\xf3n de usuarios"})}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.img,{src:"https://uploads.strapi.logto.io/user_details_alex_702f96ef9a.png",alt:"Detalles de usuario - Alex"})}),"\n",(0,i.jsx)(s.admonition,{type:"note",children:(0,i.jsxs)(s.p,{children:["Para fines de demostraci\xf3n, creamos estos recursos y configuraciones a trav\xe9s de Logto Console. En proyectos reales, puedes crear estos recursos y configuraciones program\xe1ticamente usando la ",(0,i.jsx)(s.a,{href:"/integrate-logto/interact-with-management-api",children:"Management API"})," proporcionada por Logto."]})}),"\n",(0,i.jsx)(s.h2,{id:"integrate-your-frontend-with-logto-rbac",children:"Integra tu frontend con Logto RBAC"}),"\n",(0,i.jsx)(s.p,{children:"Ahora que hemos configurado RBAC en Logto, podemos comenzar a integrarlo en nuestro frontend."}),"\n",(0,i.jsxs)(s.p,{children:["Primero, sigue los ",(0,i.jsx)(s.a,{href:"/quick-starts",children:"Logto Quick Starts"})," para integrar Logto en tu aplicaci\xf3n."]}),"\n",(0,i.jsxs)(s.p,{children:["En nuestro ejemplo, usamos ",(0,i.jsx)(s.a,{href:"/quick-starts/react",children:"React"})," para la demostraci\xf3n."]}),"\n",(0,i.jsx)(s.p,{children:"Despu\xe9s de configurar Logto en tu aplicaci\xf3n, necesitamos a\xf1adir las configuraciones de RBAC para que Logto funcione."}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-tsx",children:"// frontend/src/App.tsx\n\nconst logtoConfig: LogtoConfig = {\n  appId: LOGTO_APP_ID, // El ID de la app que creaste en Logto Console\n  endpoint: LOGTO_ENDPOINT, // El endpoint que creaste en Logto Console\n  resources: [API_RESOURCE], // El identificador del recurso de API que creaste en Logto Console, por ejemplo https://api.cms.com\n  // Todos los alcances que puedas querer solicitar del recurso de API en el frontend\n  scopes: [\n    'list:articles',\n    'create:articles',\n    'read:articles',\n    'update:articles',\n    'delete:articles',\n    'publish:articles',\n  ],\n};\n"})}),"\n",(0,i.jsx)(s.p,{children:"Recuerda cerrar sesi\xf3n y volver a iniciar sesi\xf3n para que este cambio tenga efecto si ya has iniciado sesi\xf3n."}),"\n",(0,i.jsx)(s.p,{children:"Cuando el usuario inicia sesi\xf3n con Logto y solicita un token de acceso para los recursos de API especificados arriba, Logto a\xf1adir\xe1 los alcances (permisos) relacionados con el rol del usuario al token de acceso."}),"\n",(0,i.jsxs)(s.p,{children:["Puedes usar ",(0,i.jsx)(s.code,{children:"getAccessTokenClaims"})," del hook ",(0,i.jsx)(s.code,{children:"useLogto"})," para obtener los alcances del token de acceso."]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-tsx",children:"// frontend/src/hooks/use-user-data.ts\n\nimport { useLogto } from '@logto/react';\nimport { API_RESOURCE } from '../config';\nimport { useState, useEffect } from 'react';\n\nexport const useUserData = () => {\n  const { getAccessTokenClaims } = useLogto();\n  const [userScopes, setUserScopes] = useState<string[]>([]);\n  const [userId, setUserId] = useState<string>();\n\n  useEffect(() => {\n    const fetchScopes = async () => {\n      const token = await getAccessTokenClaims(API_RESOURCE);\n      setUserScopes(token?.scope?.split(' ') ?? []);\n      setUserId(token?.sub);\n    };\n\n    fetchScopes();\n  }, [getAccessTokenClaims]);\n\n  return { userId, userScopes };\n};\n"})}),"\n",(0,i.jsxs)(s.p,{children:["Y puedes usar ",(0,i.jsx)(s.code,{children:"userScopes"})," para comprobar si el usuario tiene permiso para acceder al recurso."]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-tsx",children:"// frontend/src/pages/Dashboard.tsx\n\nconst Dashboard = () => {\n  const { userId, userScopes } = useUserData();\n  // ...\n\n  return (\n    <div>\n      {/* ... */}\n      {(userScopes.includes('delete:articles') || article.ownerId === userId) && (\n        <button\n          onClick={() => handleDelete(article.id)}\n          className=\"text-red-600 hover:text-red-900\"\n        >\n          Delete\n        </button>\n      )}\n    </div>\n  );\n};\n"})}),"\n",(0,i.jsx)(s.h2,{id:"integrate-your-backend-with-logto-rbac",children:"Integra tu backend con Logto RBAC"}),"\n",(0,i.jsx)(s.p,{children:"Ahora, es momento de integrar Logto RBAC en tu backend."}),"\n",(0,i.jsx)(s.h3,{id:"backend-authorization-middleware",children:"Middleware de autorizaci\xf3n en el backend"}),"\n",(0,i.jsx)(s.p,{children:"Primero, necesitamos a\xf1adir un middleware en el backend para comprobar los permisos del usuario, verificar si el usuario ha iniciado sesi\xf3n y determinar si tiene los permisos necesarios para acceder a ciertas APIs."}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-javascript",children:"// backend/src/middleware/auth.js\n\nconst { createRemoteJWKSet, jwtVerify } = require('jose');\n\nconst getTokenFromHeader = (headers) => {\n  const { authorization } = headers;\n  const bearerTokenIdentifier = 'Bearer';\n\n  if (!authorization) {\n    throw new Error('Authorization header missing');\n  }\n\n  if (!authorization.startsWith(bearerTokenIdentifier)) {\n    throw new Error('Authorization token type not supported');\n  }\n\n  return authorization.slice(bearerTokenIdentifier.length + 1);\n};\n\nconst hasScopes = (tokenScopes, requiredScopes) => {\n  if (!requiredScopes || requiredScopes.length === 0) {\n    return true;\n  }\n  const scopeSet = new Set(tokenScopes);\n  return requiredScopes.every((scope) => scopeSet.has(scope));\n};\n\nconst verifyJwt = async (token) => {\n  const JWKS = createRemoteJWKSet(new URL(process.env.LOGTO_JWKS_URL));\n\n  const { payload } = await jwtVerify(token, JWKS, {\n    issuer: process.env.LOGTO_ISSUER,\n    audience: process.env.LOGTO_API_RESOURCE,\n  });\n\n  return payload;\n};\n\nconst requireAuth = (requiredScopes = []) => {\n  return async (req, res, next) => {\n    try {\n      // Extraer el token\n      const token = getTokenFromHeader(req.headers);\n\n      // Verificar el token\n      const payload = await verifyJwt(token);\n\n      // A\xf1adir informaci\xf3n del usuario a la petici\xf3n\n      req.user = {\n        id: payload.sub,\n        scopes: payload.scope?.split(' ') || [],\n      };\n\n      // Verificar los alcances requeridos\n      if (!hasScopes(req.user.scopes, requiredScopes)) {\n        throw new Error('Insufficient permissions');\n      }\n\n      next();\n    } catch (error) {\n      res.status(401).json({ error: 'Unauthorized' });\n    }\n  };\n};\n\nmodule.exports = {\n  requireAuth,\n  hasScopes,\n};\n"})}),"\n",(0,i.jsx)(s.p,{children:"Como puedes ver, en este middleware verificamos si la petici\xf3n del frontend contiene un token de acceso v\xe1lido y comprobamos si la audiencia del token de acceso coincide con el recurso de API que creamos en Logto Console."}),"\n",(0,i.jsx)(s.p,{children:"La raz\xf3n para verificar el recurso de API es que nuestro recurso de API realmente representa los recursos del backend de nuestro CMS, y todos nuestros permisos del CMS est\xe1n asociados a este recurso de API."}),"\n",(0,i.jsx)(s.p,{children:"Dado que este recurso de API representa los recursos del CMS en Logto, en nuestro c\xf3digo frontend, incluimos el correspondiente token de acceso al hacer peticiones API al backend:"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-typescript",children:"// frontend/src/hooks/use-api.ts\nexport const useApi = () => {\n  const { getAccessToken } = useLogto();\n\n  return useMemo(\n    () =>\n      async (endpoint: string, options: RequestInit = {}) => {\n        try {\n          // Obtener el token de acceso para el recurso de API\n          const token = await getAccessToken(API_RESOURCE);\n\n          if (!token) {\n            throw new ApiRequestError('Failed to get access token');\n          }\n\n          const response = await fetch(`${API_BASE_URL}${endpoint}`, {\n            ...options,\n            headers: {\n              'Content-Type': 'application/json',\n              // A\xf1adir el token de acceso a las cabeceras de la petici\xf3n\n              Authorization: `Bearer ${token}`,\n              ...options.headers,\n            },\n          });\n\n          // ... manejar la respuesta\n\n          return await response.json();\n        } catch (error) {\n          // ... manejo de errores\n        }\n      },\n    [getAccessToken]\n  );\n};\n"})}),"\n",(0,i.jsxs)(s.p,{children:["Ahora podemos usar el middleware ",(0,i.jsx)(s.code,{children:"requireAuth"})," para proteger nuestros endpoints de API."]}),"\n",(0,i.jsx)(s.h3,{id:"protecting-api-endpoints",children:"Protegiendo endpoints de API"}),"\n",(0,i.jsxs)(s.p,{children:["Para las APIs que solo deben ser accesibles por usuarios con permisos espec\xedficos, podemos a\xf1adir restricciones directamente en el middleware. Por ejemplo, la API de creaci\xf3n de art\xedculos solo debe ser accesible para usuarios con el permiso ",(0,i.jsx)(s.code,{children:"create:articles"}),":"]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-javascript",children:"// backend/src/routes/articles.js\n\nconst { requireAuth } = require('../middleware/auth');\n\nrouter.post('/articles', requireAuth(['create:articles']), async (req, res) => {\n  // ...\n});\n"})}),"\n",(0,i.jsxs)(s.p,{children:["Para las APIs que necesitan comprobar tanto permisos como propiedad del recurso, podemos usar la funci\xf3n ",(0,i.jsx)(s.code,{children:"hasScopes"}),". Por ejemplo, en la API de listado de art\xedculos, los usuarios con el alcance ",(0,i.jsx)(s.code,{children:"list:articles"})," pueden acceder a todos los art\xedculos, mientras que los autores pueden acceder a los art\xedculos que ellos mismos crearon:"]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-javascript",children:"// backend/src/routes/articles.js\n\nconst { requireAuth, hasScopes } = require('../middleware/auth');\n\nrouter.get('/articles', requireAuth(), async (req, res) => {\n  try {\n    // Si el usuario tiene el alcance list:articles, devolver todos los art\xedculos\n    if (hasScopes(req.user.scopes, ['list:articles'])) {\n      const articles = await articleDB.list();\n      return res.json(articles);\n    }\n\n    // De lo contrario, devolver solo los art\xedculos del usuario\n    const articles = await articleDB.listByOwner(req.user.id);\n    res.json(articles);\n  } catch (error) {\n    res.status(500).json({ error: 'Failed to fetch articles' });\n  }\n});\n"})}),"\n",(0,i.jsxs)(s.p,{children:["En este punto, hemos completado la implementaci\xf3n de RBAC. Puedes consultar ",(0,i.jsx)(s.a,{href:"https://github.com/logto-io/rbac-sample",children:"el c\xf3digo fuente completo"})," para ver la implementaci\xf3n completa."]}),"\n",(0,i.jsx)(s.h2,{id:"test-the-cms-rbac-implementation",children:"Prueba la implementaci\xf3n de RBAC en el CMS"}),"\n",(0,i.jsx)(s.p,{children:"Ahora, probemos nuestra implementaci\xf3n de RBAC en el CMS usando los tres usuarios que acabamos de crear."}),"\n",(0,i.jsx)(s.admonition,{type:"note",children:(0,i.jsx)(s.p,{children:'Si ves que no puedes iniciar sesi\xf3n con las credenciales de los usuarios creados en "User Management", primero tendr\xe1s que habilitar el m\xe9todo de inicio de sesi\xf3n adecuado. Ve a "Sign-in Experience" en Logto Console y habilita tu m\xe9todo de autenticaci\xf3n preferido (como Email + Password o Username + Password).'})}),"\n",(0,i.jsx)(s.p,{children:"Primero, iniciemos sesi\xf3n como Alex y Charles respectivamente y creemos algunos art\xedculos."}),"\n",(0,i.jsx)(s.p,{children:"Como Alex tiene el rol de Admin, puede crear, eliminar, actualizar, publicar y ver todos los art\xedculos."}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.img,{src:"https://uploads.strapi.logto.io/cms_dashboard_alex_a11863a94b.png",alt:"Panel CMS - Alex"})}),"\n",(0,i.jsx)(s.p,{children:"Charles, con el rol de Author, solo puede crear sus propios art\xedculos y solo puede ver, actualizar y eliminar los art\xedculos que posee."}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.img,{src:"https://uploads.strapi.logto.io/cms_dashboard_charles_05f610066a.png",alt:"Panel CMS - Charles - Lista de art\xedculos"})}),"\n",(0,i.jsx)(s.p,{children:"Bob, con el rol de Publisher, puede ver y publicar todos los art\xedculos pero no puede crearlos, actualizarlos ni eliminarlos."}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.img,{src:"https://uploads.strapi.logto.io/cms_dashboard_bob_421a429b69.png",alt:"Panel CMS - Bob"})}),"\n",(0,i.jsx)(s.h2,{id:"conclusion",children:"Conclusi\xf3n"}),"\n",(0,i.jsx)(s.p,{children:"\xa1Felicidades! Has aprendido c\xf3mo implementar un sistema RBAC robusto en tu aplicaci\xf3n."}),"\n",(0,i.jsxs)(s.p,{children:["Para escenarios m\xe1s complejos, como construir aplicaciones multi-tenant, Logto proporciona soporte completo para organizaciones. Consulta nuestra gu\xeda ",(0,i.jsx)(s.a,{href:"/use-cases/multi-tenancy/build-multi-tenant-saas-application",children:"Construye una aplicaci\xf3n SaaS multi-tenant: Una gu\xeda completa desde el dise\xf1o hasta la implementaci\xf3n"})," para aprender m\xe1s sobre c\xf3mo implementar control de acceso a nivel organizacional."]}),"\n",(0,i.jsx)(s.p,{children:"\xa1Feliz programaci\xf3n! \ud83d\ude80"})]})}function u(e={}){const{wrapper:s}={...(0,o.R)(),...e.components};return s?(0,i.jsx)(s,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},79621:(e,s,n)=>{n.d(s,{R:()=>a,x:()=>c});var r=n(58101);const i={},o=r.createContext(i);function a(e){const s=r.useContext(o);return r.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function c(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),r.createElement(o.Provider,{value:s},e.children)}}}]);