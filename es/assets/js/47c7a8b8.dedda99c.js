"use strict";(self.webpackChunk_logto_docs=self.webpackChunk_logto_docs||[]).push([[103],{84389:(e,a,s)=>{s.r(a),s.d(a,{assets:()=>c,contentTitle:()=>r,default:()=>u,frontMatter:()=>i,metadata:()=>n,toc:()=>l});const n=JSON.parse('{"id":"quick-starts/database/supabase/README","title":"A\xf1ade autenticaci\xf3n a tu aplicaci\xf3n Supabase (Add authentication to your Supabase application)","description":"Conceptos b\xe1sicos de Supabase \\\\","source":"@site/i18n/es/docusaurus-plugin-content-docs/current/quick-starts/database/supabase/README.mdx","sourceDirName":"quick-starts/database/supabase","slug":"/quick-starts/supabase","permalink":"/es/quick-starts/supabase","draft":false,"unlisted":false,"editUrl":"https://github.com/logto-io/docs/tree/master/i18n/es/docusaurus-plugin-content-docs/current/quick-starts/database/supabase/README.mdx","tags":[],"version":"current","frontMatter":{"slug":"/quick-starts/supabase","sidebar_label":"Supabase","sidebar_custom_props":{"description":"Integra Logto con Supabase.","logoFilename":"supabase.svg"}},"sidebar":"quickStartSidebar","previous":{"title":"Hasura","permalink":"/es/quick-starts/hasura"},"next":{"title":"OIDC (Aplicaci\xf3n de terceros)","permalink":"/es/quick-starts/third-party-oidc"}}');var o=s(25105),t=s(79621);const i={slug:"/quick-starts/supabase",sidebar_label:"Supabase",sidebar_custom_props:{description:"Integra Logto con Supabase.",logoFilename:"supabase.svg"}},r="A\xf1ade autenticaci\xf3n a tu aplicaci\xf3n Supabase (Add authentication to your Supabase application)",c={},l=[{value:"Conceptos b\xe1sicos de Supabase",id:"supabase-basics",level:2},{value:"A\xf1adir datos de usuario a las solicitudes de Supabase",id:"add-user-data-to-the-supabase-requests",level:3},{value:"Crear pol\xedtica de Seguridad a nivel de fila",id:"create-row-level-security-policy",level:3},{value:"Proceso b\xe1sico de integraci\xf3n con Logto",id:"basic-integration-process-with-logto",level:3},{value:"Integraci\xf3n con Logto",id:"logto-integration",level:2},{value:"Aplicaci\xf3n nativa o SPA",id:"native-app-or-spa",level:3},{value:"Aplicaci\xf3n web tradicional",id:"traditional-web-app",level:3},{value:"Aplicaci\xf3n m\xe1quina a m\xe1quina",id:"machine-to-machine-app",level:3}];function d(e){const a={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",mermaid:"mermaid",ol:"ol",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(a.header,{children:(0,o.jsx)(a.h1,{id:"a\xf1ade-autenticaci\xf3n-a-tu-aplicaci\xf3n-supabase-add-authentication-to-your-supabase-application",children:"A\xf1ade autenticaci\xf3n a tu aplicaci\xf3n Supabase (Add authentication to your Supabase application)"})}),"\n",(0,o.jsx)(a.h2,{id:"supabase-basics",children:"Conceptos b\xe1sicos de Supabase"}),"\n",(0,o.jsxs)(a.p,{children:["Supabase utiliza la ",(0,o.jsx)(a.a,{href:"https://www.postgresql.org/docs/current/ddl-rowsecurity.html",children:"Seguridad a nivel de fila de Postgres (Row-Level Security)"})," para controlar los permisos de acceso a los datos. En t\xe9rminos simples, al crear pol\xedticas de seguridad a nivel de fila para las tablas en la base de datos, podemos restringir y gestionar qui\xe9n puede leer, escribir y actualizar datos en una tabla."]}),"\n",(0,o.jsx)(a.p,{children:'Supongamos que tienes una tabla llamada "posts" en tu base de datos, con el siguiente contenido:'}),"\n",(0,o.jsx)("img",{src:"/img/assets/posts-table.webp",alt:"Tabla de posts"}),"\n",(0,o.jsxs)(a.p,{children:["El campo ",(0,o.jsx)(a.code,{children:"user_id"})," en la tabla representa el usuario al que pertenece cada dato de post. Puedes restringir que cada usuario solo acceda a los datos de sus propios posts bas\xe1ndote en el campo ",(0,o.jsx)(a.code,{children:"user_id"}),"."]}),"\n",(0,o.jsx)(a.p,{children:"Sin embargo, antes de que esto pueda implementarse, Supabase necesita poder identificar al usuario actual que accede a la base de datos."}),"\n",(0,o.jsx)(a.h3,{id:"add-user-data-to-the-supabase-requests",children:"A\xf1adir datos de usuario a las solicitudes de Supabase"}),"\n",(0,o.jsx)(a.p,{children:"Gracias al soporte de JWT en Supabase, cuando nuestra aplicaci\xf3n interact\xfaa con Supabase, podemos generar un JWT que contenga los datos del usuario utilizando el secreto JWT proporcionado por Supabase. Luego usamos este JWT como el encabezado de Autenticaci\xf3n al hacer solicitudes. Al recibir la solicitud, Supabase verifica autom\xe1ticamente la validez del JWT y permite el acceso a los datos contenidos en \xe9l durante los procesos posteriores."}),"\n",(0,o.jsx)(a.p,{children:"Primero, podemos obtener el secreto JWT proporcionado por Supabase desde la secci\xf3n \u201cProject Settings\u201d en el panel de Supabase:"}),"\n",(0,o.jsx)("img",{src:"/img/assets/supabase-api-settings.webp",alt:"P\xe1gina de configuraci\xf3n de la API de Supabase"}),"\n",(0,o.jsx)(a.p,{children:"Luego, cuando usamos el SDK de Supabase para hacer solicitudes a Supabase, utilizamos este secreto para generar nuestro JWT y adjuntarlo como el encabezado de Autenticaci\xf3n a la solicitud. (Ten en cuenta que este proceso ocurre dentro del servicio backend de tu aplicaci\xf3n, y el secreto JWT nunca debe ser expuesto a terceros)."}),"\n",(0,o.jsx)(a.pre,{children:(0,o.jsx)(a.code,{className:"language-jsx",children:"import { createClient } from '@supabase/supabase-js';\nimport { sign } from 'jsonwebtoken';\n\n/\n * Nota:\n * Puedes encontrar SUPABASE_URL y SUPABASE_ANON_KEY en el mismo lugar donde encuentras el JWT Secret.\n */\nconst SUPABASE_URL = process.env.SUPABASE_URL;\nconst SUPABASE_ANON_KEY = process.env.SUPABASE_ANON_KEY;\n\nconst SUPABASE_JWT_SECRET = process.env.SUPABASE_JWT_SECRET;\n\nexport const getSupabaseClient = (userId) => {\n  const jwtPayload = {\n    userId,\n  };\n\n  const jwt = sign(jwtPayload, SUPABASE_JWT_SECRET, {\n    expiresIn: '1h', // Solo para demostraci\xf3n\n  });\n\n  const client = createClient(SUPABASE_URL, SUPABASE_ANON_KEY, {\n    global: {\n      headers: {\n        Authorization: `Bearer ${jwt}`,\n      },\n    },\n  });\n\n  return client;\n};\n"})}),"\n",(0,o.jsx)(a.p,{children:"A continuaci\xf3n, navega al Editor SQL en el panel de Supabase y crea una funci\xf3n para recuperar el userId transportado en la solicitud:"}),"\n",(0,o.jsx)("img",{src:"/img/assets/create-get-user-id-function.webp",alt:"Crear funci\xf3n para obtener el ID de usuario"}),"\n",(0,o.jsx)(a.p,{children:"El c\xf3digo utilizado en la imagen es el siguiente:"}),"\n",(0,o.jsx)(a.pre,{children:(0,o.jsx)(a.code,{className:"language-sql",children:"create or replace function auth.user_id() returns text as $$\n  select nullif(current_setting('request.jwt.claims', true)::json->>'userId', '')::text;\n$$ language sql stable;\n"})}),"\n",(0,o.jsxs)(a.p,{children:["Como muestra el c\xf3digo, en Supabase, puedes recuperar el payload del JWT que generamos llamando a ",(0,o.jsx)(a.code,{children:"request.jwt.claims"}),". El campo ",(0,o.jsx)(a.code,{children:"userId"})," dentro del payload es el valor que hemos establecido."]}),"\n",(0,o.jsx)(a.p,{children:"Con esta funci\xf3n, Supabase puede determinar el usuario que est\xe1 accediendo actualmente a la base de datos."}),"\n",(0,o.jsx)(a.h3,{id:"create-row-level-security-policy",children:"Crear pol\xedtica de Seguridad a nivel de fila"}),"\n",(0,o.jsxs)(a.p,{children:["A continuaci\xf3n, podemos crear una pol\xedtica de Seguridad a nivel de fila para restringir que cada usuario solo acceda a los datos de sus propios posts bas\xe1ndonos en el campo ",(0,o.jsx)(a.code,{children:"user_id"})," en la tabla posts."]}),"\n",(0,o.jsxs)(a.ol,{children:["\n",(0,o.jsx)(a.li,{children:"Navega a la p\xe1gina del Editor de Tablas en el panel de Supabase y selecciona la tabla posts."}),"\n",(0,o.jsx)(a.li,{children:'Haz clic en "Add RLS Policy" en la parte superior de la tabla.'}),"\n",(0,o.jsx)(a.li,{children:'En la ventana emergente, haz clic en "Create policy".'}),"\n",(0,o.jsx)(a.li,{children:"Introduce un nombre para la pol\xedtica y elige el comando SELECT Policy."}),"\n",(0,o.jsxs)(a.li,{children:["En el bloque ",(0,o.jsx)(a.code,{children:"using"})," del siguiente c\xf3digo, introduce:"]}),"\n"]}),"\n",(0,o.jsx)(a.pre,{children:(0,o.jsx)(a.code,{className:"language-sql",children:"auth.user_id() = user_id\n"})}),"\n",(0,o.jsx)("img",{src:"/img/assets/create-rls-policy.webp",alt:"Crear pol\xedtica RLS"}),"\n",(0,o.jsx)(a.p,{children:"Al aprovechar este tipo de pol\xedticas, se logra el control de acceso a los datos dentro de Supabase."}),"\n",(0,o.jsxs)(a.p,{children:["En aplicaciones reales, crear\xedas varias pol\xedticas para restringir acciones de los usuarios como la inserci\xf3n y modificaci\xf3n de datos. Sin embargo, esto est\xe1 fuera del alcance de este art\xedculo. Para m\xe1s informaci\xf3n sobre la Seguridad a nivel de fila (RLS), consulta ",(0,o.jsx)(a.a,{href:"https://supabase.com/docs/guides/database/postgres/row-level-security",children:"Protege tus datos usando Row Level Security de Postgres"}),"."]}),"\n",(0,o.jsx)(a.h3,{id:"basic-integration-process-with-logto",children:"Proceso b\xe1sico de integraci\xf3n con Logto"}),"\n",(0,o.jsx)(a.p,{children:"Como se mencion\xf3 anteriormente, dado que Supabase utiliza RLS para su control de acceso, la clave para integrarse con Logto (o cualquier otro servicio de autenticaci\xf3n) radica en obtener el id del usuario autorizado y enviarlo a Supabase. Todo el proceso se ilustra en el siguiente diagrama:"}),"\n",(0,o.jsx)(a.mermaid,{value:"sequenceDiagram\n\tParticipant U as Usuario final\n\tParticipant Logto\n\tParticipant B as Servicio backend de la app\n\tParticipant Supabase\n\n\tU->>Logto: Iniciar sesi\xf3n con Logto\n\tLogto--\x3e>U: `access_token`\n\tU->>B: Solicitar datos con `access_token`\n\tB->>B: Obtener `user_id` de `access_token`\n\tB->>B: Generar jwt con `user_id` y `Supabase JWT secret`\n\tB->>Supabase: Solicitar datos con jwt\n\tSupabase--\x3e>B: Datos respondidos\n\tB--\x3e>U: Datos respondidos"}),"\n",(0,o.jsx)(a.p,{children:"A continuaci\xf3n, explicaremos c\xf3mo integrar Logto con Supabase bas\xe1ndonos en este diagrama de proceso."}),"\n",(0,o.jsx)(a.h2,{id:"logto-integration",children:"Integraci\xf3n con Logto"}),"\n",(0,o.jsx)(a.p,{children:"Logto ofrece gu\xedas de integraci\xf3n para varios frameworks y lenguajes de programaci\xf3n."}),"\n",(0,o.jsxs)(a.p,{children:["Generalmente, las aplicaciones construidas con estos frameworks y lenguajes se dividen en categor\xedas como aplicaciones nativas, SPA (aplicaciones de una sola p\xe1gina), aplicaciones web tradicionales y aplicaciones M2M (m\xe1quina a m\xe1quina). Puedes visitar la p\xe1gina de ",(0,o.jsx)(a.a,{href:"/quick-starts",children:"Logto quick starts"})," para integrar Logto en tu aplicaci\xf3n seg\xfan el stack tecnol\xf3gico que est\xe9s utilizando. Despu\xe9s, sigue las instrucciones a continuaci\xf3n para integrar Logto en tu proyecto seg\xfan el tipo de tu aplicaci\xf3n."]}),"\n",(0,o.jsx)(a.h3,{id:"native-app-or-spa",children:"Aplicaci\xf3n nativa o SPA"}),"\n",(0,o.jsx)(a.p,{children:"Tanto las aplicaciones nativas como las SPA se ejecutan en tu dispositivo, y las credenciales (token de acceso) obtenidas tras el inicio de sesi\xf3n se almacenan localmente en tu dispositivo."}),"\n",(0,o.jsx)(a.p,{children:"Por lo tanto, al integrar tu aplicaci\xf3n con Supabase, necesitas interactuar con Supabase a trav\xe9s de tu servicio backend porque no puedes exponer informaci\xf3n sensible (como el secreto JWT de Supabase) en el dispositivo de cada usuario."}),"\n",(0,o.jsxs)(a.p,{children:["Supongamos que est\xe1s construyendo tu SPA usando React y Express. Has integrado Logto en tu aplicaci\xf3n siguiendo la ",(0,o.jsx)(a.a,{href:"/quick-starts/react",children:"Gu\xeda del SDK de Logto React"})," (puedes consultar el c\xf3digo en nuestro ",(0,o.jsx)(a.a,{href:"https://github.com/logto-io/js/tree/master/packages/react-sample",children:"ejemplo de react"}),"). Adem\xe1s, has a\xf1adido la validaci\xf3n del token de acceso de Logto a tu servidor backend seg\xfan la gu\xeda de ",(0,o.jsx)(a.a,{href:"/authorization/validate-access-tokens",children:"validar tokens de acceso"}),"."]}),"\n",(0,o.jsx)(a.p,{children:"A continuaci\xf3n, usar\xe1s el token de acceso obtenido de Logto para solicitar datos de usuario a tu servidor backend:"}),"\n",(0,o.jsx)(a.pre,{children:(0,o.jsx)(a.code,{className:"language-jsx",children:"import { useLogto } from '@logto/react';\nimport { useState, useEffect } from 'react';\nimport PostList from './PostList';\n\nconst endpoint = '<https://www.mysite.com/api/posts>';\nconst resource = '<https://www.mysite.com/api>';\n\nfunction PostPage() {\n  const { isAuthenticated, getAccessToken } = useLogto();\n  const [posts, setPosts] = useState();\n\n  useEffect(() => {\n    const fetchPosts = async () => {\n      const response = await fetch(endpoint, {\n        headers: {\n          Authorization: `Bearer ${await getAccessToken(resource)}`,\n        },\n      });\n      setPosts(response.json());\n    };\n\n    if (isAuthenticated) {\n      void fetchPosts();\n    }\n  }, [isAuthenticated, getAccessToken]);\n\n  return <PostList posts={posts} />;\n}\n\nexport default PostPage;\n"})}),"\n",(0,o.jsx)(a.p,{children:"En tu servidor backend, ya has extra\xeddo el id del usuario autenticado del token de acceso usando un middleware:"}),"\n",(0,o.jsx)(a.pre,{children:(0,o.jsx)(a.code,{className:"language-jsx",children:"// auth-middleware.ts\nimport { createRemoteJWKSet, jwtVerify } from 'jose';\n\n//...\n\nexport const verifyAuthFromRequest = async (ctx, next) => {\n  // Extraer el token\n  const token = extractBearerTokenFromHeaders(ctx.request.headers);\n\n  const { payload } = await jwtVerify(\n    token, // El Bearer Token extra\xeddo del encabezado de la solicitud\n    createRemoteJWKSet(new URL('https://<your-logto-domain>/oidc/jwks')), // genera un jwks usando jwks_uri consultado desde el servidor Logto\n    {\n      // emisor esperado del token, debe ser emitido por el servidor Logto\n      issuer: 'https://<your-logto-domain>/oidc',\n      // audiencia esperada del token, debe ser el indicador de recurso de la API actual\n      audience: '<your request listener resource indicator>',\n    }\n  );\n\n  // si est\xe1s usando RBAC\n  assert(payload.scope.includes('some_scope'));\n\n  // l\xf3gica personalizada del payload\n  ctx.auth = {\n    userId: payload.sub,\n  };\n\n  return next();\n};\n"})}),"\n",(0,o.jsxs)(a.p,{children:["Ahora, puedes usar el ",(0,o.jsx)(a.code,{children:"getSupabaseClient"})," descrito anteriormente para adjuntar el ",(0,o.jsx)(a.code,{children:"userId"})," al JWT utilizado en las solicitudes posteriores a Supabase. Alternativamente, puedes crear un middleware para crear un cliente de Supabase para las solicitudes que necesiten interactuar con Supabase:"]}),"\n",(0,o.jsx)(a.pre,{children:(0,o.jsx)(a.code,{className:"language-jsx",children:"export const withSupabaseClient = async (ctx, next) => {\n  ctx.supabase = getSupabaseClient(ctx.auth.userId);\n\n  return next();\n};\n"})}),"\n",(0,o.jsxs)(a.p,{children:["En el flujo de procesamiento posterior, puedes llamar directamente a ",(0,o.jsx)(a.code,{children:"ctx.supabase"})," para interactuar con Supabase:"]}),"\n",(0,o.jsx)(a.pre,{children:(0,o.jsx)(a.code,{className:"language-jsx",children:"const fetchPosts = async (ctx) => {\n  const { data } = await ctx.supabase.from('posts').select('*');\n\n  return data;\n};\n"})}),"\n",(0,o.jsx)(a.p,{children:"En este c\xf3digo, Supabase solo devolver\xe1 los datos de los posts que pertenecen al usuario actual seg\xfan las pol\xedticas establecidas previamente."}),"\n",(0,o.jsx)(a.h3,{id:"traditional-web-app",children:"Aplicaci\xf3n web tradicional"}),"\n",(0,o.jsx)(a.p,{children:"La principal diferencia entre una aplicaci\xf3n web tradicional y una aplicaci\xf3n nativa o SPA es que una aplicaci\xf3n web tradicional renderiza y actualiza las p\xe1ginas \xfanicamente en el servidor web. Por lo tanto, las credenciales del usuario son gestionadas directamente por el servidor web, mientras que en las aplicaciones nativas y SPA residen en el dispositivo del usuario."}),"\n",(0,o.jsx)(a.p,{children:"Al integrar Logto con una aplicaci\xf3n web tradicional en Supabase, puedes recuperar directamente el id del usuario autenticado desde el backend."}),"\n",(0,o.jsxs)(a.p,{children:["Tomando como ejemplo un proyecto Next.js, despu\xe9s de integrar Logto en tu proyecto siguiendo la ",(0,o.jsx)(a.a,{href:"/quick-starts/next-app-router",children:"Gu\xeda del SDK de Next.js"}),", puedes usar el SDK de Logto para recuperar la informaci\xf3n del usuario y construir el JWT correspondiente para interactuar con Supabase."]}),"\n",(0,o.jsx)(a.pre,{children:(0,o.jsx)(a.code,{className:"language-jsx",children:"import { getLogtoContext } from '@logto/next-server-actions';\nimport { logtoConfig } from '@/logto';\nimport { getSupabaseClient } from '@/utils';\nimport PostList from './PostList';\n\nexport default async function PostPage() {\n  const { cliams } = await getLogtoContext(logtoConfig);\n\n  // El valor `sub` en `cliams` es el id de usuario.\n  const supabase = getSupabaseClient(cliams.sub);\n\n  const { data: posts } = await supabase.from('posts').select('*');\n\n  return <PostList posts={posts} />;\n}\n"})}),"\n",(0,o.jsx)(a.h3,{id:"machine-to-machine-app",children:"Aplicaci\xf3n m\xe1quina a m\xe1quina"}),"\n",(0,o.jsx)(a.p,{children:"M\xe1quina a m\xe1quina (M2M) se utiliza a menudo cuando tu aplicaci\xf3n necesita comunicarse directamente con servidores de recursos, como un servicio est\xe1tico que extrae posts diarios, etc."}),"\n",(0,o.jsxs)(a.p,{children:["Puedes usar la gu\xeda de ",(0,o.jsx)(a.a,{href:"/quick-starts/m2m",children:"M\xe1quina a m\xe1quina: Autenticaci\xf3n con Logto"}),' para la autenticaci\xf3n de aplicaciones m\xe1quina a m\xe1quina. La integraci\xf3n entre Supabase y las aplicaciones m\xe1quina a m\xe1quina es similar a la de las aplicaciones nativas y SPA (como se describe en la secci\xf3n "',(0,o.jsx)(a.a,{href:"#native-app-or-spa",children:"Aplicaci\xf3n nativa o SPA"}),'"). Consiste en obtener un token de acceso de Logto y luego validarlo a trav\xe9s de una API backend protegida.']}),"\n",(0,o.jsxs)(a.p,{children:["Sin embargo, es importante tener en cuenta que las aplicaciones nativas y SPA est\xe1n dise\xf1adas normalmente para usuarios finales, por lo que el id de usuario obtenido representa al propio usuario. Sin embargo, el token de acceso para aplicaciones m\xe1quina a m\xe1quina representa la propia aplicaci\xf3n, y el campo ",(0,o.jsx)(a.code,{children:"sub"})," en el payload del token de acceso es el id de cliente de la app M2M, no un usuario espec\xedfico. Por lo tanto, durante el desarrollo, es fundamental distinguir qu\xe9 datos est\xe1n destinados a aplicaciones M2M."]}),"\n",(0,o.jsxs)(a.p,{children:["Adem\xe1s, si deseas que una aplicaci\xf3n M2M espec\xedfica acceda a Supabase en nombre de todo el servicio para omitir las restricciones de RLS, puedes usar el secreto ",(0,o.jsx)(a.code,{children:"service_role"})," de Supabase para crear un cliente de Supabase. Es \xfatil cuando quieres realizar tareas administrativas o automatizadas que requieren acceso a todos los datos sin estar restringido por las pol\xedticas de Seguridad a nivel de fila establecidas para usuarios individuales."]}),"\n",(0,o.jsxs)(a.p,{children:["El secreto ",(0,o.jsx)(a.code,{children:"service_role"})," se puede encontrar en la misma p\xe1gina que el secreto JWT:"]}),"\n",(0,o.jsx)("img",{src:"/img/assets/service-role-secret.webp",alt:"Secreto de rol de servicio"}),"\n",(0,o.jsxs)(a.p,{children:["Al crear un cliente de Supabase, usa el secreto ",(0,o.jsx)(a.code,{children:"service_role"}),", entonces este cliente podr\xe1 acceder a todos los datos en la base de datos:"]}),"\n",(0,o.jsx)(a.pre,{children:(0,o.jsx)(a.code,{className:"language-jsx",children:"import { createClient } from '@supabase/supabase-js';\n\n// ...\nconst SUPABASE_SERVICE_ROLE_SCRET = process.env.SUPABASE_SERVICE_ROLE_SCRET;\n\nconst client = createClient(SUPABASE_URL, SUPABASE_SERVICE_ROLE_SCRET, {\n  // ...opciones\n});\n"})})]})}function u(e={}){const{wrapper:a}={...(0,t.R)(),...e.components};return a?(0,o.jsx)(a,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},79621:(e,a,s)=>{s.d(a,{R:()=>i,x:()=>r});var n=s(58101);const o={},t=n.createContext(o);function i(e){const a=n.useContext(t);return n.useMemo((function(){return"function"==typeof e?e(a):{...a,...e}}),[a,e])}function r(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),n.createElement(t.Provider,{value:a},e.children)}}}]);