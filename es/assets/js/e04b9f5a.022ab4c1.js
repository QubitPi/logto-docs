"use strict";(self.webpackChunk_logto_docs=self.webpackChunk_logto_docs||[]).push([[22462],{30433:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>i,contentTitle:()=>c,default:()=>p,frontMatter:()=>t,metadata:()=>o,toc:()=>l});const o=JSON.parse('{"id":"developers/user-impersonation","title":"Suplantaci\xf3n de usuario","description":"Imagina que Sarah, una ingeniera de soporte en TechCorp, recibe un ticket urgente de Alex, un cliente que no puede acceder a un recurso cr\xedtico. Para diagnosticar y resolver el problema de manera eficiente, Sarah necesita ver exactamente lo que Alex ve en el sistema. Aqu\xed es donde la funci\xf3n de suplantaci\xf3n de usuario de Logto resulta \xfatil.","source":"@site/i18n/es/docusaurus-plugin-content-docs/current/developers/user-impersonation.mdx","sourceDirName":"developers","slug":"/developers/user-impersonation","permalink":"/es/developers/user-impersonation","draft":false,"unlisted":false,"editUrl":"https://github.com/logto-io/docs/tree/master/i18n/es/docusaurus-plugin-content-docs/current/developers/user-impersonation.mdx","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"id":"user-impersonation","title":"Suplantaci\xf3n de usuario","sidebar_label":"Suplantaci\xf3n de usuario","sidebar_position":3},"sidebar":"docsSidebar","previous":{"title":"Crear un script de reclamos de token personalizado","permalink":"/es/developers/custom-token-claims/create-script"},"next":{"title":"Claves de firma","permalink":"/es/developers/signing-keys"}}');var r=a(25105),s=a(79621);const t={id:"user-impersonation",title:"Suplantaci\xf3n de usuario",sidebar_label:"Suplantaci\xf3n de usuario",sidebar_position:3},c="Suplantaci\xf3n de usuario",i={},l=[{value:"\xbfC\xf3mo funciona?",id:"how-it-works",level:2},{value:"Paso 1: Solicitar suplantaci\xf3n",id:"step-1-requesting-impersonation",level:3},{value:"Paso 2: Obtener un token de sujeto",id:"step-2-obtaining-a-subject-token",level:3},{value:"Paso 3: Intercambiar el token de sujeto por un token de acceso",id:"step-3-exchanging-the-subject-token-for-an-access-token",level:3},{value:"Ejemplo de uso",id:"example-usage",level:2},{value:"Reclamo <code>act</code>",id:"act-claim",level:2},{value:"Personalizaci\xf3n de reclamos de tokens",id:"customizing-token-claims",level:2}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",mermaid:"mermaid",ol:"ol",p:"p",pre:"pre",strong:"strong",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"suplantaci\xf3n-de-usuario",children:"Suplantaci\xf3n de usuario"})}),"\n",(0,r.jsx)(n.p,{children:"Imagina que Sarah, una ingeniera de soporte en TechCorp, recibe un ticket urgente de Alex, un cliente que no puede acceder a un recurso cr\xedtico. Para diagnosticar y resolver el problema de manera eficiente, Sarah necesita ver exactamente lo que Alex ve en el sistema. Aqu\xed es donde la funci\xf3n de suplantaci\xf3n de usuario de Logto resulta \xfatil."}),"\n",(0,r.jsx)(n.p,{children:"La suplantaci\xf3n de usuario permite a usuarios autorizados como Sarah actuar temporalmente en nombre de otros usuarios como Alex dentro del sistema. Esta poderosa funci\xf3n es invaluable para la resoluci\xf3n de problemas, proporcionar soporte al cliente y realizar tareas administrativas."}),"\n",(0,r.jsx)(n.h2,{id:"how-it-works",children:"\xbfC\xf3mo funciona?"}),"\n",(0,r.jsx)(n.mermaid,{value:"sequenceDiagram\n    participant Sarah as Aplicaci\xf3n de Sarah\n    participant TechCorp as Servidor de TechCorp\n    participant Logto as Logto Management API\n    participant LogtoToken as Endpoint de token de Logto\n\n    Sarah->>TechCorp: POST /api/request-impersonation\n    Note over Sarah,TechCorp: Solicitud para suplantar a Alex\n\n    TechCorp->>Logto: POST /api/subject-tokens\n    Note over TechCorp,Logto: Solicitar token de sujeto para Alex\n\n    Logto--\x3e>TechCorp: Devolver token de sujeto\n    TechCorp--\x3e>Sarah: Devolver token de sujeto\n\n    Sarah->>LogtoToken: POST /oidc/token\n    Note over Sarah,LogtoToken: Intercambiar token de sujeto por token de acceso\n\n    LogtoToken--\x3e>Sarah: Devolver token de acceso\n    Note over Sarah: Sarah ahora puede acceder a recursos como Alex"}),"\n",(0,r.jsx)(n.p,{children:"El proceso de suplantaci\xf3n involucra tres pasos principales:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"Sarah solicita la suplantaci\xf3n a trav\xe9s del servidor backend de TechCorp."}),"\n",(0,r.jsx)(n.li,{children:"El servidor de TechCorp obtiene un token de sujeto de Logto Management API."}),"\n",(0,r.jsx)(n.li,{children:"La aplicaci\xf3n de Sarah intercambia este token de sujeto por un token de acceso."}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Veamos c\xf3mo Sarah puede usar esta funci\xf3n para ayudar a Alex."}),"\n",(0,r.jsx)(n.h3,{id:"step-1-requesting-impersonation",children:"Paso 1: Solicitar suplantaci\xf3n"}),"\n",(0,r.jsx)(n.p,{children:"Primero, la aplicaci\xf3n de soporte de Sarah necesita solicitar la suplantaci\xf3n al servidor backend de TechCorp."}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Solicitud (Aplicaci\xf3n de Sarah al servidor de TechCorp)"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'POST /api/request-impersonation HTTP/1.1\nHost: api.techcorp.com\nAuthorization: Bearer <Sarah\'s_access_token>\nContent-Type: application/json\n\n{\n  "userId": "alex123",\n  "reason": "Investigando problema de acceso a recursos",\n  "ticketId": "TECH-1234"\n}\n'})}),"\n",(0,r.jsx)(n.p,{children:"En esta API, el backend debe realizar verificaciones de autorizaci\xf3n adecuadas para asegurar que Sarah tenga los permisos necesarios para suplantar a Alex."}),"\n",(0,r.jsx)(n.h3,{id:"step-2-obtaining-a-subject-token",children:"Paso 2: Obtener un token de sujeto"}),"\n",(0,r.jsxs)(n.p,{children:["El servidor de TechCorp, al validar la solicitud de Sarah, llamar\xe1 a Logto ",(0,r.jsx)(n.a,{href:"/integrate-logto/interact-with-management-api",children:"Management API"})," para obtener un token de sujeto."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Solicitud (Servidor de TechCorp a Logto Management API)"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'POST /api/subject-tokens HTTP/1.1\nHost: techcorp.logto.app\nAuthorization: Bearer <TechCorp_m2m_access_token>\nContent-Type: application/json\n\n{\n  "userId": "alex123",\n  "context": {\n    "ticketId": "TECH-1234",\n    "reason": "Problema de acceso a recursos",\n    "supportEngineerId": "sarah789"\n  }\n}\n'})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Respuesta (Logto al servidor de TechCorp)"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "subjectToken": "sub_7h32jf8sK3j2",\n  "expiresIn": 600\n}\n'})}),"\n",(0,r.jsx)(n.p,{children:"El servidor de TechCorp debe devolver este token de sujeto a la aplicaci\xf3n de Sarah."}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Respuesta (Servidor de TechCorp a la aplicaci\xf3n de Sarah)"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "subjectToken": "sub_7h32jf8sK3j2",\n  "expiresIn": 600\n}\n'})}),"\n",(0,r.jsx)(n.h3,{id:"step-3-exchanging-the-subject-token-for-an-access-token",children:"Paso 3: Intercambiar el token de sujeto por un token de acceso"}),"\n",(0,r.jsx)(n.p,{children:"Ahora, la aplicaci\xf3n de Sarah intercambia este token de sujeto por un token de acceso que representa a Alex, especificando el recurso donde se utilizar\xe1 el token."}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Solicitud (Aplicaci\xf3n de Sarah al endpoint de token de Logto)"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"POST /oidc/token HTTP/1.1\nHost: techcorp.logto.app\nContent-Type: application/x-www-form-urlencoded\n\ngrant_type=urn:ietf:params:oauth:grant-type:token-exchange\n&client_id=techcorp_support_app\n&scope=resource:read\n&subject_token=alx_7h32jf8sK3j2\n&subject_token_type=urn:ietf:params:oauth:token-type:access_token\n&resource=https://api.techcorp.com/customer-data\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Respuesta (Logto a la aplicaci\xf3n de Sarah)"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "access_token": "eyJhbG...<truncated>",\n  "issued_token_type": "urn:ietf:params:oauth:token-type:access_token",\n  "token_type": "Bearer",\n  "expires_in": 3600,\n  "scope": "resource:read"\n}\n'})}),"\n",(0,r.jsxs)(n.p,{children:["El ",(0,r.jsx)(n.code,{children:"access_token"})," devuelto estar\xe1 vinculado al recurso especificado, asegurando que solo pueda ser utilizado con la API de datos de clientes de TechCorp."]}),"\n",(0,r.jsx)(n.h2,{id:"example-usage",children:"Ejemplo de uso"}),"\n",(0,r.jsx)(n.p,{children:"Aqu\xed se muestra c\xf3mo Sarah podr\xeda usar esto en una aplicaci\xf3n de soporte en Node.js:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",children:"interface ImpersonationResponse {\n  subjectToken: string;\n  expiresIn: number;\n}\n\ninterface TokenExchangeResponse {\n  access_token: string;\n  issued_token_type: string;\n  token_type: string;\n  expires_in: number;\n  scope: string;\n}\n\nasync function impersonateUser(\n  userId: string,\n  clientId: string,\n  ticketId: string,\n  resource: string\n): Promise<string> {\n  try {\n    // Paso 1 y 2: Solicitar suplantaci\xf3n y obtener token de sujeto\n    const impersonationResponse = await fetch(\n      'https://api.techcorp.com/api/request-impersonation',\n      {\n        method: 'POST',\n        headers: {\n          Authorization: \"Bearer <Sarah's_access_token>\",\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          userId,\n          reason: 'Investigando problema de acceso a recursos',\n          ticketId,\n        }),\n      }\n    );\n\n    if (!impersonationResponse.ok) {\n      throw new Error(`Ocurri\xf3 un error HTTP. Estado: ${impersonationResponse.status}`);\n    }\n\n    const { subjectToken } = (await impersonationResponse.json()) as ImpersonationResponse;\n\n    // Paso 3: Intercambiar token de sujeto por token de acceso\n    const tokenExchangeBody = new URLSearchParams({\n      grant_type: 'urn:ietf:params:oauth:grant-type:token-exchange',\n      client_id: clientId,\n      scope: 'openid profile resource.read',\n      subject_token: subjectToken,\n      subject_token_type: 'urn:ietf:params:oauth:token-type:access_token',\n      resource: resource,\n    });\n\n    const tokenExchangeResponse = await fetch('https://techcorp.logto.app/oidc/token', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\n      body: tokenExchangeBody,\n    });\n\n    if (!tokenExchangeResponse.ok) {\n      throw new Error(`\xa1Error HTTP! estado: ${tokenExchangeResponse.status}`);\n    }\n\n    const tokenData = (await tokenExchangeResponse.json()) as TokenExchangeResponse;\n    return tokenData.access_token;\n  } catch (error) {\n    console.error('La suplantaci\xf3n fall\xf3:', error);\n    throw error;\n  }\n}\n\n// Sarah usa esta funci\xf3n para suplantar a Alex\nasync function performImpersonation(): Promise<void> {\n  try {\n    const accessToken = await impersonateUser(\n      'alex123',\n      'techcorp_support_app',\n      'TECH-1234',\n      'https://api.techcorp.com/customer-data'\n    );\n    console.log('Token de acceso de suplantaci\xf3n para Alex:', accessToken);\n  } catch (error) {\n    console.error('Fall\xf3 la suplantaci\xf3n:', error);\n  }\n}\n\n// Ejecutar la suplantaci\xf3n\nvoid performImpersonation()\n"})}),"\n",(0,r.jsx)(n.admonition,{type:"note",children:(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"El token de sujeto es de corta duraci\xf3n y para un solo uso."}),"\n",(0,r.jsxs)(n.li,{children:["El token de acceso de suplantaci\xf3n no viene con un ",(0,r.jsx)(n.a,{href:"https://auth.wiki/refresh-token",children:"token de actualizaci\xf3n"}),". Sarah necesitar\xe1 repetir este proceso si el token expira antes de que resuelva el problema de Alex."]}),"\n",(0,r.jsx)(n.li,{children:"El servidor backend de TechCorp debe implementar verificaciones de autorizaci\xf3n adecuadas para asegurar que solo el personal de soporte autorizado como Sarah pueda solicitar suplantaci\xf3n."}),"\n"]})}),"\n",(0,r.jsxs)(n.h2,{id:"act-claim",children:["Reclamo ",(0,r.jsx)(n.code,{children:"act"})]}),"\n",(0,r.jsxs)(n.p,{children:["Al usar el flujo de intercambio de tokens para suplantaci\xf3n, el token de acceso emitido puede incluir un reclamo adicional ",(0,r.jsx)(n.code,{children:"act"}),' (actor). Este reclamo representa la identidad de la "parte actuante": en nuestro ejemplo, Sarah, quien est\xe1 realizando la suplantaci\xf3n.']}),"\n",(0,r.jsxs)(n.p,{children:["Para incluir el reclamo ",(0,r.jsx)(n.code,{children:"act"}),", la aplicaci\xf3n de Sarah necesita proporcionar un ",(0,r.jsx)(n.code,{children:"actor_token"})," en la solicitud de intercambio de tokens. Este token debe ser un token de acceso v\xe1lido para Sarah con el alcance ",(0,r.jsx)(n.code,{children:"openid"}),". Aqu\xed se muestra c\xf3mo incluirlo en la solicitud de intercambio de tokens:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"POST /oidc/token HTTP/1.1\nHost: techcorp.logto.app\nContent-Type: application/x-www-form-urlencoded\n\ngrant_type=urn:ietf:params:oauth:grant-type:token-exchange\n&client_id=techcorp_support_app\n&scope=resource:read\n&subject_token=alx_7h32jf8sK3j2\n&subject_token_type=urn:ietf:params:oauth:token-type:access_token\n&actor_token=sarah_access_token\n&actor_token_type=urn:ietf:params:oauth:token-type:access_token\n&resource=https://api.techcorp.com/customer-data\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Si se proporciona un ",(0,r.jsx)(n.code,{children:"actor_token"}),", el token de acceso resultante contendr\xe1 un reclamo ",(0,r.jsx)(n.code,{children:"act"})," como este:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "aud": "https://api.techcorp.com",\n  "iss": "https://techcorp.logto.app",\n  "exp": 1443904177,\n  "sub": "alex123",\n  "act": {\n    "sub": "sarah789"\n  }\n}\n'})}),"\n",(0,r.jsxs)(n.p,{children:["Este reclamo ",(0,r.jsx)(n.code,{children:"act"})," indica claramente que Sarah (sarah789) est\xe1 actuando en nombre de Alex (alex123). El reclamo ",(0,r.jsx)(n.code,{children:"act"})," puede ser \xfatil para auditar y rastrear acciones de suplantaci\xf3n."]}),"\n",(0,r.jsx)(n.h2,{id:"customizing-token-claims",children:"Personalizaci\xf3n de reclamos de tokens"}),"\n",(0,r.jsxs)(n.p,{children:["Logto te permite ",(0,r.jsx)(n.a,{href:"/developers/custom-token-claims",children:"personalizar los reclamos de tokens"})," para tokens de suplantaci\xf3n. Esto puede ser \xfatil para agregar contexto adicional o metadatos al proceso de suplantaci\xf3n, como la raz\xf3n de la suplantaci\xf3n o el ticket de soporte asociado."]}),"\n",(0,r.jsxs)(n.p,{children:["Cuando el servidor de TechCorp solicita un token de sujeto a Logto Management API, puede incluir un objeto ",(0,r.jsx)(n.code,{children:"context"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "userId": "alex123",\n  "context": {\n    "ticketId": "TECH-1234",\n    "reason": "Problema de acceso a recursos",\n    "supportEngineerId": "sarah789"\n  }\n}\n'})}),"\n",(0,r.jsxs)(n.p,{children:["Este ",(0,r.jsx)(n.a,{href:"/developers/custom-token-claims/create-script#context-only-available-for-user-access-token",children:"contexto"})," puede luego ser utilizado en una funci\xf3n ",(0,r.jsx)(n.code,{children:"getCustomJwtClaims()"})," para agregar reclamos espec\xedficos al token de acceso final. Aqu\xed tienes un ejemplo de c\xf3mo podr\xeda implementarse:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-tsx",children:"const getCustomJwtClaims = async ({ token, context, environmentVariables }) => {\n  if (context.grant?.type === 'urn:ietf:params:oauth:grant-type:token-exchange') {\n    const { ticketId, reason, supportEngineerId } = context.grant.subjectTokenContext;\n    return {\n      impersonation_context: {\n        ticket_id: ticketId,\n        reason: reason,\n        support_engineer: supportEngineerId,\n      },\n    };\n  }\n  return {};\n};\n"})}),"\n",(0,r.jsx)(n.p,{children:"El token de acceso resultante que recibe Sarah podr\xeda verse as\xed:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "sub": "alex123",\n  "aud": "https://api.techcorp.com/customer-data",\n  "impersonation_context": {\n    "ticket_id": "TECH-1234",\n    "reason": "Problema de acceso a recursos",\n    "support_engineer": "sarah789"\n  }\n  // ... otros reclamos est\xe1ndar\n}\n'})}),"\n",(0,r.jsx)(n.p,{children:"Al personalizar los reclamos de tokens de acceso de esta manera, TechCorp puede incluir informaci\xf3n valiosa sobre el contexto de la suplantaci\xf3n, facilitando la auditor\xeda y comprensi\xf3n de las actividades de suplantaci\xf3n en su sistema."}),"\n",(0,r.jsx)(n.admonition,{type:"note",children:(0,r.jsx)(n.p,{children:"Ten cuidado al agregar reclamos personalizados a tus tokens. Evita incluir informaci\xf3n sensible que podr\xeda representar riesgos de seguridad si el token es interceptado o filtrado. Los JWT est\xe1n firmados pero no cifrados, por lo que los reclamos son visibles para cualquiera que tenga acceso al token."})})]})}function p(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},79621:(e,n,a)=>{a.d(n,{R:()=>t,x:()=>c});var o=a(58101);const r={},s=o.createContext(r);function t(e){const n=o.useContext(s);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:t(e.components),o.createElement(s.Provider,{value:n},e.children)}}}]);