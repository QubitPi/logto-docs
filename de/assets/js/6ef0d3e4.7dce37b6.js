"use strict";(self.webpackChunk_logto_docs=self.webpackChunk_logto_docs||[]).push([[22294],{70837:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>a,contentTitle:()=>d,default:()=>u,frontMatter:()=>s,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"logto-oss/deployment-and-configuration","title":"Bereitstellung und Konfiguration","description":"Im vorherigen Artikel haben wir die Grundlagen des schnellen Einstiegs mit Logto behandelt. Dieser Artikel geht tiefer und konzentriert sich auf bew\xe4hrte Praktiken und detaillierte Konfigurationsschritte f\xfcr die Bereitstellung von Logto in einer Produktionsumgebung.","source":"@site/i18n/de/docusaurus-plugin-content-docs/current/logto-oss/deployment-and-configuration.mdx","sourceDirName":"logto-oss","slug":"/logto-oss/deployment-and-configuration","permalink":"/de/logto-oss/deployment-and-configuration","draft":false,"unlisted":false,"editUrl":"https://github.com/logto-io/docs/tree/master/i18n/de/docusaurus-plugin-content-docs/current/logto-oss/deployment-and-configuration.mdx","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2},"sidebar":"docsSidebar","previous":{"title":"Erste Schritte mit OSS","permalink":"/de/logto-oss/get-started-with-oss"},"next":{"title":"Logto CLI","permalink":"/de/logto-oss/using-cli/"}}');var t=i(25105),o=i(79621);const s={sidebar_position:2},d="Bereitstellung und Konfiguration",a={},l=[{value:"Umgebungsvariablen",id:"environment-variables",level:2},{value:"Wesentliches",id:"essentials",level:3},{value:"HTTPS",id:"https",level:3},{value:"Reverse Proxy",id:"reverse-proxy",level:3},{value:"Containerisierung",id:"containerization",level:2},{value:"Gemeinsamer Connectors-Ordner",id:"shared-connectors-folder",level:3},{value:"Datenbank\xe4nderung",id:"database-alteration",level:3}];function c(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"bereitstellung-und-konfiguration",children:"Bereitstellung und Konfiguration"})}),"\n",(0,t.jsxs)(n.p,{children:["Im vorherigen Artikel haben wir die Grundlagen des ",(0,t.jsx)(n.a,{href:"/logto-oss/get-started-with-oss",children:"schnellen Einstiegs mit Logto"})," behandelt. Dieser Artikel geht tiefer und konzentriert sich auf bew\xe4hrte Praktiken und detaillierte Konfigurationsschritte f\xfcr die Bereitstellung von Logto in einer Produktionsumgebung."]}),"\n",(0,t.jsx)(n.h2,{id:"environment-variables",children:"Umgebungsvariablen"}),"\n",(0,t.jsxs)(n.p,{children:["Wir verwenden ein generiertes Preset von Umgebungsvariablen in unserem Demo (",(0,t.jsx)(n.code,{children:"docker-compose.yml"}),"), das du durch deine eigenen ersetzen und die Konsistenz \xfcber mehrere Logto-Instanzen hinweg beibehalten solltest."]}),"\n",(0,t.jsxs)(n.p,{children:["Du kannst die Umgebungen direkt setzen oder eine ",(0,t.jsx)(n.code,{children:".env"}),"-Datei im Stammverzeichnis des Logto-Projekts ablegen. Wenn du mit Docker testest, \xfcberpr\xfcfe das generierte ",(0,t.jsx)(n.code,{children:".env"}),"-Image in ",(0,t.jsx)(n.code,{children:"/etc/logto"}),"."]}),"\n",(0,t.jsx)(n.h3,{id:"essentials",children:"Wesentliches"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"DB_URL"})," Der ",(0,t.jsx)(n.a,{href:"https://www.postgresql.org/docs/14/libpq-connect.html#id-1.7.3.8.3.6",children:"Postgres DSN"})," f\xfcr die Logto-Datenbank."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"PORT"})," Der Port, auf dem Logto h\xf6rt. Standard ",(0,t.jsx)(n.code,{children:"3001"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"ENDPOINT"})," Du kannst eine URL mit deiner benutzerdefinierten Domain f\xfcr die Produktion angeben (z. B. ",(0,t.jsx)(n.code,{children:"ENDPOINT=https://logto.domain.com"}),"). Dies beeinflusst auch den Wert des ",(0,t.jsx)(n.a,{href:"https://openid.net/specs/openid-connect-core-1_0.html#IssuerIdentifier",children:"OIDC-Ausstelleridentifikators"}),"."]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Admin-Konsole aktivieren"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"ADMIN_PORT"})," Der Port, auf dem die Logto Admin-Konsole h\xf6rt. Standard ",(0,t.jsx)(n.code,{children:"3002"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"ADMIN_ENDPOINT"})," Du kannst eine URL mit deiner benutzerdefinierten Domain f\xfcr die Produktion angeben (z. B. ",(0,t.jsx)(n.code,{children:"ADMIN_ENDPOINT=https://admin.domain.com"}),"). Dies beeinflusst auch den Wert der Umleitungs-URIs der Admin-Konsole."]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Admin-Konsole deaktivieren"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"ADMIN_DISABLE_LOCALHOST"})," Setze es auf ",(0,t.jsx)(n.code,{children:"1"})," oder ",(0,t.jsx)(n.code,{children:"true"}),", um den Port f\xfcr die Admin-Konsole zu schlie\xdfen. Wenn ",(0,t.jsx)(n.code,{children:"ADMIN_ENDPOINT"})," nicht gesetzt ist, wird die Admin-Konsole vollst\xe4ndig deaktiviert."]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["F\xfcr weitere Details zu Umgebungsvariablen siehe ",(0,t.jsx)(n.a,{href:"/concepts/core-service/configuration/",children:"Konfiguration"}),"."]}),"\n",(0,t.jsx)(n.h3,{id:"https",children:"HTTPS"}),"\n",(0,t.jsxs)(n.p,{children:["Du kannst Node.js verwenden, um HTTPS direkt bereitzustellen, oder einen HTTPS-Proxy / Balancer vor Node.js einrichten. Siehe ",(0,t.jsx)(n.a,{href:"/concepts/core-service/configuration/#enabling-https",children:"HTTPS aktivieren"})," f\xfcr Details."]}),"\n",(0,t.jsx)(n.h3,{id:"reverse-proxy",children:"Reverse Proxy"}),"\n",(0,t.jsx)(n.p,{children:"Wenn du einen Reverse Proxy auf deinem Server verwenden m\xf6chtest, zum Beispiel Nginx oder Apache, musst du die Ports 3001 und 3002 separat in deinen Proxy-Pass-Einstellungen zuordnen. Angenommen, du verwendest Nginx, dein Logto-Auth-Endpunkt l\xe4uft auf Port 3001 und deine Logto-Admin-Konsole l\xe4uft auf 3002, f\xfcge die folgende Konfiguration in nginx.conf ein:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"server {\n  listen 443 ssl;\n  server_name <your_endpoint_url>; // z. B. auth.your-domain.com\n  ...\n\n  location / {\n    proxy_set_header Host $host;\n    proxy_set_header X-Real-IP $remote_addr;\n    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n    proxy_set_header X-Forwarded-Proto https;\n\n    proxy_pass http://127.0.0.1:3001;\n  }\n\n  ssl_certificate <path-to-your-certificate-for-auth-endpoint>;\n  ssl_certificate_key <path-to-your-certificate-key-for-auth-endpoint>\n  ...\n}\n"})}),"\n",(0,t.jsx)(n.p,{children:"F\xfcge dann eine \xe4hnliche Konfiguration f\xfcr deine Admin-Konsole hinzu:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"server {\n  listen 443 ssl;\n  server_name <your_admin_endpoint_url>; // z. B. admin.your-domain.com\n  ...\n\n  location / {\n    proxy_set_header Host $host;\n    proxy_set_header X-Real-IP $remote_addr;\n    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n    proxy_set_header X-Forwarded-Proto https;\n\n    proxy_pass http://127.0.0.1:3002;\n  }\n\n  ssl_certificate <path-to-your-certificate-for-admin-endpoint>;\n  ssl_certificate_key <path-to-your-certificate-key-for-admin-endpoint>\n  ...\n}\n"})}),"\n",(0,t.jsx)(n.p,{children:"Lade die Nginx-Konfiguration neu, um die neuesten \xc4nderungen zu \xfcbernehmen:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"nginx -s reload\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Alles ist bereit. \xd6ffne den Browser und besuche ",(0,t.jsx)(n.code,{children:"https://admin.your-domain.com"}),", du solltest die Logto-Willkommensseite sehen k\xf6nnen."]}),"\n",(0,t.jsx)(n.h2,{id:"containerization",children:"Containerisierung"}),"\n",(0,t.jsx)(n.p,{children:"F\xfcr die Produktion kannst du Docker verwenden, um Logto zu containerisieren. Du findest die Dockerfile im Stammverzeichnis des Projekts. Wenn du mehrere Instanzen von Logto ausf\xfchren m\xf6chtest, zum Beispiel Logto in einem Kubernetes-Cluster bereitstellen, gibt es einige zus\xe4tzliche Schritte, die du unternehmen musst."}),"\n",(0,t.jsx)(n.h3,{id:"shared-connectors-folder",children:"Gemeinsamer Connectors-Ordner"}),"\n",(0,t.jsxs)(n.p,{children:["Standardm\xe4\xdfig erstellt Logto einen ",(0,t.jsx)(n.code,{children:"connectors"}),"-Ordner im Stammverzeichnis des ",(0,t.jsx)(n.code,{children:"core"}),"-Ordners. Wir empfehlen, den Ordner zwischen mehreren Instanzen von Logto zu teilen. Du musst den Ordner ",(0,t.jsx)(n.code,{children:"packages/core/connectors"})," in den Container einbinden und ",(0,t.jsx)(n.code,{children:"npm run cli connector add -- --official"})," ausf\xfchren, um die Connectors bereitzustellen."]}),"\n",(0,t.jsxs)(n.p,{children:["Hier ist ein minimales Beispiel f\xfcr ",(0,t.jsx)(n.code,{children:"deployment"})," f\xfcr Kubernetes:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:"apiVersion: extensions/v1beta1\nkind: Deployment\nmetadata:\n  name: logto\n  namespace: default\nspec:\n  template:\n    spec:\n      volumes:\n        - name: connectors\n          emptyDir: {}\n      initContainers:\n        - image: ghcr.io/logto-io/logto\n          command:\n            - /bin/sh\n          args:\n            - '-c'\n            - 'npm run cli connector add -- --official'\n          name: init\n          volumeMounts:\n            - name: connectors\n              mountPath: /etc/logto/packages/core/connectors\n      containers:\n        - image: ghcr.io/logto-io/logto\n          name: logto\n          volumeMounts:\n            - name: connectors\n              mountPath: /etc/logto/packages/core/connectors\n"})}),"\n",(0,t.jsxs)(n.p,{children:["In diesem Beispiel erstellen wir ein leeres Verzeichnis als Volume und binden es in Container ein. Dann f\xfchren wir ",(0,t.jsx)(n.code,{children:"npm run cli connector add -- --official"})," im Init-Container aus, um die Connectors herunterzuladen. Schlie\xdflich teilt jeder Container denselben Connectors-Ordner mit unseren offiziellen Connectors, die bereits darin enthalten sind."]}),"\n",(0,t.jsx)(n.admonition,{type:"note",children:(0,t.jsx)(n.p,{children:"Dies ist ein Beispiel-YAML, um Logto auszuf\xfchren, musst du die Umgebungen richtig setzen."})}),"\n",(0,t.jsx)(n.p,{children:'F\xfcr die Produktion kannst du das "leere Verzeichnis"-Volume durch ein persistentes Volume ersetzen und den "Init"-Job auf deine eigene Weise durchf\xfchren, du wei\xdft, was du tust!'}),"\n",(0,t.jsx)(n.h3,{id:"database-alteration",children:"Datenbank\xe4nderung"}),"\n",(0,t.jsx)(n.p,{children:"\xc4hnlich wie bei den Connectors muss die Datenbank\xe4nderung in einer einzelnen Instanz ausgef\xfchrt werden. Du kannst einen Job verwenden, um das \xc4nderungsskript auszuf\xfchren."}),"\n",(0,t.jsxs)(n.p,{children:["Die Umgebungsvariable ",(0,t.jsx)(n.code,{children:"CI=true"})," ist notwendig, wenn die \xc4nderung nicht interaktiv ausgef\xfchrt wird."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:"apiVersion: batch/v1\nkind: Job\nmetadata:\n  name: alteration\nspec:\n  template:\n    spec:\n      containers:\n        - name: alteration\n          image: ghcr.io/logto-io/logto\n          imagePullPolicy: Always\n          env:\n            - name: CI\n              value: 'true'\n            - name: DB_URL\n              value: postgresql://user:password@localhost:5432/logto\n          command:\n            - /bin/sh\n          args:\n            - '-c'\n            - 'npm run alteration deploy latest'\n      restartPolicy: Never\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Siehe ",(0,t.jsx)(n.a,{href:"/logto-oss/using-cli/database-alteration/",children:"Datenbank\xe4nderung"})," f\xfcr Details zum \xc4nderungskommando."]})]})}function u(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},79621:(e,n,i)=>{i.d(n,{R:()=>s,x:()=>d});var r=i(58101);const t={},o=r.createContext(t);function s(e){const n=r.useContext(o);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:s(e.components),r.createElement(o.Provider,{value:n},e.children)}}}]);