"use strict";(self.webpackChunk_logto_docs=self.webpackChunk_logto_docs||[]).push([[9311],{42910:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>o,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"developers/user-impersonation","title":"Benutzermimikry","description":"Stell dir vor, Sarah, eine Support-Ingenieurin bei TechCorp, erh\xe4lt ein dringendes Ticket von Alex, einem Kunden, der keinen Zugriff auf eine kritische Ressource hat. Um das Problem effizient zu diagnostizieren und zu l\xf6sen, muss Sarah genau das sehen, was Alex im System sieht. Hier kommt die Benutzermimikry-Funktion von Logto ins Spiel.","source":"@site/i18n/de/docusaurus-plugin-content-docs/current/developers/user-impersonation.mdx","sourceDirName":"developers","slug":"/developers/user-impersonation","permalink":"/de/developers/user-impersonation","draft":false,"unlisted":false,"editUrl":"https://github.com/logto-io/docs/tree/master/i18n/de/docusaurus-plugin-content-docs/current/developers/user-impersonation.mdx","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"id":"user-impersonation","title":"Benutzermimikry","sidebar_label":"Benutzermimikry","sidebar_position":3},"sidebar":"docsSidebar","previous":{"title":"Erstelle ein benutzerdefiniertes Token-Claims-Skript","permalink":"/de/developers/custom-token-claims/create-script"},"next":{"title":"Signaturschl\xfcssel","permalink":"/de/developers/signing-keys"}}');var t=r(25105),i=r(79621);const o={id:"user-impersonation",title:"Benutzermimikry",sidebar_label:"Benutzermimikry",sidebar_position:3},a="Benutzermimikry (User impersonation)",c={},d=[{value:"Wie funktioniert das?",id:"how-it-works",level:2},{value:"Schritt 1: Mimikry anfordern",id:"step-1-requesting-impersonation",level:3},{value:"Schritt 2: Subjekt-Token erhalten",id:"step-2-obtaining-a-subject-token",level:3},{value:"Schritt 3: Subjekt-Token gegen Zugangstoken tauschen",id:"step-3-exchanging-the-subject-token-for-an-access-token",level:3},{value:"Beispielanwendung",id:"example-usage",level:2},{value:"<code>act</code> Anspruch (Claim)",id:"act-claim",level:2},{value:"Token-Anspr\xfcche anpassen",id:"customizing-token-claims",level:2},{value:"Verwandte Ressourcen",id:"related-resources",level:2}];function u(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",mermaid:"mermaid",ol:"ol",p:"p",pre:"pre",strong:"strong",...(0,i.R)(),...e.components},{Url:r}=n;return r||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Url",!0),(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"benutzermimikry-user-impersonation",children:"Benutzermimikry (User impersonation)"})}),"\n",(0,t.jsx)(n.p,{children:"Stell dir vor, Sarah, eine Support-Ingenieurin bei TechCorp, erh\xe4lt ein dringendes Ticket von Alex, einem Kunden, der keinen Zugriff auf eine kritische Ressource hat. Um das Problem effizient zu diagnostizieren und zu l\xf6sen, muss Sarah genau das sehen, was Alex im System sieht. Hier kommt die Benutzermimikry-Funktion von Logto ins Spiel."}),"\n",(0,t.jsx)(n.p,{children:"Benutzermimikry erm\xf6glicht es autorisierten Benutzern wie Sarah, vor\xfcbergehend im System im Namen anderer Benutzer wie Alex zu agieren. Diese leistungsstarke Funktion ist unsch\xe4tzbar f\xfcr die Fehlerbehebung, den Kundensupport und die Durchf\xfchrung administrativer Aufgaben."}),"\n",(0,t.jsx)(n.h2,{id:"how-it-works",children:"Wie funktioniert das?"}),"\n",(0,t.jsx)(n.mermaid,{value:"sequenceDiagram\n    participant Sarah as Sarahs App\n    participant TechCorp as TechCorps Server\n    participant Logto as Logto Management API\n    participant LogtoToken as Logto Token-Endpunkt\n\n    Sarah->>TechCorp: POST /api/request-impersonation\n    Note over Sarah,TechCorp: Anfrage zur Mimikry von Alex\n\n    TechCorp->>Logto: POST /api/subject-tokens\n    Note over TechCorp,Logto: Anfrage nach Subjekt-Token f\xfcr Alex\n\n    Logto--\x3e>TechCorp: R\xfcckgabe des Subjekt-Tokens\n    TechCorp--\x3e>Sarah: R\xfcckgabe des Subjekt-Tokens\n\n    Sarah->>LogtoToken: POST /oidc/token\n    Note over Sarah,LogtoToken: Subjekt-Token gegen Zugangstoken tauschen\n\n    LogtoToken--\x3e>Sarah: R\xfcckgabe des Zugangstokens\n    Note over Sarah: Sarah kann jetzt als Alex auf Ressourcen zugreifen"}),"\n",(0,t.jsx)(n.p,{children:"Der Mimikry-Prozess umfasst drei Hauptschritte:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"Sarah beantragt die Mimikry \xfcber den Backend-Server von TechCorp"}),"\n",(0,t.jsx)(n.li,{children:"Der Server von TechCorp erh\xe4lt ein Subjekt-Token von der Logto Management API"}),"\n",(0,t.jsx)(n.li,{children:"Sarahs Anwendung tauscht dieses Subjekt-Token gegen ein Zugangstoken ein"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Schauen wir uns an, wie Sarah diese Funktion nutzen kann, um Alex zu helfen."}),"\n",(0,t.jsx)(n.h3,{id:"step-1-requesting-impersonation",children:"Schritt 1: Mimikry anfordern"}),"\n",(0,t.jsx)(n.p,{children:"Zuerst muss Sarahs Support-Anwendung die Mimikry beim Backend-Server von TechCorp anfordern."}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Anfrage (Sarahs Anwendung an TechCorps Server)"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'POST /api/request-impersonation HTTP/1.1\nHost: api.techcorp.com\nAuthorization: Bearer <Sarah\'s_access_token>\nContent-Type: application/json\n\n{\n  "userId": "alex123",\n  "reason": "Investigating resource access issue",\n  "ticketId": "TECH-1234"\n}\n'})}),"\n",(0,t.jsx)(n.p,{children:"In dieser API sollte das Backend ordnungsgem\xe4\xdfe Autorisierungspr\xfcfungen durchf\xfchren, um sicherzustellen, dass Sarah die erforderlichen Berechtigungen zur Mimikry von Alex hat."}),"\n",(0,t.jsx)(n.h3,{id:"step-2-obtaining-a-subject-token",children:"Schritt 2: Subjekt-Token erhalten"}),"\n",(0,t.jsxs)(n.p,{children:["Nachdem Sarahs Anfrage validiert wurde, ruft der Server von TechCorp die ",(0,t.jsx)(n.a,{href:"/integrate-logto/interact-with-management-api",children:"Management API"})," von Logto auf, um ein Subjekt-Token zu erhalten."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Anfrage (TechCorps Server an Logto Management API)"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'POST /api/subject-tokens HTTP/1.1\nHost: techcorp.logto.app\nAuthorization: Bearer <TechCorp_m2m_access_token>\nContent-Type: application/json\n\n{\n  "userId": "alex123",\n  "context": {\n    "ticketId": "TECH-1234",\n    "reason": "Resource access issue",\n    "supportEngineerId": "sarah789"\n  }\n}\n'})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Antwort (Logto an TechCorps Server)"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "subjectToken": "sub_7h32jf8sK3j2",\n  "expiresIn": 600\n}\n'})}),"\n",(0,t.jsx)(n.p,{children:"Der Server von TechCorp sollte dieses Subjekt-Token dann an Sarahs Anwendung zur\xfcckgeben."}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Antwort (TechCorps Server an Sarahs Anwendung)"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "subjectToken": "sub_7h32jf8sK3j2",\n  "expiresIn": 600\n}\n'})}),"\n",(0,t.jsx)(n.h3,{id:"step-3-exchanging-the-subject-token-for-an-access-token",children:"Schritt 3: Subjekt-Token gegen Zugangstoken tauschen"}),"\n",(0,t.jsx)(n.p,{children:"Nun tauscht Sarahs Anwendung dieses Subjekt-Token gegen ein Zugangstoken ein, das Alex repr\xe4sentiert, und gibt die Ressource an, f\xfcr die das Token verwendet wird."}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Anfrage (Sarahs Anwendung an Logtos Token-Endpunkt)"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"POST /oidc/token HTTP/1.1\nHost: techcorp.logto.app\nContent-Type: application/x-www-form-urlencoded\n\ngrant_type=urn:ietf:params:oauth:grant-type:token-exchange\n&client_id=techcorp_support_app\n&scope=resource:read\n&subject_token=alx_7h32jf8sK3j2\n&subject_token_type=urn:ietf:params:oauth:token-type:access_token\n&resource=https://api.techcorp.com/customer-data\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Antwort (Logto an Sarahs Anwendung)"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "access_token": "eyJhbG...<truncated>",\n  "issued_token_type": "urn:ietf:params:oauth:token-type:access_token",\n  "token_type": "Bearer",\n  "expires_in": 3600,\n  "scope": "resource:read"\n}\n'})}),"\n",(0,t.jsxs)(n.p,{children:["Das zur\xfcckgegebene ",(0,t.jsx)(n.code,{children:"access_token"})," ist an die angegebene Ressource gebunden und kann somit nur mit der Customer Data API von TechCorp verwendet werden."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Hinweis"}),": F\xfcr traditionelle Webanwendungen sollten ",(0,t.jsx)(n.code,{children:"client_id"})," und ",(0,t.jsx)(n.code,{children:"client_secret"})," im Header der Token-Anfrage enthalten sein, um einen 401 invalid_client Fehler zu vermeiden."]}),"\n",(0,t.jsx)(n.p,{children:"Hier ein Node.js-Beispiel:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:"Authorization: `Basic ${Buffer.from(`${client_id}:${client_secret}`, 'utf8').toString('base64')}`\n"})}),"\n",(0,t.jsx)(n.h2,{id:"example-usage",children:"Beispielanwendung"}),"\n",(0,t.jsx)(n.p,{children:"So k\xf6nnte Sarah dies in einer Node.js-Support-Anwendung nutzen:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-jsx",children:"interface ImpersonationResponse {\n  subjectToken: string;\n  expiresIn: number;\n}\n\ninterface TokenExchangeResponse {\n  access_token: string;\n  issued_token_type: string;\n  token_type: string;\n  expires_in: number;\n  scope: string;\n}\n\nasync function impersonateUser(\n  userId: string,\n  clientId: string,\n  ticketId: string,\n  resource: string\n): Promise<string> {\n  try {\n    // Schritt 1 & 2: Mimikry anfordern und Subjekt-Token erhalten\n    const impersonationResponse = await fetch(\n      'https://api.techcorp.com/api/request-impersonation',\n      {\n        method: 'POST',\n        headers: {\n          Authorization: \"Bearer <Sarah's_access_token>\",\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          userId,\n          reason: 'Investigating resource access issue',\n          ticketId,\n        }),\n      }\n    );\n\n    if (!impersonationResponse.ok) {\n      throw new Error(`HTTP error occurred. Status: ${impersonationResponse.status}`);\n    }\n\n    const { subjectToken } = (await impersonationResponse.json()) as ImpersonationResponse;\n\n    // Schritt 3: Subjekt-Token gegen Zugangstoken tauschen\n    const tokenExchangeBody = new URLSearchParams({\n      grant_type: 'urn:ietf:params:oauth:grant-type:token-exchange',\n      client_id: clientId,\n      scope: 'openid profile resource.read',\n      subject_token: subjectToken,\n      subject_token_type: 'urn:ietf:params:oauth:token-type:access_token',\n      resource: resource,\n    });\n\n    const tokenExchangeResponse = await fetch('https://techcorp.logto.app/oidc/token', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\n      body: tokenExchangeBody,\n    });\n\n    if (!tokenExchangeResponse.ok) {\n      throw new Error(`HTTP error! status: ${tokenExchangeResponse.status}`);\n    }\n\n    const tokenData = (await tokenExchangeResponse.json()) as TokenExchangeResponse;\n    return tokenData.access_token;\n  } catch (error) {\n    console.error('Impersonation failed:', error);\n    throw error;\n  }\n}\n\n// Sarah nutzt diese Funktion, um Alex zu imitieren\nasync function performImpersonation(): Promise<void> {\n  try {\n    const accessToken = await impersonateUser(\n      'alex123',\n      'techcorp_support_app',\n      'TECH-1234',\n      'https://api.techcorp.com/customer-data'\n    );\n    console.log('Impersonation access token for Alex:', accessToken);\n  } catch (error) {\n    console.error('Failed to perform impersonation:', error);\n  }\n}\n\n// F\xfchre die Mimikry aus\nvoid performImpersonation()\n"})}),"\n",(0,t.jsx)(n.admonition,{type:"note",children:(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"Das Subjekt-Token ist kurzlebig und nur einmal verwendbar."}),"\n",(0,t.jsxs)(n.li,{children:["Das Mimikry-Zugangstoken wird nicht mit einem ",(0,t.jsx)(n.a,{href:"https://auth.wiki/refresh-token",children:"Auffrischungstoken (Refresh token)"})," geliefert. Sarah muss den Vorgang wiederholen, falls das Token abl\xe4uft, bevor sie Alex' Problem gel\xf6st hat."]}),"\n",(0,t.jsx)(n.li,{children:"Der Backend-Server von TechCorp muss ordnungsgem\xe4\xdfe Autorisierungspr\xfcfungen implementieren, um sicherzustellen, dass nur autorisiertes Support-Personal wie Sarah die Mimikry anfordern kann."}),"\n"]})}),"\n",(0,t.jsxs)(n.h2,{id:"act-claim",children:[(0,t.jsx)(n.code,{children:"act"})," Anspruch (Claim)"]}),"\n",(0,t.jsxs)(n.p,{children:["Beim Einsatz des Token-Austausch-Flows f\xfcr die Mimikry kann das ausgegebene Zugangstoken einen zus\xe4tzlichen ",(0,t.jsx)(n.code,{children:"act"})," (actor) Anspruch enthalten. Dieser Anspruch repr\xe4sentiert die Identit\xe4t der \u201ehandelnden Partei\u201c \u2013 in unserem Beispiel Sarah, die die Mimikry durchf\xfchrt."]}),"\n",(0,t.jsxs)(n.p,{children:["Um den ",(0,t.jsx)(n.code,{children:"act"})," Anspruch einzuschlie\xdfen, muss Sarahs Anwendung ein ",(0,t.jsx)(n.code,{children:"actor_token"})," in der Token-Austauschanfrage bereitstellen. Dieses Token sollte ein g\xfcltiges Zugangstoken f\xfcr Sarah mit dem ",(0,t.jsx)(n.code,{children:"openid"})," Scope sein. So wird es in die Anfrage eingebunden:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"POST /oidc/token HTTP/1.1\nHost: techcorp.logto.app\nContent-Type: application/x-www-form-urlencoded\n\ngrant_type=urn:ietf:params:oauth:grant-type:token-exchange\n&client_id=techcorp_support_app\n&scope=resource:read\n&subject_token=alx_7h32jf8sK3j2\n&subject_token_type=urn:ietf:params:oauth:token-type:access_token\n&actor_token=sarah_access_token\n&actor_token_type=urn:ietf:params:oauth:token-type:access_token\n&resource=https://api.techcorp.com/customer-data\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Wenn ein ",(0,t.jsx)(n.code,{children:"actor_token"})," bereitgestellt wird, enth\xe4lt das resultierende Zugangstoken einen ",(0,t.jsx)(n.code,{children:"act"})," Anspruch wie folgt:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "aud": "https://api.techcorp.com",\n  "iss": "https://techcorp.logto.app",\n  "exp": 1443904177,\n  "sub": "alex123",\n  "act": {\n    "sub": "sarah789"\n  }\n}\n'})}),"\n",(0,t.jsxs)(n.p,{children:["Dieser ",(0,t.jsx)(n.code,{children:"act"})," Anspruch zeigt klar an, dass Sarah (sarah789) im Namen von Alex (alex123) handelt. Der ",(0,t.jsx)(n.code,{children:"act"})," Anspruch ist n\xfctzlich f\xfcr Auditing und Nachverfolgung von Mimikry-Aktionen."]}),"\n",(0,t.jsx)(n.h2,{id:"customizing-token-claims",children:"Token-Anspr\xfcche anpassen"}),"\n",(0,t.jsxs)(n.p,{children:["Logto erm\xf6glicht es dir, ",(0,t.jsx)(n.a,{href:"/developers/custom-token-claims",children:"die Token-Anspr\xfcche anzupassen"})," f\xfcr Mimikry-Tokens. Das ist n\xfctzlich, um zus\xe4tzlichen Kontext oder Metadaten zum Mimikry-Prozess hinzuzuf\xfcgen, wie z. B. den Grund f\xfcr die Mimikry oder das zugeh\xf6rige Support-Ticket."]}),"\n",(0,t.jsxs)(n.p,{children:["Wenn der Server von TechCorp ein Subjekt-Token von der Logto Management API anfordert, kann er ein ",(0,t.jsx)(n.code,{children:"context"}),"-Objekt \xfcbergeben:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "userId": "alex123",\n  "context": {\n    "ticketId": "TECH-1234",\n    "reason": "Resource access issue",\n    "supportEngineerId": "sarah789"\n  }\n}\n'})}),"\n",(0,t.jsxs)(n.p,{children:["Dieser ",(0,t.jsx)(n.a,{href:"/developers/custom-token-claims/create-script#context-only-available-for-user-access-token",children:"Kontext"})," kann dann in einer ",(0,t.jsx)(n.code,{children:"getCustomJwtClaims()"})," Funktion verwendet werden, um spezifische Anspr\xfcche zum finalen Zugangstoken hinzuzuf\xfcgen. Hier ein Beispiel, wie das umgesetzt werden kann:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:"const getCustomJwtClaims = async ({ token, context, environmentVariables }) => {\n  if (context.grant?.type === 'urn:ietf:params:oauth:grant-type:token-exchange') {\n    const { ticketId, reason, supportEngineerId } = context.grant.subjectTokenContext;\n    return {\n      impersonation_context: {\n        ticket_id: ticketId,\n        reason: reason,\n        support_engineer: supportEngineerId,\n      },\n    };\n  }\n  return {};\n};\n"})}),"\n",(0,t.jsx)(n.p,{children:"Das resultierende Zugangstoken, das Sarah erh\xe4lt, k\xf6nnte so aussehen:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "sub": "alex123",\n  "aud": "https://api.techcorp.com/customer-data",\n  "impersonation_context": {\n    "ticket_id": "TECH-1234",\n    "reason": "Resource access issue",\n    "support_engineer": "sarah789"\n  }\n  // ... weitere Standardanspr\xfcche\n}\n'})}),"\n",(0,t.jsx)(n.p,{children:"Durch die Anpassung der Zugangstoken-Anspr\xfcche auf diese Weise kann TechCorp wertvolle Informationen \xfcber den Mimikry-Kontext einbinden, was die Nachvollziehbarkeit und das Verst\xe4ndnis von Mimikry-Aktivit\xe4ten im System erleichtert."}),"\n",(0,t.jsx)(n.admonition,{type:"note",children:(0,t.jsx)(n.p,{children:"Sei vorsichtig beim Hinzuf\xfcgen benutzerdefinierter Anspr\xfcche zu deinen Tokens. Vermeide es, sensible Informationen einzubinden, die ein Sicherheitsrisiko darstellen k\xf6nnten, falls das Token abgefangen oder geleakt wird. Die JWTs sind signiert, aber nicht verschl\xfcsselt, daher sind die Anspr\xfcche f\xfcr jeden mit Zugriff auf das Token sichtbar."})}),"\n",(0,t.jsx)(n.h2,{id:"related-resources",children:"Verwandte Ressourcen"}),"\n",(0,t.jsx)(r,{href:"https://blog.logto.io/impersonation",children:(0,t.jsx)(n.p,{children:"Was ist Mimikry in Cybersecurity und Identit\xe4tsmanagement? Wie k\xf6nnen KI-Agenten sie nutzen?"})})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(u,{...e})}):u(e)}},79621:(e,n,r)=>{r.d(n,{R:()=>o,x:()=>a});var s=r(58101);const t={},i=s.createContext(t);function o(e){const n=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);