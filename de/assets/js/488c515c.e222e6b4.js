"use strict";(self.webpackChunk_logto_docs=self.webpackChunk_logto_docs||[]).push([[7062],{42283:(e,n,i)=>{i.d(n,{Ay:()=>o,RM:()=>s});var t=i(25105),r=i(79621);const s=[];function d(e){const n={a:"a",admonition:"admonition",p:"p",...(0,r.R)(),...e.components};return(0,t.jsx)(n.admonition,{type:"tip",children:(0,t.jsxs)(n.p,{children:["Diese Anleitung setzt voraus, dass du ein grundlegendes Verst\xe4ndnis von Logto Connectors hast. F\xfcr diejenigen, die damit nicht vertraut sind, verweisen wir auf die ",(0,t.jsx)(n.a,{href:"/connectors",children:"Connectors"})," Anleitung, um loszulegen."]})})}function o(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},38931:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>a,contentTitle:()=>h,default:()=>g,frontMatter:()=>l,metadata:()=>t,toc:()=>u});const t=JSON.parse('{"id":"integrations/social/oidc/README","title":"Soziale Anmeldung mit OpenID Connect (OIDC) einrichten","description":"Der offizielle Logto-Connector f\xfcr das OpenID Connect (OIDC)-Protokoll.","source":"@site/i18n/de/docusaurus-plugin-content-docs/current/integrations/social/oidc/README.mdx","sourceDirName":"integrations/social/oidc","slug":"/integrations/oidc","permalink":"/de/integrations/oidc","draft":false,"unlisted":false,"editUrl":"https://github.com/logto-io/docs/tree/master/i18n/de/docusaurus-plugin-content-docs/current/integrations/social/oidc/README.mdx","tags":[],"version":"current","frontMatter":{"slug":"/integrations/oidc","sidebar_label":"OIDC (Sozial)","sidebar_custom_props":{"description":"OpenID Connect 1.0 ist eine einfache Identit\xe4tsschicht \xfcber dem OAuth 2.0-Protokoll."},"tutorial_name":"OIDC","tutorial_config_name":"Standard OIDC-App"},"sidebar":"integrationsSidebar","previous":{"title":"OAuth 2.0 (Sozial)","permalink":"/de/integrations/oauth2"},"next":{"title":"Patreon","permalink":"/de/integrations/patreon"}}');var r=i(25105),s=i(79621),d=i(42283);function o(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h2:"h2",p:"p",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h2,{id:"create-your-oidc-app",children:"Erstelle deine OIDC-App"}),"\n",(0,r.jsx)(n.p,{children:"Wenn du diese Seite \xf6ffnest, gehen wir davon aus, dass du bereits wei\xdft, mit welchem sozialen Identit\xe4tsanbieter du dich verbinden m\xf6chtest. Das Erste, was du tun solltest, ist zu best\xe4tigen, dass der Identit\xe4tsanbieter das OIDC-Protokoll unterst\xfctzt, da dies eine Voraussetzung f\xfcr die Konfiguration eines g\xfcltigen Connectors ist. Folge dann den Anweisungen des Identit\xe4tsanbieters, um die relevante App f\xfcr die OIDC-Autorisierung zu registrieren und zu erstellen."}),"\n",(0,r.jsx)(n.h2,{id:"configure-your-connector",children:"Konfiguriere deinen Connector"}),"\n",(0,r.jsx)(n.p,{children:'Wir unterst\xfctzen aus Sicherheitsgr\xfcnden NUR den "Authorization Code"-Grant-Typ, und er passt perfekt zu Logtos Szenario.'}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"clientId"})," und ",(0,r.jsx)(n.code,{children:"clientSecret"})," findest du auf der Detailseite deiner OIDC-Apps."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.em,{children:"clientId"}),": Die Client-ID ist ein eindeutiger Identifikator, der die Client-Anwendung w\xe4hrend der Registrierung beim Autorisierungsserver identifiziert. Diese ID wird vom Autorisierungsserver verwendet, um die Identit\xe4t der Client-Anwendung zu \xfcberpr\xfcfen und um alle autorisierten Zugangstokens mit dieser spezifischen Client-Anwendung zu verkn\xfcpfen."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.em,{children:"clientSecret"}),": Das Client-Secret ist ein vertraulicher Schl\xfcssel, der der Client-Anwendung vom Autorisierungsserver w\xe4hrend der Registrierung ausgestellt wird. Die Client-Anwendung verwendet diesen geheimen Schl\xfcssel, um sich beim Autorisierungsserver zu authentifizieren, wenn sie Zugangstokens anfordert. Das Client-Secret wird als vertrauliche Information betrachtet und sollte jederzeit sicher aufbewahrt werden."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.em,{children:"tokenEndpointAuthMethod"}),": Die Authentifizierungsmethode des Token-Endpunkts wird von der Client-Anwendung verwendet, um sich beim Autorisierungsserver zu authentifizieren, wenn Zugangstokens angefordert werden. Um unterst\xfctzte Methoden zu entdecken, konsultiere das Feld ",(0,r.jsx)(n.code,{children:"token_endpoint_auth_methods_supported"}),", das am OpenID Connect Discovery-Endpunkt des OAuth 2.0-Dienstanbieters verf\xfcgbar ist, oder beziehe dich auf die relevante Dokumentation des OAuth 2.0-Dienstanbieters."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.em,{children:"clientSecretJwtSigningAlgorithm (Optional)"}),": Nur erforderlich, wenn ",(0,r.jsx)(n.code,{children:"tokenEndpointAuthMethod"})," ",(0,r.jsx)(n.code,{children:"client_secret_jwt"})," ist. Der Client-Secret-JWT-Signaturalgorithmus wird von der Client-Anwendung verwendet, um das JWT zu signieren, das w\xe4hrend der Token-Anfrage an den Autorisierungsserver gesendet wird."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.em,{children:"scope"}),': Der Scope-Parameter wird verwendet, um die Menge der Ressourcen und Berechtigungen anzugeben, auf die die Client-Anwendung zugreifen m\xf6chte. Der Scope-Parameter wird typischerweise als durch Leerzeichen getrennte Liste von Werten definiert, die spezifische Berechtigungen darstellen. Zum Beispiel k\xf6nnte ein Scope-Wert von "read write" anzeigen, dass die Client-Anwendung Lese- und Schreibzugriff auf die Daten eines Benutzers anfordert.']}),"\n",(0,r.jsxs)(n.p,{children:["Du solltest ",(0,r.jsx)(n.code,{children:"authorizationEndpoint"}),", ",(0,r.jsx)(n.code,{children:"tokenEndpoint"}),", ",(0,r.jsx)(n.code,{children:"jwksUri"})," und ",(0,r.jsx)(n.code,{children:"issuer"})," als Konfigurationsinformationen des OpenID Providers finden. Diese sollten in der Dokumentation des sozialen Anbieters verf\xfcgbar sein."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.em,{children:"authenticationEndpoint"}),": Dieser Endpunkt wird verwendet, um den Authentifizierungsprozess zu initiieren. Der Authentifizierungsprozess beinhaltet typischerweise, dass sich der Benutzer anmeldet und der Client-Anwendung die Berechtigung erteilt, auf seine Ressourcen zuzugreifen."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.em,{children:"tokenEndpoint"}),": Dieser Endpunkt wird von der Client-Anwendung verwendet, um ein ID-Token zu erhalten, das zum Zugriff auf die angeforderten Ressourcen verwendet werden kann. Die Client-Anwendung sendet typischerweise eine Anfrage an den Token-Endpunkt mit einem Grant-Typ und einem Autorisierungscode, um ein ID-Token zu erhalten."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.em,{children:"jwksUri"}),": Dies ist der URL-Endpunkt, an dem das JSON Web Key Set (JWKS) des sozialen Identit\xe4tsanbieters (kurz IdP) abgerufen werden kann. Das JWKS ist eine Sammlung kryptografischer Schl\xfcssel, die der IdP verwendet, um JSON Web Tokens (JWTs) zu signieren und zu verifizieren, die w\xe4hrend des Authentifizierungsprozesses ausgestellt werden. Die ",(0,r.jsx)(n.code,{children:"jwksUri"})," wird von der vertrauenden Partei (RP) verwendet, um die \xf6ffentlichen Schl\xfcssel zu erhalten, die vom IdP zum Signieren der JWTs verwendet werden, sodass die RP die Authentizit\xe4t und Integrit\xe4t der vom IdP empfangenen JWTs \xfcberpr\xfcfen kann."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.em,{children:"issuer"}),": Dies ist der eindeutige Identifikator des IdP, der von der RP verwendet wird, um die vom IdP empfangenen JWTs zu \xfcberpr\xfcfen. Er ist in den JWTs als ",(0,r.jsx)(n.code,{children:"iss"})," ",(0,r.jsx)(n.a,{href:"https://www.rfc-editor.org/rfc/rfc7519#section-4",children:"Anspruch"})," enthalten (ID-Token ist immer ein JWT). Der Ausstellerwert sollte mit der URL des Autorisierungsservers des IdP \xfcbereinstimmen und eine URI sein, der die RP vertraut. Wenn die RP ein JWT erh\xe4lt, \xfcberpr\xfcft sie den ",(0,r.jsx)(n.code,{children:"iss"}),"-Anspruch, um sicherzustellen, dass es von einem vertrauensw\xfcrdigen IdP ausgestellt wurde und dass das JWT f\xfcr die Verwendung mit der RP bestimmt ist."]}),"\n",(0,r.jsxs)(n.p,{children:["Zusammen bieten ",(0,r.jsx)(n.code,{children:"jwksUri"})," und ",(0,r.jsx)(n.code,{children:"issuer"})," einen sicheren Mechanismus f\xfcr die RP, um die Identit\xe4t des Endbenutzers w\xe4hrend des Authentifizierungsprozesses zu \xfcberpr\xfcfen. Durch die Verwendung der von der ",(0,r.jsx)(n.code,{children:"jwksUri"})," erhaltenen \xf6ffentlichen Schl\xfcssel kann die RP die Authentizit\xe4t und Integrit\xe4t der vom IdP ausgestellten JWTs \xfcberpr\xfcfen. Der Ausstellerwert stellt sicher, dass die RP nur JWTs akzeptiert, die von einem vertrauensw\xfcrdigen IdP ausgestellt wurden und dass die JWTs f\xfcr die Verwendung mit der RP bestimmt sind."]}),"\n",(0,r.jsxs)(n.p,{children:["Da eine Authentifizierungsanfrage immer erforderlich ist, wird ein ",(0,r.jsx)(n.code,{children:"authRequestOptionalConfig"})," bereitgestellt, um alle optionalen Konfigurationen zu umschlie\xdfen. Details findest du unter ",(0,r.jsx)(n.a,{href:"https://openid.net/specs/openid-connect-core-1_0.html#AuthRequest",children:"OIDC Authentication Request"}),". Du wirst vielleicht auch feststellen, dass ",(0,r.jsx)(n.code,{children:"nonce"})," in dieser Konfiguration fehlt. Da ",(0,r.jsx)(n.code,{children:"nonce"})," f\xfcr jede Anfrage identisch sein sollte, haben wir die Generierung von ",(0,r.jsx)(n.code,{children:"nonce"})," in die Code-Implementierung aufgenommen. Also mach dir keine Sorgen dar\xfcber! Die zuvor erw\xe4hnten ",(0,r.jsx)(n.code,{children:"jwksUri"})," und ",(0,r.jsx)(n.code,{children:"issuer"})," sind ebenfalls in ",(0,r.jsx)(n.code,{children:"idTokenVerificationConfig"})," enthalten."]}),"\n",(0,r.jsx)(n.p,{children:"Du fragst dich vielleicht, warum ein standardm\xe4\xdfiges OIDC-Protokoll sowohl die impliziten als auch die hybriden Flows unterst\xfctzt, w\xe4hrend der Logto-Connector nur den Autorisierungs-Flow unterst\xfctzt. Es wurde festgestellt, dass die impliziten und hybriden Flows weniger sicher sind als der Autorisierungs-Flow. Aufgrund von Logtos Fokus auf Sicherheit unterst\xfctzt es nur den Autorisierungs-Flow f\xfcr das h\xf6chste Sicherheitsniveau f\xfcr seine Benutzer, trotz seiner etwas weniger bequemen Natur."}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"responseType"})," und ",(0,r.jsx)(n.code,{children:"grantType"}),' k\xf6nnen NUR feste Werte mit dem "Authorization Code"-Flow sein, daher machen wir sie optional und Standardwerte werden automatisch ausgef\xfcllt.']}),"\n",(0,r.jsx)(n.admonition,{type:"note",children:(0,r.jsxs)(n.p,{children:["F\xfcr alle Flow-Typen haben wir einen OPTIONALEN ",(0,r.jsx)(n.code,{children:"customConfig"}),"-Schl\xfcssel bereitgestellt, um deine benutzerdefinierten Parameter einzuf\xfcgen.\nJeder soziale Identit\xe4tsanbieter k\xf6nnte seine eigene Variante des OIDC-Standardprotokolls haben. Wenn dein gew\xfcnschter sozialer Identit\xe4tsanbieter strikt am OIDC-Standardprotokoll festh\xe4lt, musst du dich nicht um ",(0,r.jsx)(n.code,{children:"customConfig"})," k\xfcmmern."]})}),"\n",(0,r.jsx)(n.h2,{id:"config-types",children:"Konfigurationstypen"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Name"}),(0,r.jsx)(n.th,{children:"Typ"}),(0,r.jsx)(n.th,{children:"Erforderlich"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"scope"}),(0,r.jsx)(n.td,{children:"string"}),(0,r.jsx)(n.td,{children:"Ja"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"clientId"}),(0,r.jsx)(n.td,{children:"string"}),(0,r.jsx)(n.td,{children:"Ja"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"clientSecret"}),(0,r.jsx)(n.td,{children:"string"}),(0,r.jsx)(n.td,{children:"Ja"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"authorizationEndpoint"}),(0,r.jsx)(n.td,{children:"string"}),(0,r.jsx)(n.td,{children:"Ja"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"tokenEndpoint"}),(0,r.jsx)(n.td,{children:"string"}),(0,r.jsx)(n.td,{children:"Ja"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"idTokenVerificationConfig"}),(0,r.jsx)(n.td,{children:"IdTokenVerificationConfig"}),(0,r.jsx)(n.td,{children:"Ja"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"authRequestOptionalConfig"}),(0,r.jsx)(n.td,{children:"AuthRequestOptionalConfig"}),(0,r.jsx)(n.td,{children:"Nein"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"customConfig"}),(0,r.jsx)(n.td,{children:"Record<string, string>"}),(0,r.jsx)(n.td,{children:"Nein"})]})]})]}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"AuthRequestOptionalConfig Eigenschaften"}),(0,r.jsx)(n.th,{children:"Typ"}),(0,r.jsx)(n.th,{children:"Erforderlich"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"responseType"}),(0,r.jsx)(n.td,{children:"string"}),(0,r.jsx)(n.td,{children:"Nein"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"tokenEndpoint"}),(0,r.jsx)(n.td,{children:"string"}),(0,r.jsx)(n.td,{children:"Nein"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"responseMode"}),(0,r.jsx)(n.td,{children:"string"}),(0,r.jsx)(n.td,{children:"Nein"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"display"}),(0,r.jsx)(n.td,{children:"string"}),(0,r.jsx)(n.td,{children:"Nein"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"prompt"}),(0,r.jsx)(n.td,{children:"string"}),(0,r.jsx)(n.td,{children:"Nein"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"maxAge"}),(0,r.jsx)(n.td,{children:"string"}),(0,r.jsx)(n.td,{children:"Nein"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"uiLocales"}),(0,r.jsx)(n.td,{children:"string"}),(0,r.jsx)(n.td,{children:"Nein"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"idTokenHint"}),(0,r.jsx)(n.td,{children:"string"}),(0,r.jsx)(n.td,{children:"Nein"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"loginHint"}),(0,r.jsx)(n.td,{children:"string"}),(0,r.jsx)(n.td,{children:"Nein"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"acrValues"}),(0,r.jsx)(n.td,{children:"string"}),(0,r.jsx)(n.td,{children:"Nein"})]})]})]}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"IdTokenVerificationConfig Eigenschaften"}),(0,r.jsx)(n.th,{children:"Typ"}),(0,r.jsx)(n.th,{children:"Erforderlich"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"jwksUri"}),(0,r.jsx)(n.td,{children:"string"}),(0,r.jsx)(n.td,{children:"Ja"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"issuer"}),(0,r.jsx)(n.td,{children:"string | string[]"}),(0,r.jsx)(n.td,{children:"Nein"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"audience"}),(0,r.jsx)(n.td,{children:"string | string[]"}),(0,r.jsx)(n.td,{children:"Nein"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"algorithms"}),(0,r.jsx)(n.td,{children:"string[]"}),(0,r.jsx)(n.td,{children:"Nein"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"clockTolerance"}),(0,r.jsx)(n.td,{children:"string | number"}),(0,r.jsx)(n.td,{children:"Nein"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"crit"}),(0,r.jsx)(n.td,{children:"Record<string, string | boolean>"}),(0,r.jsx)(n.td,{children:"Nein"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"currentDate"}),(0,r.jsx)(n.td,{children:"Date"}),(0,r.jsx)(n.td,{children:"Nein"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"maxTokenAge"}),(0,r.jsx)(n.td,{children:"string | number"}),(0,r.jsx)(n.td,{children:"Nein"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"subject"}),(0,r.jsx)(n.td,{children:"string"}),(0,r.jsx)(n.td,{children:"Nein"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"typ"}),(0,r.jsx)(n.td,{children:"string"}),(0,r.jsx)(n.td,{children:"Nein"})]})]})]}),"\n",(0,r.jsxs)(n.p,{children:["Siehe ",(0,r.jsx)(n.a,{href:"https://github.com/panva/jose/blob/main/docs/jwt/verify/interfaces/JWTVerifyOptions.md",children:"hier"}),", um mehr Details \xfcber ",(0,r.jsx)(n.code,{children:"IdTokenVerificationConfig"})," zu finden."]})]})}function c(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(o,{...e})}):o(e)}const l={slug:"/integrations/oidc",sidebar_label:"OIDC (Sozial)",sidebar_custom_props:{description:"OpenID Connect 1.0 ist eine einfache Identit\xe4tsschicht \xfcber dem OAuth 2.0-Protokoll."},tutorial_name:"OIDC",tutorial_config_name:"Standard OIDC-App"},h="Soziale Anmeldung mit OpenID Connect (OIDC) einrichten",a={},u=[...d.RM,{value:"Erste Schritte",id:"get-started",level:2},{value:"Erstelle deine OIDC-App",id:"create-your-oidc-app",level:2},{value:"Konfiguriere deinen Connector",id:"configure-your-connector",level:2},{value:"Konfigurationstypen",id:"config-types",level:2}];function j(e){const n={admonition:"admonition",h1:"h1",h2:"h2",header:"header",p:"p",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"soziale-anmeldung-mit-openid-connect-oidc-einrichten",children:"Soziale Anmeldung mit OpenID Connect (OIDC) einrichten"})}),"\n",(0,r.jsx)(n.p,{children:"Der offizielle Logto-Connector f\xfcr das OpenID Connect (OIDC)-Protokoll."}),"\n",(0,r.jsx)(d.Ay,{}),"\n",(0,r.jsx)(n.h2,{id:"get-started",children:"Erste Schritte"}),"\n",(0,r.jsx)(n.p,{children:"Der OIDC-Connector erm\xf6glicht Logtos Verbindung zu einem beliebigen sozialen Identit\xe4tsanbieter, der das OIDC-Protokoll unterst\xfctzt."}),"\n",(0,r.jsx)(n.admonition,{type:"note",children:(0,r.jsx)(n.p,{children:"Der OIDC-Connector ist eine spezielle Art von Connector in Logto, du kannst einige OIDC-basierte Connectors hinzuf\xfcgen."})}),"\n",(0,r.jsx)(c,{})]})}function g(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(j,{...e})}):j(e)}},79621:(e,n,i)=>{i.d(n,{R:()=>d,x:()=>o});var t=i(58101);const r={},s=t.createContext(r);function d(e){const n=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:d(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);