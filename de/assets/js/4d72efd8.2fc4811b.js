"use strict";(self.webpackChunk_logto_docs=self.webpackChunk_logto_docs||[]).push([[2985],{68454:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>d,contentTitle:()=>o,default:()=>c,frontMatter:()=>a,metadata:()=>t,toc:()=>u});const t=JSON.parse('{"id":"user-management/user-migration","title":"Benutzermigration","description":"Logto unterst\xfctzt die manuelle Migration bestehender Benutzer von einer anderen Plattform. Diese Anleitung zeigt dir, wie du bestehende Benutzer \xfcber die Management API importierst und erl\xe4utert Dinge, die du vor der Migration beachten solltest.","source":"@site/i18n/de/docusaurus-plugin-content-docs/current/user-management/user-migration.mdx","sourceDirName":"user-management","slug":"/user-management/user-migration","permalink":"/de/user-management/user-migration","draft":false,"unlisted":false,"editUrl":"https://github.com/logto-io/docs/tree/master/i18n/de/docusaurus-plugin-content-docs/current/user-management/user-migration.mdx","tags":[],"version":"current","sidebarPosition":5,"frontMatter":{"sidebar_position":5},"sidebar":"docsSidebar","previous":{"title":"Pers\xf6nlicher Zugriffstoken","permalink":"/de/user-management/personal-access-token"},"next":{"title":"Benutzerverwaltung","permalink":"/de/user-management/"}}');var i=r(25105),s=r(79621);const a={sidebar_position:5},o="Benutzermigration",d={},u=[{value:"Benutzerschema",id:"user-schema",level:2},{value:"Passwort-Hashing",id:"password-hashing",level:2},{value:"Schritte zur Migration",id:"steps-to-migrate",level:2},{value:"Verwandte Ressourcen",id:"related-resources",level:2}];function l(e){const n={a:"a",br:"br",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",...(0,s.R)(),...e.components},{Url:r}=n;return r||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Url",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"benutzermigration",children:"Benutzermigration"})}),"\n",(0,i.jsx)(n.p,{children:"Logto unterst\xfctzt die manuelle Migration bestehender Benutzer von einer anderen Plattform. Diese Anleitung zeigt dir, wie du bestehende Benutzer \xfcber die Management API importierst und erl\xe4utert Dinge, die du vor der Migration beachten solltest."}),"\n",(0,i.jsx)(n.h2,{id:"user-schema",children:"Benutzerschema"}),"\n",(0,i.jsxs)(n.p,{children:["Bevor wir beginnen, werfen wir einen Blick auf das ",(0,i.jsx)(n.a,{href:"/user-management/user-data/#user-profile",children:"Benutzerschema"})," in Logto. Es gibt 3 Teile des Benutzerschemas, die du kennen solltest:"]}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Basisdaten"}),": Dies sind die Basisinformationen aus dem Benutzerprofil. Du kannst die Daten aus deinem bestehenden Benutzerprofil zuordnen."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Benutzerdefinierte Daten"}),": Speichert zus\xe4tzliche Benutzerinformationen. Du kannst dies verwenden, um Felder zu speichern, die nicht den Basisdaten zugeordnet werden k\xf6nnen."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Soziale Identit\xe4ten"}),": Speichert die Benutzerinformationen, die durch Social Sign-In abgerufen wurden."]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["Du kannst eine Zuordnung erstellen, um die Benutzerinformationen aus deinem bestehenden Benutzerprofil den ",(0,i.jsx)(n.strong,{children:"Basisdaten"})," und ",(0,i.jsx)(n.strong,{children:"benutzerdefinierten Daten"})," zuzuordnen. F\xfcr Social Sign-In sind zus\xe4tzliche Schritte erforderlich, um die sozialen Identit\xe4ten zu importieren. Siehe dazu die API von ",(0,i.jsx)(n.a,{href:"https://openapi.logto.io/operation/operation-createuseridentity",children:"Soziale Identit\xe4t mit Benutzer verkn\xfcpfen"}),"."]}),"\n",(0,i.jsx)(n.h2,{id:"password-hashing",children:"Passwort-Hashing"}),"\n",(0,i.jsxs)(n.p,{children:["Logto verwendet ",(0,i.jsx)(n.a,{href:"https://de.wikipedia.org/wiki/Argon2",children:"Argon2"}),", um das Passwort des Benutzers zu hashen, und unterst\xfctzt au\xdferdem andere Algorithmen wie ",(0,i.jsx)(n.code,{children:"MD5"}),", ",(0,i.jsx)(n.code,{children:"SHA1"}),", ",(0,i.jsx)(n.code,{children:"SHA256"})," und ",(0,i.jsx)(n.code,{children:"Bcrypt"})," zur Erleichterung der Migration. Diese Algorithmen gelten als unsicher; die entsprechenden Passwort-Hashes werden beim ersten erfolgreichen Anmelden des Benutzers auf Argon2 migriert."]}),"\n",(0,i.jsxs)(n.p,{children:["Wenn du andere Hashing-Algorithmen oder Salt verwendest, kannst du ",(0,i.jsx)(n.code,{children:"passwordAlgorithm"})," auf ",(0,i.jsx)(n.code,{children:"Legacy"})," setzen. Dadurch kannst du jeden von Node.js unterst\xfctzten Hash-Algorithmus verwenden. Die Liste der unterst\xfctzten Algorithmen findest du in der ",(0,i.jsx)(n.a,{href:"https://nodejs.org/api/crypto.html#cryptogethashes",children:"Node.js Crypto-Dokumentation"}),". In diesem Fall ist das ",(0,i.jsx)(n.code,{children:"passwordDigest"})," ein JSON-String, der den Hash-Algorithmus und andere algorithmusspezifische Parameter enth\xe4lt."]}),"\n",(0,i.jsx)(n.p,{children:"Das Format des JSON-Strings ist wie folgt:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'["hash_algorithm", ["argument1", "argument2", ...], "expected_hashed_value"]\n'})}),"\n",(0,i.jsxs)(n.p,{children:["Und du kannst ",(0,i.jsx)(n.code,{children:"@"})," als Platzhalter f\xfcr den tats\xe4chlichen Passwortwert in den Argumenten verwenden."]}),"\n",(0,i.jsx)(n.p,{children:"Wenn du beispielsweise SHA256 mit einem Salt verwendest, kannst du das Passwort im folgenden Format speichern:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'["sha256", ["salt123", "@"], "c465f66c6ac481a7a17e9ed5b4e2e7e7288d892f12bf1c95c140901e9a70436e"]\n'})}),"\n",(0,i.jsx)(n.p,{children:"Dies entspricht folgendem Code:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:"const hash = crypto.createHash('sha256');\nhash.update('salt123' + 'password123');\nconst expectedHashedValue = hash.digest('hex');\n"})}),"\n",(0,i.jsx)(n.h2,{id:"steps-to-migrate",children:"Schritte zur Migration"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Benutzerdaten vorbereiten"}),(0,i.jsx)(n.br,{}),"\n","Du solltest zuerst die Benutzerdaten aus deiner bestehenden Plattform exportieren und dann die Benutzerinformationen dem Logto-Benutzerschema zuordnen. Wir empfehlen, die zugeordneten Daten im JSON-Format vorzubereiten. Hier ist ein Beispiel f\xfcr die Benutzerdaten:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'[\n  {\n    "username": "user1",\n    "passwordDigest": "password-encrypted",\n    "passwordAlgorithm": "SHA256"\n  },\n  {\n    "username": "user2",\n    "passwordDigest": "password-encrypted",\n    "passwordAlgorithm": "SHA256"\n  }\n]\n'})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Logto-Tenant erstellen"}),(0,i.jsx)(n.br,{}),"\n","Du musst einen Tenant in Logto einrichten. Du kannst entweder Logto Cloud oder Logto OSS verwenden. Falls du dies noch nicht getan hast, siehe die Anleitung ",(0,i.jsx)(n.a,{href:"/introduction/set-up-logto-cloud/#create-logto-tenant",children:"Logto Cloud einrichten"}),"."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Verbindung zur Management API einrichten"}),(0,i.jsx)(n.br,{}),"\n","Wir verwenden die Management API, um die Benutzerdaten zu importieren. Siehe ",(0,i.jsx)(n.a,{href:"/integrate-logto/interact-with-management-api",children:"Management API"}),", um zu erfahren, wie du die Verbindung in deiner Entwicklungsumgebung einrichtest."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Benutzerdaten importieren"}),(0,i.jsx)(n.br,{}),"\n","Es wird empfohlen, ein Skript vorzubereiten, um die Benutzerdaten einzeln zu importieren. Wir rufen die ",(0,i.jsx)(n.a,{href:"https://openapi.logto.io/operation/operation-createuser",children:"create user"})," API auf, um die Benutzerdaten zu importieren. Hier ist ein Beispiel f\xfcr das Skript:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-jsx",children:"const users = require('./users.json');\n\nconst importUsers = async () => {\n  for (const user of users) {\n    try {\n      await fetch('https://[tenant_id].logto.app/api/users', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer [your-access-token]',\n        },\n        body: JSON.stringify(user),\n      });\n      // Sleep for a while to avoid rate limit\n      await new Promise((resolve) => setTimeout(resolve, 200));\n    } catch (error) {\n      console.error(`Failed to import user ${user.username}: ${error.message}`);\n    }\n  }\n};\n\nimportUsers();\n"})}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["Bitte beachte, dass der API-Endpunkt einer Rate-Limitierung unterliegt. Du solltest zwischen den einzelnen Anfragen eine Pause einlegen, um das Rate Limit nicht zu \xfcberschreiten. Siehe unsere Seite zu ",(0,i.jsx)(n.a,{href:"/integrate-logto/interact-with-management-api/#rate-limit",children:"Rate Limits"})," f\xfcr Details."]}),"\n",(0,i.jsxs)(n.p,{children:["Wenn du eine gro\xdfe Menge an Benutzerdaten hast (100.000+ Benutzer), kannst du ",(0,i.jsx)(n.a,{href:"https://logto.io/contact",children:"uns kontaktieren"}),", um das Rate Limit zu erh\xf6hen."]}),"\n",(0,i.jsx)(n.h2,{id:"related-resources",children:"Verwandte Ressourcen"}),"\n",(0,i.jsx)(r,{href:"https://blog.logto.io/general-migration-guide",children:(0,i.jsx)(n.p,{children:"Eine allgemeine Anleitung zur Migration deiner bestehenden Benutzerdatenbank zu Logto"})})]})}function c(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},79621:(e,n,r)=>{r.d(n,{R:()=>a,x:()=>o});var t=r(58101);const i={},s=t.createContext(i);function a(e){const n=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);