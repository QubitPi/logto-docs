"use strict";(self.webpackChunk_logto_docs=self.webpackChunk_logto_docs||[]).push([[1620],{54470:(e,n,i)=>{i.d(n,{Ay:()=>y,RM:()=>z});var r=i(25105),t=i(79621),s=i(16043),o=i(43980),a=i(9123),l=i(98497);const c=i.p+"assets/images/guide-focus-8b3e94dddfb8a3c19b5bdd8a343fc29f.png";var d=i(33435);function u(e){const n={a:"a",h2:"h2",h3:"h3",li:"li",p:"p",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h2,{id:"before-you-start",children:"Bevor du beginnst"}),"\n",(0,r.jsxs)(n.p,{children:["Deine Client-Anwendungen m\xfcssen Zugangstokens (Access tokens) von Logto erhalten. Falls du die Client-Integration noch nicht eingerichtet hast, schaue dir unsere ",(0,r.jsx)(n.a,{href:"/quick-starts",children:"Schnellstarts"})," f\xfcr React, Vue, Angular oder andere Client-Frameworks an oder sieh dir unseren ",(0,r.jsx)(n.a,{href:"/quick-starts/m2m",children:"Maschine-zu-Maschine-Leitfaden"})," f\xfcr Server-zu-Server-Zugriff an."]}),"\n",(0,r.jsxs)(n.p,{children:["Dieser Leitfaden konzentriert sich auf die ",(0,r.jsx)(n.strong,{children:"serverseitige Validierung"})," dieser Tokens in deiner ",(0,d.My)(e.framework),"-Anwendung."]}),"\n",(0,r.jsx)("img",{src:c,alt:"Eine Abbildung, die den Fokus dieses Leitfadens zeigt",style:{width:"100%",maxWidth:"480px",margin:"20px auto"}}),"\n",(0,r.jsx)(n.h3,{id:"what-you-will-learn",children:"Was du lernen wirst"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"JWT-Validierung:"})," Lerne, Zugangstokens (Access tokens) zu validieren und Authentifizierungsinformationen zu extrahieren"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Middleware-Implementierung:"})," Erstelle wiederverwendbare Middleware zum Schutz deiner API"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Berechtigungsmodelle:"})," Verstehe und implementiere verschiedene Autorisierungsmuster (Authorization patterns):","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Globale API-Ressourcen f\xfcr anwendungsweite Endpunkte"}),"\n",(0,r.jsx)(n.li,{children:"Organisationsberechtigungen f\xfcr mandantenspezifische Funktionskontrolle"}),"\n",(0,r.jsx)(n.li,{children:"Organisationsbezogene API-Ressourcen f\xfcr Multi-Tenant-Datenzugriff"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"RBAC-Integration:"})," Erzwinge rollenbasierte Berechtigungen (Role-based permissions) und Berechtigungen (Scopes) in deinen API-Endpunkten"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"prerequisites",children:"Voraussetzungen"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Neueste stabile Version von ",(0,d.Id)(e.framework)," installiert"]}),"\n",(0,r.jsxs)(n.li,{children:["Grundlegendes Verst\xe4ndnis von ",(0,d.My)(e.framework)," und Web-API-Entwicklung"]}),"\n",(0,r.jsxs)(n.li,{children:["Eine konfigurierte Logto-Anwendung (siehe ",(0,r.jsx)(n.a,{href:"/quick-starts",children:"Schnellstarts"}),", falls ben\xf6tigt)"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(u,{...e})}):u(e)}function g(e){const n={h2:"h2",p:"p",...(0,t.R)(),...e.components},{Url:i}=n;return i||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Url",!0),(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h2,{id:"further-reading",children:"Weiterf\xfchrende Literatur"}),"\n",(0,r.jsx)(i,{href:"/use-cases/authorization/rbac-in-practice",children:(0,r.jsx)(n.p,{children:"RBAC in der Praxis: Sichere Autorisierung f\xfcr deine Anwendung implementieren"})}),"\n",(0,r.jsx)(i,{href:"/use-cases/multi-tenancy/build-multi-tenant-saas-application",children:(0,r.jsx)(n.p,{children:"Entwicklung einer Multi-Tenant-SaaS-Anwendung: Ein vollst\xe4ndiger Leitfaden von Design bis\nImplementierung"})})]})}function p(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(g,{...e})}):g(e)}var m=i(46643),x=i(1242),j=i(93855),f=i(38552),b=i(22002);function A(e){const n={a:"a",h2:"h2",li:"li",p:"p",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h2,{id:"permission-models-overview",children:"\xdcberblick \xfcber Berechtigungsmodelle"}),"\n",(0,r.jsxs)(n.p,{children:["Bevor du Schutzmechanismen implementierst, w\xe4hle das Berechtigungsmodell, das zu deiner Anwendungsarchitektur passt. Dies steht im Einklang mit den drei Haupt-",(0,r.jsx)(n.a,{href:"/authorization#authorization-scenarios",children:"Autorisierungsszenarien"})," von Logto:"]}),"\n",(0,r.jsxs)(b.A,{groupId:"permission-models",children:[(0,r.jsxs)(f.A,{value:"global-api-resources",label:"Globale API-Ressourcen",children:[(0,r.jsx)("img",{src:m.A,alt:"Globale API-Ressourcen RBAC",style:{maxWidth:"100%"}}),(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Anwendungsfall:"})," Schutz von API-Ressourcen, die in deiner gesamten Anwendung geteilt werden (nicht organisationsspezifisch)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Token-Typ:"})," Zugangstoken (Access token) mit globaler Zielgruppe (Audience)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Beispiele:"})," \xd6ffentliche APIs, Kernproduktdienste, Admin-Endpunkte"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Am besten geeignet f\xfcr:"})," SaaS-Produkte mit APIs, die von allen Kunden genutzt werden, Microservices ohne Mandantenisolation"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Mehr erfahren:"})," ",(0,r.jsx)(n.a,{href:"/authorization/global-api-resources",children:"Globale API-Ressourcen sch\xfctzen"})]}),"\n"]})]}),(0,r.jsxs)(f.A,{value:"organization-permissions",label:"Organisations-(Nicht-API-)Berechtigungen",children:[(0,r.jsx)("img",{src:j.A,alt:"Organisationsberechtigungen RBAC",style:{maxWidth:"800px",width:"100%"}}),(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Anwendungsfall:"})," Steuerung von organisationsspezifischen Aktionen, UI-Funktionen oder Gesch\xe4ftslogik (keine APIs)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Token-Typ:"})," Organisationstoken mit organisationsspezifischer Zielgruppe (Audience)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Beispiele:"})," Feature-Gating, Dashboard-Berechtigungen, Steuerung von Mitglieder-Einladungen"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Am besten geeignet f\xfcr:"})," Multi-Tenant-SaaS mit organisationsspezifischen Funktionen und Workflows"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Mehr erfahren:"})," ",(0,r.jsx)(n.a,{href:"/authorization/organization-permissions",children:"Organisations-(Nicht-API-)Berechtigungen sch\xfctzen"})]}),"\n"]})]}),(0,r.jsxs)(f.A,{value:"organization-level-api-resources",label:"Organisationsbezogene API-Ressourcen",children:[(0,r.jsx)("img",{src:x.A,alt:"Organisationsbezogene API-Ressourcen RBAC",style:{width:"100%"}}),(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Anwendungsfall:"})," Schutz von API-Ressourcen, die innerhalb eines bestimmten Organisationskontextes zug\xe4nglich sind"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Token-Typ:"})," Organisationstoken mit API-Ressourcen-Zielgruppe (Audience) + Organisationskontext"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Beispiele:"})," Multi-Tenant-APIs, organisationsbezogene Datenendpunkte, mandantenspezifische Microservices"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Am besten geeignet f\xfcr:"})," Multi-Tenant-SaaS, bei denen API-Daten organisationsbezogen sind"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Mehr erfahren:"})," ",(0,r.jsx)(n.a,{href:"/authorization/organization-level-api-resources",children:"Organisationsbezogene API-Ressourcen sch\xfctzen"})]}),"\n"]})]})]}),"\n",(0,r.jsx)("br",{}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"\ud83d\udca1 W\xe4hle dein Modell, bevor du fortf\xe4hrst"})," \u2013 die Umsetzung in diesem Leitfaden bezieht sich durchgehend auf deinen gew\xe4hlten Ansatz."]})]})}function v(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(A,{...e})}):A(e)}function w(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h2,{id:"quick-preparation-steps",children:"Schnelle Vorbereitungsschritte"}),"\n",(0,r.jsx)(n.h3,{id:"configure-logto-resources-permissions",children:"Logto-Ressourcen & Berechtigungen konfigurieren"}),"\n",(0,r.jsxs)(b.A,{groupId:"permission-models",children:[(0,r.jsx)(f.A,{value:"global-api-resources",label:"Globale API-Ressourcen",children:(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"API-Ressource erstellen:"})," Gehe zu ",(0,r.jsx)(n.a,{href:"https://cloud.logto.io/api-resources",children:"Konsole \u2192 API-Ressourcen"})," und registriere deine API (z. B. ",(0,r.jsx)(n.code,{children:"https://api.yourapp.com"}),")"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Berechtigungen definieren:"})," F\xfcge Berechtigungen wie ",(0,r.jsx)(n.code,{children:"read:products"}),", ",(0,r.jsx)(n.code,{children:"write:orders"})," hinzu \u2013 siehe ",(0,r.jsx)(n.a,{href:"/authorization/role-based-access-control#define-api-resources-with-permissions",children:"API-Ressourcen mit Berechtigungen definieren"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Globale Rollen erstellen:"})," Gehe zu ",(0,r.jsx)(n.a,{href:"https://cloud.logto.io/roles",children:"Konsole \u2192 Rollen"})," und erstelle Rollen, die deine API-Berechtigungen enthalten \u2013 siehe ",(0,r.jsx)(n.a,{href:"/authorization/role-based-access-control#configure-global-roles",children:"Globale Rollen konfigurieren"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Rollen zuweisen:"})," Weisen Sie Benutzern oder M2M-Anwendungen, die API-Zugriff ben\xf6tigen, Rollen zu"]}),"\n"]})}),(0,r.jsx)(f.A,{value:"organization-permissions",label:"Organisations-(Nicht-API-)Berechtigungen",children:(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Organisationsberechtigungen definieren:"})," Erstelle nicht-API-bezogene Organisationsberechtigungen wie ",(0,r.jsx)(n.code,{children:"invite:member"}),", ",(0,r.jsx)(n.code,{children:"manage:billing"})," in der Organisationstemplate"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Organisationsrollen einrichten:"})," Konfiguriere die Organisationstemplate mit organisationsspezifischen Rollen und weise ihnen Berechtigungen zu"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Organisationsrollen zuweisen:"})," Weisen Sie Benutzern innerhalb jedes Organisationskontexts Organisationsrollen zu"]}),"\n"]})}),(0,r.jsx)(f.A,{value:"organization-level-api-resources",label:"Organisationsbezogene API-Ressourcen",children:(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"API-Ressource erstellen:"})," Registriere deine API-Ressource wie oben, aber sie wird im Organisationskontext verwendet"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Berechtigungen definieren:"})," F\xfcge Berechtigungen wie ",(0,r.jsx)(n.code,{children:"read:data"}),", ",(0,r.jsx)(n.code,{children:"write:settings"})," hinzu, die auf den Organisationskontext beschr\xe4nkt sind"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Organisationstemplate konfigurieren:"})," Richte Organisationsrollen ein, die deine API-Ressourcenberechtigungen enthalten"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Organisationsrollen zuweisen:"})," Weisen Sie Benutzern oder M2M-Anwendungen Organisationsrollen zu, die API-Berechtigungen enthalten"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Multi-Tenant-Setup:"})," Stelle sicher, dass deine API organisationsbezogene Daten und Validierung verarbeiten kann"]}),"\n"]})})]}),"\n",(0,r.jsx)(n.admonition,{title:"Neu bei RBAC?",type:"tip",children:(0,r.jsxs)(n.p,{children:["Beginne mit unserem ",(0,r.jsx)(n.a,{href:"/authorization/role-based-access-control",children:"Leitfaden zur rollenbasierten Zugangskontrolle (RBAC)"})," f\xfcr eine Schritt-f\xfcr-Schritt-Anleitung."]})}),"\n",(0,r.jsx)(n.h3,{id:"update-your-client-application",children:"Aktualisiere deine Client-Anwendung"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Fordere die passenden Berechtigungen in deinem Client an:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Benutzer-Authentifizierung: ",(0,r.jsx)(n.a,{href:"/quick-starts",children:"App aktualisieren \u2192"}),", um deine API-Berechtigungen und/oder Organisationskontext anzufordern"]}),"\n",(0,r.jsxs)(n.li,{children:["Maschine-zu-Maschine: ",(0,r.jsx)(n.a,{href:"/quick-starts/m2m",children:"M2M-Berechtigungen konfigurieren \u2192"})," f\xfcr Server-zu-Server-Zugriff"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Der Prozess beinhaltet in der Regel die Aktualisierung deiner Client-Konfiguration, um eines oder mehrere der folgenden Elemente einzuschlie\xdfen:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"scope"}),"-Parameter in OAuth-Flows"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"resource"}),"-Parameter f\xfcr den Zugriff auf API-Ressourcen"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"organization_id"})," f\xfcr den Organisationskontext"]}),"\n"]}),"\n",(0,r.jsx)(n.admonition,{title:"Bevor du mit dem Code beginnst",type:"tip",children:(0,r.jsx)(n.p,{children:"Stelle sicher, dass der Benutzer oder die M2M-App, die du testest, die entsprechenden Rollen oder Organisationsrollen zugewiesen bekommen hat, die die notwendigen Berechtigungen f\xfcr deine API enthalten."})})]})}function k(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(w,{...e})}):w(e)}const z=[{value:"Bevor du beginnst",id:"before-you-start",level:2},{value:"Was du lernen wirst",id:"what-you-will-learn",level:3},{value:"Voraussetzungen",id:"prerequisites",level:3},{value:"\xdcberblick \xfcber Berechtigungsmodelle",id:"permission-models-overview",level:2},{value:"Schnelle Vorbereitungsschritte",id:"quick-preparation-steps",level:2},{value:"Logto-Ressourcen &amp; Berechtigungen konfigurieren",id:"configure-logto-resources-permissions",level:3},{value:"Aktualisiere deine Client-Anwendung",id:"update-your-client-application",level:3},{value:"Initialisiere dein API-Projekt",id:"initialize-your-api-project",level:2},{value:"Initialisiere Konstanten und Hilfsfunktionen",id:"initialize-constants-and-utilities",level:2},...s.RM,{value:"Informationen \xfcber deinen Logto-Mandanten abrufen",id:"retrieve-info-about-your-logto-tenant",level:2},...o.RM,{value:"Token und Berechtigungen validieren",id:"validate-the-token-and-permissions",level:2},...l.RM,{value:"Validierungslogik hinzuf\xfcgen",id:"add-the-validation-logic",level:3},{value:"Middleware auf deine API anwenden",id:"apply-the-middleware-to-your-api",level:2},{value:"Teste deine gesch\xfctzte API",id:"test-your-protected-api",level:2},...a.RM,{value:"Weiterf\xfchrende Literatur",id:"further-reading",level:2}];function I(e){const n={h2:"h2",h3:"h3",p:"p",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(h,{framework:e.framework}),"\n",(0,r.jsx)(v,{}),"\n",(0,r.jsx)(k,{}),"\n",(0,r.jsx)(n.h2,{id:"initialize-your-api-project",children:"Initialisiere dein API-Projekt"}),"\n","\n",e.initializeProject,"\n",(0,r.jsx)(n.h2,{id:"initialize-constants-and-utilities",children:"Initialisiere Konstanten und Hilfsfunktionen"}),"\n",(0,r.jsx)(s.Ay,{}),"\n","\n",e.languageInit,"\n",(0,r.jsx)(n.h2,{id:"retrieve-info-about-your-logto-tenant",children:"Informationen \xfcber deinen Logto-Mandanten abrufen"}),"\n",(0,r.jsx)(o.Ay,{}),"\n",(0,r.jsx)(n.h2,{id:"validate-the-token-and-permissions",children:"Token und Berechtigungen validieren"}),"\n",(0,r.jsx)(l.Ay,{}),"\n",(0,r.jsx)(n.h3,{id:"add-the-validation-logic",children:"Validierungslogik hinzuf\xfcgen"}),"\n","\n",e.addValidationLogic,"\n",(0,r.jsx)(n.h2,{id:"apply-the-middleware-to-your-api",children:"Middleware auf deine API anwenden"}),"\n",(0,r.jsx)(n.p,{children:"Wende nun die Middleware auf deine gesch\xfctzten API-Routen an."}),"\n","\n",e.applyMiddleware,"\n",(0,r.jsx)(n.h2,{id:"test-your-protected-api",children:"Teste deine gesch\xfctzte API"}),"\n",(0,r.jsx)(a.Ay,{}),"\n",(0,r.jsx)(p,{})]})}function y(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(I,{...e})}):I(e)}},75505:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>p,contentTitle:()=>g,default:()=>j,frontMatter:()=>h,metadata:()=>r,toc:()=>m});const r=JSON.parse('{"id":"api-protection/java/micronaut/README","title":"Sch\xfctze deine Micronaut-API mit rollenbasierter Zugangskontrolle (RBAC) und JWT-Validierung","description":"Diese Anleitung hilft dir, Autorisierung zu implementieren, um deine Micronaut-APIs mit rollenbasierter Zugangskontrolle (RBAC) und JSON Web Tokens (JWTs), die von Logto ausgestellt werden, abzusichern.","source":"@site/i18n/de/docusaurus-plugin-content-docs/current/api-protection/java/micronaut/README.mdx","sourceDirName":"api-protection/java/micronaut","slug":"/api-protection/java/micronaut/","permalink":"/de/api-protection/java/micronaut/","draft":false,"unlisted":false,"editUrl":"https://github.com/logto-io/docs/tree/master/i18n/de/docusaurus-plugin-content-docs/current/api-protection/java/micronaut/README.mdx","tags":[],"version":"current","frontMatter":{"sidebar_label":"Micronaut"},"sidebar":"apiProtectionSidebar","previous":{"title":"Sch\xfctze deine Java-API mit rollenbasierter Zugangskontrolle (RBAC) und JWT-Validierung","permalink":"/de/api-protection/java/"},"next":{"title":"Quarkus","permalink":"/de/api-protection/java/quarkus/"}}');var t=i(25105),s=i(79621),o=i(78809),a=i(4969),l=i(89979),c=i(54470);function d(e){const n={a:"a",admonition:"admonition",code:"code",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.p,{children:"Um ein neues Micronaut-Projekt zu initialisieren, kannst du entweder die Micronaut CLI verwenden oder Micronaut Launch besuchen:"}),"\n",(0,t.jsx)(n.p,{children:"Verwendung der Micronaut CLI:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"mn create-app com.example.your-api-name \\\n    --features=security-jwt,http-server-netty \\\n    --build=maven \\\n    --lang=java\ncd your-api-name\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Oder besuche ",(0,t.jsx)(n.a,{href:"https://micronaut.io/launch/",children:"Micronaut Launch"})," und w\xe4hle:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Anwendungstyp: Micronaut Application"}),"\n",(0,t.jsx)(n.li,{children:"Java-Version: 17"}),"\n",(0,t.jsx)(n.li,{children:"Build: Maven"}),"\n",(0,t.jsx)(n.li,{children:"Features: security-jwt, http-server-netty"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Dadurch wird ein grundlegendes Micronaut-Projekt erstellt:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-xml",metastring:'title="pom.xml"',children:'<?xml version="1.0" encoding="UTF-8"?>\n<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"\n         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">\n  <modelVersion>4.0.0</modelVersion>\n  <groupId>com.example</groupId>\n  <artifactId>your-api-name</artifactId>\n  <version>0.1</version>\n  <packaging>jar</packaging>\n\n  <parent>\n    <groupId>io.micronaut.platform</groupId>\n    <artifactId>micronaut-parent</artifactId>\n    <version>4.2.0</version>\n  </parent>\n\n  <properties>\n    <packaging>jar</packaging>\n    <jdk.version>17</jdk.version>\n    <release.version>17</release.version>\n    <micronaut.version>4.2.0</micronaut.version>\n    <micronaut.runtime>netty</micronaut.runtime>\n    <exec.mainClass>com.example.Application</exec.mainClass>\n  </properties>\n</project>\n'})}),"\n",(0,t.jsx)(n.p,{children:"Erstelle einen einfachen Controller:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",metastring:'title="src/main/java/com/example/HelloController.java"',children:'package com.example;\n\nimport io.micronaut.http.annotation.Controller;\nimport io.micronaut.http.annotation.Get;\nimport io.micronaut.http.MediaType;\nimport io.micronaut.http.annotation.Produces;\n\n@Controller("/hello")\npublic class HelloController {\n\n    @Get\n    @Produces(MediaType.TEXT_PLAIN)\n    public String index() {\n        return "Hello World";\n    }\n}\n'})}),"\n",(0,t.jsx)(n.admonition,{type:"note",children:(0,t.jsx)(n.p,{children:"Weitere Informationen zur Einrichtung von Controllern, Services und anderen Funktionen findest du in der Micronaut-Dokumentation."})})]})}function u(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}const h={sidebar_label:"Micronaut"},g="Sch\xfctze deine Micronaut-API mit rollenbasierter Zugangskontrolle (RBAC) und JWT-Validierung",p={},m=[...c.RM];function x(e){const n={a:"a",h1:"h1",header:"header",p:"p",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"sch\xfctze-deine-micronaut-api-mit-rollenbasierter-zugangskontrolle-rbac-und-jwt-validierung",children:"Sch\xfctze deine Micronaut-API mit rollenbasierter Zugangskontrolle (RBAC) und JWT-Validierung"})}),"\n",(0,t.jsxs)(n.p,{children:["Diese Anleitung hilft dir, Autorisierung zu implementieren, um deine Micronaut-APIs mit ",(0,t.jsx)(n.a,{href:"/authorization/role-based-access-control",children:"rollenbasierter Zugangskontrolle (RBAC)"})," und ",(0,t.jsx)(n.a,{href:"https://auth.wiki/jwt",children:"JSON Web Tokens (JWTs)"}),", die von Logto ausgestellt werden, abzusichern."]}),"\n","\n",(0,t.jsx)(c.Ay,{framework:"micronaut",initializeProject:(0,t.jsx)(u,{}),languageInit:(0,t.jsx)(a.Ay,{}),applyMiddleware:(0,t.jsx)(l.Ay,{}),addValidationLogic:(0,t.jsx)(o.Ay,{framework:"micronaut"})})]})}function j(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(x,{...e})}):x(e)}},16043:(e,n,i)=>{i.d(n,{Ay:()=>a,RM:()=>s});var r=i(25105),t=i(79621);const s=[];function o(e){const n={code:"code",p:"p",...(0,t.R)(),...e.components};return(0,r.jsxs)(n.p,{children:["Definiere die notwendigen Konstanten und Hilfsfunktionen in deinem Code, um die Extraktion und Validierung von Tokens zu handhaben. Eine g\xfcltige Anfrage muss einen ",(0,r.jsx)(n.code,{children:"Authorization"}),"-Header in der Form ",(0,r.jsx)(n.code,{children:"Bearer <Zugangstoken (Access token)>"})," enthalten."]})}function a(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(o,{...e})}):o(e)}},43980:(e,n,i)=>{i.d(n,{Ay:()=>a,RM:()=>s});var r=i(25105),t=i(79621);const s=[{value:"Abrufen vom OpenID Connect Discovery-Endpunkt",id:"fetch-from-openid-connect-discovery-endpoint",level:3},{value:"Im Code fest hinterlegen (nicht empfohlen)",id:"hardcode-in-your-code-not-recommended",level:3}];function o(e){const n={code:"code",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.p,{children:"Du ben\xf6tigst die folgenden Werte, um von Logto ausgestellte Tokens zu validieren:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"JSON Web Key Set (JWKS) URI: Die URL zu den \xf6ffentlichen Schl\xfcsseln von Logto, die zur \xdcberpr\xfcfung von JWT-Signaturen verwendet wird."}),"\n",(0,r.jsx)(n.li,{children:"Aussteller (Issuer): Der erwartete Ausstellerwert (die OIDC-URL von Logto)."}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Zuerst finde den Endpunkt deines Logto-Tenants. Du findest ihn an verschiedenen Stellen:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["In der Logto-Konsole unter ",(0,r.jsx)(n.strong,{children:"Einstellungen"})," \u2192 ",(0,r.jsx)(n.strong,{children:"Domains"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:["In den Anwendungseinstellungen, die du in Logto konfiguriert hast, unter ",(0,r.jsx)(n.strong,{children:"Einstellungen"})," \u2192 ",(0,r.jsx)(n.strong,{children:"Endpoints & Credentials"}),"."]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"fetch-from-openid-connect-discovery-endpoint",children:"Abrufen vom OpenID Connect Discovery-Endpunkt"}),"\n",(0,r.jsx)(n.p,{children:"Diese Werte k\xf6nnen vom OpenID Connect Discovery-Endpunkt von Logto abgerufen werden:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"https://<your-logto-endpoint>/oidc/.well-known/openid-configuration\n"})}),"\n",(0,r.jsx)(n.p,{children:"Hier ist ein Beispiel f\xfcr eine Antwort (andere Felder wurden zur \xdcbersichtlichkeit weggelassen):"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "jwks_uri": "https://your-tenant.logto.app/oidc/jwks",\n  "issuer": "https://your-tenant.logto.app/oidc"\n}\n'})}),"\n",(0,r.jsx)(n.h3,{id:"hardcode-in-your-code-not-recommended",children:"Im Code fest hinterlegen (nicht empfohlen)"}),"\n",(0,r.jsx)(n.p,{children:"Da Logto keine Anpassung der JWKS-URI oder des Ausstellers (Issuer) erlaubt, kannst du diese Werte fest in deinem Code hinterlegen. Dies wird jedoch f\xfcr Produktionsanwendungen nicht empfohlen, da dies den Wartungsaufwand erh\xf6hen kann, falls sich zuk\xfcnftig Konfigurationen \xe4ndern."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["JWKS URI: ",(0,r.jsx)(n.code,{children:"https://<your-logto-endpoint>/oidc/jwks"})]}),"\n",(0,r.jsxs)(n.li,{children:["Aussteller (Issuer): ",(0,r.jsx)(n.code,{children:"https://<your-logto-endpoint>/oidc"})]}),"\n"]})]})}function a(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(o,{...e})}):o(e)}},9123:(e,n,i)=>{i.d(n,{Ay:()=>c,RM:()=>a});var r=i(25105),t=i(79621),s=i(38552),o=i(22002);const a=[{value:"Zugangstokens erhalten",id:"get-access-tokens",level:3},{value:"Gesch\xfctzte Endpunkte testen",id:"test-protected-endpoints",level:3},{value:"Berechtigungsmodell-spezifisches Testen",id:"permission-model-specific-testing",level:3}];function l(e){const n={a:"a",admonition:"admonition",code:"code",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components},{Details:i}=n;return i||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h3,{id:"get-access-tokens",children:"Zugangstokens erhalten"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Von deiner Client-Anwendung:"}),"\nWenn du eine Client-Integration eingerichtet hast, kann deine App Tokens automatisch erhalten. Extrahiere das Zugangstoken und verwende es in API-Anfragen."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Zum Testen mit curl / Postman:"})}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Benutzertokens:"})," Verwende die Entwicklertools deiner Client-App, um das Zugangstoken aus dem localStorage oder dem Netzwerk-Tab zu kopieren."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Maschine-zu-Maschine-Tokens:"})," Verwende den Client-Credentials-Flow. Hier ein nicht-normatives Beispiel mit curl:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'curl -X POST https://your-tenant.logto.app/oidc/token \\\n  -H "Content-Type: application/x-www-form-urlencoded" \\\n  -d "grant_type=client_credentials" \\\n  -d "client_id=your-m2m-client-id" \\\n  -d "client_secret=your-m2m-client-secret" \\\n  -d "resource=https://your-api-resource-indicator" \\\n  -d "scope=api:read api:write"\n'})}),"\n",(0,r.jsxs)(n.p,{children:["M\xf6glicherweise musst du die Parameter ",(0,r.jsx)(n.code,{children:"resource"})," und ",(0,r.jsx)(n.code,{children:"scope"})," entsprechend deiner API-Ressource und Berechtigungen anpassen; ein ",(0,r.jsx)(n.code,{children:"organization_id"}),"-Parameter kann ebenfalls erforderlich sein, wenn deine API organisationsgebunden ist."]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.admonition,{type:"tip",children:(0,r.jsxs)(n.p,{children:["M\xf6chtest du den Inhalt des Tokens inspizieren? Verwende unseren ",(0,r.jsx)(n.a,{href:"https://logto.io/jwt-decoder",children:"JWT Decoder"}),", um deine JWTs zu dekodieren und zu \xfcberpr\xfcfen."]})}),"\n",(0,r.jsx)(n.h3,{id:"test-protected-endpoints",children:"Gesch\xfctzte Endpunkte testen"}),"\n",(0,r.jsxs)(i,{children:[(0,r.jsx)("summary",{children:(0,r.jsx)(n.strong,{children:"G\xfcltige Token-Anfrage"})}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'curl -H "Authorization: Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9..." \\\n  http://localhost:3000/api/protected\n'})}),(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Erwartete Antwort:"})}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "auth": {\n    "sub": "user123",\n    "clientId": "app456",\n    "organizationId": "org789",\n    "scopes": ["api:read", "api:write"],\n    "audience": ["https://your-api-resource-indicator"]\n  }\n}\n'})})]}),"\n",(0,r.jsxs)(i,{children:[(0,r.jsx)("summary",{children:(0,r.jsx)(n.strong,{children:"Fehlendes Token"})}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"curl http://localhost:3000/api/protected\n"})}),(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Erwartete Antwort (401):"})}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "error": "Authorization header is missing"\n}\n'})})]}),"\n",(0,r.jsxs)(i,{children:[(0,r.jsx)("summary",{children:(0,r.jsx)(n.strong,{children:"Ung\xfcltiges Token"})}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'curl -H "Authorization: Bearer invalid-token" \\\n  http://localhost:3000/api/protected\n'})}),(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Erwartete Antwort (401):"})}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "error": "Invalid token"\n}\n'})})]}),"\n",(0,r.jsx)(n.h3,{id:"permission-model-specific-testing",children:"Berechtigungsmodell-spezifisches Testen"}),"\n",(0,r.jsxs)(o.A,{groupId:"permission-models",children:[(0,r.jsxs)(s.A,{value:"global-api-resources",label:"Globale API-Ressourcen",children:[(0,r.jsx)(n.p,{children:"Testszenarien f\xfcr APIs, die mit globalen Berechtigungen gesch\xfctzt sind:"}),(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"G\xfcltige Berechtigungen:"})," Teste mit Tokens, die deine erforderlichen API-Berechtigungen enthalten (z. B. ",(0,r.jsx)(n.code,{children:"api:read"}),", ",(0,r.jsx)(n.code,{children:"api:write"}),")"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Fehlende Berechtigungen:"})," Erwarte ",(0,r.jsx)(n.strong,{children:"403 Verboten"}),", wenn das Token die erforderlichen Berechtigungen nicht enth\xe4lt"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Falsche Zielgruppe:"})," Erwarte ",(0,r.jsx)(n.strong,{children:"403 Verboten"}),", wenn die Zielgruppe nicht mit der API-Ressource \xfcbereinstimmt"]}),"\n"]}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'# Token mit fehlenden Berechtigungen - erwarte 403\ncurl -H "Authorization: Bearer token-without-required-scopes" \\\n  http://localhost:3000/api/protected\n'})})]}),(0,r.jsxs)(s.A,{value:"organization-permissions",label:"Organisations-(Nicht-API)-Berechtigungen",children:[(0,r.jsx)(n.p,{children:"Testszenarien f\xfcr organisationsspezifische Zugangskontrolle:"}),(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"G\xfcltiges Organisationstoken:"})," Teste mit Tokens, die den korrekten Organisationskontext enthalten (Organisations-ID und Berechtigungen)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Fehlende Berechtigungen:"})," Erwarte ",(0,r.jsx)(n.strong,{children:"403 Verboten"}),", wenn der Benutzer keine Berechtigungen f\xfcr die angeforderte Aktion hat"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Falsche Organisation:"})," Erwarte ",(0,r.jsx)(n.strong,{children:"403 Verboten"}),", wenn die Zielgruppe nicht mit dem Organisationskontext \xfcbereinstimmt (",(0,r.jsx)(n.code,{children:"urn:logto:organization:<organization_id>"}),")"]}),"\n"]}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'# Token f\xfcr falsche Organisation - erwarte 403\ncurl -H "Authorization: Bearer token-for-different-organization" \\\n  http://localhost:3000/api/protected\n'})})]}),(0,r.jsxs)(s.A,{value:"organization-level-api-resources",label:"Organisationsgebundene API-Ressourcen",children:[(0,r.jsx)(n.p,{children:"Testszenarien, die API-Ressourcen-Validierung mit Organisationskontext kombinieren:"}),(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"G\xfcltige Organisation + API-Berechtigungen:"})," Teste mit Tokens, die sowohl den Organisationskontext als auch die erforderlichen API-Berechtigungen enthalten"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Fehlende API-Berechtigungen:"})," Erwarte ",(0,r.jsx)(n.strong,{children:"403 Verboten"}),", wenn das Organisationstoken die erforderlichen API-Berechtigungen nicht enth\xe4lt"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Falsche Organisation:"})," Erwarte ",(0,r.jsx)(n.strong,{children:"403 Verboten"}),", wenn auf die API mit einem Token aus einer anderen Organisation zugegriffen wird"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Falsche Zielgruppe:"})," Erwarte ",(0,r.jsx)(n.strong,{children:"403 Verboten"}),", wenn die Zielgruppe nicht mit der organisationsgebundenen API-Ressource \xfcbereinstimmt"]}),"\n"]}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'# Organisationstoken ohne API-Berechtigungen - erwarte 403\ncurl -H "Authorization: Bearer organization-token-without-api-scopes" \\\n  http://localhost:3000/api/protected\n'})})]})]})]})}function c(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},98497:(e,n,i)=>{i.d(n,{Ay:()=>c,RM:()=>a});var r=i(25105),t=i(79621),s=i(38552),o=i(22002);const a=[{value:"Was bei jedem Berechtigungsmodell zu pr\xfcfen ist",id:"what-to-check-for-each-permission-model",level:3}];function l(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h3:"h3",li:"li",p:"p",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.p,{children:"Nach dem Extrahieren des Tokens und dem Abrufen der OIDC-Konfiguration \xfcberpr\xfcfe Folgendes:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Signatur:"})," JWT muss g\xfcltig und von Logto (\xfcber JWKS) signiert sein."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Aussteller (Issuer):"})," Muss mit dem Aussteller deines Logto-Tenants \xfcbereinstimmen."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Zielgruppe (Audience):"})," Muss mit dem in Logto registrierten Ressourcenindikator der API oder dem Organisationskontext (falls zutreffend) \xfcbereinstimmen."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Ablauf (Expiration):"})," Token darf nicht abgelaufen sein."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Berechtigungen (Scopes):"})," Token muss die erforderlichen Berechtigungen f\xfcr deine API / Aktion enthalten. Berechtigungen sind durch Leerzeichen getrennte Zeichenfolgen im ",(0,r.jsx)(n.code,{children:"scope"}),"-Anspruch."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Organisationskontext:"})," Wenn du API-Ressourcen auf Organisationsebene sch\xfctzt, \xfcberpr\xfcfe den ",(0,r.jsx)(n.code,{children:"organization_id"}),"-Anspruch."]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["Siehe ",(0,r.jsx)(n.a,{href:"https://auth.wiki/jwt",children:"JSON Web Token"}),", um mehr \xfcber die Struktur und Anspr\xfcche von JWT zu erfahren."]}),"\n",(0,r.jsx)(n.h3,{id:"what-to-check-for-each-permission-model",children:"Was bei jedem Berechtigungsmodell zu pr\xfcfen ist"}),"\n",(0,r.jsxs)(o.A,{groupId:"permission-models",children:[(0,r.jsx)(s.A,{value:"global-api-resources",label:"Globale API-Ressourcen",children:(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsxs)(n.strong,{children:["Audience-Anspruch (",(0,r.jsx)(n.code,{children:"aud"}),"):"]})," API-Ressourcenindikator"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsxs)(n.strong,{children:["Organisations-Anspruch (",(0,r.jsx)(n.code,{children:"organization_id"}),"):"]})," ",(0,r.jsx)(n.em,{children:"Nicht vorhanden"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsxs)(n.strong,{children:["Zu pr\xfcfende Berechtigungen (",(0,r.jsx)(n.code,{children:"scope"}),"):"]})," API-Ressourcen-Berechtigungen"]}),"\n"]})}),(0,r.jsx)(s.A,{value:"organization-permissions",label:"Organisation (nicht-API) Berechtigungen",children:(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsxs)(n.strong,{children:["Audience-Anspruch (",(0,r.jsx)(n.code,{children:"aud"}),"):"]})," ",(0,r.jsx)(n.code,{children:"urn:logto:organization:<id>"})," (Organisationskontext ist im ",(0,r.jsx)(n.code,{children:"aud"}),"-Anspruch)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsxs)(n.strong,{children:["Organisations-Anspruch (",(0,r.jsx)(n.code,{children:"organization_id"}),"):"]})," ",(0,r.jsx)(n.em,{children:"Nicht vorhanden"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsxs)(n.strong,{children:["Zu pr\xfcfende Berechtigungen (",(0,r.jsx)(n.code,{children:"scope"}),"):"]})," Organisationsberechtigungen"]}),"\n"]})}),(0,r.jsx)(s.A,{value:"organization-level-api-resources",label:"API-Ressourcen auf Organisationsebene",children:(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsxs)(n.strong,{children:["Audience-Anspruch (",(0,r.jsx)(n.code,{children:"aud"}),"):"]})," API-Ressourcenindikator"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsxs)(n.strong,{children:["Organisations-Anspruch (",(0,r.jsx)(n.code,{children:"organization_id"}),"):"]})," Organisations-ID (muss mit Anfrage \xfcbereinstimmen)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsxs)(n.strong,{children:["Zu pr\xfcfende Berechtigungen (",(0,r.jsx)(n.code,{children:"scope"}),"):"]})," API-Ressourcen-Berechtigungen"]}),"\n"]})})]}),"\n",(0,r.jsx)("small",{children:(0,r.jsxs)(n.p,{children:["F\xfcr nicht-API-Organisationsberechtigungen wird der Organisationskontext durch den ",(0,r.jsx)(n.code,{children:"aud"}),"-Anspruch\ndargestellt (z. B. ",(0,r.jsx)(n.code,{children:"urn:logto:organization:abc123"}),"). Der ",(0,r.jsx)(n.code,{children:"organization_id"}),"-Anspruch ist nur f\xfcr\nTokens von API-Ressourcen auf Organisationsebene vorhanden."]})}),"\n",(0,r.jsx)(n.admonition,{type:"tip",children:(0,r.jsx)(n.p,{children:"Validiere immer sowohl Berechtigungen (Scopes) als auch Kontext (Audience, Organisation) f\xfcr sichere Multi-Tenant-APIs."})})]})}function c(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},78809:(e,n,i)=>{i.d(n,{Ay:()=>m,RM:()=>g});var r=i(25105),t=i(79621),s=i(33435),o=i(38552),a=i(22002);function l(e){const n={code:"code",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.p,{children:["F\xfcge dies zu deiner ",(0,r.jsx)(n.code,{children:"pom.xml"})," hinzu:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-xml",children:"<dependency>\n    <groupId>io.micronaut.security</groupId>\n    <artifactId>micronaut-security-jwt</artifactId>\n</dependency>\n<dependency>\n    <groupId>io.micronaut</groupId>\n    <artifactId>micronaut-http-server-netty</artifactId>\n</dependency>\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",metastring:'title="application.yml"',children:"micronaut:\n  security:\n    authentication: bearer\n    token:\n      jwt:\n        signatures:\n          jwks:\n            logto:\n              url: ${JWKS_URI:https://your-tenant.logto.app/oidc/jwks}\n        claims-validators:\n          issuer: ${JWT_ISSUER:https://your-tenant.logto.app/oidc}\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",metastring:'title="JwtClaimsValidator.java"',children:'import io.micronaut.security.token.Claims;\nimport io.micronaut.security.token.validator.TokenValidator;\nimport jakarta.inject.Singleton;\nimport org.reactivestreams.Publisher;\nimport reactor.core.publisher.Mono;\nimport java.util.Arrays;\nimport java.util.List;\n\n@Singleton\npublic class JwtClaimsValidator implements TokenValidator {\n\n    @Override\n    public Publisher<Boolean> validateToken(String token, Claims claims) {\n        try {\n            verifyPayload(claims);\n            return Mono.just(true);\n        } catch (AuthorizationException e) {\n            // Micronaut wird den Statuscode entsprechend behandeln\n            return Mono.just(false);\n        }\n    }\n\n    private void verifyPayload(Claims claims) {\n        // Die Aussteller (Issuer)-Validierung wird automatisch durch die Micronaut JWT-Konfiguration \xfcbernommen\n        // Implementiere hier deine zus\xe4tzliche Verifizierungslogik basierend auf dem Berechtigungsmodell\n        // Verwende die untenstehenden Hilfsmethoden zur Anspruchsextraktion\n\n        // Beispiel: throw new AuthorizationException("Unzureichende Berechtigungen");\n    }\n\n    // Hilfsmethoden f\xfcr Micronaut JWT\n    @SuppressWarnings("unchecked")\n    private List<String> extractAudiences(Claims claims) {\n        Object aud = claims.get("aud");\n        if (aud instanceof List) {\n            return (List<String>) aud;\n        } else if (aud instanceof String) {\n            return Arrays.asList((String) aud);\n        }\n        return List.of();\n    }\n\n    private String extractScopes(Claims claims) {\n        return (String) claims.get("scope");\n    }\n\n    private String extractOrganizationId(Claims claims) {\n        return (String) claims.get("organization_id");\n    }\n}\n'})})]})}function c(e){const n={code:"code",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.p,{children:["F\xfcge Folgendes zu deiner ",(0,r.jsx)(n.code,{children:"pom.xml"})," hinzu:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-xml",children:"<dependency>\n    <groupId>io.quarkus</groupId>\n    <artifactId>quarkus-smallrye-jwt</artifactId>\n</dependency>\n<dependency>\n    <groupId>io.quarkus</groupId>\n    <artifactId>quarkus-resteasy-reactive</artifactId>\n</dependency>\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-properties",metastring:'title="application.properties"',children:"# JWT-Konfiguration\nmp.jwt.verify.publickey.location=${JWKS_URI:https://your-tenant.logto.app/oidc/jwks}\nmp.jwt.verify.issuer=${JWT_ISSUER:https://your-tenant.logto.app/oidc}\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",metastring:'title="JwtVerificationFilter.java"',children:'import org.eclipse.microprofile.jwt.JsonWebToken;\nimport jakarta.enterprise.context.ApplicationScoped;\nimport jakarta.inject.Inject;\nimport jakarta.ws.rs.container.ContainerRequestContext;\nimport jakarta.ws.rs.container.ContainerRequestFilter;\nimport jakarta.ws.rs.core.Response;\nimport jakarta.ws.rs.ext.Provider;\nimport java.util ArrayList;\nimport java.util.List;\n\n@Provider\n@ApplicationScoped\npublic class JwtVerificationFilter implements ContainerRequestFilter {\n\n    @Inject\n    JsonWebToken jwt;\n\n    @Override\n    public void filter(ContainerRequestContext requestContext) {\n        if (requestContext.getUriInfo().getPath().startsWith("/api/protected")) {\n            try {\n                verifyPayload(jwt);\n                requestContext.setProperty("auth", jwt);\n            } catch (AuthorizationException e) {\n                requestContext.abortWith(\n                    Response.status(e.getStatusCode())\n                        .entity("{\\"error\\": \\"" + e.getMessage() + "\\"}")\n                        .build()\n                );\n            } catch (Exception e) {\n                requestContext.abortWith(\n                    Response.status(401)\n                        .entity("{\\"error\\": \\"Ung\xfcltiges Token\\"}")\n                        .build()\n                );\n            }\n        }\n    }\n\n    private void verifyPayload(JsonWebToken jwt) {\n        // Die Aussteller (Issuer)-Validierung wird automatisch von der Quarkus JWT-Erweiterung \xfcbernommen\n        // Implementiere hier deine zus\xe4tzliche Verifizierungslogik basierend auf dem Berechtigungsmodell\n        // Verwende die untenstehenden Hilfsmethoden zur Anspruchsextraktion\n    }\n\n    // Hilfsmethoden f\xfcr Quarkus JWT\n    private List<String> extractAudiences(JsonWebToken jwt) {\n        return new ArrayList<>(jwt.getAudience());\n    }\n\n    private String extractScopes(JsonWebToken jwt) {\n        return jwt.getClaim("scope");\n    }\n\n    private String extractOrganizationId(JsonWebToken jwt) {\n        return jwt.getClaim("organization_id");\n    }\n}\n'})})]})}function d(e){const n={code:"code",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.p,{children:["F\xfcge dies zu deiner ",(0,r.jsx)(n.code,{children:"pom.xml"})," hinzu:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-xml",children:"<dependency>\n    <groupId>org.springframework.boot</groupId>\n    <artifactId>spring-boot-starter-security</artifactId>\n</dependency>\n<dependency>\n    <groupId>org.springframework.security</groupId>\n    <artifactId>spring-security-oauth2-resource-server</artifactId>\n</dependency>\n<dependency>\n    <groupId>org.springframework.security</groupId>\n    <artifactId>spring-security-oauth2-jose</artifactId>\n</dependency>\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",metastring:'title="JwtSecurityConfig.java"',children:'import org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.security.config.annotation.web.builders.HttpSecurity;\nimport org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;\nimport org.springframework.security.oauth2.jwt.JwtDecoder;\nimport org.springframework.security.oauth2.jwt.NimbusJwtDecoder;\nimport org.springframework.security.web.SecurityFilterChain;\n\n@Configuration\n@EnableWebSecurity\npublic class JwtSecurityConfig {\n\n    @Bean\n    public SecurityFilterChain filterChain(HttpSecurity http) throws Exception {\n        http\n            .authorizeHttpRequests(authz -> authz\n                .requestMatchers("/api/protected/**").authenticated()\n                .anyRequest().permitAll()\n            )\n            .oauth2ResourceServer(oauth2 -> oauth2\n                .jwt(jwt -> jwt.decoder(jwtDecoder()))\n            );\n        return http.build();\n    }\n\n    @Bean\n    public JwtDecoder jwtDecoder() {\n        // Denke daran, diese Umgebungsvariablen in deiner Bereitstellung zu setzen\n        String jwksUri = System.getenv("JWKS_URI");\n        String issuer = System.getenv("JWT_ISSUER");\n\n        return NimbusJwtDecoder.withJwkSetUri(jwksUri)\n            .issuer(issuer)\n            .build();\n    }\n}\n'})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",metastring:'title="JwtValidator.java"',children:'import org.springframework.security.oauth2.jwt.Jwt;\nimport org.springframework.stereotype.Component;\nimport java.util.List;\n\n@Component\npublic class JwtValidator {\n\n    public void verifyPayload(Jwt jwt) {\n        // Die Aussteller-Validierung (Issuer validation) wird automatisch vom Spring Security JWT Decoder \xfcbernommen\n        // Implementiere hier deine zus\xe4tzliche Verifizierungslogik basierend auf dem Berechtigungsmodell\n        // Verwende die untenstehenden Hilfsmethoden zur Anspruchsextraktion (Claim extraction)\n\n        // Beispiel: throw new AuthorizationException("Unzureichende Berechtigungen");\n        // Der Statuscode wird durch das Exception-Handling von Spring Security behandelt\n    }\n\n    // Hilfsmethoden f\xfcr Spring Boot JWT\n    private List<String> extractAudiences(Jwt jwt) {\n        return jwt.getAudience();\n    }\n\n    private String extractScopes(Jwt jwt) {\n        return jwt.getClaimAsString("scope");\n    }\n\n    private String extractOrganizationId(Jwt jwt) {\n        return jwt.getClaimAsString("organization_id");\n    }\n}\n'})})]})}function u(e){const n={code:"code",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.p,{children:["F\xfcge dies zu deiner ",(0,r.jsx)(n.code,{children:"pom.xml"})," hinzu:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-xml",children:"<dependency>\n    <groupId>io.vertx</groupId>\n    <artifactId>vertx-web</artifactId>\n</dependency>\n<dependency>\n    <groupId>io.vertx</groupId>\n    <artifactId>vertx-auth-jwt</artifactId>\n</dependency>\n<dependency>\n    <groupId>io.vertx</groupId>\n    <artifactId>vertx-web-client</artifactId>\n</dependency>\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",metastring:'title="JwtAuthHandler.java"',children:'import io.vertx.core.Future;\nimport io.vertx.core.Handler;\nimport io.vertx.core.Vertx;\nimport io.vertx.core.json.JsonArray;\nimport io.vertx.core.json.JsonObject;\nimport io.vertx.ext.auth.jwt.JWTAuth;\nimport io.vertx.ext.auth.jwt.JWTAuthOptions;\nimport io.vertx.ext.web.RoutingContext;\nimport io.vertx.ext.web.client.WebClient;\nimport java.util.List;\nimport java.util.ArrayList;\n\npublic class JwtAuthHandler implements Handler<RoutingContext> {\n\n    private final JWTAuth jwtAuth;\n    private final WebClient webClient;\n    private final String expectedIssuer;\n    private final String jwksUri;\n\n    public JwtAuthHandler(Vertx vertx) {\n        this.webClient = WebClient.create(vertx);\n        this.jwtAuth = JWTAuth.create(vertx, new JWTAuthOptions());\n\n        // Denke daran, diese Umgebungsvariablen in deiner Bereitstellung zu setzen\n        this.expectedIssuer = System.getenv("JWT_ISSUER");\n        this.jwksUri = System.getenv("JWKS_URI");\n\n        // JWKS abrufen und JWT-Authentifizierung konfigurieren\n        fetchJWKS().onSuccess(jwks -> {\n            // JWKS konfigurieren (vereinfacht \u2013 du ben\xf6tigst m\xf6glicherweise einen richtigen JWKS-Parser)\n        });\n    }\n\n    @Override\n    public void handle(RoutingContext context) {\n        String authHeader = context.request().getHeader("Authorization");\n        if (authHeader == null || !authHeader.startsWith("Bearer ")) {\n            context.response()\n                .setStatusCode(401)\n                .putHeader("Content-Type", "application/json")\n                .end("{\\"error\\": \\"Authorization header missing or invalid\\"}");\n            return;\n        }\n\n        String token = authHeader.substring(7);\n        jwtAuth.authenticate(new JsonObject().put("jwt", token))\n            .onSuccess(user -> {\n                try {\n                    JsonObject principal = user.principal();\n                    verifyPayload(principal);\n                    context.put("auth", principal);\n                    context.next();\n                } catch (AuthorizationException e) {\n                    context.response()\n                        .setStatusCode(e.getStatusCode())  // Verwende den Statuscode der Exception\n                        .putHeader("Content-Type", "application/json")\n                        .end("{\\"error\\": \\"" + e.getMessage() + "\\"}");\n                } catch (Exception e) {\n                    context.response()\n                        .setStatusCode(401)\n                        .putHeader("Content-Type", "application/json")\n                        .end("{\\"error\\": \\"Invalid token\\"}");\n                }\n            })\n            .onFailure(err -> {\n                context.response()\n                    .setStatusCode(401)\n                    .putHeader("Content-Type", "application/json")\n                    .end("{\\"error\\": \\"Invalid token: " + err.getMessage() + "\\"}");\n            });\n    }\n\n    private Future<JsonObject> fetchJWKS() {\n        return webClient.getAbs(this.jwksUri)\n            .send()\n            .map(response -> response.bodyAsJsonObject());\n    }\n\n    private void verifyPayload(JsonObject principal) {\n        // Aussteller (Issuer) manuell f\xfcr Vert.x \xfcberpr\xfcfen\n        String issuer = principal.getString("iss");\n        if (issuer == null || !expectedIssuer.equals(issuer)) {\n            throw new AuthorizationException("Invalid issuer: " + issuer);\n        }\n\n        // Implementiere hier deine zus\xe4tzliche \xdcberpr\xfcfungslogik basierend auf dem Berechtigungsmodell\n        // Verwende die untenstehenden Hilfsmethoden f\xfcr das Extrahieren von Anspr\xfcchen (Claims)\n    }\n\n    // Hilfsmethoden f\xfcr Vert.x JWT\n    private List<String> extractAudiences(JsonObject principal) {\n        JsonArray audiences = principal.getJsonArray("aud");\n        if (audiences != null) {\n            List<String> result = new ArrayList<>();\n            for (Object aud : audiences) {\n                result.add(aud.toString());\n            }\n            return result;\n        }\n        return List.of();\n    }\n\n    private String extractScopes(JsonObject principal) {\n        return principal.getString("scope");\n    }\n\n    private String extractOrganizationId(JsonObject principal) {\n        return principal.getString("organization_id");\n    }\n}\n'})})]})}const h=Object.freeze({"spring-boot":(0,r.jsx)((function(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}),{}),quarkus:(0,r.jsx)((function(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}),{}),micronaut:(0,r.jsx)((function(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}),{}),"vertx-web":(0,r.jsx)((function(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(u,{...e})}):u(e)}),{})}),g=[];function p(e){const n={code:"code",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.p,{children:"Wir verwenden je nach Framework unterschiedliche JWT-Bibliotheken. Installiere die erforderlichen Abh\xe4ngigkeiten:"}),"\n",e.framework?h[e.framework]:(0,r.jsx)(a.A,{groupId:"api-framework",children:Object.entries(h).map((([e,n])=>(0,r.jsx)(o.A,{value:e,label:(0,s.My)(e),children:n},e)))}),"\n",(0,r.jsx)(n.p,{children:"Implementiere entsprechend deinem Berechtigungsmodell die passende Pr\xfcf-Logik:"}),"\n",(0,r.jsxs)(a.A,{groupId:"permission-models",children:[(0,r.jsx)(o.A,{value:"global-api-resources",label:"Globale API-Ressourcen",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:'// \xdcberpr\xfcfe, ob der Audience-Anspruch mit deinem API-Ressourcenindikator \xfcbereinstimmt\nList<String> audiences = extractAudiences(token); // Framework-spezifische Extraktion\nif (!audiences.contains("https://your-api-resource-indicator")) {\n    throw new AuthorizationException("Ung\xfcltige Zielgruppe");\n}\n\n// \xdcberpr\xfcfe die erforderlichen Berechtigungen f\xfcr globale API-Ressourcen\nList<String> requiredScopes = Arrays.asList("api:read", "api:write"); // Ersetze durch deine tats\xe4chlichen erforderlichen Berechtigungen\nString scopes = extractScopes(token); // Framework-spezifische Extraktion\nList<String> tokenScopes = scopes != null ? Arrays.asList(scopes.split(" ")) : List.of();\n\nif (!tokenScopes.containsAll(requiredScopes)) {\n    throw new AuthorizationException("Unzureichende Berechtigung");\n}\n'})})}),(0,r.jsx)(o.A,{value:"organization-permissions",label:"Organisations-(Nicht-API)-Berechtigungen",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:'// \xdcberpr\xfcfe, ob der Audience-Anspruch dem Organisationsformat entspricht\nList<String> audiences = extractAudiences(token); // Framework-spezifische Extraktion\nboolean hasOrgAudience = audiences.stream()\n    .anyMatch(aud -> aud.startsWith("urn:logto:organization:"));\n\nif (!hasOrgAudience) {\n    throw new AuthorizationException("Ung\xfcltige Zielgruppe f\xfcr Organisationsberechtigungen");\n}\n\n// \xdcberpr\xfcfe, ob die Organisations-ID mit dem Kontext \xfcbereinstimmt (du musst sie ggf. aus dem Request-Kontext extrahieren)\nString expectedOrgId = "your-organization-id"; // Aus dem Request-Kontext extrahieren\nString expectedAud = "urn:logto:organization:" + expectedOrgId;\nif (!audiences.contains(expectedAud)) {\n    throw new AuthorizationException("Organisations-ID stimmt nicht \xfcberein");\n}\n\n// \xdcberpr\xfcfe die erforderlichen Organisationsberechtigungen\nList<String> requiredScopes = Arrays.asList("invite:users", "manage:settings"); // Ersetze durch deine tats\xe4chlichen erforderlichen Berechtigungen\nString scopes = extractScopes(token); // Framework-spezifische Extraktion\nList<String> tokenScopes = scopes != null ? Arrays.asList(scopes.split(" ")) : List.of();\n\nif (!tokenScopes.containsAll(requiredScopes)) {\n    throw new AuthorizationException("Unzureichende Organisationsberechtigung");\n}\n'})})}),(0,r.jsx)(o.A,{value:"organization-level-api-resources",label:"Organisationsbezogene API-Ressourcen",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:'// \xdcberpr\xfcfe, ob der Audience-Anspruch mit deinem API-Ressourcenindikator \xfcbereinstimmt\nList<String> audiences = extractAudiences(token); // Framework-spezifische Extraktion\nif (!audiences.contains("https://your-api-resource-indicator")) {\n    throw new AuthorizationException("Ung\xfcltige Zielgruppe f\xfcr organisationsbezogene API-Ressourcen");\n}\n\n// \xdcberpr\xfcfe, ob die Organisations-ID mit dem Kontext \xfcbereinstimmt (du musst sie ggf. aus dem Request-Kontext extrahieren)\nString expectedOrgId = "your-organization-id"; // Aus dem Request-Kontext extrahieren\nString orgId = extractOrganizationId(token); // Framework-spezifische Extraktion\nif (!expectedOrgId.equals(orgId)) {\n    throw new AuthorizationException("Organisations-ID stimmt nicht \xfcberein");\n}\n\n// \xdcberpr\xfcfe die erforderlichen Berechtigungen f\xfcr organisationsbezogene API-Ressourcen\nList<String> requiredScopes = Arrays.asList("api:read", "api:write"); // Ersetze durch deine tats\xe4chlichen erforderlichen Berechtigungen\nString scopes = extractScopes(token); // Framework-spezifische Extraktion\nList<String> tokenScopes = scopes != null ? Arrays.asList(scopes.split(" ")) : List.of();\n\nif (!tokenScopes.containsAll(requiredScopes)) {\n    throw new AuthorizationException("Unzureichende organisationsbezogene API-Berechtigungen");\n}\n'})})})]}),"\n",(0,r.jsx)(n.p,{children:"Die Hilfsmethoden zum Extrahieren von Anspr\xfcchen sind framework-spezifisch. Siehe die Implementierungsdetails in den oben genannten framework-spezifischen Validierungsdateien."})]})}function m(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(p,{...e})}):p(e)}},4969:(e,n,i)=>{i.d(n,{Ay:()=>a,RM:()=>s});var r=i(25105),t=i(79621);const s=[];function o(e){const n={code:"code",pre:"pre",...(0,t.R)(),...e.components};return(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",metastring:'title="AuthorizationException.java"',children:"public class AuthorizationException extends RuntimeException {\n    private final int statusCode;\n\n    public AuthorizationException(String message) {\n        this(message, 403); // Standardm\xe4\xdfig 403 Verboten (Forbidden)\n    }\n\n    public AuthorizationException(String message, int statusCode) {\n        super(message);\n        this.statusCode = statusCode;\n    }\n\n    public int getStatusCode() {\n        return statusCode;\n    }\n}\n"})})}function a(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(o,{...e})}):o(e)}},89979:(e,n,i)=>{i.d(n,{Ay:()=>a,RM:()=>s});var r=i(25105),t=i(79621);const s=[];function o(e){const n={code:"code",pre:"pre",...(0,t.R)(),...e.components};return(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",metastring:'title="ProtectedController.java"',children:'import io.micronaut.http.annotation.Controller;\nimport io.micronaut.http.annotation.Get;\nimport io.micronaut.security.annotation.Secured;\nimport io.micronaut.security.authentication.Authentication;\nimport io.micronaut.security.rules.SecurityRule;\nimport java.util.Arrays;\nimport java.util.List;\nimport java.util.Map;\n\n@Controller("/api")\n@Secured(SecurityRule.IS_AUTHENTICATED)\npublic class ProtectedController {\n\n    @Get("/protected")\n    public Map<String, Object> protectedEndpoint(Authentication authentication) {\n        // Zugangstoken-Informationen direkt aus Authentication abrufen\n        String scopes = (String) authentication.getAttributes().get("scope");\n        List<String> scopeList = scopes != null ? Arrays.asList(scopes.split(" ")) : List.of();\n\n        return Map.of(\n            "sub", authentication.getName(),\n            "client_id", authentication.getAttributes().get("client_id"),\n            "organization_id", authentication.getAttributes().get("organization_id"),\n            "scopes", scopeList,\n            "audience", authentication.getAttributes().get("aud")\n        );\n    }\n}\n'})})}function a(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(o,{...e})}):o(e)}},38552:(e,n,i)=>{i.d(n,{A:()=>o});i(58101);var r=i(13526);const t={tabItem:"tabItem_dgSZ"};var s=i(25105);function o(e){let{children:n,hidden:i,className:o}=e;return(0,s.jsx)("div",{role:"tabpanel",className:(0,r.A)(t.tabItem,o),hidden:i,children:n})}},22002:(e,n,i)=>{i.d(n,{A:()=>w});var r=i(58101),t=i(13526),s=i(60755),o=i(55234),a=i(6635),l=i(4100),c=i(35661),d=i(42752);function u(e){return r.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function h(e){const{values:n,children:i}=e;return(0,r.useMemo)((()=>{const e=n??function(e){return u(e).map((e=>{let{props:{value:n,label:i,attributes:r,default:t}}=e;return{value:n,label:i,attributes:r,default:t}}))}(i);return function(e){const n=(0,c.XI)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,i])}function g(e){let{value:n,tabValues:i}=e;return i.some((e=>e.value===n))}function p(e){let{queryString:n=!1,groupId:i}=e;const t=(0,o.W6)(),s=function(e){let{queryString:n=!1,groupId:i}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!i)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return i??null}({queryString:n,groupId:i});return[(0,l.aZ)(s),(0,r.useCallback)((e=>{if(!s)return;const n=new URLSearchParams(t.location.search);n.set(s,e),t.replace({...t.location,search:n.toString()})}),[s,t])]}function m(e){const{defaultValue:n,queryString:i=!1,groupId:t}=e,s=h(e),[o,l]=(0,r.useState)((()=>function(e){let{defaultValue:n,tabValues:i}=e;if(0===i.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!g({value:n,tabValues:i}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${i.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const r=i.find((e=>e.default))??i[0];if(!r)throw new Error("Unexpected error: 0 tabValues");return r.value}({defaultValue:n,tabValues:s}))),[c,u]=p({queryString:i,groupId:t}),[m,x]=function(e){let{groupId:n}=e;const i=function(e){return e?`docusaurus.tab.${e}`:null}(n),[t,s]=(0,d.Dv)(i);return[t,(0,r.useCallback)((e=>{i&&s.set(e)}),[i,s])]}({groupId:t}),j=(()=>{const e=c??m;return g({value:e,tabValues:s})?e:null})();(0,a.A)((()=>{j&&l(j)}),[j]);return{selectedValue:o,selectValue:(0,r.useCallback)((e=>{if(!g({value:e,tabValues:s}))throw new Error(`Can't select invalid tab value=${e}`);l(e),u(e),x(e)}),[u,x,s]),tabValues:s}}var x=i(21929);const j={tabList:"tabList_osvQ",tabItem:"tabItem_dc4O"};var f=i(25105);function b(e){let{className:n,block:i,selectedValue:r,selectValue:o,tabValues:a}=e;const l=[],{blockElementScrollPositionUntilNextRender:c}=(0,s.a_)(),d=e=>{const n=e.currentTarget,i=l.indexOf(n),t=a[i].value;t!==r&&(c(n),o(t))},u=e=>{let n=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const i=l.indexOf(e.currentTarget)+1;n=l[i]??l[0];break}case"ArrowLeft":{const i=l.indexOf(e.currentTarget)-1;n=l[i]??l[l.length-1];break}}n?.focus()};return(0,f.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,t.A)("tabs",{"tabs--block":i},n),children:a.map((e=>{let{value:n,label:i,attributes:s}=e;return(0,f.jsx)("li",{role:"tab",tabIndex:r===n?0:-1,"aria-selected":r===n,ref:e=>{l.push(e)},onKeyDown:u,onClick:d,...s,className:(0,t.A)("tabs__item",j.tabItem,s?.className,{"tabs__item--active":r===n}),children:i??n},n)}))})}function A(e){let{lazy:n,children:i,selectedValue:s}=e;const o=(Array.isArray(i)?i:[i]).filter(Boolean);if(n){const e=o.find((e=>e.props.value===s));return e?(0,r.cloneElement)(e,{className:(0,t.A)("margin-top--md",e.props.className)}):null}return(0,f.jsx)("div",{className:"margin-top--md",children:o.map(((e,n)=>(0,r.cloneElement)(e,{key:n,hidden:e.props.value!==s})))})}function v(e){const n=m(e);return(0,f.jsxs)("div",{className:(0,t.A)("tabs-container",j.tabList),children:[(0,f.jsx)(b,{...n,...e}),(0,f.jsx)(A,{...n,...e})]})}function w(e){const n=(0,x.A)();return(0,f.jsx)(v,{...e,children:u(e.children)},String(n))}},33435:(e,n,i)=>{i.d(n,{Id:()=>o,My:()=>s});const r=Object.freeze({dotnet:{name:".NET"},go:{name:"Go"},java:{name:"Java"},nodejs:{name:"Node.js"},php:{name:"PHP"},python:{name:"Python"},ruby:{name:"Ruby"},rust:{name:"Rust"}}),t=Object.freeze({express:{name:"Express.js",language:"nodejs"},koa:{name:"Koa.js",language:"nodejs"},fastify:{name:"Fastify",language:"nodejs"},hapi:{name:"Hapi.js",language:"nodejs"},nestjs:{name:"NestJS",language:"nodejs"},gin:{name:"Gin",language:"go"},fiber:{name:"Fiber",language:"go"},echo:{name:"Echo",language:"go"},chi:{name:"Chi",language:"go"},"spring-boot":{name:"Spring Boot",language:"java"},quarkus:{name:"Quarkus",language:"java"},micronaut:{name:"Micronaut",language:"java"},"vertx-web":{name:"Vert.x Web",language:"java"},laravel:{name:"Laravel",language:"php"},symfony:{name:"Symfony",language:"php"},slim:{name:"Slim",language:"php"},rails:{name:"Ruby on Rails",language:"ruby"},sinatra:{name:"Sinatra",language:"ruby"},grape:{name:"Grape",language:"ruby"},fastapi:{name:"FastAPI",language:"python"},flask:{name:"Flask",language:"python"},django:{name:"Django",language:"python"},"django-rest":{name:"Django REST Framework",language:"python"},axum:{name:"Axum",language:"rust"},"actix-web":{name:"Actix Web",language:"rust"},rocket:{name:"Rocket",language:"rust"},"aspnet-core":{name:"ASP.NET Core",language:"dotnet"}}),s=e=>t[e].name,o=e=>r[t[e].language].name},46643:(e,n,i)=>{i.d(n,{A:()=>r});const r=i.p+"assets/images/rbac-global-api-resources-33fafc263308d3f769c62cbcdb8d7829.png"},1242:(e,n,i)=>{i.d(n,{A:()=>r});const r=i.p+"assets/images/rbac-organization-level-api-resources-9533c281f3ee1cf52aefe821717e1fef.png"},93855:(e,n,i)=>{i.d(n,{A:()=>r});const r=i.p+"assets/images/rbac-organization-permissions-3302be06221b4399f73ddceac8ca17e3.png"},79621:(e,n,i)=>{i.d(n,{R:()=>o,x:()=>a});var r=i(58101);const t={},s=r.createContext(t);function o(e){const n=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),r.createElement(s.Provider,{value:n},e.children)}}}]);