"use strict";(self.webpackChunk_logto_docs=self.webpackChunk_logto_docs||[]).push([[5765],{5690:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>d,default:()=>u,frontMatter:()=>l,metadata:()=>r,toc:()=>a});const r=JSON.parse('{"id":"use-cases/authorization/rbac-in-practice","title":"rbac-in-practice","description":"Ein praktischer Leitfaden zur rollenbasierten Zugangskontrolle (RBAC): Erfahre, wie du Berechtigungen entwirfst, Rollen verwaltest und sichere Autorisierung in deinem CMS einrichtest.","source":"@site/i18n/de/docusaurus-plugin-content-docs/current/use-cases/authorization/rbac-in-practice.mdx","sourceDirName":"use-cases/authorization","slug":"/use-cases/authorization/rbac-in-practice","permalink":"/de/use-cases/authorization/rbac-in-practice","draft":false,"unlisted":false,"editUrl":"https://github.com/logto-io/docs/tree/master/i18n/de/docusaurus-plugin-content-docs/current/use-cases/authorization/rbac-in-practice.mdx","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1,"sidebar_label":"RBAC in der Praxis","description":"Ein praktischer Leitfaden zur rollenbasierten Zugangskontrolle (RBAC): Erfahre, wie du Berechtigungen entwirfst, Rollen verwaltest und sichere Autorisierung in deinem CMS einrichtest."},"sidebar":"useCasesSidebar","previous":{"title":"Autorisierung","permalink":"/de/use-cases/authorization/"},"next":{"title":"Multi-Tenancy","permalink":"/de/use-cases/multi-tenancy/"}}');var s=i(25105),t=i(79621);const l={sidebar_position:1,sidebar_label:"RBAC in der Praxis",description:"Ein praktischer Leitfaden zur rollenbasierten Zugangskontrolle (RBAC): Erfahre, wie du Berechtigungen entwirfst, Rollen verwaltest und sichere Autorisierung in deinem CMS einrichtest."},d="RBAC in der Praxis: Sichere Autorisierung f\xfcr deine Anwendung implementieren",c={},a=[{value:"Grundprinzipien von RBAC verstehen",id:"understanding-rbac-fundamentals",level:2},{value:"Fein abgestufte Berechtigungs-Entw\xfcrfe",id:"fine-grained-permission-design",level:3},{value:"Ressourcen-Eigentum und Zugangskontrolle",id:"resource-ownership-and-access-control",level:3},{value:"Sichere APIs entwerfen",id:"designing-a-secure-apis",level:2},{value:"Zugangskontrolle f\xfcr deine API umsetzen",id:"implement-access-control-for-your-api",level:3},{value:"Ein skalierbares Berechtigungssystem erstellen",id:"creating-a-permission-system-that-scales",level:3},{value:"Effektive Rollen erstellen",id:"building-effective-roles",level:2},{value:"RBAC in Logto konfigurieren",id:"config-rbac-in-logto",level:2},{value:"Deine Anwendung einrichten",id:"setting-up-your-application",level:3},{value:"API-Ressourcen und Berechtigungen konfigurieren",id:"configuring-api-resources-and-permissions",level:3},{value:"Rollen erstellen",id:"creating-roles",level:3},{value:"Rollen Benutzern zuweisen",id:"assigning-roles-to-users",level:3},{value:"Dein Frontend mit Logto RBAC integrieren",id:"integrate-your-frontend-with-logto-rbac",level:2},{value:"Dein Backend mit Logto RBAC integrieren",id:"integrate-your-backend-with-logto-rbac",level:2},{value:"Backend-Autorisierungsmiddleware",id:"backend-authorization-middleware",level:3},{value:"API-Endpunkte sch\xfctzen",id:"protecting-api-endpoints",level:3},{value:"Die CMS RBAC-Implementierung testen",id:"test-the-cms-rbac-implementation",level:2},{value:"Fazit",id:"conclusion",level:2}];function o(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,t.R)(),...e.components},{Head:i}=n;return i||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Head",!0),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(i,{children:(0,s.jsx)("link",{rel:"canonical",href:"https://blog.logto.io/rbac-in-practice"})}),"\n",(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"rbac-in-der-praxis-sichere-autorisierung-f\xfcr-deine-anwendung-implementieren",children:"RBAC in der Praxis: Sichere Autorisierung f\xfcr deine Anwendung implementieren"})}),"\n",(0,s.jsx)(n.p,{children:"Hast du Schwierigkeiten, ein sicheres und skalierbares Autorisierungssystem f\xfcr deine Anwendung zu implementieren? Rollenbasierte Zugangskontrolle (RBAC) ist der Industriestandard zur Verwaltung von Benutzerberechtigungen, aber die korrekte Umsetzung kann herausfordernd sein. In diesem Tutorial zeigen wir dir, wie du ein robustes RBAC-System anhand eines praxisnahen Content Management Systems (CMS) aufbaust."}),"\n",(0,s.jsx)(n.p,{children:"Wenn du dieser Anleitung folgst, lernst du:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"\u2728 Wie du fein abgestufte Berechtigungen entwirfst und implementierst, um pr\xe4zise Kontrolle zu erhalten"}),"\n",(0,s.jsx)(n.li,{children:"\ud83d\udd12 Best Practices zur Organisation von Berechtigungen in sinnvolle Rollen"}),"\n",(0,s.jsx)(n.li,{children:"\ud83d\udc64 Techniken f\xfcr effektives Ressourcen-Eigentum"}),"\n",(0,s.jsx)(n.li,{children:"\ud83d\ude80 M\xf6glichkeiten, dein Autorisierungssystem skalierbar und wartbar zu gestalten"}),"\n",(0,s.jsx)(n.li,{children:"\ud83d\udca1 Praktische Umsetzung anhand eines realen CMS-Beispiels"}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["Der vollst\xe4ndige Quellcode zu diesem Tutorial ist auf ",(0,s.jsx)(n.a,{href:"https://github.com/logto-io/rbac-sample",children:"GitHub"})," verf\xfcgbar."]}),"\n",(0,s.jsx)(n.h2,{id:"understanding-rbac-fundamentals",children:"Grundprinzipien von RBAC verstehen"}),"\n",(0,s.jsx)(n.p,{children:"Rollenbasierte Zugangskontrolle ist mehr als nur das Zuweisen von Berechtigungen an Benutzer. Es geht darum, einen strukturierten Ansatz f\xfcr Autorisierung zu schaffen, der Sicherheit und Wartbarkeit ausbalanciert."}),"\n",(0,s.jsxs)(n.p,{children:["Mehr dazu findest du unter ",(0,s.jsx)(n.a,{href:"https://auth-wiki.logto.io/rbac",children:"Was ist RBAC"})," im Auth Wiki."]}),"\n",(0,s.jsx)(n.p,{children:"Hier sind die wichtigsten Prinzipien, denen wir bei unserer Umsetzung folgen:"}),"\n",(0,s.jsx)(n.h3,{id:"fine-grained-permission-design",children:"Fein abgestufte Berechtigungs-Entw\xfcrfe"}),"\n",(0,s.jsx)(n.p,{children:"Fein abgestufte Berechtigungen geben dir pr\xe4zise Kontrolle dar\xfcber, was Benutzer in deinem System tun d\xfcrfen. Anstatt grober Zugriffsebenen wie \u201eadmin\u201c oder \u201euser\u201c definieren wir spezifische Aktionen, die Benutzer auf Ressourcen ausf\xfchren k\xf6nnen. Zum Beispiel:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"read:articles"})," \u2013 Beliebigen Artikel im System ansehen"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"create:articles"})," \u2013 Neue Artikel erstellen"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"update:articles"})," \u2013 Bestehende Artikel bearbeiten"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"publish:articles"})," \u2013 Ver\xf6ffentlichungsstatus von Artikeln \xe4ndern"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"resource-ownership-and-access-control",children:"Ressourcen-Eigentum und Zugangskontrolle"}),"\n",(0,s.jsx)(n.p,{children:"Ressourcen-Eigentum ist ein grundlegendes Konzept im Autorisierungsdesign unseres CMS. W\xe4hrend RBAC festlegt, welche Aktionen verschiedene Rollen ausf\xfchren d\xfcrfen, f\xfcgt Eigentum eine pers\xf6nliche Dimension zur Zugangskontrolle hinzu:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Autoren haben automatisch Zugriff auf Artikel, die sie erstellt haben"}),"\n",(0,s.jsx)(n.li,{children:"Dieses nat\xfcrliche Eigentumsmodell bedeutet, dass Autoren ihre eigenen Inhalte immer ansehen und bearbeiten k\xf6nnen"}),"\n",(0,s.jsx)(n.li,{children:"Das System pr\xfcft sowohl Rollenberechtigungen ODER Eigentum bei der Bearbeitung von Artikeln"}),"\n",(0,s.jsxs)(n.li,{children:["Zum Beispiel kann ein Autor auch ohne die Berechtigung ",(0,s.jsx)(n.code,{children:"update:articles"})," seine eigenen Artikel bearbeiten"]}),"\n",(0,s.jsx)(n.li,{children:"Dieses Design reduziert den Bedarf an zus\xe4tzlichen Rollenberechtigungen und erh\xe4lt dennoch die Sicherheit"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Dieser zweistufige Ansatz (Rollen + Eigentum) schafft ein intuitiveres und sichereres System. Publisher und Admins k\xf6nnen weiterhin alle Inhalte \xfcber ihre Rollenberechtigungen verwalten, w\xe4hrend Autoren die Kontrolle \xfcber ihre eigenen Werke behalten."}),"\n",(0,s.jsx)(n.h2,{id:"designing-a-secure-apis",children:"Sichere APIs entwerfen"}),"\n",(0,s.jsx)(n.p,{children:"Beginnen wir damit, die Kernfunktionalit\xe4t unseres CMS \xfcber seine API-Endpunkte zu entwerfen:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"GET    /api/articles         # Alle Artikel auflisten\nGET    /api/articles/:id     # Einen bestimmten Artikel abrufen\nPOST   /api/articles        # Einen neuen Artikel erstellen\nPATCH  /api/articles/:id    # Einen Artikel aktualisieren\nDELETE /api/articles/:id    # Einen Artikel l\xf6schen\nPATCH  /api/articles/:id/published  # Ver\xf6ffentlichungsstatus \xe4ndern\n"})}),"\n",(0,s.jsx)(n.h3,{id:"implement-access-control-for-your-api",children:"Zugangskontrolle f\xfcr deine API umsetzen"}),"\n",(0,s.jsx)(n.p,{children:"F\xfcr jeden Endpunkt m\xfcssen wir zwei Aspekte der Zugangskontrolle ber\xfccksichtigen:"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"Ressourcen-Eigentum \u2013 Geh\xf6rt dem Benutzer diese Ressource?"}),"\n",(0,s.jsx)(n.li,{children:"Rollenbasierte Berechtigungen \u2013 Erlaubt die Rolle des Benutzers diese Operation?"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"So handhaben wir den Zugriff f\xfcr jeden Endpunkt:"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Endpoint"}),(0,s.jsx)(n.th,{children:"Zugangskontroll-Logik"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"GET /api/articles"}),(0,s.jsxs)(n.td,{children:["\u2013 Jeder mit ",(0,s.jsx)(n.code,{children:"list:articles"}),"-Berechtigung ODER Autoren sehen ihre eigenen Artikel"]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsxs)(n.td,{children:["GET /api/articles/",":id"]}),(0,s.jsxs)(n.td,{children:["\u2013 Jeder mit ",(0,s.jsx)(n.code,{children:"read:articles"}),"-Berechtigung ODER Autor des Artikels"]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"POST /api/articles"}),(0,s.jsxs)(n.td,{children:["\u2013 Jeder mit ",(0,s.jsx)(n.code,{children:"create:articles"}),"-Berechtigung"]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsxs)(n.td,{children:["PATCH /api/articles/",":id"]}),(0,s.jsxs)(n.td,{children:["\u2013 Jeder mit ",(0,s.jsx)(n.code,{children:"update:articles"}),"-Berechtigung ODER Autor des Artikels"]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsxs)(n.td,{children:["DELETE /api/articles/",":id"]}),(0,s.jsxs)(n.td,{children:["\u2013 Jeder mit ",(0,s.jsx)(n.code,{children:"delete:articles"}),"-Berechtigung ODER Autor des Artikels"]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsxs)(n.td,{children:["PATCH /api/articles/",":id","/published"]}),(0,s.jsxs)(n.td,{children:["\u2013 Nur Benutzer mit ",(0,s.jsx)(n.code,{children:"publish:articles"}),"-Berechtigung"]})]})]})]}),"\n",(0,s.jsx)(n.h3,{id:"creating-a-permission-system-that-scales",children:"Ein skalierbares Berechtigungssystem erstellen"}),"\n",(0,s.jsx)(n.p,{children:"Basierend auf unseren API-Zugriffsanforderungen k\xf6nnen wir diese Berechtigungen definieren:"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Berechtigung"}),(0,s.jsx)(n.th,{children:"Beschreibung"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsxs)(n.td,{children:["list",":articles"]}),(0,s.jsx)(n.td,{children:"Die Liste aller Artikel im System ansehen"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsxs)(n.td,{children:["read",":articles"]}),(0,s.jsx)(n.td,{children:"Den vollst\xe4ndigen Inhalt beliebiger Artikel lesen"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsxs)(n.td,{children:["create",":articles"]}),(0,s.jsx)(n.td,{children:"Neue Artikel erstellen"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsxs)(n.td,{children:["update",":articles"]}),(0,s.jsx)(n.td,{children:"Beliebige Artikel bearbeiten"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsxs)(n.td,{children:["delete",":articles"]}),(0,s.jsx)(n.td,{children:"Beliebige Artikel l\xf6schen"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsxs)(n.td,{children:["publish",":articles"]}),(0,s.jsx)(n.td,{children:"Ver\xf6ffentlichungsstatus \xe4ndern"})]})]})]}),"\n",(0,s.jsx)(n.p,{children:"Beachte, dass diese Berechtigungen nur ben\xf6tigt werden, wenn du auf Ressourcen zugreifst, die dir nicht geh\xf6ren. Artikelbesitzer k\xf6nnen automatisch:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Ihre eigenen Artikel ansehen (kein ",(0,s.jsx)(n.code,{children:"read:articles"})," n\xf6tig)"]}),"\n",(0,s.jsxs)(n.li,{children:["Ihre eigenen Artikel bearbeiten (kein ",(0,s.jsx)(n.code,{children:"update:articles"})," n\xf6tig)"]}),"\n",(0,s.jsxs)(n.li,{children:["Ihre eigenen Artikel l\xf6schen (kein ",(0,s.jsx)(n.code,{children:"delete:articles"})," n\xf6tig)"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"building-effective-roles",children:"Effektive Rollen erstellen"}),"\n",(0,s.jsx)(n.p,{children:"Jetzt, da wir unsere API und Berechtigungen definiert haben, k\xf6nnen wir Rollen erstellen, die diese Berechtigungen logisch gruppieren:"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Berechtigung/Rolle"}),(0,s.jsx)(n.th,{children:"\ud83d\udc51 Admin"}),(0,s.jsx)(n.th,{children:"\ud83d\udcdd Publisher"}),(0,s.jsx)(n.th,{children:"\u270d\ufe0f Autor"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.strong,{children:"Beschreibung"})}),(0,s.jsx)(n.td,{children:"Voller Systemzugriff f\xfcr komplette Inhaltsverwaltung"}),(0,s.jsx)(n.td,{children:"Kann alle Artikel ansehen und Ver\xf6ffentlichungen steuern"}),(0,s.jsx)(n.td,{children:"Kann neue Artikel im System erstellen"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsxs)(n.td,{children:["list",":articles"]}),(0,s.jsx)(n.td,{children:"\u2705"}),(0,s.jsx)(n.td,{children:"\u2705"}),(0,s.jsx)(n.td,{children:"\u274c"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsxs)(n.td,{children:["read",":articles"]}),(0,s.jsx)(n.td,{children:"\u2705"}),(0,s.jsx)(n.td,{children:"\u2705"}),(0,s.jsx)(n.td,{children:"\u274c"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsxs)(n.td,{children:["create",":articles"]}),(0,s.jsx)(n.td,{children:"\u2705"}),(0,s.jsx)(n.td,{children:"\u274c"}),(0,s.jsx)(n.td,{children:"\u2705"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsxs)(n.td,{children:["update",":articles"]}),(0,s.jsx)(n.td,{children:"\u2705"}),(0,s.jsx)(n.td,{children:"\u274c"}),(0,s.jsx)(n.td,{children:"\u274c"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsxs)(n.td,{children:["delete",":articles"]}),(0,s.jsx)(n.td,{children:"\u2705"}),(0,s.jsx)(n.td,{children:"\u274c"}),(0,s.jsx)(n.td,{children:"\u274c"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsxs)(n.td,{children:["publish",":articles"]}),(0,s.jsx)(n.td,{children:"\u2705"}),(0,s.jsx)(n.td,{children:"\u2705"}),(0,s.jsx)(n.td,{children:"\u274c"})]})]})]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Hinweis"}),": Autoren haben automatisch Lese-/Bearbeitungs-/L\xf6schrechte f\xfcr ihre eigenen Artikel, unabh\xe4ngig von den Rollenberechtigungen."]}),"\n",(0,s.jsx)(n.p,{children:"Jede Rolle ist mit bestimmten Verantwortlichkeiten konzipiert:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Admin"}),": Hat vollst\xe4ndige Kontrolle \xfcber das CMS, einschlie\xdflich aller Artikeloperationen"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Publisher"}),": Konzentriert sich auf Inhaltspr\xfcfung und Ver\xf6ffentlichungsmanagement"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Autor"}),": Spezialisiert auf Inhaltserstellung"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Diese Rollenstruktur schafft eine klare Trennung der Zust\xe4ndigkeiten:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Autoren konzentrieren sich auf die Inhaltserstellung"}),"\n",(0,s.jsx)(n.li,{children:"Publisher verwalten Inhaltsqualit\xe4t und Sichtbarkeit"}),"\n",(0,s.jsx)(n.li,{children:"Admins behalten die Kontrolle \xfcber das Gesamtsystem"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"config-rbac-in-logto",children:"RBAC in Logto konfigurieren"}),"\n",(0,s.jsxs)(n.p,{children:["Bevor du beginnst, musst du ein Konto in ",(0,s.jsx)(n.a,{href:"https://cloud.logto.io",children:"Logto Cloud"})," erstellen oder du kannst auch eine selbst gehostete Logto-Instanz mit der ",(0,s.jsx)(n.a,{href:"/logto-oss",children:"Logto OSS-Version"})," verwenden."]}),"\n",(0,s.jsx)(n.p,{children:"F\xfcr dieses Tutorial nutzen wir jedoch Logto Cloud der Einfachheit halber."}),"\n",(0,s.jsx)(n.h3,{id:"setting-up-your-application",children:"Deine Anwendung einrichten"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["Gehe in der Logto Console zu \u201eApplications\u201c, um eine neue React-Anwendung zu erstellen","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Anwendungsname: Content Management System"}),"\n",(0,s.jsx)(n.li,{children:"Anwendungstyp: Traditionelle Webanwendung"}),"\n",(0,s.jsxs)(n.li,{children:["Redirect URIs: ",(0,s.jsx)(n.a,{href:"http://localhost:5173/callback",children:"http://localhost:5173/callback"})]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{src:"https://uploads.strapi.logto.io/cms_application_3ed42f2256.png",alt:"CMS React application"})}),"\n",(0,s.jsx)(n.h3,{id:"configuring-api-resources-and-permissions",children:"API-Ressourcen und Berechtigungen konfigurieren"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["Gehe in der Logto Console zu \u201eAPI Resources\u201c, um eine neue API-Ressource zu erstellen","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"API-Name: CMS API"}),"\n",(0,s.jsxs)(n.li,{children:["API-Identifier: ",(0,s.jsx)(n.a,{href:"https://api.cms.com",children:"https://api.cms.com"})]}),"\n",(0,s.jsxs)(n.li,{children:["F\xfcge der API-Ressource Berechtigungen hinzu","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"list:articles"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"read:articles"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"create:articles"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"update:articles"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"publish:articles"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"delete:articles"})}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{src:"https://uploads.strapi.logto.io/cms_api_resource_b15ae2b91a.png",alt:"CMS API resource details"})}),"\n",(0,s.jsx)(n.h3,{id:"creating-roles",children:"Rollen erstellen"}),"\n",(0,s.jsx)(n.p,{children:"Gehe zu Rollen in der Logto Console, um die folgenden Rollen f\xfcr das CMS zu erstellen"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Admin","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"mit allen Berechtigungen"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["Publisher","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["mit ",(0,s.jsx)(n.code,{children:"read:articles"}),", ",(0,s.jsx)(n.code,{children:"list:articles"}),", ",(0,s.jsx)(n.code,{children:"publish:articles"})]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["Autor","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["mit ",(0,s.jsx)(n.code,{children:"create:articles"})]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{src:"https://uploads.strapi.logto.io/admin_role_53edb35ecf.png",alt:"Admin role"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{src:"https://uploads.strapi.logto.io/publisher_role_2ac205cc32.png",alt:"Publisher role"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{src:"https://uploads.strapi.logto.io/author_role_f89cd99543.png",alt:"Author role"})}),"\n",(0,s.jsx)(n.h3,{id:"assigning-roles-to-users",children:"Rollen Benutzern zuweisen"}),"\n",(0,s.jsx)(n.p,{children:"Gehe zum Bereich \u201eUser management\u201c in der Logto Console, um Benutzer zu erstellen."}),"\n",(0,s.jsx)(n.p,{children:"Im Tab \u201eRoles\u201c der Benutzerdetails kannst du dem Benutzer Rollen zuweisen."}),"\n",(0,s.jsx)(n.p,{children:"In unserem Beispiel erstellen wir 3 Benutzer mit folgenden Rollen:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Alex: Admin"}),"\n",(0,s.jsx)(n.li,{children:"Bob: Publisher"}),"\n",(0,s.jsx)(n.li,{children:"Charlie: Autor"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{src:"https://uploads.strapi.logto.io/user_management_c0bc17119f.png",alt:"User management"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{src:"https://uploads.strapi.logto.io/user_details_alex_702f96ef9a.png",alt:"User details - Alex"})}),"\n",(0,s.jsx)(n.admonition,{type:"note",children:(0,s.jsxs)(n.p,{children:["Zu Demonstrationszwecken erstellen wir diese Ressourcen und Konfigurationen \xfcber die Logto Console. In realen Projekten kannst du diese Ressourcen und Konfigurationen programmatisch mit der von Logto bereitgestellten ",(0,s.jsx)(n.a,{href:"/integrate-logto/interact-with-management-api",children:"Management API"})," erstellen."]})}),"\n",(0,s.jsx)(n.h2,{id:"integrate-your-frontend-with-logto-rbac",children:"Dein Frontend mit Logto RBAC integrieren"}),"\n",(0,s.jsx)(n.p,{children:"Jetzt, da wir RBAC in Logto eingerichtet haben, k\xf6nnen wir mit der Integration ins Frontend beginnen."}),"\n",(0,s.jsxs)(n.p,{children:["Folge zuerst den ",(0,s.jsx)(n.a,{href:"/quick-starts",children:"Logto Quick Starts"}),", um Logto in deine Anwendung zu integrieren."]}),"\n",(0,s.jsxs)(n.p,{children:["In unserem Beispiel verwenden wir ",(0,s.jsx)(n.a,{href:"/quick-starts/react",children:"React"})," zur Demonstration."]}),"\n",(0,s.jsx)(n.p,{children:"Nachdem du Logto in deiner Anwendung eingerichtet hast, m\xfcssen wir die RBAC-Konfigurationen hinzuf\xfcgen, damit Logto funktioniert."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"// frontend/src/App.tsx\n\nconst logtoConfig: LogtoConfig = {\n  appId: LOGTO_APP_ID, // Die App-ID, die du in der Logto Console erstellt hast\n  endpoint: LOGTO_ENDPOINT, // Der Endpoint, den du in der Logto Console erstellt hast\n  resources: [API_RESOURCE], // Der API-Ressourcen-Identifier aus der Logto Console, z. B. https://api.cms.com\n  // Alle Scopes, die du im Frontend von der API-Ressource anfordern m\xf6chtest\n  scopes: [\n    'list:articles',\n    'create:articles',\n    'read:articles',\n    'update:articles',\n    'delete:articles',\n    'publish:articles',\n  ],\n};\n"})}),"\n",(0,s.jsx)(n.p,{children:"Denke daran, dich ab- und wieder anzumelden, damit diese \xc4nderung wirksam wird, falls du bereits angemeldet bist."}),"\n",(0,s.jsx)(n.p,{children:"Wenn sich der Benutzer mit Logto anmeldet und ein Zugangstoken f\xfcr die oben angegebenen API-Ressourcen anfordert, f\xfcgt Logto dem Zugangstoken Berechtigungen (Scopes) hinzu, die zur Rolle des Benutzers passen."}),"\n",(0,s.jsxs)(n.p,{children:["Du kannst ",(0,s.jsx)(n.code,{children:"getAccessTokenClaims"})," aus dem ",(0,s.jsx)(n.code,{children:"useLogto"}),"-Hook verwenden, um die Scopes aus dem Zugangstoken zu erhalten."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"// frontend/src/hooks/use-user-data.ts\n\nimport { useLogto } from '@logto/react';\nimport { API_RESOURCE } from '../config';\nimport { useState, useEffect } from 'react';\n\nexport const useUserData = () => {\n  const { getAccessTokenClaims } = useLogto();\n  const [userScopes, setUserScopes] = useState<string[]>([]);\n  const [userId, setUserId] = useState<string>();\n\n  useEffect(() => {\n    const fetchScopes = async () => {\n      const token = await getAccessTokenClaims(API_RESOURCE);\n      setUserScopes(token?.scope?.split(' ') ?? []);\n      setUserId(token?.sub);\n    };\n\n    fetchScopes();\n  }, [getAccessTokenClaims]);\n\n  return { userId, userScopes };\n};\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Und du kannst ",(0,s.jsx)(n.code,{children:"userScopes"})," verwenden, um zu pr\xfcfen, ob der Benutzer die Berechtigung zum Zugriff auf die Ressource hat."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"// frontend/src/pages/Dashboard.tsx\n\nconst Dashboard = () => {\n  const { userId, userScopes } = useUserData();\n  // ...\n\n  return (\n    <div>\n      {/* ... */}\n      {(userScopes.includes('delete:articles') || article.ownerId === userId) && (\n        <button\n          onClick={() => handleDelete(article.id)}\n          className=\"text-red-600 hover:text-red-900\"\n        >\n          Delete\n        </button>\n      )}\n    </div>\n  );\n};\n"})}),"\n",(0,s.jsx)(n.h2,{id:"integrate-your-backend-with-logto-rbac",children:"Dein Backend mit Logto RBAC integrieren"}),"\n",(0,s.jsx)(n.p,{children:"Jetzt ist es an der Zeit, Logto RBAC in dein Backend zu integrieren."}),"\n",(0,s.jsx)(n.h3,{id:"backend-authorization-middleware",children:"Backend-Autorisierungsmiddleware"}),"\n",(0,s.jsx)(n.p,{children:"Zuerst m\xfcssen wir eine Middleware im Backend hinzuf\xfcgen, um Benutzerberechtigungen zu pr\xfcfen, zu verifizieren, ob der Benutzer angemeldet ist, und festzustellen, ob er die erforderlichen Berechtigungen f\xfcr bestimmte APIs hat."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"// backend/src/middleware/auth.js\n\nconst { createRemoteJWKSet, jwtVerify } = require('jose');\n\nconst getTokenFromHeader = (headers) => {\n  const { authorization } = headers;\n  const bearerTokenIdentifier = 'Bearer';\n\n  if (!authorization) {\n    throw new Error('Authorization header missing');\n  }\n\n  if (!authorization.startsWith(bearerTokenIdentifier)) {\n    throw new Error('Authorization token type not supported');\n  }\n\n  return authorization.slice(bearerTokenIdentifier.length + 1);\n};\n\nconst hasScopes = (tokenScopes, requiredScopes) => {\n  if (!requiredScopes || requiredScopes.length === 0) {\n    return true;\n  }\n  const scopeSet = new Set(tokenScopes);\n  return requiredScopes.every((scope) => scopeSet.has(scope));\n};\n\nconst verifyJwt = async (token) => {\n  const JWKS = createRemoteJWKSet(new URL(process.env.LOGTO_JWKS_URL));\n\n  const { payload } = await jwtVerify(token, JWKS, {\n    issuer: process.env.LOGTO_ISSUER,\n    audience: process.env.LOGTO_API_RESOURCE,\n  });\n\n  return payload;\n};\n\nconst requireAuth = (requiredScopes = []) => {\n  return async (req, res, next) => {\n    try {\n      // Token extrahieren\n      const token = getTokenFromHeader(req.headers);\n\n      // Token verifizieren\n      const payload = await verifyJwt(token);\n\n      // Benutzerinfo zur Anfrage hinzuf\xfcgen\n      req.user = {\n        id: payload.sub,\n        scopes: payload.scope?.split(' ') || [],\n      };\n\n      // Erforderliche Scopes pr\xfcfen\n      if (!hasScopes(req.user.scopes, requiredScopes)) {\n        throw new Error('Insufficient permissions');\n      }\n\n      next();\n    } catch (error) {\n      res.status(401).json({ error: 'Unauthorized' });\n    }\n  };\n};\n\nmodule.exports = {\n  requireAuth,\n  hasScopes,\n};\n"})}),"\n",(0,s.jsx)(n.p,{children:"Wie du siehst, pr\xfcfen wir in dieser Middleware, ob die Frontend-Anfrage ein g\xfcltiges Zugangstoken enth\xe4lt und ob die Zielgruppe (audience) des Zugangstokens mit der in der Logto Console erstellten API-Ressource \xfcbereinstimmt."}),"\n",(0,s.jsx)(n.p,{children:"Der Grund f\xfcr die \xdcberpr\xfcfung der API-Ressource ist, dass unsere API-Ressource tats\xe4chlich die Ressourcen unseres CMS-Backends repr\xe4sentiert und alle unsere CMS-Berechtigungen mit dieser API-Ressource verkn\xfcpft sind."}),"\n",(0,s.jsx)(n.p,{children:"Da diese API-Ressource die CMS-Ressourcen in Logto repr\xe4sentiert, f\xfcgen wir im Frontend-Code das entsprechende Zugangstoken bei API-Anfragen an das Backend hinzu:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"// frontend/src/hooks/use-api.ts\nexport const useApi = () => {\n  const { getAccessToken } = useLogto();\n\n  return useMemo(\n    () =>\n      async (endpoint: string, options: RequestInit = {}) => {\n        try {\n          // Zugangstoken f\xfcr die API-Ressource holen\n          const token = await getAccessToken(API_RESOURCE);\n\n          if (!token) {\n            throw new ApiRequestError('Failed to get access token');\n          }\n\n          const response = await fetch(`${API_BASE_URL}${endpoint}`, {\n            ...options,\n            headers: {\n              'Content-Type': 'application/json',\n              // Zugangstoken zu den Request-Headern hinzuf\xfcgen\n              Authorization: `Bearer ${token}`,\n              ...options.headers,\n            },\n          });\n\n          // ... handle response\n\n          return await response.json();\n        } catch (error) {\n          // ... error handling\n        }\n      },\n    [getAccessToken]\n  );\n};\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Jetzt k\xf6nnen wir die ",(0,s.jsx)(n.code,{children:"requireAuth"}),"-Middleware verwenden, um unsere API-Endpunkte zu sch\xfctzen."]}),"\n",(0,s.jsx)(n.h3,{id:"protecting-api-endpoints",children:"API-Endpunkte sch\xfctzen"}),"\n",(0,s.jsxs)(n.p,{children:["F\xfcr APIs, die nur f\xfcr Benutzer mit bestimmten Berechtigungen zug\xe4nglich sein sollen, k\xf6nnen wir die Einschr\xe4nkungen direkt in der Middleware hinzuf\xfcgen. Zum Beispiel sollte die Artikel-Erstellungs-API nur f\xfcr Benutzer mit der Berechtigung ",(0,s.jsx)(n.code,{children:"create:articles"})," zug\xe4nglich sein:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"// backend/src/routes/articles.js\n\nconst { requireAuth } = require('../middleware/auth');\n\nrouter.post('/articles', requireAuth(['create:articles']), async (req, res) => {\n  // ...\n});\n"})}),"\n",(0,s.jsxs)(n.p,{children:["F\xfcr APIs, die sowohl Berechtigungen als auch Ressourcen-Eigentum pr\xfcfen m\xfcssen, k\xf6nnen wir die Funktion ",(0,s.jsx)(n.code,{children:"hasScopes"})," verwenden. Zum Beispiel k\xf6nnen Benutzer mit dem Scope ",(0,s.jsx)(n.code,{children:"list:articles"})," alle Artikel abrufen, w\xe4hrend Autoren nur ihre eigenen erstellten Artikel sehen:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"// backend/src/routes/articles.js\n\nconst { requireAuth, hasScopes } = require('../middleware/auth');\n\nrouter.get('/articles', requireAuth(), async (req, res) => {\n  try {\n    // Wenn der Benutzer den Scope list:articles hat, alle Artikel zur\xfcckgeben\n    if (hasScopes(req.user.scopes, ['list:articles'])) {\n      const articles = await articleDB.list();\n      return res.json(articles);\n    }\n\n    // Andernfalls nur die Artikel des Benutzers zur\xfcckgeben\n    const articles = await articleDB.listByOwner(req.user.id);\n    res.json(articles);\n  } catch (error) {\n    res.status(500).json({ error: 'Failed to fetch articles' });\n  }\n});\n"})}),"\n",(0,s.jsxs)(n.p,{children:["An diesem Punkt haben wir die RBAC-Implementierung abgeschlossen. Du kannst dir ",(0,s.jsx)(n.a,{href:"https://github.com/logto-io/rbac-sample",children:"den vollst\xe4ndigen Quellcode"})," ansehen, um die komplette Umsetzung zu sehen."]}),"\n",(0,s.jsx)(n.h2,{id:"test-the-cms-rbac-implementation",children:"Die CMS RBAC-Implementierung testen"}),"\n",(0,s.jsx)(n.p,{children:"Jetzt testen wir unsere CMS RBAC-Implementierung mit den drei gerade erstellten Benutzern."}),"\n",(0,s.jsx)(n.admonition,{type:"note",children:(0,s.jsx)(n.p,{children:"Falls du dich mit den Zugangsdaten der in \u201eUser Management\u201c erstellten Benutzer nicht anmelden kannst, musst du zuerst die passende Anmeldemethode aktivieren. Gehe in der Logto Console zu \u201eSign-in Experience\u201c und aktiviere deine bevorzugte Authentifizierungsmethode (wie E-Mail + Passwort oder Benutzername + Passwort)."})}),"\n",(0,s.jsx)(n.p,{children:"Melden wir uns zuerst als Alex und Charles an und erstellen einige Artikel."}),"\n",(0,s.jsx)(n.p,{children:"Da Alex die Admin-Rolle hat, kann er Artikel erstellen, l\xf6schen, aktualisieren, ver\xf6ffentlichen und alle Artikel ansehen."}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{src:"https://uploads.strapi.logto.io/cms_dashboard_alex_a11863a94b.png",alt:"CMS dashboard - Alex"})}),"\n",(0,s.jsx)(n.p,{children:"Charles, mit der Autor-Rolle, kann nur eigene Artikel erstellen und nur Artikel sehen, aktualisieren und l\xf6schen, die ihm geh\xf6ren."}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{src:"https://uploads.strapi.logto.io/cms_dashboard_charles_05f610066a.png",alt:"CMS dashboard - Charles - Article list"})}),"\n",(0,s.jsx)(n.p,{children:"Bob, mit der Publisher-Rolle, kann alle Artikel ansehen und ver\xf6ffentlichen, aber keine erstellen, aktualisieren oder l\xf6schen."}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{src:"https://uploads.strapi.logto.io/cms_dashboard_bob_421a429b69.png",alt:"CMS dashboard - Bob"})}),"\n",(0,s.jsx)(n.h2,{id:"conclusion",children:"Fazit"}),"\n",(0,s.jsx)(n.p,{children:"Herzlichen Gl\xfcckwunsch! Du hast gelernt, wie du ein robustes RBAC-System in deiner Anwendung implementierst."}),"\n",(0,s.jsxs)(n.p,{children:["F\xfcr komplexere Szenarien, wie den Aufbau von Multi-Tenant-Anwendungen, bietet Logto umfassende Organisationsunterst\xfctzung. Sieh dir unseren Leitfaden ",(0,s.jsx)(n.a,{href:"/use-cases/multi-tenancy/build-multi-tenant-saas-application",children:"Multi-Tenant SaaS-Anwendung bauen: Ein vollst\xe4ndiger Leitfaden von Design bis Umsetzung"})," an, um mehr \xfcber die Implementierung von organisationsweiter Zugangskontrolle zu erfahren."]}),"\n",(0,s.jsx)(n.p,{children:"Viel Spa\xdf beim Coden! \ud83d\ude80"})]})}function u(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(o,{...e})}):o(e)}},79621:(e,n,i)=>{i.d(n,{R:()=>l,x:()=>d});var r=i(58101);const s={},t=r.createContext(s);function l(e){const n=r.useContext(t);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:l(e.components),r.createElement(t.Provider,{value:n},e.children)}}}]);