"use strict";(self.webpackChunk_logto_docs=self.webpackChunk_logto_docs||[]).push([[67880],{27269:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>d,default:()=>g,frontMatter:()=>l,metadata:()=>r,toc:()=>u});const r=JSON.parse('{"id":"authorization/organization-template/protect-organization-resources","title":"Organisationsressourcen sch\xfctzen","description":"Zus\xe4tzlich zu Sch\xfctze deine API, bei der die API als Ressource dient, kann auch die Organisation eine Ressource sein und deine Organisationsressource auf die gleiche Weise sch\xfctzen. In diesem Artikel konzentrieren wir uns darauf, wie du deine Organisationsressource auf \xe4hnliche Weise sch\xfctzen kannst.","source":"@site/i18n/de/docusaurus-plugin-content-docs/current/authorization/organization-template/protect-organization-resources.mdx","sourceDirName":"authorization/organization-template","slug":"/authorization/organization-template/protect-organization-resources","permalink":"/de/authorization/organization-template/protect-organization-resources","draft":false,"unlisted":false,"editUrl":"https://github.com/logto-io/docs/tree/master/i18n/de/docusaurus-plugin-content-docs/current/authorization/organization-template/protect-organization-resources.mdx","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2},"sidebar":"docsSidebar","previous":{"title":"Organisationstemplate konfigurieren","permalink":"/de/authorization/organization-template/configure-organization-template"},"next":{"title":"API-Ressource mit Organisationstemplate sch\xfctzen","permalink":"/de/authorization/organization-template/protect-api-reources"}}');var t=i(25105),o=i(79621),s=i(3768),a=i(11043);const l={sidebar_position:2},d="Organisationsressourcen sch\xfctzen",c={},u=[{value:"Schritt 1: Organisation-IDs aus dem OIDC-Flow erhalten",id:"step-1-get-organization-ids-from-oidc-flow",level:2},{value:"Optional: Organisationsrollen erhalten",id:"optional-get-organization-roles",level:3},{value:"Schritt 2. Organisationstoken abrufen",id:"step-2-fetch-organization-token",level:2},{value:"Parameter zur Authentifizierungsanfrage hinzuf\xfcgen",id:"add-parameters-to-the-authentication-request",level:3},{value:"Organisationstoken abrufen",id:"fetch-the-organization-token",level:3},{value:"Beispiel",id:"example",level:3},{value:"Organisationstoken f\xfcr eine Maschine-zu-Maschine-Anwendung abrufen",id:"fetch-organization-token-for-a-machine-to-machine-application",level:3},{value:"Schritt 3. Organisationstokens verifizieren",id:"step-3-verify-organization-tokens",level:2}];function h(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",mermaid:"mermaid",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"organisationsressourcen-sch\xfctzen",children:"Organisationsressourcen sch\xfctzen"})}),"\n",(0,t.jsxs)(n.p,{children:["Zus\xe4tzlich zu ",(0,t.jsx)(n.a,{href:"/authorization/api-resources/protect-your-api",children:"Sch\xfctze deine API"}),", bei der die API als Ressource dient, kann auch die Organisation eine Ressource sein und deine Organisationsressource auf die gleiche Weise sch\xfctzen. In diesem Artikel konzentrieren wir uns darauf, wie du deine Organisationsressource auf \xe4hnliche Weise sch\xfctzen kannst."]}),"\n",(0,t.jsx)(n.mermaid,{value:'sequenceDiagram\n    participant Client\n    participant Logto\n    participant API\n\n    %% Standard OIDC Flow\n    Note over Client,Logto: Standard OIDC Flow\n    Client->>Logto: Autorisierungsanfrage\n    Note right of Client: Beinhaltet Organisationsberechtigungen:<br/>"urn:logto:scope:organizations"\n    Logto->>Client: Autorisierungscode\n    Client->>Logto: Token-Anfrage\n    Logto->>Client: ID-Token + Zugangstoken\n    Note right of Client: ID-Token enth\xe4lt `organizations`\n\n    %% Organisationstoken-Anfrage\n    Note over Client,API: Organisationstoken-Anfrage\n    Client->>Logto: POST /oidc/token\n    Note right of Client: mit Ressource "urn:logto:scope:organizations"<br/>und angeforderten Berechtigungen einschlie\xdflich<br/>"urn:logto:scope:organizations"\n    Note right of Client: beinhaltet organisation_id Parameter\n\n    Note over Logto: \xdcberpr\xfcfe den Organisationszugang des Benutzers\n\n    alt Kein Zugang zu organisation_id\n        Logto--\x3e>Client: 403 Verboten\n    else Hat Organisationszugang\n        Note over Logto: Filtere angeforderte Berechtigungen\n        Logto--\x3e>Client: Gibt JWT-Zugangstoken zur\xfcck\n        Note left of Logto: Token enth\xe4lt:<br/>- Standard-JWT-Anspr\xfcche<br/>- Gew\xe4hrte Berechtigungen<br/>- Zielgruppe `urn:logto:organization:{organization_id}`\n    end\n\n    Note over Client,API: API-Anfrage\n    Client->>API: Anfrage mit Bearer-Token (Organisationstoken JWT)\n\n    Note over API: Validierung des JWT-Tokens:<br/>- Standard-JWT-Validierung<br/>- \xdcberpr\xfcfung der organisation_id\n\n    alt Token ung\xfcltig\n        API--\x3e>Client: 401 Unautorisiert\n    else Token g\xfcltig\n        alt Ung\xfcltige organisation_id\n            API--\x3e>Client: 403 Verboten\n        else G\xfcltige organisation_id\n            API--\x3e>Client: Gesch\xfctzte Ressource\n        end\n    end'}),"\n",(0,t.jsx)(n.h2,{id:"step-1-get-organization-ids-from-oidc-flow",children:"Schritt 1: Organisation-IDs aus dem OIDC-Flow erhalten"}),"\n",(0,t.jsxs)(n.p,{children:["Logto erweitert das Standardprotokoll ",(0,t.jsx)(n.a,{href:"https://openid.net/specs/openid-connect-core-1_0.html",children:"OpenID Connect"}),", um deiner App zu erm\xf6glichen, die Organisationsinformationen vom Benutzer zu erhalten. Es gibt zwei M\xf6glichkeiten, dies zu tun:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Wenn du ein Logto SDK mit Organisationsunterst\xfctzung verwendest, kannst du den ",(0,t.jsx)(n.code,{children:"urn:logto:scope:organizations"})," Scope zum ",(0,t.jsx)(n.code,{children:"scopes"})," Parameter des Konfigurationsobjekts hinzuf\xfcgen. Normalerweise hat das SDK ein Enum f\xfcr diesen Scope, z.B. ",(0,t.jsx)(n.code,{children:"UserScope.Organizations"})," in ",(0,t.jsx)(n.a,{href:"https://github.com/logto-io/js",children:"Logto JS SDKs"}),"."]}),"\n"]}),"\n",(0,t.jsxs)(a.A,{groupId:"sdk",children:[(0,t.jsx)(s.A,{value:"js",label:"JavaScript",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"import { LogtoClient, UserScope } from '@logto/browser'; // oder @logto/node, @logto/client\n\nconst logto = new LogtoClient({\n  // ...\n  scopes: [UserScope.Organizations],\n});\n"})})}),(0,t.jsx)(s.A,{value:"react",label:"React",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:"import { LogtoProvider, UserScope } from '@logto/react';\n\nconst App = () => (\n  <LogtoProvider\n    config={{\n      // ...\n      scopes: [UserScope.Organizations],\n    }}\n  >\n    {/* ... */}\n  </LogtoProvider>\n);\n"})})}),(0,t.jsx)(s.A,{value:"python",label:"Python",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"from logto import UserInfoScope\n\nclient = LogtoClient(\n    LogtoConfig(\n        # ...\n        scopes=[UserInfoScope.organizations],\n    )\n)\n"})})}),(0,t.jsx)(s.A,{value:"php",label:"PHP",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-php",children:"use Logto\\Sdk\\Constants\\UserScope;\n\n$client = new LogtoClient(\n  new LogtoConfig(\n    // ...\n    scopes: [UserScope::organizations],\n  )\n);\n"})})}),(0,t.jsx)(s.A,{value:"swift",label:"Swift",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-swift",children:"import Logto\nimport LogtoClient\n\nlet config = try? LogtoConfig(\n    // ...\n    scopes: [\n        UserScope.organizations.rawValue,\n    ],\n    // ...\n)\nlet client = LogtoClient(useConfig: config)\n"})})}),(0,t.jsx)(s.A,{value:"others",label:"Andere",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"const config = {\n  // ...\n  scope: 'openid offline_access urn:logto:scope:organizations',\n};\n"})})})]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["F\xfcr andere F\xe4lle musst du den ",(0,t.jsx)(n.code,{children:"urn:logto:scope:organizations"})," Scope zum ",(0,t.jsx)(n.code,{children:"scope"})," Parameter der SDK-Konfiguration (oder Auth-Anfrage) hinzuf\xfcgen."]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["Sobald der Benutzer den Authentifizierungsprozess abgeschlossen hat, kannst du die Organisationsinformationen aus dem ",(0,t.jsx)(n.code,{children:"idToken"})," erhalten:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:"// Verwende JavaScript als Beispiel\nconst idToken = await logto.getIdTokenClaims();\n\nconsole.log(idToken.organizations); // Ein String-Array von Organisations-IDs\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Das ",(0,t.jsx)(n.code,{children:"organizations"})," Feld (Anspruch) wird auch in der Antwort vom ",(0,t.jsx)(n.a,{href:"https://openid.net/specs/openid-connect-core-1_0.html#UserInfo",children:"UserInfo-Endpunkt"})," enthalten sein."]}),"\n",(0,t.jsx)(n.h3,{id:"optional-get-organization-roles",children:"Optional: Organisationsrollen erhalten"}),"\n",(0,t.jsxs)(n.p,{children:["Wenn du noch keine Organisationsrollen eingerichtet hast, siehe ",(0,t.jsx)(n.a,{href:"/authorization/organization-template/configure-organization-template/#create-organization-role",children:"diesen Abschnitt"}),"."]}),"\n",(0,t.jsx)(n.p,{children:"Um alle Organisationsrollen des aktuellen Benutzers zu erhalten:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Wenn du ein Logto SDK mit Organisationsunterst\xfctzung verwendest, kannst du den ",(0,t.jsx)(n.code,{children:"urn:logto:scope:organization_roles"})," Scope zum ",(0,t.jsx)(n.code,{children:"scopes"})," Parameter des Konfigurationsobjekts hinzuf\xfcgen. Normalerweise hat das SDK ein Enum f\xfcr diesen Scope, z.B. ",(0,t.jsx)(n.code,{children:"UserScope.OrganizationRoles"})," in ",(0,t.jsx)(n.a,{href:"https://github.com/logto-io/js",children:"Logto JS SDKs"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:["F\xfcr andere F\xe4lle musst du den ",(0,t.jsx)(n.code,{children:"urn:logto:scope:organization_roles"})," Scope zum ",(0,t.jsx)(n.code,{children:"scope"})," Parameter der SDK-Konfiguration (oder Auth-Anfrage) hinzuf\xfcgen."]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["Dann kannst du die Organisationsrollen aus dem ",(0,t.jsx)(n.code,{children:"idToken"})," erhalten:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:"// Verwende JavaScript als Beispiel\nconst idToken = await logto.getIdTokenClaims();\n\nconsole.log(idToken.organization_roles); // Ein String-Array von Organisationsrollen\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Jeder String im Array hat das Format ",(0,t.jsx)(n.code,{children:"organization_id:role_id"}),", z.B. ",(0,t.jsx)(n.code,{children:"org_123:admin"})," bedeutet, dass der Benutzer die ",(0,t.jsx)(n.code,{children:"admin"})," Rolle in der Organisation mit der ID ",(0,t.jsx)(n.code,{children:"org_123"})," hat."]}),"\n",(0,t.jsxs)(n.p,{children:["Das ",(0,t.jsx)(n.code,{children:"organization_roles"})," Feld (Anspruch) wird auch in der Antwort vom ",(0,t.jsx)(n.a,{href:"https://openid.net/specs/openid-connect-core-1_0.html#UserInfo",children:"UserInfo-Endpunkt"})," enthalten sein."]}),"\n",(0,t.jsx)(n.h2,{id:"step-2-fetch-organization-token",children:"Schritt 2. Organisationstoken abrufen"}),"\n",(0,t.jsx)(n.p,{children:"Um Aktionen im Kontext einer Organisation durchzuf\xfchren, muss dem Benutzer ein Zugangstoken f\xfcr diese Organisation (Organisationstoken) gew\xe4hrt werden. Das Organisationstoken ist ein JWT-Token, das die Organisations-ID und die Berechtigungen (Scopes) des Benutzers in der Organisation enth\xe4lt."}),"\n",(0,t.jsx)(n.h3,{id:"add-parameters-to-the-authentication-request",children:"Parameter zur Authentifizierungsanfrage hinzuf\xfcgen"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Wenn du ein Logto SDK mit Organisationsunterst\xfctzung verwendest, kannst du den ",(0,t.jsx)(n.code,{children:"urn:logto:scope:organizations"})," Scope zum ",(0,t.jsx)(n.code,{children:"scopes"})," Parameter des Konfigurationsobjekts hinzuf\xfcgen, auf die gleiche Weise wie ",(0,t.jsx)(n.a,{href:"/authorization/organization-template/protect-organization-resources/#step-1-get-organization-ids-from-oidc-flow",children:"Organisation-IDs des aktuellen Benutzers erhalten"}),".","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Logto SDK mit Organisationsunterst\xfctzung wird den Rest der Konfiguration automatisch handhaben."}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["F\xfcr andere F\xe4lle musst du die ",(0,t.jsx)(n.code,{children:"offline_access"})," und ",(0,t.jsx)(n.code,{children:"urn:logto:scope:organizations"})," Scopes zum ",(0,t.jsx)(n.code,{children:"scope"})," Parameter und die ",(0,t.jsx)(n.code,{children:"urn:logto:resource:organizations"})," Ressource zum ",(0,t.jsx)(n.code,{children:"resource"})," Parameter der SDK-Konfiguration (oder Auth-Anfrage) hinzuf\xfcgen.","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Hinweis: ",(0,t.jsx)(n.code,{children:"offline_access"})," ist erforderlich, um das ",(0,t.jsx)(n.code,{children:"refresh_token"})," zu erhalten, das verwendet werden kann, um Organisationstokens abzurufen."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:"// Nur f\xfcr andere F\xe4lle. F\xfcr Logto SDKs, siehe oben.\nconst config = {\n  // ...\n  scope: 'openid offline_access urn:logto:scope:organizations',\n  resource: 'urn:logto:resource:organizations',\n};\n"})}),"\n",(0,t.jsx)(n.admonition,{type:"note",children:(0,t.jsxs)(n.p,{children:["Die ",(0,t.jsx)(n.code,{children:"urn:logto:resource:organizations"})," Ressource ist eine spezielle Ressource, die die Organisationstemplate darstellt."]})}),"\n",(0,t.jsx)(n.h3,{id:"fetch-the-organization-token",children:"Organisationstoken abrufen"}),"\n",(0,t.jsxs)(n.p,{children:["Logto erweitert den Standard ",(0,t.jsx)(n.code,{children:"refresh_token"})," Grant-Typ, um deiner App zu erm\xf6glichen, Organisationstokens abzurufen."]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Wenn du ein Logto SDK mit Organisationsunterst\xfctzung verwendest, kannst du die ",(0,t.jsx)(n.code,{children:"getOrganizationToken()"})," Methode (oder ",(0,t.jsx)(n.code,{children:"getOrganizationTokenClaims()"})," Methode) des SDKs aufrufen."]}),"\n",(0,t.jsxs)(n.li,{children:["F\xfcr andere F\xe4lle musst du den Token-Endpunkt mit den folgenden Parametern aufrufen:","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"grant_type"}),": ",(0,t.jsx)(n.code,{children:"refresh_token"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"client_id"}),": Die App-ID, die der Benutzer zur Authentifizierung verwendet hat."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"refresh_token"}),": Das ",(0,t.jsx)(n.code,{children:"refresh_token"}),", das du aus dem Authentifizierungsprozess erhalten hast."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"organization_id"}),": Die ID der Organisation, f\xfcr die du das Token erhalten m\xf6chtest."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"scope"})," (optional): Die Berechtigungen, die du dem Benutzer in der Organisation gew\xe4hren m\xf6chtest. Wenn nicht angegeben, wird der Autorisierungsserver versuchen, die gleichen Berechtigungen wie im Authentifizierungsprozess zu gew\xe4hren."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(a.A,{groupId:"sdk",children:[(0,t.jsx)(s.A,{value:"js",label:"JavaScript",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"const token = await logto.getOrganizationToken('<organization-id>');\n"})})}),(0,t.jsx)(s.A,{value:"react",label:"React",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:"const App = () => {\n  const { getOrganizationToken } = useLogto();\n\n  const getToken = async () => {\n    const token = await getOrganizationToken('<organization-id>');\n  };\n\n  return <button onClick={getToken}>Organisationstoken abrufen</button>;\n};\n"})})}),(0,t.jsx)(s.A,{value:"python",label:"Python",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'token = await client.getOrganizationToken("<organization-id>")\n# oder\nclaims = await client.getOrganizationTokenClaims("<organization-id>")\n'})})}),(0,t.jsx)(s.A,{value:"php",label:"PHP",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-php",children:"$token = $client->getOrganizationToken('<organization-id>');\n// oder\n$claims = $client->getOrganizationTokenClaims('<organization-id>');\n"})})}),(0,t.jsx)(s.A,{value:"swift",label:"Swift",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-swift",children:'let token = try await client.getOrganizationToken(forId: "<organization-id>")\n'})})}),(0,t.jsx)(s.A,{value:"others",label:"Andere",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"// Verwende JavaScript als Beispiel\n\nconst params = new URLSearchParams();\n\nparams.append('grant_type', 'refresh_token');\nparams.append('client_id', 'YOUR_CLIENT_ID');\nparams.append('refresh_token', 'REFRESH_TOKEN');\nparams.append('organization_id', 'org_123');\n\nconst response = await fetch('https://YOUR_LOGTO_ENDPOINT/oidc/token', {\n  method: 'POST',\n  headers: {\n    'Content-Type': 'application/x-www-form-urlencoded',\n  },\n  body: params,\n});\n"})})})]}),"\n",(0,t.jsxs)(n.p,{children:["Die Antwort wird im gleichen Format wie der ",(0,t.jsx)(n.a,{href:"https://openid.net/specs/openid-connect-core-1_0.html#TokenEndpoint",children:"Standard-Token-Endpunkt"})," sein, und das ",(0,t.jsx)(n.code,{children:"access_token"})," ist das Organisationstoken im JWT-Format."]}),"\n",(0,t.jsx)(n.p,{children:"Neben den regul\xe4ren Anspr\xfcchen eines Zugangstokens enth\xe4lt das Organisationstoken auch die folgenden Anspr\xfcche:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"aud"}),": Die Zielgruppe des Organisationstokens ist ",(0,t.jsx)(n.code,{children:"urn:logto:organization:{organization_id}"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"scope"}),": Die dem Benutzer in der Organisation gew\xe4hrten Berechtigungen mit Leerzeichen als Trennzeichen."]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"example",children:"Beispiel"}),"\n",(0,t.jsx)(n.p,{children:"Ein gutes Beispiel kann mehr als tausend Worte sagen. Angenommen, unser Organisationstemplate hat die folgende Einrichtung:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Berechtigungen: ",(0,t.jsx)(n.code,{children:"read:logs"}),", ",(0,t.jsx)(n.code,{children:"write:logs"}),", ",(0,t.jsx)(n.code,{children:"read:users"}),", ",(0,t.jsx)(n.code,{children:"write:users"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:["Rollen: ",(0,t.jsx)(n.code,{children:"admin"}),", ",(0,t.jsx)(n.code,{children:"member"}),".","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Die ",(0,t.jsx)(n.code,{children:"admin"})," Rolle hat alle Berechtigungen."]}),"\n",(0,t.jsxs)(n.li,{children:["Die ",(0,t.jsx)(n.code,{children:"member"})," Rolle hat ",(0,t.jsx)(n.code,{children:"read:logs"})," und ",(0,t.jsx)(n.code,{children:"read:users"})," Berechtigungen."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Und der Benutzer hat die folgende Einrichtung:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Organisations-IDs: ",(0,t.jsx)(n.code,{children:"org_1"}),", ",(0,t.jsx)(n.code,{children:"org_2"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:["Organisationsrollen: ",(0,t.jsx)(n.code,{children:"org_1:admin"}),", ",(0,t.jsx)(n.code,{children:"org_2:member"}),"."]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"In der Logto SDK-Konfiguration (oder Auth-Anfrage) haben wir andere Dinge richtig eingerichtet und die folgenden Scopes hinzugef\xfcgt:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"urn:logto:scope:organizations"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"openid"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"offline_access"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"read:logs"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"write:logs"})}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["Jetzt, wenn der Benutzer den Authentifizierungsprozess abgeschlossen hat, k\xf6nnen wir die Organisations-IDs aus dem ",(0,t.jsx)(n.code,{children:"idToken"})," erhalten:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:"// Verwende JavaScript als Beispiel\nconst idToken = await logto.getIdTokenClaims();\n\nconsole.log(idToken.organizations); // ['org_1', 'org_2']\n"})}),"\n",(0,t.jsx)(n.p,{children:"Wenn wir die Organisationstokens erhalten m\xf6chten:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:"// Verwende JavaScript als Beispiel\nconst org1Token = await logto.getOrganizationTokenClaims('org_1');\nconst org2Token = await logto.getOrganizationTokenClaims('org_2');\n\nconsole.log(org1Token.aud); // 'urn:logto:organization:org_1'\nconsole.log(org1Token.scope); // 'read:logs write:logs'\nconsole.log(org2Token.aud); // 'urn:logto:organization:org_2'\nconsole.log(org2Token.scope); // 'read:logs'\n\nconst org3Token = await logto.getOrganizationTokenClaims('org_3'); // Fehler: Benutzer ist kein Mitglied der Organisation\n"})}),"\n",(0,t.jsx)(n.p,{children:"Erkl\xe4rung:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["F\xfcr ",(0,t.jsx)(n.code,{children:"org_1"})," hat der Benutzer die ",(0,t.jsx)(n.code,{children:"admin"})," Rolle, daher sollte das Organisationstoken alle verf\xfcgbaren Berechtigungen (Scopes) haben."]}),"\n",(0,t.jsxs)(n.li,{children:["F\xfcr ",(0,t.jsx)(n.code,{children:"org_2"})," hat der Benutzer die ",(0,t.jsx)(n.code,{children:"member"})," Rolle, daher sollte das Organisationstoken ",(0,t.jsx)(n.code,{children:"read:logs"})," und ",(0,t.jsx)(n.code,{children:"read:users"})," Berechtigungen (Scopes) haben."]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["Da wir im Authentifizierungsprozess nur ",(0,t.jsx)(n.code,{children:"read:logs"})," und ",(0,t.jsx)(n.code,{children:"write:logs"}),' Scopes angefordert haben, wurden die Organisationstokens entsprechend "heruntergestuft", was zur Schnittmenge der angeforderten Scopes und der verf\xfcgbaren Scopes f\xfchrt.']}),"\n",(0,t.jsx)(n.h3,{id:"fetch-organization-token-for-a-machine-to-machine-application",children:"Organisationstoken f\xfcr eine Maschine-zu-Maschine-Anwendung abrufen"}),"\n",(0,t.jsxs)(n.p,{children:["\xc4hnlich wie beim Abrufen von Organisationstokens f\xfcr Benutzer kannst du auch Organisationstokens f\xfcr Maschine-zu-Maschine-Anwendungen abrufen. Der einzige Unterschied besteht darin, dass du den ",(0,t.jsx)(n.code,{children:"client_credentials"})," Grant-Typ anstelle des ",(0,t.jsx)(n.code,{children:"refresh_token"})," Grant-Typs verwenden musst."]}),"\n",(0,t.jsxs)(n.p,{children:["Um mehr \xfcber Maschine-zu-Maschine-Anwendungen zu erfahren, siehe ",(0,t.jsx)(n.a,{href:"/quick-starts/m2m/",children:"Maschine-zu-Maschine: Auth mit Logto"}),"."]}),"\n",(0,t.jsx)(n.h2,{id:"step-3-verify-organization-tokens",children:"Schritt 3. Organisationstokens verifizieren"}),"\n",(0,t.jsxs)(n.p,{children:["Sobald die App ein Organisationstoken erh\xe4lt, kann sie das Token auf die gleiche Weise wie ein regul\xe4res Zugangstoken verwenden, z.B. die APIs mit dem Token im ",(0,t.jsx)(n.code,{children:"Authorization"})," Header im Format ",(0,t.jsx)(n.code,{children:"Bearer {token}"})," aufrufen."]}),"\n",(0,t.jsxs)(n.p,{children:["In deiner API ist die Art und Weise, wie du das Organisationstoken verifizierst, ziemlich \xe4hnlich zu ",(0,t.jsx)(n.a,{href:"/authorization/api-resources/protect-your-api/#validate-authorization-tokens-for-api-requests",children:"Sch\xfctze deine API"}),". Hauptunterschiede:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Im Gegensatz zu Zugangstokens f\xfcr API-Ressourcen kann ein Benutzer KEIN Organisationstoken erhalten, wenn er kein Mitglied der Organisation ist."}),"\n",(0,t.jsxs)(n.li,{children:["Die Zielgruppe des Organisationstokens ist ",(0,t.jsx)(n.code,{children:"urn:logto:organization:{organization_id}"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:["F\xfcr bestimmte Berechtigungen (Scopes) musst du den ",(0,t.jsx)(n.code,{children:"scope"})," Anspruch des Organisationstokens \xfcberpr\xfcfen, indem du den String mit Leerzeichen als Trennzeichen aufteilst."]}),"\n"]})]})}function g(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(h,{...e})}):h(e)}},3768:(e,n,i)=>{i.d(n,{A:()=>s});i(58101);var r=i(13526);const t={tabItem:"tabItem_y6LR"};var o=i(25105);function s(e){let{children:n,hidden:i,className:s}=e;return(0,o.jsx)("div",{role:"tabpanel",className:(0,r.A)(t.tabItem,s),hidden:i,children:n})}},11043:(e,n,i)=>{i.d(n,{A:()=>w});var r=i(58101),t=i(13526),o=i(32571),s=i(55234),a=i(87394),l=i(87276),d=i(31637),c=i(16063);function u(e){return r.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function h(e){const{values:n,children:i}=e;return(0,r.useMemo)((()=>{const e=n??function(e){return u(e).map((e=>{let{props:{value:n,label:i,attributes:r,default:t}}=e;return{value:n,label:i,attributes:r,default:t}}))}(i);return function(e){const n=(0,d.XI)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,i])}function g(e){let{value:n,tabValues:i}=e;return i.some((e=>e.value===n))}function p(e){let{queryString:n=!1,groupId:i}=e;const t=(0,s.W6)(),o=function(e){let{queryString:n=!1,groupId:i}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!i)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return i??null}({queryString:n,groupId:i});return[(0,l.aZ)(o),(0,r.useCallback)((e=>{if(!o)return;const n=new URLSearchParams(t.location.search);n.set(o,e),t.replace({...t.location,search:n.toString()})}),[o,t])]}function m(e){const{defaultValue:n,queryString:i=!1,groupId:t}=e,o=h(e),[s,l]=(0,r.useState)((()=>function(e){let{defaultValue:n,tabValues:i}=e;if(0===i.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!g({value:n,tabValues:i}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${i.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const r=i.find((e=>e.default))??i[0];if(!r)throw new Error("Unexpected error: 0 tabValues");return r.value}({defaultValue:n,tabValues:o}))),[d,u]=p({queryString:i,groupId:t}),[m,x]=function(e){let{groupId:n}=e;const i=function(e){return e?`docusaurus.tab.${e}`:null}(n),[t,o]=(0,c.Dv)(i);return[t,(0,r.useCallback)((e=>{i&&o.set(e)}),[i,o])]}({groupId:t}),f=(()=>{const e=d??m;return g({value:e,tabValues:o})?e:null})();(0,a.A)((()=>{f&&l(f)}),[f]);return{selectedValue:s,selectValue:(0,r.useCallback)((e=>{if(!g({value:e,tabValues:o}))throw new Error(`Can't select invalid tab value=${e}`);l(e),u(e),x(e)}),[u,x,o]),tabValues:o}}var x=i(27034);const f={tabList:"tabList_swUI",tabItem:"tabItem_BXZ5"};var j=i(25105);function z(e){let{className:n,block:i,selectedValue:r,selectValue:s,tabValues:a}=e;const l=[],{blockElementScrollPositionUntilNextRender:d}=(0,o.a_)(),c=e=>{const n=e.currentTarget,i=l.indexOf(n),t=a[i].value;t!==r&&(d(n),s(t))},u=e=>{let n=null;switch(e.key){case"Enter":c(e);break;case"ArrowRight":{const i=l.indexOf(e.currentTarget)+1;n=l[i]??l[0];break}case"ArrowLeft":{const i=l.indexOf(e.currentTarget)-1;n=l[i]??l[l.length-1];break}}n?.focus()};return(0,j.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,t.A)("tabs",{"tabs--block":i},n),children:a.map((e=>{let{value:n,label:i,attributes:o}=e;return(0,j.jsx)("li",{role:"tab",tabIndex:r===n?0:-1,"aria-selected":r===n,ref:e=>l.push(e),onKeyDown:u,onClick:c,...o,className:(0,t.A)("tabs__item",f.tabItem,o?.className,{"tabs__item--active":r===n}),children:i??n},n)}))})}function k(e){let{lazy:n,children:i,selectedValue:o}=e;const s=(Array.isArray(i)?i:[i]).filter(Boolean);if(n){const e=s.find((e=>e.props.value===o));return e?(0,r.cloneElement)(e,{className:(0,t.A)("margin-top--md",e.props.className)}):null}return(0,j.jsx)("div",{className:"margin-top--md",children:s.map(((e,n)=>(0,r.cloneElement)(e,{key:n,hidden:e.props.value!==o})))})}function b(e){const n=m(e);return(0,j.jsxs)("div",{className:(0,t.A)("tabs-container",f.tabList),children:[(0,j.jsx)(z,{...n,...e}),(0,j.jsx)(k,{...n,...e})]})}function w(e){const n=(0,x.A)();return(0,j.jsx)(b,{...e,children:u(e.children)},String(n))}},79621:(e,n,i)=>{i.d(n,{R:()=>s,x:()=>a});var r=i(58101);const t={},o=r.createContext(t);function s(e){const n=r.useContext(o);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:s(e.components),r.createElement(o.Provider,{value:n},e.children)}}}]);