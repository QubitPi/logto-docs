"use strict";(self.webpackChunk_logto_docs=self.webpackChunk_logto_docs||[]).push([[46953],{12672:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>u,contentTitle:()=>d,default:()=>l,frontMatter:()=>a,metadata:()=>i,toc:()=>o});const i=JSON.parse('{"id":"quick-starts/database/hasura/README","title":"Authentifizierung zu deiner Hasura-Anwendung hinzuf\xfcgen","description":"Hasura ist ein Tool, das schnell entsprechende GraphQL- und REST-APIs f\xfcr deine Daten bereitstellen kann. In Anbetracht der Datensicherheit bietet Hasura auch die M\xf6glichkeit, den Zugriff auf jede API fein abzustimmen.","source":"@site/i18n/de/docusaurus-plugin-content-docs/current/quick-starts/database/hasura/README.mdx","sourceDirName":"quick-starts/database/hasura","slug":"/quick-starts/hasura","permalink":"/de/quick-starts/hasura","draft":false,"unlisted":false,"editUrl":"https://github.com/logto-io/docs/tree/master/i18n/de/docusaurus-plugin-content-docs/current/quick-starts/database/hasura/README.mdx","tags":[],"version":"current","frontMatter":{"slug":"/quick-starts/hasura","sidebar_label":"Hasura","sidebar_custom_props":{"description":"Logto mit Hasura integrieren."}},"sidebar":"quickStartSidebar","previous":{"title":"Traditionelles Web","permalink":"/de/quick-starts/traditional-web"},"next":{"title":"Supabase","permalink":"/de/quick-starts/supabase"}}');var s=r(25105),t=r(79621);const a={slug:"/quick-starts/hasura",sidebar_label:"Hasura",sidebar_custom_props:{description:"Logto mit Hasura integrieren."}},d="Authentifizierung zu deiner Hasura-Anwendung hinzuf\xfcgen",u={},o=[{value:"Hintergrund",id:"background",level:2},{value:"Erste Schritte",id:"get-started",level:2},{value:"1. Hasura API-Ressource in Logto erstellen",id:"1-create-hasura-api-resource-in-logto",level:3},{value:"2. Rollen gem\xe4\xdf Hasura-Setup in Logto erstellen",id:"2-create-roles-according-to-hasura-setup-in-logto",level:3},{value:"3. Hasura-Umgebungsvariable <code>HASURA_GRAPHQL_JWT_SECRET</code> konfigurieren, um den JWT-Modus zu aktivieren",id:"3-configure-hasura-environment-variable-hasura_graphql_jwt_secret-to-enable-jwt-mode",level:3},{value:"4. Benutzer-Zugangstoken mit zus\xe4tzlichen Anspr\xfcchen anpassen",id:"4-customize-user-access-token-extra-claims",level:3},{value:"5. Logto SDK integrieren",id:"5-integrate-logto-sdk",level:3},{value:"Fazit",id:"conclusion",level:2}];function c(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",img:"img",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"authentifizierung-zu-deiner-hasura-anwendung-hinzuf\xfcgen",children:"Authentifizierung zu deiner Hasura-Anwendung hinzuf\xfcgen"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"https://hasura.io/",children:"Hasura"})," ist ein Tool, das schnell entsprechende GraphQL- und REST-APIs f\xfcr deine Daten bereitstellen kann. In Anbetracht der Datensicherheit bietet Hasura auch die M\xf6glichkeit, den Zugriff auf jede API fein abzustimmen."]}),"\n",(0,s.jsx)(n.p,{children:"Normalerweise nutzen Hasura-Benutzer andere Identit\xe4tsmanagement- und Authentifizierungsdienste, wobei Logto einer der beliebtesten ist."}),"\n",(0,s.jsx)(n.p,{children:"In diesem Blogbeitrag gehen wir davon aus, dass du bereits Hasura-Dienste nutzt. Wir werden vorstellen, wie man Hasura und Logto integriert, um die Sicherheit deiner Daten zu maximieren. Wenn du noch kein Logto-Konto hast, melde dich an und beginne jetzt damit!"}),"\n",(0,s.jsx)(n.h2,{id:"background",children:"Hintergrund"}),"\n",(0,s.jsxs)(n.p,{children:["Hasura verwendet ",(0,s.jsx)(n.a,{href:"https://hasura.io/docs/latest/auth/overview/",children:"rollenbasierte Zugriffsverwaltung"}),", w\xe4hrend Logto die standardm\xe4\xdfige ",(0,s.jsx)(n.a,{href:"/authorization/role-based-access-control",children:"rollenbasierte Zugangskontrolle (RBAC)"})," nutzt."]}),"\n",(0,s.jsxs)(n.p,{children:["In Logtos Modell und Best Practices f\xfcr RBAC empfehlen wir Benutzern, ",(0,s.jsx)(n.code,{children:"Berechtigung"})," zu verwenden, um der feinsten Granularit\xe4t von Berechtigungen zu entsprechen, ",(0,s.jsx)(n.code,{children:"Rolle"})," als eine Sammlung von ",(0,s.jsx)(n.code,{children:"Berechtigungen"})," f\xfcr bequeme Batch-Operationen zu verwenden und letztendlich ",(0,s.jsx)(n.code,{children:"Berechtigung"})," (normalerweise auf der Seite der Ressourcenanbieter) zu \xfcberpr\xfcfen, um zu verifizieren, ob ein Benutzer eine bestimmte Operation ausf\xfchren kann."]}),"\n",(0,s.jsxs)(n.p,{children:["In Hasura entspricht eine ",(0,s.jsx)(n.code,{children:"Rolle"})," der feinsten Granularit\xe4t von Berechtigungen, und Berechtigungspr\xfcfungen werden gegen ",(0,s.jsx)(n.code,{children:"Rollen"})," durchgef\xfchrt. Daher empfehlen wir bei der Konfiguration von Logto, eine ",(0,s.jsx)(n.code,{children:"Rolle"})," genau einer ",(0,s.jsx)(n.code,{children:"Berechtigung"})," zuzuordnen. Dieser Ansatz kann die Berechtigungen von Logto und Hasura miteinander verkn\xfcpfen, um Verwirrung und Missbrauch zu vermeiden."]}),"\n",(0,s.jsxs)(n.p,{children:["Hasura kann die Zugangskontrolle mit Webhooks oder JWT unterst\xfctzen. Unser vorheriger ",(0,s.jsx)(n.a,{href:"https://blog.logto.io/logto-x-hasura",children:"Blogbeitrag"})," stellte vor, wie man Webhooks verwendet, und in den folgenden Abschnitten erkl\xe4ren wir, wie man Hasuras JWT-Modus-Zugangskontrolle nutzt."]}),"\n",(0,s.jsx)(n.h2,{id:"get-started",children:"Erste Schritte"}),"\n",(0,s.jsxs)(n.p,{children:["Beginnen wir mit einem einfachen Beispiel. Angenommen, ein Benutzer hat bereits zwei APIs in Hasura, ",(0,s.jsx)(n.code,{children:"GET /user"})," und ",(0,s.jsx)(n.code,{children:"PATCH /user"}),", die zwei Rollen entsprechen: ",(0,s.jsx)(n.code,{children:"user:reader"})," und ",(0,s.jsx)(n.code,{children:"user:maintainer"}),"."]}),"\n",(0,s.jsx)(n.h3,{id:"1-create-hasura-api-resource-in-logto",children:"1. Hasura API-Ressource in Logto erstellen"}),"\n",(0,s.jsx)(n.p,{children:"Erstelle eine Hasura API-Ressource in Logto."}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"Hasura API",src:r(17949).A+"",width:"1286",height:"776"})}),"\n",(0,s.jsx)(n.h3,{id:"2-create-roles-according-to-hasura-setup-in-logto",children:"2. Rollen gem\xe4\xdf Hasura-Setup in Logto erstellen"}),"\n",(0,s.jsxs)(n.p,{children:["Wir m\xfcssen zwei ",(0,s.jsx)(n.code,{children:"Berechtigungen"})," f\xfcr die in Schritt 1 erw\xe4hnte Hasura API-Ressource erstellen, n\xe4mlich ",(0,s.jsx)(n.code,{children:"read:user"})," und ",(0,s.jsx)(n.code,{children:"maintain:user"}),", und dann zwei Rollen erstellen: ",(0,s.jsx)(n.code,{children:"user:reader"})," (enth\xe4lt die ",(0,s.jsx)(n.code,{children:"read:user"})," Berechtigung) und ",(0,s.jsx)(n.code,{children:"user:maintainer"})," (einschlie\xdflich der ",(0,s.jsx)(n.code,{children:"maintain:user"})," Berechtigung), um eins zu eins mit Hasuras Rollen zu korrespondieren. Und diese Rollen nach Bedarf Logto-Benutzern zuweisen."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"Hasura API mit Berechtigungen",src:r(6690).A+"",width:"2642",height:"836"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"Benutzerleserrolle",src:r(64678).A+"",width:"2648",height:"740"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"Benutzerbetreuerrolle",src:r(2885).A+"",width:"2652",height:"736"})}),"\n",(0,s.jsxs)(n.h3,{id:"3-configure-hasura-environment-variable-hasura_graphql_jwt_secret-to-enable-jwt-mode",children:["3. Hasura-Umgebungsvariable ",(0,s.jsx)(n.code,{children:"HASURA_GRAPHQL_JWT_SECRET"})," konfigurieren, um den JWT-Modus zu aktivieren"]}),"\n",(0,s.jsxs)(n.p,{children:["Durch das Studium der ",(0,s.jsx)(n.a,{href:"https://hasura.io/docs/latest/auth/authentication/jwt/#hasura-jwt-configuration-options",children:"Hasura JWT-Konfigurationsoptionen"})," m\xfcssen wir die Umgebungsvariable ",(0,s.jsx)(n.code,{children:"HASURA_GRAPHQL_JWT_SECRET"})," hinzuf\xfcgen und konfigurieren, bevor wir JWT f\xfcr die Zugangskontrolle verwenden k\xf6nnen."]}),"\n",(0,s.jsxs)(n.p,{children:["Es gibt viele verschiedene Optionen, die konfiguriert werden k\xf6nnen, aber hier stellen wir den einfachsten Fall vor: nur die ",(0,s.jsx)(n.code,{children:"jwk_url"})," muss konfiguriert werden. Dieser Wert kann von deinem Logto OpenID-Konfigurationsendpunkt (",(0,s.jsx)(n.a,{href:"https://your.logto.domain/oidc/.well-known/openid-configuration",children:"https://your.logto.domain/oidc/.well-known/openid-configuration"}),") abgerufen werden."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"Hasura JWT-Konfiguration",src:r(73289).A+"",width:"1064",height:"788"})}),"\n",(0,s.jsx)(n.h3,{id:"4-customize-user-access-token-extra-claims",children:"4. Benutzer-Zugangstoken mit zus\xe4tzlichen Anspr\xfcchen anpassen"}),"\n",(0,s.jsx)(n.p,{children:"Verwende die benutzerdefinierte Token-Anspr\xfcche-Funktion von Logto, um die Logik anzupassen, um zus\xe4tzliche Anspr\xfcche zum Benutzer-Zugangstoken hinzuzuf\xfcgen."}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"Benutzer-Zugangstoken-Skript",src:r(3534).A+"",width:"2656",height:"1526"})}),"\n",(0,s.jsxs)(n.p,{children:["Passe die Methode ",(0,s.jsx)(n.code,{children:"getCustomJwtClaims"})," an, um Daten im JWT hinzuzuf\xfcgen, auf die Hasura zur Implementierung der Zugangskontrolle angewiesen ist. Dies kann Daten im Zusammenhang mit dem Benutzer umfassen, der in diesem Fall autorisiert wird, einschlie\xdflich der ",(0,s.jsx)(n.code,{children:"Rollen"}),", die sie besitzen, auf die \xfcber ",(0,s.jsx)(n.code,{children:"context"})," zugegriffen werden kann."]}),"\n",(0,s.jsxs)(n.p,{children:["Wir haben auch eine Umgebungsvariable ",(0,s.jsx)(n.code,{children:"USER_DEFAULT_ROLE_NAMES"})," definiert, um Hardcoding zu vermeiden."]}),"\n",(0,s.jsx)(n.h3,{id:"5-integrate-logto-sdk",children:"5. Logto SDK integrieren"}),"\n",(0,s.jsx)(n.p,{children:"Nach der Konfiguration von Logto und Hasura integriere deine App mit dem Logto SDK. Hier verwenden wir ein React-Beispiel, um das Benutzer-Zugangstoken anzuzeigen, das von Logto nach der Benutzeranmeldung ausgegeben wird."}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"Benutzer mit Rollen",src:r(40448).A+"",width:"2656",height:"912"})}),"\n",(0,s.jsxs)(n.p,{children:["Zuerst weisen wir dem Benutzer die zuvor erstellten ",(0,s.jsx)(n.code,{children:"user:reader"})," und ",(0,s.jsx)(n.code,{children:"user:maintainer"})," Rollen zu und melden uns dann als dieser Benutzer an."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"const config: LogtoConfig = {\n  endpoint: 'http://localhost:3001',\n  appId: '<your-application-id>',\n  appSecret: '<your-application-secret>',\n  scopes: [\n    ...// bestehende Berechtigungen\n    'read:user',\n    'maintain:user',\n  ],\n  resources: [\n    ...// bestehende Ressourcen\n    'https://*.hasura.app/api',\n  ],\n};\n"})}),"\n",(0,s.jsx)(n.p,{children:"Erhalte das Benutzer-Zugangstoken und fordere Hasura-APIs an:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"const accessToken = await logto.getAccessToken('https://*.hasura.app/api');\n\n// Bevor die Anfrage an Hasura gesendet wird\nrequest.headers.set('Authorization', `Bearer ${accessToken}`);\nrequest.headers.set('x-Hasura-Role', '<required-role-for-the-endpoint>');\n"})}),"\n",(0,s.jsx)(n.h2,{id:"conclusion",children:"Fazit"}),"\n",(0,s.jsx)(n.p,{children:"In diesem Artikel bieten wir eine weitere Methode der JWT-basierten Zugangskontrolle an, die von Hasura unterst\xfctzt wird, neben Webhook."}),"\n",(0,s.jsxs)(n.p,{children:["Durch den Vergleich der Prozesse von Hasuras ",(0,s.jsx)(n.a,{href:"https://hasura.io/docs/latest/auth/authentication/webhook/",children:"Webhook"})," und ",(0,s.jsx)(n.a,{href:"https://hasura.io/docs/latest/auth/authentication/jwt/",children:"JWT"})," Zugangskontrolle k\xf6nnen wir sehen, dass der Webhook-Ansatz bei jeder Hasura-Anfrage einen Webhook an Logto sendet und auf eine Antwort wartet; w\xe4hrend der JWT-basierte Ansatz kontinuierlich verwendet werden kann, bis das JWT abl\xe4uft."]}),"\n",(0,s.jsx)(n.p,{children:"Der JWT-Ansatz kann die Netzwerklast reduzieren und die durch Webhooks verursachte Netzwerklatenz eliminieren; w\xe4hrend der Webhook-Ansatz \xc4nderungen in den Benutzerberechtigungen in Echtzeit synchronisieren kann."}),"\n",(0,s.jsx)(n.p,{children:"Benutzer k\xf6nnen den geeigneten Ansatz basierend auf diesen Schlussfolgerungen in Kombination mit ihren tats\xe4chlichen Gesch\xe4ftsanforderungen w\xe4hlen."})]})}function l(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},6690:(e,n,r)=>{r.d(n,{A:()=>i});const i=r.p+"assets/images/hasura-api-with-scopes-ab26b108b1aa93f0225ca8cc55a70c8c.webp"},17949:(e,n,r)=>{r.d(n,{A:()=>i});const i=r.p+"assets/images/hasura-api-f0466211049ca00f0b07f1b913ba58e4.webp"},73289:(e,n,r)=>{r.d(n,{A:()=>i});const i=r.p+"assets/images/hasura-jwt-config-1935efe8a692058171ed131f90921dde.webp"},3534:(e,n,r)=>{r.d(n,{A:()=>i});const i=r.p+"assets/images/user-access-token-script-924dba883452e140764247739744b91d.webp"},2885:(e,n,r)=>{r.d(n,{A:()=>i});const i=r.p+"assets/images/user-maintainer-role-bc2937b4169034c8979712dd1484d864.webp"},64678:(e,n,r)=>{r.d(n,{A:()=>i});const i=r.p+"assets/images/user-reader-role-cc358419b86d766f002b9dda90515555.webp"},40448:(e,n,r)=>{r.d(n,{A:()=>i});const i=r.p+"assets/images/user-with-roles-ceb339a231a4e03f51e23691f45dd790.webp"},79621:(e,n,r)=>{r.d(n,{R:()=>a,x:()=>d});var i=r(58101);const s={},t=i.createContext(s);function a(e){const n=i.useContext(t);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),i.createElement(t.Provider,{value:n},e.children)}}}]);