"use strict";(self.webpackChunk_logto_docs=self.webpackChunk_logto_docs||[]).push([[3376],{24409:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>d,contentTitle:()=>o,default:()=>c,frontMatter:()=>a,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"use-cases/multi-tenancy/build-multi-tenant-saas-application","title":"build-multi-tenant-saas-application","description":"Erfahre, wie du effizient eine Multi-Tenant-SaaS-Anwendung mit robuster Authentifizierung, Organisationsverwaltung und rollenbasierter Zugangskontrolle entwickelst.","source":"@site/i18n/de/docusaurus-plugin-content-docs/current/use-cases/multi-tenancy/build-multi-tenant-saas-application.mdx","sourceDirName":"use-cases/multi-tenancy","slug":"/use-cases/multi-tenancy/build-multi-tenant-saas-application","permalink":"/de/use-cases/multi-tenancy/build-multi-tenant-saas-application","draft":false,"unlisted":false,"editUrl":"https://github.com/logto-io/docs/tree/master/i18n/de/docusaurus-plugin-content-docs/current/use-cases/multi-tenancy/build-multi-tenant-saas-application.mdx","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2,"sidebar_label":"Baue eine Multi-Tenant-SaaS-Anwendung","description":"Erfahre, wie du effizient eine Multi-Tenant-SaaS-Anwendung mit robuster Authentifizierung, Organisationsverwaltung und rollenbasierter Zugangskontrolle entwickelst."},"sidebar":"useCasesSidebar","previous":{"title":"Multi-Tenancy","permalink":"/de/use-cases/multi-tenancy/"},"next":{"title":"KI","permalink":"/de/use-cases/ai/"}}');var r=i(25105),s=i(79621);const a={sidebar_position:2,sidebar_label:"Baue eine Multi-Tenant-SaaS-Anwendung",description:"Erfahre, wie du effizient eine Multi-Tenant-SaaS-Anwendung mit robuster Authentifizierung, Organisationsverwaltung und rollenbasierter Zugangskontrolle entwickelst."},o="Baue eine Multi-Tenant-SaaS-Anwendung: Ein vollst\xe4ndiger Leitfaden von Design bis Implementierung",d={},l=[{value:"Welche Funktionen sind f\xfcr SaaS-Authentifizierung und Autorisierung erforderlich?",id:"what-features-are-required-for-saas-authentication-and-authorization",level:2},{value:"Multi-Tenant-Architektur",id:"multi-tenant-architecture",level:3},{value:"Mitgliedschaft",id:"membership",level:3},{value:"Rollen- und Berechtigungsdesign",id:"role-and-permission-design",level:3},{value:"Registrierungs- und Login-Flow",id:"sign-up-and-login-flow",level:3},{value:"Tenant-Erstellung und Einladung",id:"tenant-creation-and-invitation",level:3},{value:"Technische Architektur und Systemdesign",id:"technical-architecture-and-system-design",level:2},{value:"Authentifizierungsstrategie festlegen",id:"define-authentication-strategy",level:3},{value:"Multi-Tenant-Architektur etablieren",id:"establish-multi-tenant-architecture",level:3},{value:"Zugangskontrolle in der Multi-Tenant-App aktivieren",id:"enable-access-control-in-multi-tenant-app",level:3},{value:"Tech-Stack",id:"tech-stack",level:2},{value:"F\xfcge deiner App einen grundlegenden Authentifizierungs-Flow hinzu",id:"add-basic-authentication-flow-to-your-app",level:2},{value:"Logto in deiner App installieren",id:"install-logto-to-your-app",level:3},{value:"Anmelde- und Registrierungsarten anpassen",id:"customize-sign-in-and-sign-up-methods",level:3},{value:"Multi-Faktor-Authentifizierung aktivieren",id:"enable-multi-factor-authentication",level:3},{value:"Multi-Tenant-Organisationserlebnis hinzuf\xfcgen",id:"adding-multi-tenant-organization-experience",level:2},{value:"Organisationsinformationen eines Benutzers abrufen",id:"get-a-user-s-organization-information",level:3},{value:"Organisation im Logto Console erstellen",id:"create-organization-in-logto-console",level:3},{value:"Self-Service-Organisationserstellung implementieren",id:"implement-self-serve-organization-creation-experience",level:2},{value:"Auth-Interaktionsfluss f\xfcr Organisationen verstehen",id:"understand-organization-auth-interaction-flow",level:3},{value:"Dein Backend-API sch\xfctzen",id:"protect-your-backend-api",level:3},{value:"Logto Management API aufrufen",id:"calling-logto-management-api",level:3},{value:"Zugangskontrolle f\xfcr deine Multi-Tenant-App implementieren",id:"implement-access-control-to-your-multi-tenant-app",level:2},{value:"Verwendung des Logto Organisationstokens",id:"using-logto-organization-token",level:3},{value:"Organisationsebene rollenbasierte Zugangskontrolle implementieren",id:"implement-organization-level-role-based-access-control-design",level:3},{value:"Weitere Multi-Tenant-App-Funktionen hinzuf\xfcgen",id:"add-more-multi-tenant-app-features",level:2},{value:"Zusammenfassung",id:"summary",level:2}];function u(e){const n={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",img:"img",li:"li",mermaid:"mermaid",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.R)(),...e.components},{Head:i}=n;return i||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Head",!0),(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(i,{children:(0,r.jsx)("link",{rel:"canonical",href:"https://blog.logto.io/build-multi-tenant-saas-application"})}),"\n",(0,r.jsx)("style",{children:"\n  .twoColumn {\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    gap: 24px;\n  }\n  .twoColumn + .twoColumn {\n    margin-top: 24px;\n  }\n"}),"\n",(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"baue-eine-multi-tenant-saas-anwendung-ein-vollst\xe4ndiger-leitfaden-von-design-bis-implementierung",children:"Baue eine Multi-Tenant-SaaS-Anwendung: Ein vollst\xe4ndiger Leitfaden von Design bis Implementierung"})}),"\n",(0,r.jsx)(n.p,{children:"Wie werden Apps wie Notion, Slack oder Figma gebaut? Diese Multi-Tenant-SaaS-Anwendungen wirken einfach zu bedienen, aber selbst eine zu bauen? Das ist eine andere Geschichte."}),"\n",(0,r.jsx)(n.p,{children:"Als ich zum ersten Mal dar\xfcber nachdachte, so ein komplexes Biest zu bauen, explodierte mein Kopf:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Benutzer ben\xf6tigen mehrere Anmeldeoptionen (E-Mail, Google, GitHub)"}),"\n",(0,r.jsx)(n.li,{children:"Jeder Benutzer kann mehrere Organisationen erstellen und zu mehreren Organisationen geh\xf6ren"}),"\n",(0,r.jsx)(n.li,{children:"Unterschiedliche Berechtigungsstufen innerhalb jeder Organisation"}),"\n",(0,r.jsx)(n.li,{children:"Enterprise-Organisationen, die Auto-Join f\xfcr bestimmte E-Mail-Domains erfordern"}),"\n",(0,r.jsx)(n.li,{children:"MFA-Anforderungen f\xfcr sensible Operationen"}),"\n",(0,r.jsx)(n.li,{children:"Und mehr..."}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:'"Chef, lass uns in zwei Wochen \xfcber das Produktdesign sprechen. Ich stecke gerade fest."'}),"\n",(0,r.jsxs)(n.p,{children:["Aber als ich tats\xe4chlich damit anfing, ",(0,r.jsx)(n.strong,{children:"stellte ich fest, dass es gar nicht so entmutigend ist, wie es scheint."})]}),"\n",(0,r.jsxs)(n.p,{children:["Ich habe ",(0,r.jsx)(n.strong,{children:"ein System mit all diesen Funktionen mit \xfcberraschend wenig Aufwand gebaut!"})]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{src:"https://uploads.strapi.logto.io/documind_home_page_e72468b8c9.png",alt:"documind-home-page.png"})}),"\n",(0,r.jsxs)("div",{className:"twoColumn",children:[(0,r.jsx)("img",{alt:"Documind Dashboard",src:"https://uploads.strapi.logto.io/documind_dashboard_4bd2a540d2.png",width:"500"}),(0,r.jsx)("img",{alt:"Documind Organisationsseite",src:"https://uploads.strapi.logto.io/documind_org_page_8157e40cd8.png",width:"500"})]}),"\n",(0,r.jsx)(n.p,{children:"Ich zeige dir genau, wie du ein solches System von Grund auf entwirfst und implementierst \u2013 und du wirst erstaunt sein, wie einfach es im Jahr 2025 mit modernen Tools und dem richtigen Architekturansatz wirklich ist."}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsxs)(n.strong,{children:["Der vollst\xe4ndige Quellcode ist in diesem ",(0,r.jsx)(n.a,{href:"https://github.com/logto-io/multi-tenant-saas-sample",children:"Github-Repo"})," verf\xfcgbar. Los geht's!"]})}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Wir starten mit einem KI-Dokumentations-SaaS-Produkt namens DocuMind."}),"\n",(0,r.jsx)(n.p,{children:"DocuMind ist ein KI-Dokumentations-SaaS-Produkt, das mit einem Multi-Tenant-Modell entwickelt wurde, um Einzelpersonen, kleine Unternehmen und Konzerne zu unterst\xfctzen."}),"\n",(0,r.jsx)(n.p,{children:"Die Plattform bietet leistungsstarke KI-Funktionen f\xfcr das Dokumentenmanagement, darunter automatische Zusammenfassungen, Schl\xfcsselpunktextraktion und intelligente Inhaltsvorschl\xe4ge innerhalb von Organisationen."}),"\n",(0,r.jsx)(n.h2,{id:"what-features-are-required-for-saas-authentication-and-authorization",children:"Welche Funktionen sind f\xfcr SaaS-Authentifizierung und Autorisierung erforderlich?"}),"\n",(0,r.jsx)(n.p,{children:"Zuerst schauen wir uns die notwendigen Anforderungen an. Welche Funktionen brauchst du?"}),"\n",(0,r.jsx)(n.h3,{id:"multi-tenant-architecture",children:"Multi-Tenant-Architektur"}),"\n",(0,r.jsxs)(n.p,{children:["Um eine Multi-Tenant-Architektur zu erm\xf6glichen, ben\xf6tigst du eine Entit\xe4tsschicht namens ",(0,r.jsx)(n.strong,{children:"Organisation"}),". Stell dir einen einzigen Pool von Benutzern vor, die auf mehrere Arbeitsbereiche zugreifen k\xf6nnen. Jede Organisation repr\xe4sentiert einen Arbeitsbereich, und Benutzer behalten eine einzige Identit\xe4t, w\xe4hrend sie je nach zugewiesener Rolle auf verschiedene Arbeitsbereiche (Organisationen) zugreifen."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{src:"https://uploads.strapi.logto.io/multi_tenant_app_architecture_89ed9779f8.svg",alt:"multi-tenant-app-architecture.svg"})}),"\n",(0,r.jsx)(n.p,{children:"Dies ist eine weit verbreitete Funktion bei Authentifizierungsanbietern. Eine Organisation in einem Identit\xe4tsmanagementsystem entspricht dem Workspace, Projekt oder Tenant deiner SaaS-App."}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{src:"https://uploads.strapi.logto.io/organization_examples_dc60ad68bb.png",alt:"organization-examples.png"})}),"\n",(0,r.jsx)(n.h3,{id:"membership",children:"Mitgliedschaft"}),"\n",(0,r.jsx)(n.p,{children:"Ein Mitglied ist ein tempor\xe4res Konzept, das den Mitgliedsstatus einer Identit\xe4t innerhalb einer Organisation anzeigt."}),"\n",(0,r.jsxs)(n.p,{children:["Beispiel: Sarah registriert sich mit ihrer E-Mail ",(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.a,{href:"mailto:sarah@gmail.com",children:"sarah@gmail.com"})})," in deiner App. Sie kann zu verschiedenen Arbeitsbereichen geh\xf6ren. Wenn Sarah Teil von ",(0,r.jsx)(n.strong,{children:"Workspace A"})," ist, aber nicht von ",(0,r.jsx)(n.strong,{children:"Workspace B"}),", gilt sie als Mitglied von ",(0,r.jsx)(n.strong,{children:"Workspace A"}),", aber nicht von ",(0,r.jsx)(n.strong,{children:"Workspace B"}),"."]}),"\n",(0,r.jsx)(n.h3,{id:"role-and-permission-design",children:"Rollen- und Berechtigungsdesign"}),"\n",(0,r.jsxs)(n.p,{children:["In einer Multi-Tenant-Architektur ben\xf6tigen Benutzer ",(0,r.jsx)(n.strong,{children:"Rollen"})," mit bestimmten ",(0,r.jsx)(n.strong,{children:"Berechtigungen"}),", um auf ihre Tenant-Ressourcen zuzugreifen.\nBerechtigungen sind detaillierte Zugangskontrollen, die bestimmte Aktionen definieren, wie ",(0,r.jsx)(n.code,{children:"read: order"})," oder ",(0,r.jsx)(n.code,{children:"write: order"}),". Sie bestimmen, welche Aktionen auf bestimmten Ressourcen ausgef\xfchrt werden d\xfcrfen."]}),"\n",(0,r.jsx)(n.p,{children:"Rollen sind eine Sammlung von Berechtigungen, die Mitgliedern in einer Multi-Tenant-Umgebung zugewiesen werden."}),"\n",(0,r.jsx)(n.p,{children:"Du musst diese Rollen und Berechtigungen definieren, dann Rollen Benutzern zuweisen, manchmal auch automatisiert. Zum Beispiel:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["Benutzer, die einer Organisation beitreten, erhalten automatisch die ",(0,r.jsx)(n.strong,{children:"Mitglied"}),"-Rolle."]}),"\n",(0,r.jsxs)(n.li,{children:["Der erste Benutzer, der einen Arbeitsbereich erstellt, erh\xe4lt automatisch die ",(0,r.jsx)(n.strong,{children:"Admin"}),"-Rolle."]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"sign-up-and-login-flow",children:"Registrierungs- und Login-Flow"}),"\n",(0,r.jsx)(n.p,{children:"Stelle einen benutzerfreundlichen und sicheren Registrierungs- und Authentifizierungsprozess sicher, einschlie\xdflich grundlegender Anmelde- und Registrierungsoptionen:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"E-Mail- und Passwort-Anmeldung"}),": Traditionelle Anmeldemethode mit E-Mail und Passwort."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Passwortlose Anmeldung"}),": Verwende E-Mail-Best\xe4tigungscodes f\xfcr einfachen und sicheren Zugang."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Kontoverwaltung"}),": Ein Account Center, in dem Benutzer ihre E-Mail, ihr Passwort und weitere Details aktualisieren k\xf6nnen."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Soziale Anmeldung"}),": Optionen wie Google und GitHub f\xfcr schnelles Login."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Multi-Faktor-Authentifizierung (MFA)"}),": Erh\xf6he die Sicherheit, indem du die Anmeldung \xfcber Authenticator-Apps wie Duo erm\xf6glichst."]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"tenant-creation-and-invitation",children:"Tenant-Erstellung und Einladung"}),"\n",(0,r.jsx)(n.p,{children:"In einer Multi-Tenant-SaaS-App ist ein wichtiger Unterschied im Benutzerfluss die Unterst\xfctzung der Tenant-Erstellung und der Einladung von Mitgliedern. Dieser Prozess erfordert sorgf\xe4ltige Planung und Umsetzung, da er eine Schl\xfcsselrolle bei der Produktaktivierung und beim Wachstum spielt."}),"\n",(0,r.jsx)(n.p,{children:"Hier sind einige typische Nutzungsfl\xfcsse, die du ber\xfccksichtigen solltest:"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Benutzertyp"}),(0,r.jsx)(n.th,{children:"Einstiegspunkt"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Neues Konto"}),(0,r.jsx)(n.td,{children:"Einstieg \xfcber Anmelde- und Registrierungsseite zur Erstellung eines neuen Tenants"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Bestehendes Konto"}),(0,r.jsx)(n.td,{children:"Erstelle einen weiteren Tenant innerhalb des Produkts"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Bestehendes Konto erh\xe4lt eine neue Tenant-Einladung"}),(0,r.jsx)(n.td,{children:"Einstieg \xfcber Anmelde- und Registrierungsseite"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Bestehendes Konto erh\xe4lt eine neue Tenant-Einladung"}),(0,r.jsx)(n.td,{children:"Einstieg \xfcber die Einladungsemail"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Neues Konto erh\xe4lt eine neue Tenant-Einladung"}),(0,r.jsx)(n.td,{children:"Einstieg \xfcber Anmelde- und Registrierungsseite"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Neues Konto erh\xe4lt eine neue Tenant-Einladung"}),(0,r.jsx)(n.td,{children:"Einstieg \xfcber die Einladungsemail"})]})]})]}),"\n",(0,r.jsx)(n.p,{children:"Dies sind g\xe4ngige Szenarien, die in fast jeder SaaS-App zu finden sind. Nutze sie als Referenz, um dein Produkt- und Designteam zu inspirieren, und erstelle bei Bedarf eigene Flows."}),"\n",(0,r.jsxs)("div",{className:"twoColumn",children:[(0,r.jsx)("img",{alt:"Ein neues Konto erstellt einen Tenant",src:"https://uploads.strapi.logto.io/a_new_account_creates_a_tenant_516d2e1132.png",width:"500"}),(0,r.jsx)("img",{alt:"Ein bestehender Benutzer erstellt einen weiteren Tenant",src:"https://uploads.strapi.logto.io/an_existing_user_creates_another_tenant_7f1340cee0.png",width:"500"})]}),"\n",(0,r.jsxs)("div",{className:"twoColumn",children:[(0,r.jsx)("img",{alt:"Ein bestehender Benutzer meldet sich an",src:"https://uploads.strapi.logto.io/an_existing_user_sign_in_3c5f87b929.png",width:"500"}),(0,r.jsx)("img",{alt:"Ein bestehender Benutzer tritt per E-Mail bei",src:"https://uploads.strapi.logto.io/an_existing_user_join_through_email_7aa94ea6f2.png",width:"500"})]}),"\n",(0,r.jsxs)("div",{className:"twoColumn",children:[(0,r.jsx)("img",{alt:"Ein neuer Benutzer meldet sich an",src:"https://uploads.strapi.logto.io/a_new_user_sign_in_e91499991c.png",width:"500"}),(0,r.jsx)("img",{alt:"Ein neuer Benutzer tritt per E-Mail bei",src:"https://uploads.strapi.logto.io/an_new_user_join_through_email_e16ef2cf79.png",width:"500"})]}),"\n",(0,r.jsx)(n.h2,{id:"technical-architecture-and-system-design",children:"Technische Architektur und Systemdesign"}),"\n",(0,r.jsx)(n.p,{children:"Sobald wir alle Produktanforderungen verstanden haben, gehen wir zur Umsetzung \xfcber."}),"\n",(0,r.jsx)(n.h3,{id:"define-authentication-strategy",children:"Authentifizierungsstrategie festlegen"}),"\n",(0,r.jsx)(n.p,{children:"Authentifizierung wirkt abschreckend. Benutzer ben\xf6tigen:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"E-Mail & Passwort Registrierung / Login"}),"\n",(0,r.jsx)(n.li,{children:"Ein-Klick-Anmeldung mit Google / Github"}),"\n",(0,r.jsx)(n.li,{children:"Passwort zur\xfccksetzen, wenn sie es vergessen"}),"\n",(0,r.jsx)(n.li,{children:"Teamweite Anmeldung f\xfcr Unternehmenskunden"}),"\n",(0,r.jsx)(n.li,{children:"..."}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Allein diese Grundfunktionen zu implementieren, k\xf6nnte Wochen dauern."}),"\n",(0,r.jsxs)(n.p,{children:["Aber jetzt ",(0,r.jsx)(n.strong,{children:"m\xfcssen wir das alles NICHT mehr selbst bauen!"})]}),"\n",(0,r.jsxs)(n.p,{children:["Moderne Auth-Anbieter (ich w\xe4hle diesmal ",(0,r.jsx)(n.a,{href:"https://logto.io/",children:"Logto"}),") haben all diese Funktionen f\xfcr uns geb\xfcndelt. Der Authentifizierungs-Flow ist unkompliziert:"]}),"\n",(0,r.jsx)(n.mermaid,{value:'sequenceDiagram\n  actor u as Benutzer\n  participant a as App\n  participant auth as AuthProvider\n\n  u->>a: Klick auf "Anmelden"\n  a->>auth: Weiterleitung zur Auth-Seite\n  auth->>u: Zeigt Anmeldeseite\n  u->>auth: Gibt Zugangsdaten ein\n  auth->>a: Weiterleitung mit Token\n  a->>u: Anmeldung erfolgreich'}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Von Wochen Entwicklungszeit zu 15 Minuten Einrichtung"})," \u2013 Logto \xfcbernimmt alle komplexen Abl\xe4ufe f\xfcr uns! Die Integrationsschritte behandeln wir sp\xe4ter im Implementierungsteil. Jetzt k\xf6nnen wir uns auf die Kernfunktionen von DocuMind konzentrieren!"]}),"\n",(0,r.jsx)(n.h3,{id:"establish-multi-tenant-architecture",children:"Multi-Tenant-Architektur etablieren"}),"\n",(0,r.jsx)(n.p,{children:"Das Organisationssystem erm\xf6glicht es Benutzern, mehrere Organisationen zu erstellen und ihnen beizutreten. Schauen wir uns die Kernbeziehungen an:"}),"\n",(0,r.jsx)(n.mermaid,{value:'erDiagram\n    User ||--o{ OrganizationMember : "geh\xf6rt zu"\n    Organization ||--o{ OrganizationMember : "hat"\n\n    User {\n        uuid id\n        string email\n        string name\n    }\n    Organization {\n        uuid id\n        string name\n        string description\n    }\n    OrganizationMember {\n        uuid userId\n        uuid organizationId\n    }'}),"\n",(0,r.jsx)(n.p,{children:"In diesem System kann jeder Benutzer mehreren Organisationen angeh\xf6ren, und jede Organisation kann mehrere Mitglieder haben."}),"\n",(0,r.jsx)(n.mermaid,{value:"graph TD\n    App[Anwendung]\n    O1[Organisation 1]\n    O2[Organisation 2]\n    M1[Mitglied]\n    M2[Mitglied]\n    M3[Mitglied]\n\n    App --\x3e O1\n    App --\x3e O2\n    O1 --\x3e M1\n    O1 --\x3e M2\n    O2 --\x3e M2\n    O2 --\x3e M3\n\n    style O1 fill:#e6ffe6\n    style O2 fill:#e6ffe6"}),"\n",(0,r.jsx)(n.h3,{id:"enable-access-control-in-multi-tenant-app",children:"Zugangskontrolle in der Multi-Tenant-App aktivieren"}),"\n",(0,r.jsx)(n.p,{children:"Rollenbasierte Zugangskontrolle (RBAC) ist wichtig, um Sicherheit und Skalierbarkeit in Multi-Tenant-SaaS-Anwendungen zu gew\xe4hrleisten."}),"\n",(0,r.jsx)(n.p,{children:"In einer Multi-Tenant-App ist das Design von Berechtigungen und Rollen meist konsistent, da es aus dem Produktdesign hervorgeht. Beispielsweise gibt es in mehreren Arbeitsbereichen typischerweise eine Admin-Rolle und eine Mitgliederrolle. Logto als Auth-Anbieter hat folgendes organisationsbasiertes rollenbasiertes Zugangskontroll-Design:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Einheitliche Berechtigungsdefinitionen"}),": Berechtigungen werden auf Systemebene definiert und gelten konsistent f\xfcr alle Organisationen, was eine wartbare und konsistente Berechtigungsverwaltung gew\xe4hrleistet."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Organisationstemplates"}),": Vorgefertigte Rollen- und Berechtigungskombinationen durch Organisationstemplates, die die Initialisierung von Organisationen vereinfachen."]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Die Berechtigungsbeziehung sieht so aus:"}),"\n",(0,r.jsx)(n.mermaid,{value:"graph TD\n    subgraph organization_template[Organisationstemplate]\n        subgraph role_2[Rolle2]\n            permission_c[Berechtigung C]\n            permission_d[Berechtigung D]\n        end\n\n        subgraph role_1[Rolle1]\n            permission_a[Berechtigung A]\n            permission_b[Berechtigung B]\n        end\n    end\n\n    style organization_template fill:#e6ffe6\n    style role_1 fill:#ffe6e6\n    style role_2 fill:#ffe6e6"}),"\n",(0,r.jsx)(n.p,{children:"Da jeder Benutzer innerhalb jeder Organisation eigene Rolle(n) ben\xf6tigt, muss die Beziehung zwischen Rollen und Organisationen die zugewiesenen Rollen jedes Benutzers widerspiegeln:"}),"\n",(0,r.jsx)(n.mermaid,{value:"erDiagram\n    OrganizationMember {\n        uuid userId\n        uuid organizationId\n        uuid[] roleIds\n        datetime joinedAt\n    }\n"}),"\n",(0,r.jsx)(n.p,{children:"Wir haben das Organisationssystem und das Zugangskontrollsystem entworfen, jetzt k\xf6nnen wir mit dem Bau unseres Produkts beginnen!"}),"\n",(0,r.jsx)(n.h2,{id:"tech-stack",children:"Tech-Stack"}),"\n",(0,r.jsx)(n.p,{children:"Ich habe einen einsteigerfreundlichen, portablen Stack gew\xe4hlt:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Frontend"}),": React (leicht auf Vue / Angular / Svelte \xfcbertragbar)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Backend"}),": Express (einfaches, intuitives API)"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Warum Frontend und Backend trennen? Weil es eine klare Architektur bietet, leicht zu erlernen und einfach den Stack zu wechseln ist. Und als Auth-Anbieter verwende ich Logto als Beispiel."}),"\n",(0,r.jsxs)(n.p,{children:["Und f\xfcr die folgenden Anleitungen gilt: ",(0,r.jsx)(n.strong,{children:"Das Muster funktioniert mit jedem Frontend, jedem Backend und jedem Auth-System."})]}),"\n",(0,r.jsx)(n.h2,{id:"add-basic-authentication-flow-to-your-app",children:"F\xfcge deiner App einen grundlegenden Authentifizierungs-Flow hinzu"}),"\n",(0,r.jsx)(n.p,{children:"Das ist der einfachste Schritt. Wir m\xfcssen Logto nur in unser Projekt integrieren. Dann k\xf6nnen wir im Logto Console die Methoden f\xfcr Benutzerlogin / Registrierung nach unseren Bed\xfcrfnissen konfigurieren."}),"\n",(0,r.jsx)(n.h3,{id:"install-logto-to-your-app",children:"Logto in deiner App installieren"}),"\n",(0,r.jsxs)(n.p,{children:["Melde dich zuerst bei ",(0,r.jsx)(n.a,{href:"https://cloud.logto.io/",children:"Logto Cloud"})," an. Du kannst ein kostenloses Konto erstellen, falls du noch keines hast. Erstelle einen Entwicklungstenant zum Testen."]}),"\n",(0,r.jsx)(n.p,{children:'Im Tenant Console klicke auf die Schaltfl\xe4che "Application" auf der linken Seite. W\xe4hle dann React, um mit dem Aufbau unserer Anwendung zu beginnen.'}),"\n",(0,r.jsx)(n.p,{children:"Folge der Anleitung auf der Seite. Die Logto-Integration ist in etwa 5 Minuten erledigt!"}),"\n",(0,r.jsx)(n.p,{children:"Hier ist mein Integrationscode:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",children:'const config: LogtoConfig = {\n  endpoint: "<YOUR_LOGTO_ENDPOINT>",\n  appId: "<YOUR_LOGTO_APP_ID>",\n};\n\nfunction App() {\n  return (\n    <LogtoProvider config={config}>\n      <div className="min-h-screen bg-gradient-to-b from-gray-50 to-gray-100">\n        <Routes>\n          {/* Dieser Callback verarbeitet die Benutzer-Login-Weiterleitung von Logto */}\n          <Route path="/callback" element={<Callback />} />\n          <Route path="/*" element={<AppContent />} />\n        </Routes>\n      </div>\n    </LogtoProvider>\n  );\n}\n\nfunction AppContent() {\n  const { isAuthenticated } = useLogto();\n\n  if (!isAuthenticated) {\n    // Zeige Landingpage f\xfcr nicht authentifizierte Benutzer\n    return <Landing />;\n  }\n\n  // Zeige Haupt-App f\xfcr authentifizierte Benutzer\n  return (\n    <Routes>\n      {/* Dashboard zeigt alle verf\xfcgbaren Organisationen */}\n      <Route path="/" element={<Dashboard />} />\n\n      {/* Organisationsseite nach Klick auf eine Organisation im Dashboard */}\n      <Route path="/:orgId" element={<Organization />} />\n    </Routes>\n  );\n}\n'})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{src:"https://uploads.strapi.logto.io/documind_home_page_e72468b8c9.png",alt:"documind-home-page.png"})}),"\n",(0,r.jsxs)(n.p,{children:["Ein n\xfctzlicher Trick: Unsere Login-Seite hat sowohl Anmelden- als auch Registrieren-Buttons. Der Registrieren-Button f\xfchrt direkt zur Registrierungsseite von Logto. Das funktioniert \xfcber Logtos ",(0,r.jsx)(n.a,{href:"/end-user-flows/authentication-parameters/first-screen",children:"First Screen"}),"-Funktion. Sie bestimmt, welchen Schritt des Auth-Flows Benutzer zuerst sehen."]}),"\n",(0,r.jsx)(n.p,{children:"Du kannst die Registrierungsseite als Standard festlegen, wenn dein Produkt viele neue Benutzer erwartet."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",children:'function LandingPage() {\n  const { signIn } = useLogto();\n\n  return (\n    <div className="landing-container">\n      <div className="auth-buttons">\n        <button\n          className="sign-in-button"\n          onClick={() => {\n            signIn({\n              redirectUri: \'<YOUR_APP_CALLBACK_URL>\',\n            });\n          }}\n        >\n          Anmelden\n        </button>\n\n        <button\n          className="register-button"\n          onClick={() => {\n            signIn({\n              redirectUri: \'<YOUR_APP_CALLBACK_URL>\',\n              firstScreen: \'register\',\n            });\n          }}\n        >\n          Registrieren\n        </button>\n      </div>\n    </div>\n  );\n}\n'})}),"\n",(0,r.jsx)(n.p,{children:"Nach dem Klick auf Anmelden gelangst du zur Logto-Login-Seite. Nach erfolgreichem Login (oder Registrierung) \u2013 Gl\xfcckwunsch! Deine App hat ihren ersten Benutzer (dich)!"}),"\n",(0,r.jsxs)(n.p,{children:["Und rufe die Funktion ",(0,r.jsx)(n.code,{children:"signOut"})," aus dem ",(0,r.jsx)(n.code,{children:"useLogto"}),"-Hook auf, um den Benutzer abzumelden, wann immer du m\xf6chtest."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",children:"function SignOutButton() {\n  const { signOut } = useLogto();\n\n  return <button onClick={() => signOut('<YOUR_POST_LOGOUT_REDIRECT_URL>')}>Abmelden</button>;\n}\n"})}),"\n",(0,r.jsx)(n.h3,{id:"customize-sign-in-and-sign-up-methods",children:"Anmelde- und Registrierungsarten anpassen"}),"\n",(0,r.jsx)(n.p,{children:'Im Logto Console klicke im linken Men\xfc auf "Sign-in Experience". Dann auf den Tab "Sign-up and sign-in".\nAuf dieser Seite folge den Anweisungen, um Logtos Login- / Registrierungsarten zu konfigurieren.'}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{src:"https://uploads.strapi.logto.io/sign_in_experience_settings_68690b84f4.png",alt:"sign-in-experience-settings.png"})}),"\n",(0,r.jsx)(n.p,{children:"Und der Anmelde-Flow sieht dann so aus:"}),"\n",(0,r.jsx)("img",{alt:"Logto Anmeldeseite",src:"https://uploads.strapi.logto.io/sign_in_page_88ea6b5292.png",width:"500"}),"\n",(0,r.jsx)(n.h3,{id:"enable-multi-factor-authentication",children:"Multi-Faktor-Authentifizierung aktivieren"}),"\n",(0,r.jsx)(n.p,{children:'Mit Logto ist das Aktivieren von MFA einfach. Klicke einfach auf die Schaltfl\xe4che "Multi-factor auth" im Logto Console. Aktiviere es dann auf der Multi-Faktor-Authentifizierungsseite.'}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{src:"https://uploads.strapi.logto.io/mfa_settings_d74c5492d7.png",alt:"mfa-settings.png"})}),"\n",(0,r.jsx)(n.p,{children:"Und der MFA-Flow sieht dann so aus:"}),"\n",(0,r.jsxs)("div",{className:"twoColumn",children:[(0,r.jsx)("img",{alt:"MFA-Verifizierungsschritt",src:"https://uploads.strapi.logto.io/verification_step_852fffe7da.png",width:"500"}),(0,r.jsx)("img",{alt:"QR-Code in Authenticator-App scannen",src:"https://uploads.strapi.logto.io/scan_auth_app_qr_code_68c2e26277.png",width:"500"})]}),"\n",(0,r.jsx)(n.p,{children:"Alles ist so einfach! Wir haben in wenigen Minuten ein komplexes Benutzer-Authentifizierungssystem eingerichtet!"}),"\n",(0,r.jsx)(n.h2,{id:"adding-multi-tenant-organization-experience",children:"Multi-Tenant-Organisationserlebnis hinzuf\xfcgen"}),"\n",(0,r.jsx)(n.p,{children:"Jetzt haben wir unseren ersten Benutzer! Allerdings geh\xf6rt dieser Benutzer noch keiner Organisation an, und wir haben noch keine Organisationen erstellt."}),"\n",(0,r.jsx)(n.p,{children:"Logto bietet integrierte Unterst\xfctzung f\xfcr Multi-Tenancy. Du kannst beliebig viele Organisationen in Logto erstellen. Jede Organisation kann mehrere Mitglieder haben."}),"\n",(0,r.jsx)(n.mermaid,{value:"graph TD\n    T[Logto Tenant] --\x3e OrgA[Organisation A]\n    T --\x3e OrgB[Organisation B]\n    OrgA --\x3e MA1[Mitglied]\n    OrgA --\x3e MA2[Mitglied]\n    OrgB --\x3e MB1[Mitglied]\n    OrgB --\x3e MB2[Mitglied]\n\n    style OrgA fill:#e6ffe6\n    style OrgB fill:#e6ffe6\n"}),"\n",(0,r.jsx)(n.p,{children:"Jeder Benutzer kann seine Organisationsinformationen von Logto abrufen. Das erm\xf6glicht Multi-Tenancy-Unterst\xfctzung."}),"\n",(0,r.jsx)(n.h3,{id:"get-a-user-s-organization-information",children:"Organisationsinformationen eines Benutzers abrufen"}),"\n",(0,r.jsx)(n.p,{children:"Um die Organisationsinformationen eines Benutzers von Logto zu erhalten, befolge diese zwei Schritte:"}),"\n",(0,r.jsxs)(n.p,{children:["Deklariere den Zugriff auf Organisationsinformationen im Logto Config. Das geschieht durch Setzen der entsprechenden ",(0,r.jsx)(n.code,{children:"scopes"})," und ",(0,r.jsx)(n.code,{children:"resources"}),"."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",children:'import { UserScope, ReservedResource } from "@logto/react";\nconst config: LogtoConfig = {\n  endpoint: "<YOUR_LOGTO_ENDPOINT>",\n  appId: "<YOUR_LOGTO_APP_ID>",\n  scopes: [UserScope.Organizations], // Wert: "urn:logto:scope:organizations"\n  resources: [ReservedResource.Organization], // Wert: "urn:logto:resource:organizations"\n};\n\n'})}),"\n",(0,r.jsxs)(n.p,{children:["Nutze Logtos ",(0,r.jsx)(n.code,{children:"fetchUserInfo"}),"-Methode, um Benutzerinformationen einschlie\xdflich Organisationsdaten zu erhalten."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",children:"function Dashboard() {\n  // Benutzerinfo abrufen\n  const { fetchUserInfo } = useLogto();\n  const [organizations, setOrganizations] = useState<OrganizationData[]>([]);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    const loadOrganizations = async () => {\n      try {\n        setLoading(true);\n        // Benutzerinfo abrufen\n        const userInfo = await fetchUserInfo();\n        // Organisationsinfo des Benutzers abrufen\n        const organizationData = userInfo?.organization_data || [];\n        setOrganizations(organizationData);\n      } catch (error) {\n        console.error('Fehler beim Abrufen der Organisationen:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    loadOrganizations();\n  }, [fetchUserInfo]);\n\n  if (loading) {\n    return <div>L\xe4dt...</div>;\n  }\n\n  if (organizations.length === 0) {\n    return <div>Du bist noch kein Mitglied einer Organisation</div>;\n  }\n\n  return <div>Organisationen: {organizations.map(org => org.name).join(', ')}</div>;\n}\n\n"})}),"\n",(0,r.jsx)(n.p,{children:"Nach Abschluss dieser Schritte musst du dich ab- und wieder anmelden. Das ist notwendig, weil wir den angeforderten Scope und die Resource ge\xe4ndert haben."}),"\n",(0,r.jsx)(n.p,{children:'Im Moment hast du noch keine Organisationen erstellt. Der Benutzer ist auch noch keiner Organisation beigetreten. Das Dashboard zeigt "Du hast noch keine Organisation".'}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{src:"https://uploads.strapi.logto.io/dashboard_no_orgs_94678fe16f.png",alt:"dashboard-no-orgs.png"})}),"\n",(0,r.jsx)(n.p,{children:"Als N\xe4chstes erstellen wir eine Organisation f\xfcr unsere Benutzer und f\xfcgen sie hinzu."}),"\n",(0,r.jsx)(n.p,{children:"Dank Logto m\xfcssen wir keine komplexen Organisationsbeziehungen bauen. Wir m\xfcssen nur eine Organisation in Logto erstellen und Benutzer hinzuf\xfcgen. Logto \xfcbernimmt die gesamte Komplexit\xe4t f\xfcr uns. Es gibt zwei M\xf6glichkeiten, Organisationen zu erstellen:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"Organisationen manuell \xfcber das Logto Console erstellen"}),"\n",(0,r.jsx)(n.li,{children:"Die Logto Management API verwenden, um Organisationen zu erstellen, insbesondere wenn du einen SaaS-Flow entwirfst, bei dem Benutzer ihre eigenen Organisationen (Workspaces) erstellen k\xf6nnen."}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"create-organization-in-logto-console",children:"Organisation im Logto Console erstellen"}),"\n",(0,r.jsx)(n.p,{children:'Klicke im Logto Console auf die Schaltfl\xe4che "Organizations" im linken Men\xfc. Erstelle eine Organisation.'}),"\n",(0,r.jsx)(n.p,{children:"Jetzt hast du deine erste Organisation."}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{src:"https://uploads.strapi.logto.io/console_organizations_7312c72766.png",alt:"console-organizations.png"})}),"\n",(0,r.jsx)(n.p,{children:"Als N\xe4chstes f\xfcgen wir den Benutzer zu dieser Organisation hinzu."}),"\n",(0,r.jsx)(n.p,{children:'Gehe zur Organisationsdetailseite. Wechsle zum Tab Mitglieder. Klicke auf die Schaltfl\xe4che "+ Mitglied hinzuf\xfcgen". W\xe4hle deinen Login-Benutzer aus der linken Liste. Klicke auf die Schaltfl\xe4che "Mitglieder hinzuf\xfcgen" unten rechts. Jetzt hast du den Benutzer erfolgreich zur Organisation hinzugef\xfcgt.'}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{src:"https://uploads.strapi.logto.io/console_add_member_to_orgs_ad21beb58f.png",alt:"console-add-member-to-orgs.png"})}),"\n",(0,r.jsx)(n.p,{children:"Aktualisiere deine APP-Seite. Du siehst, dass der Benutzer jetzt zu einer Organisation geh\xf6rt!"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{src:"https://uploads.strapi.logto.io/dashboard_has_orgs_568a44cc1f.png",alt:"dashboard-has-orgs.png"})}),"\n",(0,r.jsx)(n.h2,{id:"implement-self-serve-organization-creation-experience",children:"Self-Service-Organisationserstellung implementieren"}),"\n",(0,r.jsx)(n.p,{children:"Eine Organisation im Console zu erstellen reicht nicht aus. Deine SaaS-App ben\xf6tigt einen Flow, der Endbenutzern das einfache Erstellen und Verwalten eigener Workspaces erm\xf6glicht. Um diese Funktion zu implementieren, verwende die Logto Management API."}),"\n",(0,r.jsxs)(n.p,{children:["F\xfcr Anleitungen siehe die Dokumentation ",(0,r.jsx)(n.a,{href:"/integrate-logto/interact-with-management-api",children:"Mit Management API interagieren"}),", um die API-Kommunikation mit Logto einzurichten."]}),"\n",(0,r.jsx)(n.h3,{id:"understand-organization-auth-interaction-flow",children:"Auth-Interaktionsfluss f\xfcr Organisationen verstehen"}),"\n",(0,r.jsx)(n.p,{children:"Nehmen wir den Organisations-Erstellungs-Flow als Beispiel. So funktioniert der Prozess:"}),"\n",(0,r.jsx)(n.mermaid,{value:"sequenceDiagram\n  actor A as Benutzer\n  participant B as Frontend\n  participant C as Backend\n  participant D as Logto\n\n  A->>B: Anfrage zur Organisationserstellung\n  B->>C: POST /organizations\n  C->>D: POST /api/organizations\n  D--\x3e>C: Organisation erstellt\n  C->>D: POST /api/organizations/{id}/users\n  D--\x3e>C: Benutzer zur Organisation hinzugef\xfcgt\n  C--\x3e>B: Erfolgsantwort\n  B--\x3e>A: Erfolgsmeldung anzeigen"}),"\n",(0,r.jsx)(n.p,{children:"Dieser Flow hat zwei wichtige Authentifizierungsanforderungen:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Backend-Service-API sch\xfctzen"}),":","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Frontend-Zugriff auf unsere Backend-Service-API erfordert Authentifizierung"}),"\n",(0,r.jsx)(n.li,{children:"API-Endpunkte werden durch Validierung des Logto Zugangstokens des Benutzers gesch\xfctzt"}),"\n",(0,r.jsx)(n.li,{children:"Stellt sicher, dass nur authentifizierte Benutzer auf unsere Dienste zugreifen k\xf6nnen"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Zugriff auf Logto Management API"}),":","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Backend-Service muss sicher die Logto Management API aufrufen k\xf6nnen"}),"\n",(0,r.jsxs)(n.li,{children:["Folge dem Leitfaden ",(0,r.jsx)(n.a,{href:"/integrate-logto/interact-with-management-api",children:"Mit Management API interagieren"})," f\xfcr die Einrichtung"]}),"\n",(0,r.jsx)(n.li,{children:"Verwende Maschine-zu-Maschine-Authentifizierung, um Zugangsdaten zu erhalten"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"protect-your-backend-api",children:"Dein Backend-API sch\xfctzen"}),"\n",(0,r.jsx)(n.p,{children:"Erstelle zun\xe4chst einen API-Endpunkt in unserem Backend-Service zur Organisationserstellung."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",children:"app.post('/organizations', async (req, res) => {\n  // Implementierung mit Logto Management API\n  // ...\n});\n"})}),"\n",(0,r.jsx)(n.p,{children:"Unsere Backend-Service-API erlaubt nur authentifizierten Benutzern den Zugriff. Wir m\xfcssen Logto verwenden, um unsere API zu sch\xfctzen. Au\xdferdem ben\xf6tigen wir die aktuellen Benutzerinformationen (wie Benutzer-ID)."}),"\n",(0,r.jsx)(n.p,{children:"Im Logto-Konzept (und OAuth 2.0) agiert unser Backend-Service als Ressourcensserver. Benutzer greifen mit einem Zugangstoken vom Frontend auf den DocuMind-Ressourcenserver zu. Der Ressourcenserver \xfcberpr\xfcft dieses Token. Ist es g\xfcltig, gibt er die angeforderten Ressourcen zur\xfcck."}),"\n",(0,r.jsx)(n.p,{children:"Erstelle eine API-Ressource, um unseren Backend-Service darzustellen."}),"\n",(0,r.jsx)(n.p,{children:"Gehe zum Logto Console."}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:'Klicke auf die Schaltfl\xe4che "API resources" rechts.'}),"\n",(0,r.jsx)(n.li,{children:'Klicke auf "Create API resource". W\xe4hle Express im Popup.'}),"\n",(0,r.jsxs)(n.li,{children:['Gib als API-Name "DocuMind API" ein. Verwende "',(0,r.jsx)(n.a,{href:"https://api.documind.com/",children:"https://api.documind.com"}),'" als API-Identifier.']}),"\n",(0,r.jsx)(n.li,{children:"Klicke auf Erstellen."}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Keine Sorge wegen dieser API-Identifier-URL. Sie ist nur ein eindeutiger Bezeichner f\xfcr deine API in Logto. Sie ist nicht mit deiner tats\xe4chlichen Backend-Service-URL verbunden."}),"\n",(0,r.jsx)(n.p,{children:"Du siehst ein Tutorial zur Verwendung der API-Ressource. Du kannst diesem Tutorial oder unseren Schritten unten folgen."}),"\n",(0,r.jsx)(n.p,{children:"Erstelle ein requireAuth-Middleware, um unseren POST /organizations-Endpunkt zu sch\xfctzen."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",children:"const { createRemoteJWKSet, jwtVerify } = require('jose');\n\nconst getTokenFromHeader = (headers) => {\n  const { authorization } = headers;\n  const bearerTokenIdentifier = 'Bearer';\n\n  if (!authorization) {\n    throw new Error('Authorization header fehlt');\n  }\n\n  if (!authorization.startsWith(bearerTokenIdentifier)) {\n    throw new Error('Authorization-Token-Typ wird nicht unterst\xfctzt');\n  }\n\n  return authorization.slice(bearerTokenIdentifier.length + 1);\n};\n\nconst requireAuth = (resource) => {\n  if (!resource) {\n    throw new Error('Resource-Parameter ist f\xfcr die Authentifizierung erforderlich');\n  }\n\n  return async (req, res, next) => {\n    try {\n      // Token extrahieren\n      const token = getTokenFromHeader(req.headers);\n\n      const { payload } = await jwtVerify(\n        token,\n        createRemoteJWKSet(new URL(process.env.LOGTO_JWKS_URL)),\n        {\n          issuer: process.env.LOGTO_ISSUER,\n          audience: resource,\n        }\n      );\n\n      // Benutzerinfo zur Anfrage hinzuf\xfcgen\n      req.user = {\n        id: payload.sub,\n      };\n\n      next();\n    } catch (error) {\n      console.error('Auth-Fehler:', error);\n      res.status(401).json({ error: 'Nicht autorisiert' });\n    }\n  };\n};\n\nmodule.exports = {\n  requireAuth,\n};\n"})}),"\n",(0,r.jsx)(n.p,{children:"Um dieses Middleware zu verwenden, ben\xf6tigen wir diese Umgebungsvariablen:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"LOGTO_JWKS_URL"}),"\n",(0,r.jsx)(n.li,{children:"LOGTO_ISSUER"}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["Hole diese Variablen aus dem OpenID-Konfigurationsendpunkt deines Logto-Tenants. Besuche ",(0,r.jsx)(n.code,{children:"https://<your-tenant-id>.logto.app/oidc/.well-known/openid-configuration"}),". Die ben\xf6tigten Informationen findest du im zur\xfcckgegebenen JSON:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "jwks_uri": "<https://tenant-id.logto.app/oidc/jwks>",\n  "issuer": "<https://tenant-id.logto.app/oidc>"\n}\n'})}),"\n",(0,r.jsx)(n.p,{children:"Jetzt verwende das requireAuth-Middleware in unserem POST /organizations-Endpunkt."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",children:"app.post('/organizations', requireAuth('<https://api.documind.com>'), async (req, res) => {\n  // Logik zur Organisationserstellung\n  // ...\n});\n"})}),"\n",(0,r.jsx)(n.p,{children:"Damit ist unser POST /organizations-Endpunkt gesch\xfctzt. Nur Benutzer mit g\xfcltigen Logto Zugangstokens k\xf6nnen darauf zugreifen."}),"\n",(0,r.jsx)(n.p,{children:"Wir k\xf6nnen das Token jetzt im Frontend von Logto erhalten. Benutzer k\xf6nnen mit diesem Token Organisationen \xfcber unseren Backend-Service erstellen. Das Middleware gibt uns auch die Benutzer-ID. Das hilft beim Hinzuf\xfcgen von Benutzern zu Organisationen."}),"\n",(0,r.jsx)(n.p,{children:"Im Frontend-Code deklariere diese API-Ressource im Logto-Config. F\xfcge ihren Identifier zum resources-Array hinzu."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",children:'const config: LogtoConfig = {\n  endpoint: "<YOUR_LOGTO_ENDPOINT>",\n  appId: "<YOUR_LOGTO_APP_ID>",\n  scopes: [UserScope.Organizations],\n  resources: [ReservedResource.Organization, "<https://api.documind.com>"], // Neu erstellter API-Ressourcen-Identifier\n};\n\n'})}),"\n",(0,r.jsx)(n.p,{children:"Wie zuvor m\xfcssen sich Benutzer nach der Aktualisierung des Logto-Configs erneut anmelden."}),"\n",(0,r.jsx)(n.p,{children:"Im Dashboard hole das Logto Zugangstoken, wenn eine Organisation erstellt wird. Verwende dieses Token, um auf unsere Backend-Service-API zuzugreifen."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",children:"// Zugangstoken f\xfcr \"DocuMind API\" holen\nconst token = await getAccessToken('<https://api.documind.com>');\n\n// Zugriff auf unsere Backend-Service-API mit dem Token\nconst response = await fetch('<http://localhost:3000/organizations>', {\n  method: 'POST',\n  headers: {\n    'Content-Type': 'application/json',\n    Authorization: `Bearer ${token}`,\n  },\n  body: JSON.stringify({\n    name: 'Organisation A',\n    description: 'Beschreibung Organisation A',\n  }),\n});\n"})}),"\n",(0,r.jsx)(n.p,{children:"Jetzt k\xf6nnen wir korrekt auf die DocuMind-Backend-Service-API zugreifen."}),"\n",(0,r.jsx)(n.h3,{id:"calling-logto-management-api",children:"Logto Management API aufrufen"}),"\n",(0,r.jsx)(n.p,{children:"Implementieren wir die Organisationserstellung mit der Logto Management API."}),"\n",(0,r.jsx)(n.p,{children:"Wie bei Frontend-Anfragen an den Backend-Service ben\xf6tigen Backend-Service-Anfragen an Logto Zugangstokens."}),"\n",(0,r.jsxs)(n.p,{children:["In Logto verwenden wir Maschine-zu-Maschine-Authentifizierung f\xfcr Zugangstokens. Siehe ",(0,r.jsx)(n.a,{href:"/integrate-logto/interact-with-management-api",children:"Mit Management API interagieren"}),"."]}),"\n",(0,r.jsx)(n.p,{children:'Gehe zur Anwendungsseite im Logto Console. Erstelle eine Maschine-zu-Maschine-Anwendung. Weise die Rolle "Logto Management API access" zu. Kopiere den Token-Endpunkt, App-ID und App-Secret. Wir verwenden diese f\xfcr Zugangstokens.'}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{src:"https://uploads.strapi.logto.io/m2m_application_d882b6386e.png",alt:"m2m-application.png"})}),"\n",(0,r.jsx)(n.p,{children:"Jetzt k\xf6nnen wir Logto Management API Zugangstokens \xfcber diese M2M-Anwendung erhalten."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",children:"async function fetchLogtoManagementApiAccessToken() {\n  const response = await fetch(process.env.LOGTO_MANAGEMENT_API_TOKEN_ENDPOINT, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/x-www-form-urlencoded',\n      Authorization: `Basic ${Buffer.from(\n        `${process.env.LOGTO_MANAGEMENT_API_APPLICATION_ID}:${process.env.LOGTO_MANAGEMENT_API_APPLICATION_SECRET}`\n      ).toString('base64')}`,\n    },\n    body: new URLSearchParams({\n      grant_type: 'client_credentials',\n      resource: process.env.LOGTO_MANAGEMENT_API_RESOURCE,\n      scope: 'all',\n    }).toString(),\n  });\n  const data = await response.json();\n  return data.access_token;\n}\n"})}),"\n",(0,r.jsx)(n.p,{children:"Verwende dieses Zugangstoken, um die Logto Management API aufzurufen."}),"\n",(0,r.jsx)(n.p,{children:"Wir verwenden diese Management-APIs:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"POST /api/organizations"}),": Organisation erstellen (siehe: ",(0,r.jsx)(n.a,{href:"https://openapi.logto.io/operation/operation-createorganization",children:"Create organization API reference"}),")"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"POST /api/organizations/{id}/users"}),": Benutzer zur Organisation hinzuf\xfcgen (siehe: ",(0,r.jsx)(n.a,{href:"https://openapi.logto.io/operation/operation-addusers",children:"Add users to organization API reference"}),")"]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",children:"app.post('/organizations', requireAuth('<https://api.documind.com>'), async (req, res) => {\n  const accessToken = await fetchLogtoManagementApiAccessToken();\n  // Organisation in Logto erstellen und Benutzer hinzuf\xfcgen\n  const response = await fetch(`${process.env.LOGTO_ENDPOINT}/api/organizations`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${accessToken}`,\n    },\n    body: JSON.stringify({\n      name: req.body.name,\n      description: req.body.description,\n    }),\n  });\n\n  const createdOrganization = await response.json();\n\n  await fetch(`${process.env.LOGTO_ENDPOINT}/api/organizations/${createdOrganization.id}/users`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${accessToken}`,\n    },\n    body: JSON.stringify({\n      userIds: [req.user.id],\n    }),\n  });\n\n  res.json({ data: createdOrganization });\n});\n"})}),"\n",(0,r.jsx)(n.p,{children:"Wir haben jetzt die Organisationserstellung \xfcber die Logto Management API implementiert. Wir k\xf6nnen auch Benutzer zu Organisationen hinzuf\xfcgen."}),"\n",(0,r.jsx)(n.p,{children:"Testen wir diese Funktion im Dashboard."}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{src:"https://uploads.strapi.logto.io/dashboard_create_org_b703f1125b.png",alt:"dashboard-create-org.png"})}),"\n",(0,r.jsx)(n.p,{children:"und klicke auf \u201eOrganisation erstellen\u201c"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{src:"https://uploads.strapi.logto.io/dashboard_has_orgs_568a44cc1f.png",alt:"dashboard-has-orgs.png"})}),"\n",(0,r.jsx)(n.p,{children:"Erstellung erfolgreich!"}),"\n",(0,r.jsxs)(n.p,{children:["Der n\xe4chste Schritt w\xe4re, Benutzer zu einer Organisation einzuladen. Wir implementieren diese Funktion in unserem Tutorial noch nicht. Du wei\xdft bereits, wie du die Management API verwendest. Du kannst dich an ",(0,r.jsx)(n.a,{href:"#tenant-creation-and-invitation",children:(0,r.jsx)(n.strong,{children:"Tenant-Erstellung und Einladung"})})," als Produktdesign-Referenz orientieren und diese Funktion leicht mit diesem Blogpost umsetzen: ",(0,r.jsx)(n.a,{href:"https://blog.logto.io/implement-user-collaboration-in-your-app",children:"How we implement user collaboration within a multi-tenant app"}),"."]}),"\n",(0,r.jsx)(n.h2,{id:"implement-access-control-to-your-multi-tenant-app",children:"Zugangskontrolle f\xfcr deine Multi-Tenant-App implementieren"}),"\n",(0,r.jsx)(n.p,{children:"Kommen wir nun zur Zugangskontrolle f\xfcr Organisationen."}),"\n",(0,r.jsx)(n.p,{children:"Wir wollen erreichen:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Benutzer k\xf6nnen nur auf Ressourcen ihrer eigenen Organisationen zugreifen: Das kann \xfcber Logtos ",(0,r.jsx)(n.code,{children:"Organisationstoken"})," erfolgen"]}),"\n",(0,r.jsx)(n.li,{children:"Benutzer haben spezifische Rollen innerhalb von Organisationen (mit unterschiedlichen Berechtigungen), um autorisierte Aktionen auszuf\xfchren: Das kann \xfcber Logtos Organisationstemplate-Funktion umgesetzt werden"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Schauen wir uns an, wie diese Funktionen implementiert werden."}),"\n",(0,r.jsx)(n.h3,{id:"using-logto-organization-token",children:"Verwendung des Logto Organisationstokens"}),"\n",(0,r.jsx)(n.p,{children:"\xc4hnlich wie beim zuvor erw\xe4hnten Logto Zugangstoken stellt Logto ein Zugangstoken aus, das einer bestimmten Ressource entspricht, und Benutzer verwenden dieses Token, um auf gesch\xfctzte Ressourcen im Backend-Service zuzugreifen. Entsprechend stellt Logto ein Organisationstoken aus, das einer bestimmten Organisation entspricht, und Benutzer verwenden dieses Token, um auf gesch\xfctzte Organisationsressourcen im Backend-Service zuzugreifen."}),"\n",(0,r.jsxs)(n.p,{children:["In der Frontend-Anwendung k\xf6nnen wir mit Logtos ",(0,r.jsx)(n.code,{children:"getOrganizationToken"}),"-Methode ein Token f\xfcr den Zugriff auf eine bestimmte Organisation erhalten."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",children:"const { getOrganizationToken } = useLogto();\nconst organizationToken = await getOrganizationToken(organizationId);\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Hier ist ",(0,r.jsx)(n.code,{children:"organizationId"})," die ID der Organisation, zu der der Benutzer geh\xf6rt."]}),"\n",(0,r.jsxs)(n.p,{children:["Bevor du ",(0,r.jsx)(n.code,{children:"getOrganization"})," oder andere Organisationsfunktionen verwendest, stelle sicher, dass der Scope ",(0,r.jsx)(n.code,{children:"urn:logto:scope:organizations"})," und die Resource ",(0,r.jsx)(n.code,{children:"urn:logto:resource:organization"})," im Logto-Config enthalten sind. Da wir das bereits deklariert haben, wiederholen wir es nicht."]}),"\n",(0,r.jsx)(n.p,{children:"Auf unserer Organisationsseite verwenden wir das Organisationstoken, um Dokumente innerhalb der Organisation abzurufen."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",children:"function OrganizationPage() {\n  const { organizationId } = useParams();\n  const navigate = useNavigate();\n  const { signOut, getOrganizationToken } = useLogto();\n  const [error, setError] = useState<Error | null>(null);\n  const [documents, setDocuments] = useState([]);\n\n  const fetchDocuments = useCallback(async () => {\n    if (!organizationId) return;\n\n    try {\n      const organizationToken = await getOrganizationToken(organizationId);\n      const response = await fetch(`http://localhost:3000/documents`, {\n          headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${organizationToken}`,\n        },\n      });\n      const documents = await response.json();\n      setDocuments(documents);\n    } catch (error: unknown) {\n      if (error instanceof Error) {\n        setError(error);\n      } else {\n        setError(new Error(String(error)));\n      }\n    }\n  },[getOrganizationToken, organizationId]);\n\n  useEffect(() => {\n    void fetchDocuments();\n  }, [fetchDocuments]);\n\n  if (error) {\n    return <div>Fehler: {error.message}</div>;\n  }\n\n  return <div>\n    <h1>Organisationsdokumente</h1>\n    <ul>\n      {documents.map((document) => (\n        <li key={document.id}>{document.name}</li>\n      ))}\n    </ul>\n  </div>\n}\n\n"})}),"\n",(0,r.jsx)(n.p,{children:"Zwei wichtige Punkte sind bei dieser Implementierung zu beachten:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["Wenn die an ",(0,r.jsx)(n.code,{children:"getOrganizationToken"})," \xfcbergebene ",(0,r.jsx)(n.code,{children:"organizationId"})," keine Organisation ist, zu der der aktuelle Benutzer geh\xf6rt, kann diese Methode kein Token erhalten. So wird sichergestellt, dass Benutzer nur auf ihre eigenen Organisationen zugreifen k\xf6nnen."]}),"\n",(0,r.jsxs)(n.li,{children:["Beim Anfordern von Organisationsressourcen verwenden wir das Organisationstoken anstelle des Zugangstokens, da wir f\xfcr Ressourcen, die zu einer Organisation geh\xf6ren, die Organisationsberechtigungssteuerung und nicht die Benutzerberechtigungssteuerung verwenden m\xf6chten (das wird beim Implementieren der API ",(0,r.jsx)(n.code,{children:"GET /documents"})," sp\xe4ter noch deutlicher)."]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["Als N\xe4chstes erstellen wir eine API ",(0,r.jsx)(n.code,{children:"GET /documents"})," in unserem Backend-Service. \xc4hnlich wie wir die API-Ressource zum Schutz der API ",(0,r.jsx)(n.code,{children:"POST /organizations"})," verwenden, nutzen wir organisationsspezifische Ressourcenindikatoren, um die API ",(0,r.jsx)(n.code,{children:"GET /documents"})," zu sch\xfctzen."]}),"\n",(0,r.jsxs)(n.p,{children:["Erstellen wir zun\xe4chst ein ",(0,r.jsx)(n.code,{children:"requireOrganizationAccess"}),"-Middleware, um Organisationsressourcen zu sch\xfctzen."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",children:"const getTokenFromHeader = (headers) => {\n  const { authorization } = headers;\n  const bearerTokenIdentifier = 'Bearer';\n\n  if (!authorization) {\n    throw new Error('Authorization header fehlt');\n  }\n\n  if (!authorization.startsWith(bearerTokenIdentifier)) {\n    throw new Error('Authorization-Token-Typ wird nicht unterst\xfctzt');\n  }\n\n  return authorization.slice(bearerTokenIdentifier.length + 1);\n};\n\nconst extractOrganizationId = (aud) => {\n  if (!aud || typeof aud !== 'string' || !aud.startsWith('urn:logto:organization:')) {\n    throw new Error('Ung\xfcltiges Organisationstoken');\n  }\n  return aud.replace('urn:logto:organization:', '');\n};\n\nconst decodeJwtPayload = (token) => {\n  try {\n    const [, payloadBase64] = token.split('.');\n    if (!payloadBase64) {\n      throw new Error('Ung\xfcltiges Token-Format');\n    }\n    const payloadJson = Buffer.from(payloadBase64, 'base64').toString('utf-8');\n    return JSON.parse(payloadJson);\n  } catch (error) {\n    throw new Error('Fehler beim Dekodieren des Token-Payloads');\n  }\n};\n\nconst requireOrganizationAccess = () => {\n  return async (req, res, next) => {\n    try {\n      // Token extrahieren\n      const token = getTokenFromHeader(req.headers);\n\n      // Audience dynamisch aus dem Token holen\n      const { aud } = decodeJwtPayload(token);\n      if (!aud) {\n        throw new Error('Audience im Token fehlt');\n      }\n\n      // Token mit Audience verifizieren\n      const { payload } = await jwtVerify(\n        token,\n        createRemoteJWKSet(new URL(process.env.LOGTO_JWKS_URL)),\n        {\n          issuer: process.env.LOGTO_ISSUER,\n          audience: aud,\n        }\n      );\n\n      // Organisations-ID aus dem Audience-Claim extrahieren\n      const organizationId = extractOrganizationId(payload.aud);\n\n      // Organisationsinfo zur Anfrage hinzuf\xfcgen\n      req.user = {\n        id: payload.sub,\n        organizationId,\n      };\n\n      next();\n    } catch (error) {\n      console.error('Organisation Auth-Fehler:', error);\n      res.status(401).json({ error: 'Nicht autorisiert - Ung\xfcltiger Organisationszugriff' });\n    }\n  };\n};\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Dann verwenden wir das ",(0,r.jsx)(n.code,{children:"requireOrganizationAccess"}),"-Middleware, um die API ",(0,r.jsx)(n.code,{children:"GET /documents"})," zu sch\xfctzen."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",children:"app.get('/documents', requireOrganizationAccess(), async (req, res) => {\n  // Du kannst die aktuelle Benutzer-ID und OrganisationId \xfcber req.user erhalten\n  console.log('userId', req.user.id);\n  console.log('organizationId', req.user.organizationId);\n\n  // Dokumente aus der Datenbank nach OrganisationId abrufen\n  // ....\n  const documents = await getDocumentsByOrganizationId(req.user.organizationId);\n\n  res.json(documents);\n});\n"})}),"\n",(0,r.jsx)(n.p,{children:"So haben wir die Verwendung von Organisationstokens zum Zugriff auf Organisationsressourcen implementiert. Im Backend-Service kannst du entsprechende Ressourcen aus der Datenbank anhand der Organisations-ID abrufen."}),"\n",(0,r.jsxs)(n.p,{children:["Manche Software erfordert Datenisolation zwischen Organisationen. F\xfcr weitere Diskussionen und Implementierungen siehe den Blogpost: ",(0,r.jsx)(n.a,{href:"https://blog.logto.io/implement-multi-tenancy",children:"Multi-Tenancy-Implementierung mit PostgreSQL: Lerne anhand eines einfachen Praxisbeispiels"}),"."]}),"\n",(0,r.jsx)(n.h3,{id:"implement-organization-level-role-based-access-control-design",children:"Organisationsebene rollenbasierte Zugangskontrolle implementieren"}),"\n",(0,r.jsx)(n.p,{children:"Wir haben die Verwendung von Organisationstokens zum Zugriff auf Organisationsressourcen implementiert. Als N\xe4chstes implementieren wir die Benutzerberechtigungssteuerung innerhalb von Organisationen mit RBAC."}),"\n",(0,r.jsx)(n.p,{children:"Nehmen wir an, DocuMind hat zwei Rollen: Admin und Mitarbeiter."}),"\n",(0,r.jsx)(n.p,{children:"Admins k\xf6nnen Dokumente erstellen und darauf zugreifen, w\xe4hrend Mitarbeiter nur auf Dokumente zugreifen k\xf6nnen."}),"\n",(0,r.jsx)(n.p,{children:"Unsere Organisation ben\xf6tigt also diese beiden Rollen: Admin und Mitarbeiter."}),"\n",(0,r.jsxs)(n.p,{children:["Admin hat sowohl die Berechtigungen ",(0,r.jsx)(n.code,{children:"read:documents"})," als auch ",(0,r.jsx)(n.code,{children:"create:documents"}),", w\xe4hrend Mitarbeiter nur die Berechtigung ",(0,r.jsx)(n.code,{children:"read:documents"})," haben."]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Admin","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"read:documents"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"create:documents"})}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["Mitarbeiter","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"read:documents"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Hier kommt die Organisationstemplate-Funktion von Logto ins Spiel."}),"\n",(0,r.jsx)(n.p,{children:"Ein Organisationstemplate ist eine Blaupause des Zugangskontrollmodells f\xfcr jede Organisation: Es definiert die Rollen und Berechtigungen, die f\xfcr alle Organisationen gelten."}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsx)(n.p,{children:"Warum Organisationstemplate?"}),"\n",(0,r.jsx)(n.p,{children:"Weil Skalierbarkeit eine der wichtigsten Anforderungen f\xfcr SaaS-Produkte ist. Mit anderen Worten: Was f\xfcr einen Kunden funktioniert, sollte f\xfcr alle Kunden funktionieren."}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["Gehe zu Logto Console > Organization Templates > Organization permissions und erstelle zwei Berechtigungen: ",(0,r.jsx)(n.code,{children:"read:documents"})," und ",(0,r.jsx)(n.code,{children:"create:documents"}),"."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{src:"https://uploads.strapi.logto.io/org_template_permission_f0ad59f5b5.png",alt:"org-template-permission.png"})}),"\n",(0,r.jsx)(n.p,{children:"Gehe dann zum Tab Organisationsrollen, um zwei Benutzerrollen zu erstellen: Admin und Mitarbeiter, und weise diesen Rollen die entsprechenden Berechtigungen zu."}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{src:"https://uploads.strapi.logto.io/organization_details_9293d7965d.png",alt:"organization-details.png"})}),"\n",(0,r.jsx)(n.p,{children:"So haben wir ein RBAC-Berechtigungsmodell f\xfcr jede Organisation erstellt."}),"\n",(0,r.jsx)(n.p,{children:"Als N\xe4chstes gehen wir auf unsere Organisationsdetailseite, um unseren Mitgliedern die passenden Rollen zuzuweisen."}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{src:"https://uploads.strapi.logto.io/org_template_role_0137f5a8ca.png",alt:"org-template-role.png"})}),"\n",(0,r.jsx)(n.p,{children:"Jetzt haben unsere Organisationsbenutzer Rollen!\nDu kannst diese Schritte auch \xfcber die Logto Management API durchf\xfchren:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",children:"// Weisen Sie dem Organisationsersteller die Rolle 'Admin' zu\napp.post('/organizations', requireAuth('https://api.documind.com'), async (req, res) => {\n  const accessToken = await fetchLogtoManagementApiAccessToken();\n  // Organisation in Logto erstellen\n  // bestehender Code...\n\n  // Benutzer zur Organisation in Logto hinzuf\xfcgen\n  await fetch(`${process.env.LOGTO_ENDPOINT}/api/organizations/${createdOrganization.id}/users`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${accessToken}`,\n    },\n    body: JSON.stringify({\n      userIds: [req.user.id],\n    }),\n  });\n\n  // Weisen Sie dem ersten Benutzer die Rolle `Admin` zu.\n  const rolesResponse = await fetch(`${process.env.LOGTO_ENDPOINT}/api/organization-roles`, {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${accessToken}`,\n    },\n  });\n\n  const roles = await rolesResponse.json();\n\n  // Finde die `Admin`-Rolle\n  const adminRole = roles.find((role) => role.name === 'Admin');\n\n  // Weisen Sie dem ersten Benutzer die Rolle `Admin` zu.\n  await fetch(\n    `${process.env.LOGTO_ENDPOINT}/api/organizations/${createdOrganization.id}/users/${req.user.id}/roles`,\n    {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${accessToken}`,\n      },\n      body: JSON.stringify({\n        organizationRoleIds: [adminRole.id],\n      }),\n    }\n  );\n\n  // bestehender Code...\n});\n"})}),"\n",(0,r.jsx)(n.p,{children:"Jetzt k\xf6nnen wir die Benutzerberechtigungssteuerung durch \xdcberpr\xfcfung ihrer Berechtigungen implementieren."}),"\n",(0,r.jsx)(n.p,{children:"Im Code m\xfcssen wir daf\xfcr sorgen, dass das Organisationstoken des Benutzers Berechtigungsinformationen enth\xe4lt, und diese dann im Backend \xfcberpr\xfcfen."}),"\n",(0,r.jsxs)(n.p,{children:["Im Logto-Config des Frontend-Codes m\xfcssen wir die Berechtigungen deklarieren, die Benutzer innerhalb der Organisation anfordern m\xfcssen. F\xfcgen wir ",(0,r.jsx)(n.code,{children:"read:documents"})," und ",(0,r.jsx)(n.code,{children:"create:documents"})," zu den ",(0,r.jsx)(n.code,{children:"scopes"})," hinzu."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",children:'const config: LogtoConfig = {\n  endpoint: "<YOUR_LOGTO_ENDPOINT>",\n  appId: "<YOUR_LOGTO_APP_ID>",\n  scopes: [UserScope.Organizations, "read:documents", "create:documents"],\n  resources: [ReservedResource.Organization, "<https://api.documind.com>"], // Neu erstellter API-Ressourcen-Identifier\n};\n\n'})}),"\n",(0,r.jsx)(n.p,{children:"Wie \xfcblich, melde dich erneut mit deinem Benutzer an, damit diese Konfigurationen wirksam werden."}),"\n",(0,r.jsxs)(n.p,{children:["Dann f\xfcgen wir im Backend im ",(0,r.jsx)(n.code,{children:"requireOrganizationAccess"}),"-Middleware die \xdcberpr\xfcfung der Benutzerberechtigungen hinzu."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",children:"const hasRequiredScopes = (tokenScopes, requiredScopes) => {\n  if (!requiredScopes || requiredScopes.length === 0) {\n    return true;\n  }\n  const scopeSet = new Set(tokenScopes);\n  return requiredScopes.every((scope) => scopeSet.has(scope));\n};\n\nconst requireOrganizationAccess = ({ requiredScopes = [] } = {}) => {\n  return async (req, res, next) => {\n    try {\n      //...\n\n      // Token mit Audience verifizieren\n      const { payload } = await jwtVerify(\n        token,\n        createRemoteJWKSet(new URL(process.env.LOGTO_JWKS_URL)),\n        {\n          issuer: process.env.LOGTO_ISSUER,\n          audience: aud,\n        }\n      );\n\n      //...\n\n      // Scopes aus dem Token holen\n      const scopes = payload.scope?.split(' ') || [];\n\n      // Erforderliche Scopes \xfcberpr\xfcfen\n      if (!hasRequiredScopes(scopes, requiredScopes)) {\n        throw new Error('Unzureichende Berechtigungen');\n      }\n\n      //...\n\n      next();\n    } catch (error) {\n      //...\n    }\n  };\n};\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Dann erstelle eine API POST /documents und verwende das ",(0,r.jsx)(n.code,{children:"requireOrganizationAccess"}),"-Middleware mit requiredScopes-Konfiguration, um diese API und die vorherige API ",(0,r.jsx)(n.code,{children:"GET /documents"})," zu sch\xfctzen."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",children:"// API zum Erstellen von Dokumenten\napp.post(\n  '/documents',\n  requireOrganizationAccess({ requiredScopes: ['create:documents'] }),\n  async (req, res) => {\n    //...\n  }\n);\n\n// API zum Abrufen von Dokumenten\napp.get(\n  '/documents',\n  requireOrganizationAccess({ requiredScopes: ['read:documents'] }),\n  async (req, res) => {\n    //...\n  }\n);\n"})}),"\n",(0,r.jsx)(n.p,{children:"So haben wir die Benutzerberechtigungssteuerung durch \xdcberpr\xfcfung der Benutzerberechtigungen implementiert."}),"\n",(0,r.jsxs)(n.p,{children:["Im Frontend kannst du die Benutzerberechtigungsinformationen durch Dekodieren des Organisationstokens oder durch Aufruf von Logtos ",(0,r.jsx)(n.code,{children:"getOrganizationTokenClaims"}),"-Methode erhalten."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",children:"const [scopes, setScopes] = useState([]);\nconst { getOrganizationTokenClaims } = useLogto();\n\nconst loadScopes = async () => {\n  const claims = await getOrganizationTokenClaims(organizationId);\n  setScopes(claims.scope.split(' '));\n};\n\n// ...\n"})}),"\n",(0,r.jsx)(n.p,{children:"Steuere Seitenelemente basierend auf Benutzerberechtigungen, indem du die Scopes in den Claims pr\xfcfst."}),"\n",(0,r.jsx)(n.h2,{id:"add-more-multi-tenant-app-features",children:"Weitere Multi-Tenant-App-Funktionen hinzuf\xfcgen"}),"\n",(0,r.jsx)(n.p,{children:"Bisher haben wir die grundlegenden Benutzer- und Organisationsfunktionen in einem Multi-Tenant-SaaS-System implementiert! Es gibt jedoch noch einige Funktionen, die wir nicht behandelt haben, wie z. B. individuelles Branding der Anmeldeseite f\xfcr jede Organisation, automatisches Hinzuf\xfcgen von Benutzern mit bestimmten Domain-E-Mails zu bestimmten Organisationen und die Integration von Enterprise-SSO-Funktionalit\xe4t."}),"\n",(0,r.jsx)(n.p,{children:"Dies sind alles Out-of-the-Box-Funktionen, und du findest weitere Informationen dazu in der Logto-Dokumentation:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"/end-user-flows/enterprise-sso",children:"Enterprise SSO Integration"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"/organizations/just-in-time-provisioning",children:"Just-in-Time (JIT) Provisioning"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"/customization/match-your-brand#organization-specific-branding",children:"Organisationsebene Branding"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"/organizations/organization-management#require-mfa-for-organization-members",children:"Organisationsebene Multi-Faktor-Authentifizierung (MFA)"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"/end-user-flows/organization-experience/organization-management",children:"Organisationsebene Verwaltung"})}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"summary",children:"Zusammenfassung"}),"\n",(0,r.jsx)(n.p,{children:"Erinnerst du dich, wie \xfcberw\xe4ltigend es am Anfang wirkte? Benutzer, Organisationen, Berechtigungen, Enterprise-Features ... es schien ein endloser Berg zu sein."}),"\n",(0,r.jsx)(n.p,{children:"Aber schau, was wir erreicht haben:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Ein vollst\xe4ndiges Authentifizierungssystem mit mehreren Anmeldeoptionen und MFA-Unterst\xfctzung"}),"\n",(0,r.jsx)(n.li,{children:"Ein flexibles Organisationssystem, das mehrere Mitgliedschaften unterst\xfctzt"}),"\n",(0,r.jsx)(n.li,{children:"Rollenbasierte Zugangskontrolle innerhalb von Organisationen"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Und das Beste daran? Wir mussten das Rad nicht neu erfinden. Durch die Nutzung moderner Tools wie Logto haben wir aus Monaten Entwicklungszeit Minuten gemacht."}),"\n",(0,r.jsxs)(n.p,{children:["Der vollst\xe4ndige Quellcode zu diesem Tutorial ist verf\xfcgbar unter: ",(0,r.jsx)(n.a,{href:"https://github.com/logto-io/multi-tenant-saas-sample",children:"Multi-Tenant SaaS Sample"}),"."]}),"\n",(0,r.jsx)(n.p,{children:"Das ist die Kraft moderner Entwicklung im Jahr 2025 \u2013 wir k\xf6nnen uns darauf konzentrieren, einzigartige Produktfunktionen zu bauen, statt mit Infrastruktur zu k\xe4mpfen. Jetzt bist du dran, etwas Gro\xdfartiges zu bauen!"}),"\n",(0,r.jsxs)(n.p,{children:["Entdecke alle Funktionen von Logto, von Logto Cloud bis Logto OSS, auf der ",(0,r.jsx)(n.a,{href:"https://logto.io/",children:"Logto-Website"})," oder registriere dich noch heute bei ",(0,r.jsx)(n.a,{href:"https://cloud.logto.io/?sign_up",children:"Logto Cloud"}),"."]})]})}function c(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(u,{...e})}):u(e)}},79621:(e,n,i)=>{i.d(n,{R:()=>a,x:()=>o});var t=i(58101);const r={},s=t.createContext(r);function a(e){const n=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);