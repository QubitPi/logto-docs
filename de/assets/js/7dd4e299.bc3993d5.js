"use strict";(self.webpackChunk_logto_docs=self.webpackChunk_logto_docs||[]).push([[32217],{71351:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>u,contentTitle:()=>s,default:()=>l,frontMatter:()=>a,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"integrate-logto/integrate-logto-into-your-application/understand-authentication-flow","title":"Authentifizierungsablauf verstehen","description":"Logto basiert auf den Standards OAuth 2.0 und OpenID Connect (OIDC). Das Verst\xe4ndnis dieser Authentifizierungsstandards erleichtert den Integrationsprozess und macht ihn einfacher.","source":"@site/i18n/de/docusaurus-plugin-content-docs/current/integrate-logto/integrate-logto-into-your-application/understand-authentication-flow.mdx","sourceDirName":"integrate-logto/integrate-logto-into-your-application","slug":"/integrate-logto/integrate-logto-into-your-application/understand-authentication-flow","permalink":"/de/integrate-logto/integrate-logto-into-your-application/understand-authentication-flow","draft":false,"unlisted":false,"editUrl":"https://github.com/logto-io/docs/tree/master/i18n/de/docusaurus-plugin-content-docs/current/integrate-logto/integrate-logto-into-your-application/understand-authentication-flow.mdx","tags":[],"version":"current","frontMatter":{},"sidebar":"docsSidebar","previous":{"title":"Logto in deine Anwendung integrieren","permalink":"/de/integrate-logto/integrate-logto-into-your-application/"},"next":{"title":"Gesch\xfctzte App","permalink":"/de/integrate-logto/protected-app"}}');var r=t(25105),o=t(79621);const a={},s="Authentifizierungsablauf verstehen",u={},d=[{value:"Benutzer-Authentifizierungsablauf",id:"user-authentication-flow",level:3},{value:"Maschine-zu-Maschine Authentifizierungsablauf",id:"machine-to-machine-authentication-flow",level:3},{value:"Verwandte Ressourcen",id:"related-resources",level:2}];function c(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",mermaid:"mermaid",p:"p",ul:"ul",...(0,o.R)(),...e.components},{Url:t}=n;return t||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Url",!0),(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"authentifizierungsablauf-verstehen",children:"Authentifizierungsablauf verstehen"})}),"\n",(0,r.jsxs)(n.p,{children:["Logto basiert auf den Standards ",(0,r.jsx)(n.a,{href:"https://auth.wiki/oauth-2.0",children:"OAuth 2.0"})," und ",(0,r.jsx)(n.a,{href:"https://auth.wiki/openid-connect",children:"OpenID Connect (OIDC)"}),". Das Verst\xe4ndnis dieser Authentifizierungsstandards erleichtert den Integrationsprozess und macht ihn einfacher."]}),"\n",(0,r.jsx)(n.h3,{id:"user-authentication-flow",children:"Benutzer-Authentifizierungsablauf"}),"\n",(0,r.jsx)(n.p,{children:"Das passiert, wenn sich ein Benutzer mit Logto anmeldet:"}),"\n",(0,r.jsx)(n.mermaid,{value:"sequenceDiagram\n    autonumber\n    participant User\n    participant Application\n    participant Logto\n\n    User->>Application: Klick auf Anmeldebutton\n    Application->>Logto: Anmeldung initiieren und zur Logto-Anmeldeseite umleiten\n    User->>Logto: Anmeldedaten zur Authentifizierung eingeben\n    Logto->>Application: Anmeldung abschlie\xdfen und zur\xfcckleiten\n    Application->>Logto: Callback verarbeiten und Zugangstoken und Benutzerinformationen anfordern\n    Logto->>Application: Zugangstoken und Benutzerinformationen zur\xfcckgeben\n    Application->>User: Anmeldung erfolgreich"}),"\n",(0,r.jsx)(n.p,{children:"In diesem Ablauf sind mehrere Schl\xfcsselkonzepte f\xfcr den Integrationsprozess wichtig:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"Application"}),": Dies repr\xe4sentiert deine App in Logto. Du erstellst eine Anwendungskonfiguration in der Logto-Konsole, um eine Verbindung zwischen deiner tats\xe4chlichen Anwendung und den Logto-Diensten herzustellen. Erfahre mehr \xfcber ",(0,r.jsx)(n.a,{href:"/integrate-logto/application-data-structure/#introduction",children:"Application"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"Redirect URI"}),": Nachdem Benutzer die Authentifizierung auf der Logto-Anmeldeseite abgeschlossen haben, leitet Logto sie \xfcber diese URI zur\xfcck zu deiner Anwendung. Du musst die Redirect URI in deinen Anwendungseinstellungen konfigurieren. Weitere Details findest du unter ",(0,r.jsx)(n.a,{href:"/integrate-logto/application-data-structure/#redirect-uris",children:"Redirect URIs"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"Handle sign-in callback"}),": Wenn Logto Benutzer zur\xfcck zu deiner Anwendung leitet, muss deine App die Authentifizierungsdaten verarbeiten und Zugangstokens und Benutzerinformationen anfordern. Keine Sorge - das Logto SDK \xfcbernimmt dies automatisch."]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["Diese \xdcbersicht deckt die wesentlichen Punkte f\xfcr eine schnelle Integration ab. F\xfcr ein tieferes Verst\xe4ndnis, schaue dir unseren Leitfaden ",(0,r.jsx)(n.a,{href:"/concepts/sign-in-experience/",children:"Sign-in experience explained"})," an."]}),"\n",(0,r.jsx)(n.h3,{id:"machine-to-machine-authentication-flow",children:"Maschine-zu-Maschine Authentifizierungsablauf"}),"\n",(0,r.jsxs)(n.p,{children:["Logto bietet den ",(0,r.jsx)(n.a,{href:"/quick-starts/m2m",children:"Maschine-zu-Maschine (M2M) Anwendungstyp"})," an, um direkte Authentifizierung zwischen Diensten zu erm\xf6glichen, basierend auf dem ",(0,r.jsx)(n.a,{href:"https://auth.wiki/client-credentials-flow",children:"OAuth 2.0 Client Credentials Flow"}),":"]}),"\n",(0,r.jsx)(n.mermaid,{value:"sequenceDiagram\n    participant Service A\n    participant Logto\n    participant Service B\n\n    Service A->>Logto: Zugangstoken mit Client-Credentials anfordern\n    Logto->>Service A: Zugangstoken zur\xfcckgeben\n    Service A->>Service B: API-Anfrage mit Zugangstoken\n    Service B->>Logto: Token validieren\n    Logto->>Service B: Token-Validierungsergebnis\n    Service B->>Service A: API-Antwort"}),"\n",(0,r.jsx)(n.p,{children:"Dieser Maschine-zu-Maschine (M2M) Authentifizierungsablauf ist f\xfcr Anwendungen konzipiert, die direkt mit Ressourcen kommunizieren m\xfcssen, ohne Benutzerinteraktion (also keine Benutzeroberfl\xe4che), wie ein API-Dienst, der Benutzerdaten in Logto aktualisiert, oder ein Statistikdienst, der t\xe4gliche Bestellungen abruft."}),"\n",(0,r.jsxs)(n.p,{children:["In diesem Ablauf authentifizieren sich Dienste mit Client-Credentials - einer Kombination aus ",(0,r.jsx)(n.a,{href:"/integrate-logto/application-data-structure/#application-id",children:"Application ID"})," und ",(0,r.jsx)(n.a,{href:"/integrate-logto/application-data-structure/#application-secret",children:"Application Secret"}),", die den Dienst eindeutig identifizieren und authentifizieren. Diese Anmeldedaten dienen als Identit\xe4t des Dienstes, wenn er ",(0,r.jsx)(n.a,{href:"https://auth.wiki/access-token",children:"Zugangstokens"})," von Logto anfordert."]}),"\n",(0,r.jsx)(n.h2,{id:"related-resources",children:"Verwandte Ressourcen"}),"\n",(0,r.jsx)(t,{href:"https://blog.logto.io/secure-cloud-apps-with-oauth-and-openid-connect",children:(0,r.jsx)(n.p,{children:"Blog: Sichere cloudbasierte Anwendungen mit OAuth 2.0 und OpenID Connect"})}),"\n",(0,r.jsx)(t,{href:"https://blog.logto.io/sso-is-better",children:(0,r.jsx)(n.p,{children:"Warum Single Sign-On (SSO) f\xfcr mehrere Anwendungen besser ist"})}),"\n",(0,r.jsx)(t,{href:"https://blog.logto.io/centralized-identity-system",children:(0,r.jsx)(n.p,{children:"Warum du ein zentrales Identit\xe4tssystem f\xfcr ein Multi-App-Gesch\xe4ft ben\xf6tigst"})})]})}function l(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},79621:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>s});var i=t(58101);const r={},o=i.createContext(r);function a(e){const n=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),i.createElement(o.Provider,{value:n},e.children)}}}]);