"use strict";(self.webpackChunk_logto_docs=self.webpackChunk_logto_docs||[]).push([[99545],{44331:(e,n,t)=>{t.d(n,{Ay:()=>c,RM:()=>i});var s=t(25105),o=t(79621);const i=[];function r(e){const n={a:"a",p:"p",...(0,o.R)(),...e.components};return(0,s.jsxs)(n.p,{children:["We recommend to read ",(0,s.jsx)(n.a,{href:"/authorization/role-based-access-control",children:"\ud83d\udd10 Role-Based Access Control (RBAC)"})," first to understand the basic concepts of Logto RBAC and how to set up API resources properly."]})}function c(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(r,{...e})}):r(e)}},52881:(e,n,t)=>{t.d(n,{Ay:()=>c,RM:()=>i});var s=t(25105),o=t(79621);const i=[{value:"Claims that need network requests",id:"claims-that-need-network-requests",level:3}];function r(e){const n={code:"code",h3:"h3",p:"p",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[e.type?null:(()=>{throw new Error("props.type is required when importing _claims-need-network-request.mdx")})(),"\n",(0,s.jsx)(n.h3,{id:"claims-that-need-network-requests",children:"Claims that need network requests"}),"\n",(0,s.jsxs)(n.p,{children:["To prevent bloating the ID token, some claims require network requests to fetch. For example, the ",(0,s.jsx)(n.code,{children:"custom_data"})," claim is not included in the user object even if it's requested in the scopes. To access these claims, ",(0,s.jsxs)("span",{children:["method"===e.type&&(0,s.jsxs)(s.Fragment,{children:["you can use the ",(0,s.jsx)("code",{children:e.method})," method"]}),"option"===e.type&&(0,s.jsxs)(s.Fragment,{children:["you can configure the ",(0,s.jsx)("code",{children:e.configOption})," option"]})]}),":"]}),"\n",e.codeSnippet,"\n","method"===e.type&&(0,s.jsxs)(s.Fragment,{children:["This method will fetch the user information by requesting to the"," ",(0,s.jsx)("a",{href:"https://openid.net/specs/openid-connect-core-1_0.html#UserInfo",children:"userinfo endpoint"}),". To learn more about the available scopes and claims, see the"," ",(0,s.jsx)("a",{href:"#scopes-and-claims",children:"Scopes and claims"})," section."]}),"\n","option"===e.type&&(0,s.jsxs)(s.Fragment,{children:["By configuring ",(0,s.jsx)("code",{children:e.configOption}),", the SDK will fetch the user information by requesting to the"," ",(0,s.jsx)("a",{href:"https://openid.net/specs/openid-connect-core-1_0.html#UserInfo",children:"userinfo endpoint"})," ","after the user is signed in, and ",(0,s.jsx)("code",{children:e.value??"user.custom_data"})," will be available once the request is completed."]})]})}function c(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(r,{...e})}):r(e)}},42807:(e,n,t)=>{t.d(n,{Ay:()=>c,RM:()=>i});var s=t(25105),o=t(79621);const i=[];function r(e){const n={a:"a",admonition:"admonition",code:"code",p:"p",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.p,{children:"Once you have set up the API resources, you can add them when configuring Logto in your app:"}),"\n",e.configResourcesCode,"\n",(0,s.jsx)(n.p,{children:"Each API resource has its own permissions (scopes)."}),"\n",(0,s.jsxs)(n.p,{children:["For example, the ",(0,s.jsx)(n.code,{children:"https://shopping.your-app.com/api"})," resource has the ",(0,s.jsx)(n.code,{children:"shopping:read"})," and ",(0,s.jsx)(n.code,{children:"shopping:write"})," permissions, and the ",(0,s.jsx)(n.code,{children:"https://store.your-app.com/api"})," resource has the ",(0,s.jsx)(n.code,{children:"store:read"})," and ",(0,s.jsx)(n.code,{children:"store:write"})," permissions."]}),"\n",(0,s.jsx)(n.p,{children:"To request these permissions, you can add them when configuring Logto in your app:"}),"\n",e.configResourcesWithScopesCode,"\n",(0,s.jsxs)(n.p,{children:["You may notice that scopes are defined separately from API resources. This is because ",(0,s.jsx)(n.a,{href:"https://www.rfc-editor.org/rfc/rfc8707.html",children:"Resource Indicators for OAuth 2.0"})," specifies the final scopes for the request will be the cartesian product of all the scopes at all the target services."]}),"\n",e.configResourcesWithSharedScopesCode&&(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)("p",{children:["Thus, in the above case, scopes can be simplified from the definition in Logto, both of the API resources can have ",(0,s.jsx)("code",{children:"read"})," and ",(0,s.jsx)("code",{children:"write"})," scopes without the prefix. Then, in the Logto config:"]}),e.configResourcesWithSharedScopesCode,(0,s.jsxs)("p",{children:["For every API resource, it will request for both ",(0,s.jsx)("code",{children:"read"})," and ",(0,s.jsx)("code",{children:"write"})," scopes."]})]}),"\n",(0,s.jsx)(n.admonition,{type:"note",children:(0,s.jsxs)(n.p,{children:["It is fine to request scopes that are not defined in the API resources. For example, you can request the ",(0,s.jsx)(n.code,{children:"email"})," scope even if the API resources don't have the ",(0,s.jsx)(n.code,{children:"email"})," scope available. Unavailable scopes will be safely ignored."]})}),"\n",(0,s.jsx)(n.p,{children:"After the successful sign-in, Logto will issue proper scopes to API resources according to the user's roles."})]})}function c(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(r,{...e})}):r(e)}},77448:(e,n,t)=>{t.d(n,{Ay:()=>c,RM:()=>i});var s=t(25105),o=t(79621);const i=[];function r(e){const n={p:"p",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.p,{children:["To fetch the access token for a specific API resource, you can use the ",(0,s.jsx)("code",{children:e.getAccessTokenApi})," method:"]}),"\n",e.getAccessTokenCode,"\n",(0,s.jsx)(n.p,{children:"This method will return a JWT access token that can be used to access the API resource when the user has related permissions. If the current cached access token has expired, this method will automatically try to use a refresh token to get a new access token."})]})}function c(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(r,{...e})}):r(e)}},95714:(e,n,t)=>{t.d(n,{Ay:()=>c,RM:()=>i});var s=t(25105),o=t(79621);const i=[];function r(e){const n={a:"a",p:"p",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.p,{children:["If organization is new to you, please read ",(0,s.jsx)(n.a,{href:"/organizations",children:"\ud83c\udfe2 Organizations (Multi-tenancy)"})," to get started."]}),"\n",(0,s.jsxs)(n.p,{children:["You need to add ",(0,s.jsx)("code",{children:e.organizationScope})," scope when configuring the Logto client:"]}),"\n",e.configOrganizationCode,"\n",(0,s.jsx)(n.p,{children:"Once the user is signed in, you can fetch the organization token for the user:"}),"\n",e.getOrganizationAccessTokenCode]})}function c(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(r,{...e})}):r(e)}},27205:(e,n,t)=>{t.d(n,{Ay:()=>c,RM:()=>i});var s=t(25105),o=t(79621);const i=[];function r(e){const n={p:"p",...(0,o.R)(),...e.components};return(0,s.jsxs)(n.p,{children:["You may find some user information are missing in the returned object from ",(0,s.jsx)("code",{children:e.method}),". This is because OAuth 2.0 and OpenID Connect (OIDC) are designed to follow the principle of least privilege (PoLP), and Logto is built on top of these standards."]})}function c(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(r,{...e})}):r(e)}},58138:(e,n,t)=>{t.d(n,{Ay:()=>c,RM:()=>i});var s=t(25105),o=t(79621);const i=[];function r(e){const{Url:n}={...(0,o.R)(),...e.components};return n||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Url",!0),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n,{href:"/end-user-flows",children:" End-user flows: authentication flows, account flows, and organization flows "}),"\n",(0,s.jsx)(n,{href:"/connectors",children:" Configure connectors "}),"\n",(0,s.jsx)(n,{href:"/authorization/api-resources/protect-your-api",children:" Protect your API "})]})}function c(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(r,{...e})}):r(e)}},41018:(e,n,t)=>{t.d(n,{Ay:()=>c,RM:()=>i});var s=t(25105),o=t(79621);const i=[{value:"Regarding redirect-based sign-in",id:"regarding-redirect-based-sign-in",level:3}];function r(e){const n={a:"a",h3:"h3",li:"li",ol:"ol",p:"p",...(0,o.R)(),...e.components},{Details:t}=n;return t||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,s.jsxs)(t,{children:[(0,s.jsx)("summary",{children:(0,s.jsx)(n.h3,{id:"regarding-redirect-based-sign-in",children:"Regarding redirect-based sign-in"})}),(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["This authentication process follows the ",(0,s.jsx)(n.a,{href:"https://openid.net/specs/openid-connect-core-1_0.html",children:"OpenID Connect (OIDC)"})," protocol, and Logto enforces strict security measures to protect user sign-in."]}),"\n",(0,s.jsx)(n.li,{children:"If you have multiple apps, you can use the same identity provider (Logto). Once the user signs in to one app, Logto will automatically complete the sign-in process when the user accesses another app."}),"\n"]}),(0,s.jsxs)(n.p,{children:["To learn more about the rationale and benefits of redirect-based sign-in, see ",(0,s.jsx)(n.a,{href:"/concepts/sign-in-experience",children:"Logto sign-in experience explained"}),"."]})]})}function c(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(r,{...e})}):r(e)}},9342:(e,n,t)=>{t.d(n,{Ay:()=>c,RM:()=>i});var s=t(25105),o=t(79621);const i=[];function r(e){const n={a:"a",admonition:"admonition",code:"code",hr:"hr",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.p,{children:"Here's the list of supported scopes and the corresponding claims:"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"openid"})})}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Claim name"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Description"}),(0,s.jsx)(n.th,{children:"Needs userinfo?"})]})}),(0,s.jsx)(n.tbody,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"sub"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"string"})}),(0,s.jsx)(n.td,{children:"The unique identifier of the user"}),(0,s.jsx)(n.td,{children:"No"})]})})]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"profile"})})}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Claim name"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Description"}),(0,s.jsx)(n.th,{children:"Needs userinfo?"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"name"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"string"})}),(0,s.jsx)(n.td,{children:"The full name of the user"}),(0,s.jsx)(n.td,{children:"No"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"username"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"string"})}),(0,s.jsx)(n.td,{children:"The username of the user"}),(0,s.jsx)(n.td,{children:"No"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"picture"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"string"})}),(0,s.jsx)(n.td,{children:"URL of the End-User's profile picture. This URL MUST refer to an image file (for example, a PNG, JPEG, or GIF image file), rather than to a Web page containing an image. Note that this URL SHOULD specifically reference a profile photo of the End-User suitable for displaying when describing the End-User, rather than an arbitrary photo taken by the End-User."}),(0,s.jsx)(n.td,{children:"No"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"created_at"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"number"})}),(0,s.jsx)(n.td,{children:"Time the End-User was created. The time is represented as the number of milliseconds since the Unix epoch (1970-01-01T00:00:00Z)."}),(0,s.jsx)(n.td,{children:"No"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"updated_at"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"number"})}),(0,s.jsx)(n.td,{children:"Time the End-User's information was last updated. The time is represented as the number of milliseconds since the Unix epoch (1970-01-01T00:00:00Z)."}),(0,s.jsx)(n.td,{children:"No"})]})]})]}),"\n",(0,s.jsxs)(n.p,{children:["Other ",(0,s.jsx)(n.a,{href:"https://openid.net/specs/openid-connect-core-1_0.html#StandardClaims",children:"standard claims"})," include ",(0,s.jsx)(n.code,{children:"family_name"}),", ",(0,s.jsx)(n.code,{children:"given_name"}),", ",(0,s.jsx)(n.code,{children:"middle_name"}),", ",(0,s.jsx)(n.code,{children:"nickname"}),", ",(0,s.jsx)(n.code,{children:"preferred_username"}),", ",(0,s.jsx)(n.code,{children:"profile"}),", ",(0,s.jsx)(n.code,{children:"website"}),", ",(0,s.jsx)(n.code,{children:"gender"}),", ",(0,s.jsx)(n.code,{children:"birthdate"}),", ",(0,s.jsx)(n.code,{children:"zoneinfo"}),", and ",(0,s.jsx)(n.code,{children:"locale"})," will be also included in the ",(0,s.jsx)(n.code,{children:"profile"})," scope without the need for requesting the userinfo endpoint. A difference compared to the claims above is that these claims will only be returned when their values are not empty, while the claims above will return ",(0,s.jsx)(n.code,{children:"null"})," if the values are empty."]}),"\n",(0,s.jsx)(n.admonition,{type:"note",children:(0,s.jsxs)(n.p,{children:["Unlike the standard claims, the ",(0,s.jsx)(n.code,{children:"created_at"})," and ",(0,s.jsx)(n.code,{children:"updated_at"})," claims are using milliseconds instead of seconds."]})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"email"})})}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Claim name"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Description"}),(0,s.jsx)(n.th,{children:"Needs userinfo?"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"email"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"string"})}),(0,s.jsx)(n.td,{children:"The email address of the user"}),(0,s.jsx)(n.td,{children:"No"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"email_verified"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"boolean"})}),(0,s.jsx)(n.td,{children:"Whether the email address has been verified"}),(0,s.jsx)(n.td,{children:"No"})]})]})]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"phone"})})}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Claim name"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Description"}),(0,s.jsx)(n.th,{children:"Needs userinfo?"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"phone_number"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"string"})}),(0,s.jsx)(n.td,{children:"The phone number of the user"}),(0,s.jsx)(n.td,{children:"No"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"phone_number_verified"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"boolean"})}),(0,s.jsx)(n.td,{children:"Whether the phone number has been verified"}),(0,s.jsx)(n.td,{children:"No"})]})]})]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"address"})})}),"\n",(0,s.jsxs)(n.p,{children:["Please refer to the ",(0,s.jsx)(n.a,{href:"https://openid.net/specs/openid-connect-core-1_0.html#AddressClaim",children:"OpenID Connect Core 1.0"})," for the details of the address claim."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"custom_data"})})}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Claim name"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Description"}),(0,s.jsx)(n.th,{children:"Needs userinfo?"})]})}),(0,s.jsx)(n.tbody,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"custom_data"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"object"})}),(0,s.jsx)(n.td,{children:"The custom data of the user"}),(0,s.jsx)(n.td,{children:"Yes"})]})})]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"identities"})})}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Claim name"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Description"}),(0,s.jsx)(n.th,{children:"Needs userinfo?"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"identities"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"object"})}),(0,s.jsx)(n.td,{children:"The linked identities of the user"}),(0,s.jsx)(n.td,{children:"Yes"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"sso_identities"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"array"})}),(0,s.jsx)(n.td,{children:"The linked SSO identities of the user"}),(0,s.jsx)(n.td,{children:"Yes"})]})]})]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"urn:logto:scope:organizations"})})}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Claim name"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Description"}),(0,s.jsx)(n.th,{children:"Needs userinfo?"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"organizations"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"string[]"})}),(0,s.jsx)(n.td,{children:"The organization IDs the user belongs to"}),(0,s.jsx)(n.td,{children:"No"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"organization_data"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"object[]"})}),(0,s.jsx)(n.td,{children:"The organization data the user belongs to"}),(0,s.jsx)(n.td,{children:"Yes"})]})]})]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"urn:logto:scope:organization_roles"})})}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Claim name"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Description"}),(0,s.jsx)(n.th,{children:"Needs userinfo?"})]})}),(0,s.jsx)(n.tbody,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"organization_roles"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"string[]"})}),(0,s.jsxs)(n.td,{children:["The organization roles the user belongs to with the format of ",(0,s.jsx)(n.code,{children:"<organization_id>:<role_name>"})]}),(0,s.jsx)(n.td,{children:"No"})]})})]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsxs)(n.p,{children:['Considering performance and the data size, if "Needs userinfo?" is "Yes", it means the claim will not show up in the ID token, but will be returned in the ',(0,s.jsx)(n.a,{href:"https://openid.net/specs/openid-connect-core-1_0.html#UserInfo",children:"userinfo endpoint"})," response."]})]})}function c(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(r,{...e})}):r(e)}},23055:(e,n,t)=>{t.d(n,{Ay:()=>a,RM:()=>r});var s=t(25105),o=t(79621),i=t(9342);const r=[...i.RM];function c(e){const n={a:"a",p:"p",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.p,{children:["Logto uses OIDC ",(0,s.jsx)(n.a,{href:"https://openid.net/specs/openid-connect-core-1_0.html#Claims",children:"scopes and claims conventions"})," to define the scopes and claims for retrieving user information from the ID token and OIDC ",(0,s.jsx)("a",{href:"https://openid.net/specs/openid-connect-core-1_0.html#UserInfo",children:"userinfo endpoint"}),'. Both of the "scope" and the "claim" are terms from the OAuth 2.0 and OpenID Connect (OIDC) specifications.']}),"\n","\n",e.configScopesCode&&(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)("p",{children:"In short, when you request a scope, you will get the corresponding claims in the user information. For example, if you request the `email` scope, you will get the `email` and `email_verified` data of the user."}),(0,s.jsx)("p",{children:"By default, Logto SDK will always request three scopes: `openid`, `profile`. And `offline_access`, and there is no way to remove these default scopes. But you can add more scopes when configuring Logto:"}),e.configScopesCode]}),"\n",(0,s.jsx)(i.Ay,{})]})}function a(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},7602:(e,n,t)=>{t.d(n,{Ay:()=>c,RM:()=>i});var s=t(25105),o=t(79621);const i=[];function r(e){const n={admonition:"admonition",code:"code",mermaid:"mermaid",p:"p",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.p,{children:"By default, limited claims are returned. If you need more information, you can request additional scopes to access more claims."}),"\n",(0,s.jsx)(n.admonition,{type:"info",children:(0,s.jsx)(n.p,{children:'A "claim" is an assertion made about a subject; a "scope" is a group of claims. In the current case, a claim is a piece of information about the user.'})}),"\n",(0,s.jsx)(n.p,{children:"Here's a non-normative example the scope - claim relationship:"}),"\n",(0,s.jsx)(n.mermaid,{value:"classDiagram\n  class openid {\n    +sub\n  }\n\n  class profile {\n    +name\n    +username\n    +picture\n    +...\n  }\n\n  class email {\n    +email\n    +email_verified\n  }\n\n  class phone {\n    +phone_number\n    +phone_number_verified\n  }"}),"\n",(0,s.jsx)(n.admonition,{type:"tip",children:(0,s.jsx)(n.p,{children:'The "sub" claim means "subject", which is the unique identifier of the user (i.e. user ID).'})}),"\n",(0,s.jsxs)(n.p,{children:["Logto SDK will always request three scopes: ",(0,s.jsx)(n.code,{children:"openid"}),", ",(0,s.jsx)(n.code,{children:"profile"}),", and ",(0,s.jsx)(n.code,{children:"offline_access"}),"."]})]})}function c(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(r,{...e})}):r(e)}},55828:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>w,contentTitle:()=>y,default:()=>C,frontMatter:()=>b,metadata:()=>s,toc:()=>v});const s=JSON.parse('{"id":"quick-starts/framework/chrome-extension/README","title":"Add authentication to your Chrome extension application","description":"This guide will show you how to integrate Logto into your Chrome extension.","source":"@site/docs/quick-starts/framework/chrome-extension/README.mdx","sourceDirName":"quick-starts/framework/chrome-extension","slug":"/quick-starts/chrome-extension","permalink":"/quick-starts/chrome-extension","draft":false,"unlisted":false,"editUrl":"https://github.com/logto-io/docs/tree/master/docs/quick-starts/framework/chrome-extension/README.mdx","tags":[],"version":"current","frontMatter":{"slug":"/quick-starts/chrome-extension","sidebar_label":"Chrome extension","sidebar_custom_props":{"description":"Chrome extensions are mini web applications that run within Google Chrome."}},"sidebar":"quickStartSidebar","previous":{"title":"Capacitor JS","permalink":"/quick-starts/capacitor-js"},"next":{"title":".NET Core (Blazor Server)","permalink":"/quick-starts/dotnet-core/blazor-server"}}');var o=t(25105),i=t(79621),r=t(58138),c=t(97330),a=t(67840);function d(e){const n={a:"a",admonition:"admonition",code:"code",li:"li",ul:"ul",...(0,i.R)(),...e.components};return(0,o.jsx)(n.admonition,{type:"tip",children:(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["The following demonstration was tested on Chrome v123.0.6312.87 (arm64). Other versions should also work, as long as they support the ",(0,o.jsx)(n.code,{children:"chrome"})," APIs used in the SDK."]}),"\n",(0,o.jsxs)(n.li,{children:["The sample project is available on our ",(0,o.jsx)(n.a,{href:"https://github.com/logto-io/js/tree/HEAD/packages/chrome-extension-sample",children:"GitHub repository"}),"."]}),"\n"]})})}function l(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}var h=t(3768),u=t(11043);function p(e){const n={code:"code",pre:"pre",...(0,i.R)(),...e.components};return(0,o.jsxs)(u.A,{children:[(0,o.jsx)(h.A,{value:"npm",label:"npm",children:(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"npm i @logto/chrome-extension\n"})})}),(0,o.jsx)(h.A,{value:"yarn",label:"Yarn",children:(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"yarn add @logto/chrome-extension\n"})})}),(0,o.jsx)(h.A,{value:"pnpm",label:"pnpm",children:(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"pnpm add @logto/chrome-extension\n"})})})]})}function x(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(p,{...e})}):p(e)}var m=t(41018);const j=[{value:"The authentication flow",id:"the-authentication-flow",level:3},...m.RM,{value:"Update the <code>manifest.json</code>",id:"update-the-manifestjson",level:3},{value:"Set up a background script (service worker)",id:"set-up-a-background-script-service-worker",level:3},{value:"Update Logto application settings",id:"update-logto-application-settings",level:3},{value:"Add sign-in and sign-out buttons to the popup",id:"add-sign-in-and-sign-out-buttons-to-the-popup",level:3},{value:"Checkpoint: Test the authentication flow",id:"checkpoint-test-the-authentication-flow",level:3},{value:"Check authentication state",id:"check-authentication-state",level:3},{value:"Other considerations",id:"other-considerations",level:3}];function g(e){const n={a:"a",admonition:"admonition",code:"code",h3:"h3",img:"img",li:"li",mermaid:"mermaid",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h3,{id:"the-authentication-flow",children:"The authentication flow"}),"\n",(0,o.jsx)(n.p,{children:'Assuming you put a "Sign in" button in your Chrome extension\'s popup, the authentication flow will look like this:'}),"\n",(0,o.jsx)(n.mermaid,{value:"sequenceDiagram\n  participant A as Extension popup\n  participant B as Extension service worker\n  participant C as Logto sign-in experience\n\n  A->>B: Invokes sign-in\n  B->>C: Redirects to Logto\n  C->>C: User signs in\n  C->>B: Redirects back to extension\n  B->>A: Notifies the popup"}),"\n",(0,o.jsxs)(n.p,{children:["For other interactive pages in your extension, you just need to replace the ",(0,o.jsx)(n.code,{children:"Extension popup"})," participant with the page's name. In this tutorial, we will focus on the popup page."]}),"\n",(0,o.jsx)(m.Ay,{}),"\n",(0,o.jsxs)(n.h3,{id:"update-the-manifestjson",children:["Update the ",(0,o.jsx)(n.code,{children:"manifest.json"})]}),"\n",(0,o.jsxs)(n.p,{children:["Logto SDK requires the following permissions in the ",(0,o.jsx)(n.code,{children:"manifest.json"}),":"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-json",metastring:'title="manifest.json"',children:'{\n  "permissions": ["identity", "storage"],\n  "host_permissions": ["https://*.logto.app/*"]\n}\n'})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"permissions.identity"}),": Required for the Chrome Identity API, which is used to sign in and sign out."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"permissions.storage"}),": Required for storing the user's session."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"host_permissions"}),": Required for the Logto SDK to communicate with the Logto APIs."]}),"\n"]}),"\n",(0,o.jsx)(n.admonition,{type:"note",children:(0,o.jsxs)(n.p,{children:["If you are using a custom domain on Logto Cloud, you need to update the ",(0,o.jsx)(n.code,{children:"host_permissions"})," to match your domain."]})}),"\n",(0,o.jsx)(n.h3,{id:"set-up-a-background-script-service-worker",children:"Set up a background script (service worker)"}),"\n",(0,o.jsx)(n.p,{children:"In your Chrome extension's background script, initialize the Logto SDK:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-js",metastring:'title="service-worker.js"',children:"import LogtoClient from '@logto/chrome-extension';\n\nexport const logtoClient = new LogtoClient({\n  endpoint: '<your-logto-endpoint>'\n  appId: '<your-logto-app-id>',\n});\n"})}),"\n",(0,o.jsxs)(n.p,{children:["Replace ",(0,o.jsx)(n.code,{children:"<your-logto-endpoint>"})," and ",(0,o.jsx)(n.code,{children:"<your-logto-app-id>"})," with the actual values. You can find these values in the application page you just created in the Logto Console."]}),"\n",(0,o.jsxs)(n.p,{children:["If you don't have a background script, you can follow the ",(0,o.jsx)(n.a,{href:"https://developer.chrome.com/docs/extensions/develop/concepts/service-workers/basics",children:"official guide"})," to create one."]}),"\n",(0,o.jsxs)(n.admonition,{type:"info",children:[(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Why do we need a background script?"})}),(0,o.jsx)(n.p,{children:"Normal extension pages like the popup or options page can't run in the background, and they have the possibility to be closed during the authentication process. A background script ensures the authentication process can be properly handled."})]}),"\n",(0,o.jsx)(n.p,{children:"Then, we need to listen to the message from other extension pages and handle the authentication process:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-js",metastring:'title="service-worker.js"',children:"chrome.runtime.onMessage.addListener((message, sender, sendResponse) => {\n  // In the below code, since we return `true` for each action, we need to call `sendResponse`\n  // to notify the sender. You can also handle errors here, or use other ways to notify the sender.\n\n  if (message.action === 'signIn') {\n    const redirectUri = chrome.identity.getRedirectURL('/callback');\n    logtoClient.signIn(redirectUri).finally(sendResponse);\n    return true;\n  }\n\n  if (message.action === 'signOut') {\n    const redirectUri = chrome.identity.getRedirectURL();\n    logtoClient.signOut(redirectUri).finally(sendResponse);\n    return true;\n  }\n\n  return false;\n});\n"})}),"\n",(0,o.jsxs)(n.p,{children:["You may notice there are two redirect URIs used in the code above. They are both created by ",(0,o.jsx)(n.code,{children:"chrome.identity.getRedirectURL"}),", which is a ",(0,o.jsx)(n.a,{href:"https://developer.chrome.com/docs/extensions/reference/api/identity#method-getRedirectURL",children:"built-in Chrome API"})," to generate a redirect URL for auth flows. The two URIs will be:"]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"https://<extension-id>.chromiumapp.org/callback"})," for sign-in."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"https://<extension-id>.chromiumapp.org/"})," for sign-out."]}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:"Note that these URIs are not accessible, and they are only used for Chrome to trigger specific actions for the authentication process."}),"\n",(0,o.jsx)(n.h3,{id:"update-logto-application-settings",children:"Update Logto application settings"}),"\n",(0,o.jsx)(n.p,{children:"Now we need to update the Logto application settings to allow the redirect URIs we just created."}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsx)(n.li,{children:"Go to the application page in the Logto Console."}),"\n",(0,o.jsxs)(n.li,{children:['In the "Redirect URIs" section, add the URI: ',(0,o.jsx)(n.code,{children:"https://<extension-id>.chromiumapp.org/callback"}),"."]}),"\n",(0,o.jsxs)(n.li,{children:['In the "Post sign-out redirect URIs" section, add the URI: ',(0,o.jsx)(n.code,{children:"https://<extension-id>.chromiumapp.org/"}),"."]}),"\n",(0,o.jsxs)(n.li,{children:['In the "CORS allowed origins" section, add the URI: ',(0,o.jsx)(n.code,{children:"chrome-extension://<extension-id>"}),". The SDK in Chrome extension will use this origin to communicate with the Logto APIs."]}),"\n",(0,o.jsxs)(n.li,{children:["Click on ",(0,o.jsx)(n.strong,{children:"Save changes"}),"."]}),"\n"]}),"\n",(0,o.jsxs)(n.p,{children:["Remember to replace ",(0,o.jsx)(n.code,{children:"<extension-id>"})," with your actual extension ID. You can find the extension ID in the ",(0,o.jsx)(n.code,{children:"chrome://extensions"})," page."]}),"\n",(0,o.jsx)(n.h3,{id:"add-sign-in-and-sign-out-buttons-to-the-popup",children:"Add sign-in and sign-out buttons to the popup"}),"\n",(0,o.jsx)(n.p,{children:"We're almost there! Let's add the sign-in and sign-out buttons and other necessary logic to the popup page."}),"\n",(0,o.jsxs)(n.p,{children:["In the ",(0,o.jsx)(n.code,{children:"popup.html"})," file:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-html",metastring:'title="popup.html"',children:'<button id="sign-in">Sign in</button> <button id="sign-out">Sign out</button>\n'})}),"\n",(0,o.jsxs)(n.p,{children:["In the ",(0,o.jsx)(n.code,{children:"popup.js"})," file (assuming ",(0,o.jsx)(n.code,{children:"popup.js"})," is included in the ",(0,o.jsx)(n.code,{children:"popup.html"}),"):"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-js",metastring:'title="popup.js"',children:"document.getElementById('sign-in').addEventListener('click', async () => {\n  await chrome.runtime.sendMessage({ action: 'signIn' });\n  // Sign-in completed (or failed), you can update the UI here.\n});\n\ndocument.getElementById('sign-out').addEventListener('click', async () => {\n  await chrome.runtime.sendMessage({ action: 'signOut' });\n  // Sign-out completed (or failed), you can update the UI here.\n});\n"})}),"\n",(0,o.jsx)(n.h3,{id:"checkpoint-test-the-authentication-flow",children:"Checkpoint: Test the authentication flow"}),"\n",(0,o.jsx)(n.p,{children:"Now you can test the authentication flow in your Chrome extension:"}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsx)(n.li,{children:"Open the extension popup."}),"\n",(0,o.jsx)(n.li,{children:'Click on the "Sign in" button.'}),"\n",(0,o.jsx)(n.li,{children:"You will be redirected to the Logto sign-in page."}),"\n",(0,o.jsx)(n.li,{children:"Sign in with your Logto account."}),"\n",(0,o.jsx)(n.li,{children:"You will be redirected back to the Chrome."}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"check-authentication-state",children:"Check authentication state"}),"\n",(0,o.jsx)(n.p,{children:"Since Chrome provide unified storage APIs, rather than the sign-in and sign-out flow, all other Logto SDK methods can be used in the popup page directly."}),"\n",(0,o.jsxs)(n.p,{children:["In your ",(0,o.jsx)(n.code,{children:"popup.js"}),", you can reuse the ",(0,o.jsx)(n.code,{children:"LogtoClient"})," instance created in the background script, or create a new one with the same configuration:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-js",metastring:'title="popup.js"',children:"import LogtoClient from '@logto/chrome-extension';\n\nconst logtoClient = new LogtoClient({\n  endpoint: '<your-logto-endpoint>'\n  appId: '<your-logto-app-id>',\n});\n\n// Or reuse the logtoClient instance created in the background script\nimport { logtoClient } from './service-worker.js';\n"})}),"\n",(0,o.jsx)(n.p,{children:"Then you can create a function to load the authentication state and user's profile:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-js",metastring:'title="popup.js"',children:"const loadAuthenticationState = async () => {\n  const isAuthenticated = await logtoClient.isAuthenticated();\n  // Update the UI based on the authentication state\n\n  if (isAuthenticated) {\n    const user = await logtoClient.getIdTokenClaims(); // { sub: '...', email: '...', ... }\n    // Update the UI with the user's profile\n  }\n};\n"})}),"\n",(0,o.jsxs)(n.p,{children:["You can also combine the ",(0,o.jsx)(n.code,{children:"loadAuthenticationState"})," function with the sign-in and sign-out logic:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-js",metastring:'title="popup.js"',children:"document.getElementById('sign-in').addEventListener('click', async () => {\n  await chrome.runtime.sendMessage({ action: 'signIn' });\n  await loadAuthenticationState();\n});\n\ndocument.getElementById('sign-out').addEventListener('click', async () => {\n  await chrome.runtime.sendMessage({ action: 'signOut' });\n  await loadAuthenticationState();\n});\n"})}),"\n",(0,o.jsx)(n.p,{children:"Here's an example of the popup page with the authentication state:"}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.img,{alt:"Popup page",src:t(6637).A+"",width:"950",height:"662"})}),"\n",(0,o.jsx)(n.h3,{id:"other-considerations",children:"Other considerations"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Service worker bundling"}),": If you use a bundler like Webpack or Rollup, you need to explicitly set the target to ",(0,o.jsx)(n.code,{children:"browser"})," or similar to avoid unnecessary bundling of Node.js modules."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Module resolution"}),": Logto Chrome extension SDK is an ESM-only module."]}),"\n"]}),"\n",(0,o.jsxs)(n.p,{children:["See our ",(0,o.jsx)(n.a,{href:"https://github.com/logto-io/js/tree/HEAD/packages/chrome-extension-sample",children:"sample project"})," for a complete example with TypeScript, Rollup, and other configurations."]})]})}function f(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(g,{...e})}):g(e)}const b={slug:"/quick-starts/chrome-extension",sidebar_label:"Chrome extension",sidebar_custom_props:{description:"Chrome extensions are mini web applications that run within Google Chrome."}},y="Add authentication to your Chrome extension application",w={},v=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Installation",id:"installation",level:2},{value:"Integration",id:"integration",level:2},...j,{value:"Get user information",id:"get-user-information",level:2},...a.RM,{value:"API resources",id:"api-resources",level:2},...c.RM,{value:"Further readings",id:"further-readings",level:2},...r.RM];function k(e){const n={a:"a",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",ul:"ul",...(0,i.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"add-authentication-to-your-chrome-extension-application",children:"Add authentication to your Chrome extension application"})}),"\n",(0,o.jsx)(n.p,{children:"This guide will show you how to integrate Logto into your Chrome extension."}),"\n",(0,o.jsx)(l,{}),"\n",(0,o.jsx)(n.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["A ",(0,o.jsx)(n.a,{href:"https://cloud.logto.io",children:"Logto Cloud"})," account or a ",(0,o.jsx)(n.a,{href:"/introduction/set-up-logto-oss",children:"self-hosted Logto"}),"."]}),"\n",(0,o.jsx)(n.li,{children:"A single-page application (SPA) created in Logto Console."}),"\n",(0,o.jsx)(n.li,{children:"A Chrome extension project."}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"installation",children:"Installation"}),"\n",(0,o.jsx)(x,{}),"\n",(0,o.jsx)(n.h2,{id:"integration",children:"Integration"}),"\n",(0,o.jsx)(f,{}),"\n",(0,o.jsx)(n.h2,{id:"get-user-information",children:"Get user information"}),"\n",(0,o.jsx)(a.Ay,{package:"@logto/chrome-extension"}),"\n",(0,o.jsx)(n.h2,{id:"api-resources",children:"API resources"}),"\n",(0,o.jsx)(c.Ay,{package:"@logto/chrome-extension"}),"\n",(0,o.jsx)(n.h2,{id:"further-readings",children:"Further readings"}),"\n",(0,o.jsx)(r.Ay,{})]})}function C(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(k,{...e})}):k(e)}},97330:(e,n,t)=>{t.d(n,{Ay:()=>C,RM:()=>v});var s=t(25105),o=t(79621),i=t(44331),r=t(42807),c=t(77448),a=t(95714),d=t(65113);function l(e){return(0,s.jsxs)(s.Fragment,{children:["\n","\n",(0,s.jsx)(d.A,{language:"js",title:"index.js",children:`import LogtoClient, { UserScope } from '${e.package||"@logto/browser"}';\n\nconst logtoClient = new LogtoClient({\n// ...other configs\nscopes: [UserScope.Organizations],\n});`}),"\n"]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}function u(e){const n={code:"code",pre:"pre",...(0,o.R)(),...e.components};return(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",metastring:'title="index.js"',children:"import LogtoClient from '@logto/browser';\n\nconst logtoClient = new LogtoClient({\n  // ...other configs\n  // highlight-next-line\n  resources: ['https://shopping.your-app.com/api', 'https://store.your-app.com/api'], // Add API resources\n});\n"})})}function p(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(u,{...e})}):u(e)}function x(e){return(0,s.jsxs)(s.Fragment,{children:["\n","\n",(0,s.jsx)(d.A,{language:"js",title:"index.js",children:`import LogtoClient from '${e.package||"@logto/browser"}';\n\nconst logtoClient = new LogtoClient({\n// ...other configs\n// highlight-start\nscopes: ['shopping:read', 'shopping:write', 'store:read', 'store:write'],\nresources: ['https://shopping.your-app.com/api', 'https://store.your-app.com/api'], // Add API resources\n// highlight-end\n});`}),"\n"]})}function m(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(x,{...e})}):x(e)}function j(e){return(0,s.jsxs)(s.Fragment,{children:["\n","\n",(0,s.jsx)(d.A,{language:"js",title:"index.js",children:`import LogtoClient, { UserScope } from '${e.package||"@logto/browser"}';\n\nconst logtoClient = new LogtoClient({\n// ...other configs\n// highlight-start\nscopes: ['read', 'write'],\nresources: ['https://shopping.your-app.com/api', 'https://store.your-app.com/api'],\n// highlight-end\n});`}),"\n"]})}function g(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(j,{...e})}):j(e)}function f(e){const n={code:"code",pre:"pre",...(0,o.R)(),...e.components};return(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"const accessToken = await logtoClient.getAccessToken('https://store.your-app.com/api');\nconsole.log('Access token', accessToken);\n"})})}function b(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(f,{...e})}):f(e)}function y(e){const n={code:"code",pre:"pre",...(0,o.R)(),...e.components};return(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",metastring:'title="index.js"',children:"// Get organizationIds from the userInfo\n\nconst claims = await logtoClient.getIdTokenClaims();\nconst organizationIds = claims.organizations;\n\n/**\n * Or from the ID token claims\n *\n * const claims = await logtoClient.getIdTokenClaims();\n * const organizationIds = claims.organizations;\n */\n\n// Get the organization access token\nif (organizationIds.length > 0) {\n  const organizationId = organizationIds[0];\n  const organizationAccessToken = await logtoClient.getOrganizationToken(organizationId);\n  console.log('Organization access token', organizationAccessToken);\n}\n"})})}function w(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(y,{...e})}):y(e)}const v=[...i.RM,{value:"Configure Logto client",id:"configure-logto-client",level:3},...r.RM,{value:"Fetch access token for the API resource",id:"fetch-access-token-for-the-api-resource",level:3},...c.RM,{value:"Fetch organization tokens",id:"fetch-organization-tokens",level:3},...a.RM,{value:"Attach access token to request headers",id:"attach-access-token-to-request-headers",level:3}];function k(e){const n={admonition:"admonition",code:"code",h3:"h3",p:"p",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(i.Ay,{}),"\n",(0,s.jsx)(n.h3,{id:"configure-logto-client",children:"Configure Logto client"}),"\n",(0,s.jsx)(r.Ay,{configResourcesCode:(0,s.jsx)(p,{}),configResourcesWithScopesCode:(0,s.jsx)(m,{package:e.package}),configResourcesWithSharedScopesCode:(0,s.jsx)(g,{package:e.package})}),"\n",(0,s.jsx)(n.h3,{id:"fetch-access-token-for-the-api-resource",children:"Fetch access token for the API resource"}),"\n",(0,s.jsx)(c.Ay,{getAccessTokenApi:"getAccessToken",getAccessTokenCode:(0,s.jsx)(b,{})}),"\n",(0,s.jsx)(n.h3,{id:"fetch-organization-tokens",children:"Fetch organization tokens"}),"\n",(0,s.jsx)(a.Ay,{organizationScope:"UserScope.Organizations",configOrganizationCode:(0,s.jsx)(h,{package:e.package}),getOrganizationAccessTokenCode:(0,s.jsx)(w,{})}),"\n",(0,s.jsx)(n.p,{children:"./code/_scopes-and-claims-code.mdx./code/_config-organization-code.mdx"}),"\n",(0,s.jsx)(n.h3,{id:"attach-access-token-to-request-headers",children:"Attach access token to request headers"}),"\n",(0,s.jsxs)(n.p,{children:["Put the token in the ",(0,s.jsx)(n.code,{children:"Authorization"})," field of HTTP headers with the Bearer format (",(0,s.jsx)(n.code,{children:"Bearer YOUR_TOKEN"}),"), and you are good to go."]}),"\n",(0,s.jsx)(n.admonition,{type:"note",children:(0,s.jsxs)(n.p,{children:["The Bearer Token's integration flow may vary based on the framework or requester you are using. Choose your own way to apply the request ",(0,s.jsx)(n.code,{children:"Authorization"})," header."]})})]})}function C(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(k,{...e})}):k(e)}},67840:(e,n,t)=>{t.d(n,{Ay:()=>u,RM:()=>l});var s=t(25105),o=t(79621),i=t(65113),r=t(52881),c=t(27205),a=t(23055),d=t(7602);const l=[{value:"Display user information",id:"display-user-information",level:3},{value:"Request additional claims",id:"request-additional-claims",level:3},...c.RM,...d.RM,...r.RM,{value:"Scopes and claims",id:"scopes-and-claims",level:3},...a.RM];function h(e){const n={code:"code",h3:"h3",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h3,{id:"display-user-information",children:"Display user information"}),"\n",(0,s.jsxs)(n.p,{children:["To display the user's information, you can use the ",(0,s.jsx)(n.code,{children:"logtoClient.getIdTokenClaims()"})," method. For example, in your Home page:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",metastring:'title="Home.js"',children:"const userInfo = await logtoClient.getIdTokenClaims();\n\n// Generate display table for ID token claims\nconst table = document.createElement('table');\nconst thead = document.createElement('thead');\nconst tr = document.createElement('tr');\nconst thName = document.createElement('th');\nconst thValue = document.createElement('th');\nthName.innerHTML = 'Name';\nthValue.innerHTML = 'Value';\ntr.append(thName, thValue);\nthead.append(tr);\ntable.append(thead);\n\nconst tbody = document.createElement('tbody');\n\nfor (const [key, value] of Object.entries(userInfo)) {\n  const tr = document.createElement('tr');\n  const tdName = document.createElement('td');\n  const tdValue = document.createElement('td');\n  tdName.innerHTML = key;\n  tdValue.innerHTML = typeof value === 'string' ? value : JSON.stringify(value);\n  tr.append(tdName, tdValue);\n  tbody.append(tr);\n}\n\ntable.append(tbody);\n"})}),"\n",(0,s.jsx)(n.h3,{id:"request-additional-claims",children:"Request additional claims"}),"\n",(0,s.jsx)(c.Ay,{method:"getIdTokenClaims()"}),"\n",(0,s.jsx)(d.Ay,{}),"\n",(0,s.jsx)(n.p,{children:"To request additional scopes, you can configure the Logto configs:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",metastring:'title="index.js"',children:"// highlight-next-line\nimport LogtoClient, { UserScope } from '@logto/browser';\n\nconst logtoClient = new LogtoClient({\n  appId: '<your-application-id>',\n  endpoint: '<your-logto-endpoint>',\n  // highlight-next-line\n  scopes: [UserScope.Email, UserScope.Phone],\n});\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Then you can access the additional claims in the return value of ",(0,s.jsx)(n.code,{children:"logtoClient.getIdTokenClaims()"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"const claims = await getIdTokenClaims();\n// Now you can access additional claims `claims.email`, `claims.phone`, etc.\n"})}),"\n",(0,s.jsx)(r.Ay,{type:"method",method:"logtoClient.fetchUserInfo()",codeSnippet:(0,s.jsx)(i.A,{language:"js",children:"const userInfo = await logtoClient.fetchUserInfo();\n// Now you can access the claim `userInfo.custom_data`"})}),"\n",(0,s.jsx)(n.h3,{id:"scopes-and-claims",children:"Scopes and claims"}),"\n",(0,s.jsx)(a.Ay,{})]})}function u(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}},3768:(e,n,t)=>{t.d(n,{A:()=>r});t(58101);var s=t(13526);const o={tabItem:"tabItem_y6LR"};var i=t(25105);function r(e){let{children:n,hidden:t,className:r}=e;return(0,i.jsx)("div",{role:"tabpanel",className:(0,s.A)(o.tabItem,r),hidden:t,children:n})}},11043:(e,n,t)=>{t.d(n,{A:()=>v});var s=t(58101),o=t(13526),i=t(32571),r=t(55234),c=t(87394),a=t(87276),d=t(31637),l=t(16063);function h(e){return s.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,s.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function u(e){const{values:n,children:t}=e;return(0,s.useMemo)((()=>{const e=n??function(e){return h(e).map((e=>{let{props:{value:n,label:t,attributes:s,default:o}}=e;return{value:n,label:t,attributes:s,default:o}}))}(t);return function(e){const n=(0,d.XI)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,t])}function p(e){let{value:n,tabValues:t}=e;return t.some((e=>e.value===n))}function x(e){let{queryString:n=!1,groupId:t}=e;const o=(0,r.W6)(),i=function(e){let{queryString:n=!1,groupId:t}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:n,groupId:t});return[(0,a.aZ)(i),(0,s.useCallback)((e=>{if(!i)return;const n=new URLSearchParams(o.location.search);n.set(i,e),o.replace({...o.location,search:n.toString()})}),[i,o])]}function m(e){const{defaultValue:n,queryString:t=!1,groupId:o}=e,i=u(e),[r,a]=(0,s.useState)((()=>function(e){let{defaultValue:n,tabValues:t}=e;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!p({value:n,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${t.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const s=t.find((e=>e.default))??t[0];if(!s)throw new Error("Unexpected error: 0 tabValues");return s.value}({defaultValue:n,tabValues:i}))),[d,h]=x({queryString:t,groupId:o}),[m,j]=function(e){let{groupId:n}=e;const t=function(e){return e?`docusaurus.tab.${e}`:null}(n),[o,i]=(0,l.Dv)(t);return[o,(0,s.useCallback)((e=>{t&&i.set(e)}),[t,i])]}({groupId:o}),g=(()=>{const e=d??m;return p({value:e,tabValues:i})?e:null})();(0,c.A)((()=>{g&&a(g)}),[g]);return{selectedValue:r,selectValue:(0,s.useCallback)((e=>{if(!p({value:e,tabValues:i}))throw new Error(`Can't select invalid tab value=${e}`);a(e),h(e),j(e)}),[h,j,i]),tabValues:i}}var j=t(27034);const g={tabList:"tabList_swUI",tabItem:"tabItem_BXZ5"};var f=t(25105);function b(e){let{className:n,block:t,selectedValue:s,selectValue:r,tabValues:c}=e;const a=[],{blockElementScrollPositionUntilNextRender:d}=(0,i.a_)(),l=e=>{const n=e.currentTarget,t=a.indexOf(n),o=c[t].value;o!==s&&(d(n),r(o))},h=e=>{let n=null;switch(e.key){case"Enter":l(e);break;case"ArrowRight":{const t=a.indexOf(e.currentTarget)+1;n=a[t]??a[0];break}case"ArrowLeft":{const t=a.indexOf(e.currentTarget)-1;n=a[t]??a[a.length-1];break}}n?.focus()};return(0,f.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.A)("tabs",{"tabs--block":t},n),children:c.map((e=>{let{value:n,label:t,attributes:i}=e;return(0,f.jsx)("li",{role:"tab",tabIndex:s===n?0:-1,"aria-selected":s===n,ref:e=>a.push(e),onKeyDown:h,onClick:l,...i,className:(0,o.A)("tabs__item",g.tabItem,i?.className,{"tabs__item--active":s===n}),children:t??n},n)}))})}function y(e){let{lazy:n,children:t,selectedValue:i}=e;const r=(Array.isArray(t)?t:[t]).filter(Boolean);if(n){const e=r.find((e=>e.props.value===i));return e?(0,s.cloneElement)(e,{className:(0,o.A)("margin-top--md",e.props.className)}):null}return(0,f.jsx)("div",{className:"margin-top--md",children:r.map(((e,n)=>(0,s.cloneElement)(e,{key:n,hidden:e.props.value!==i})))})}function w(e){const n=m(e);return(0,f.jsxs)("div",{className:(0,o.A)("tabs-container",g.tabList),children:[(0,f.jsx)(b,{...n,...e}),(0,f.jsx)(y,{...n,...e})]})}function v(e){const n=(0,j.A)();return(0,f.jsx)(w,{...e,children:h(e.children)},String(n))}},48564:(e,n,t)=>{t.d(n,{A:()=>m});var s=t(8859),o=t(9545),i=t(83702),r=t(1391),c=t(9743),a=t(45247),d=t(86686),l=t(85601),h=t(13526),u=t(57850);const p={codeBlockContent:"codeBlockContent_m3Ux",codeBlockTitle:"codeBlockTitle_P25_",codeBlock:"codeBlock_qGQc",codeBlockStandalone:"codeBlockStandalone_zC50",codeBlockLines:"codeBlockLines_p187",codeBlockLinesWithNumbering:"codeBlockLinesWithNumbering_OFgW",buttonGroup:"buttonGroup_6DOT"};var x=t(25105);function m(e){let{children:n,className:t="",metastring:m,title:j,showLineNumbers:g,language:f}=e;const{prism:{defaultLanguage:b,magicComments:y}}=(0,s.p)(),w=function(e){return e?.toLowerCase()}(f??(0,i.Op)(t)??b),v=(0,o.A)(),k=(0,r.f)(),C=(0,i.wt)(m)||j,{lineClassNames:I,code:A}=(0,i.Li)(n,{metastring:m,language:w,magicComments:y}),R=g??(0,i._u)(m);return(0,x.jsxs)(c.A,{as:"div",className:(0,h.A)(t,w&&!t.includes(`language-${w}`)&&`language-${w}`),children:[C&&(0,x.jsx)("div",{className:p.codeBlockTitle,children:C}),(0,x.jsxs)("div",{className:p.codeBlockContent,children:[(0,x.jsx)(u.f4,{theme:v,code:A,language:w??"text",children:e=>{let{className:n,style:t,tokens:s,getLineProps:o,getTokenProps:i}=e;return(0,x.jsx)("pre",{ref:k.codeBlockRef,tabIndex:0,className:(0,h.A)(n,p.codeBlock,"thin-scrollbar"),style:t,children:(0,x.jsx)("code",{className:(0,h.A)(p.codeBlockLines,R&&p.codeBlockLinesWithNumbering),children:s.map(((e,n)=>(0,x.jsx)(d.A,{line:e,getLineProps:o,getTokenProps:i,classNames:I[n],showLineNumbers:R},n)))})})}}),(0,x.jsxs)("div",{className:p.buttonGroup,children:[(k.isEnabled||k.isCodeScrollable)&&(0,x.jsx)(l.A,{className:p.codeButton,isEnabled:k.isEnabled,onClick:()=>{k.toggle()}}),(0,x.jsx)(a.A,{className:p.codeButton,code:A})]})]})]})}},6637:(e,n,t)=>{t.d(n,{A:()=>s});const s=t.p+"assets/images/extension-popup-34a0c267638724bc33b8daea59475880.webp"}}]);