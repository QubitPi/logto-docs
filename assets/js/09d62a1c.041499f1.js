"use strict";(self.webpackChunk_logto_docs=self.webpackChunk_logto_docs||[]).push([[91],{26244:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>r,contentTitle:()=>c,default:()=>h,frontMatter:()=>s,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"end-user-flows/account-settings/by-account-api","title":"Account settings by Account API","description":"Learn how to use the Account API to manage user","source":"@site/docs/end-user-flows/account-settings/by-account-api.mdx","sourceDirName":"end-user-flows/account-settings","slug":"/end-user-flows/account-settings/by-account-api","permalink":"/end-user-flows/account-settings/by-account-api","draft":false,"unlisted":false,"editUrl":"https://github.com/logto-io/docs/tree/master/docs/end-user-flows/account-settings/by-account-api.mdx","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"description":"Learn how to use the Account API to manage user","sidebar_position":1},"sidebar":"docsSidebar","previous":{"title":"Account settings","permalink":"/end-user-flows/account-settings/"},"next":{"title":"Account settings by Management API","permalink":"/end-user-flows/account-settings/by-management-api"}}');var a=i(25105),o=i(79621);const s={description:"Learn how to use the Account API to manage user",sidebar_position:1},c="Account settings by Account API",r={},d=[{value:"What is Logto Account API",id:"what-is-logto-account-api",level:2},{value:"How to enable Account API",id:"how-to-enable-account-api",level:2},{value:"How to access Account API",id:"how-to-access-account-api",level:2},{value:"Fetch an access token",id:"fetch-an-access-token",level:3},{value:"Access Account API using access token",id:"access-account-api-using-access-token",level:3},{value:"Manage basic account information",id:"manage-basic-account-information",level:2},{value:"Retrieve user account information",id:"retrieve-user-account-information",level:3},{value:"Update basic account information",id:"update-basic-account-information",level:3},{value:"Manage identifiers and other sensitive information",id:"manage-identifiers-and-other-sensitive-information",level:2},{value:"Get a verification record id",id:"get-a-verification-record-id",level:3},{value:"Verify the user&#39;s password",id:"verify-the-users-password",level:4},{value:"Verify by sending a verification code to the user&#39;s email or phone",id:"verify-by-sending-a-verification-code-to-the-users-email-or-phone",level:4},{value:"Send request with verification record id",id:"send-request-with-verification-record-id",level:3},{value:"Update user&#39;s password",id:"update-users-password",level:3},{value:"Update or link new email",id:"update-or-link-new-email",level:3},{value:"Remove the user&#39;s email",id:"remove-the-users-email",level:3},{value:"Manage phone",id:"manage-phone",level:3},{value:"Link a new social connection",id:"link-a-new-social-connection",level:3},{value:"Remove a social connection",id:"remove-a-social-connection",level:3},{value:"Link a new WebAuthn passkey",id:"link-a-new-webauthn-passkey",level:3},{value:"Manage existing WebAuthn passkey",id:"manage-existing-webauthn-passkey",level:3},{value:"Link a new TOTP",id:"link-a-new-totp",level:3},{value:"Manage backup codes",id:"manage-backup-codes",level:3}];function l(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"account-settings-by-account-api",children:"Account settings by Account API"})}),"\n",(0,a.jsx)(n.h2,{id:"what-is-logto-account-api",children:"What is Logto Account API"}),"\n",(0,a.jsx)(n.p,{children:"The Logto Account API is a comprehensive set of APIs that gives end users direct API access without needing to go through the Management API. Here are the highlights:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Direct access: The Account API empowers end users to directly access and manage their own account profiles without requiring the relay of Management API."}),"\n",(0,a.jsx)(n.li,{children:"User profile and identities management: Users can fully manage their profiles and security settings, including the ability to update identity information like email, phone, and password, as well as manage social connections. MFA and SSO support are coming soon."}),"\n",(0,a.jsx)(n.li,{children:"Global access control: Admins have full, global control over access settings and can customize each field."}),"\n",(0,a.jsxs)(n.li,{children:["Seamless authorization: Authorization is easier than ever! Simply use ",(0,a.jsx)(n.code,{children:"client.getAccessToken()"})," to obtain an opaque access token for OP (Logto), and attach it to the Authorization header as ",(0,a.jsx)(n.code,{children:"Bearer <access_token>"}),"."]}),"\n"]}),"\n",(0,a.jsxs)(n.admonition,{type:"note",children:[(0,a.jsx)(n.p,{children:"To ensure the access token has the appropriate permissions, make sure you have properly configured the corresponding scopes in your Logto config."}),(0,a.jsxs)(n.p,{children:["For example, for the ",(0,a.jsx)(n.code,{children:"POST /api/my-account/primary-email"})," API, you need to configure the ",(0,a.jsx)(n.code,{children:"email"})," scope; for the ",(0,a.jsx)(n.code,{children:"POST /api/my-account/primary-phone"})," API, you need to configure the ",(0,a.jsx)(n.code,{children:"phone"})," scope."]}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ts",children:"import { type LogtoConfig, UserScope } from '@logto/js';\n\nconst config: LogtoConfig = {\n  // ...other options\n  // Add proper scopes that fit your use cases.\n  scopes: [\n    UserScope.Email, // For `{POST,DELETE} /api/my-account/primary-email` APIs\n    UserScope.Phone, // For `{POST,DELETE} /api/my-account/primary-phone` APIs\n    UserScope.CustomData, // To manage custom data\n    UserScope.Address, // To manage address\n    UserScope.Identities, // For identity and MFA related APIs\n    UserScope.Profile, // To manage user profile\n  ],\n};\n"})})]}),"\n",(0,a.jsx)(n.p,{children:"With the Logto Account API, you can build a custom account management system like a profile page that is fully integrated with Logto."}),"\n",(0,a.jsx)(n.p,{children:"Some frequent use cases are listed below:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Retrieve user profile"}),"\n",(0,a.jsx)(n.li,{children:"Update user profile"}),"\n",(0,a.jsx)(n.li,{children:"Update user password"}),"\n",(0,a.jsx)(n.li,{children:"Update user identities including email, phone, and social connections"}),"\n",(0,a.jsx)(n.li,{children:"Manage MFA factors (verifications)"}),"\n"]}),"\n",(0,a.jsxs)(n.p,{children:["To learn more about the available APIs, please visit ",(0,a.jsx)(n.a,{href:"https://openapi.logto.io/group/endpoint-my-account",children:"Logto Account API Reference"})," and ",(0,a.jsx)(n.a,{href:"https://openapi.logto.io/group/endpoint-verifications",children:"Logto Verification API Reference"}),"."]}),"\n",(0,a.jsxs)(n.admonition,{type:"note",children:[(0,a.jsxs)(n.p,{children:["Dedicated Account APIs for the following settings are coming soon: SSO, Custom data (user), and Account deletion. In the meantime, you can implement these features using the Logto Management APIs. See ",(0,a.jsx)(n.a,{href:"/end-user-flows/account-settings/by-management-api",children:"Account settings by Management API"})," for more details."]}),(0,a.jsxs)(n.p,{children:["MFA management APIs (TOTP and backup codes) are currently under development and only available when the ",(0,a.jsx)(n.code,{children:"isDevFeaturesEnabled"})," flag is set to ",(0,a.jsx)(n.code,{children:"true"}),". WebAuthn passkey management is fully available."]})]}),"\n",(0,a.jsx)(n.h2,{id:"how-to-enable-account-api",children:"How to enable Account API"}),"\n",(0,a.jsxs)(n.p,{children:["By default, the Account API is disabled. To enable it, you need to use the ",(0,a.jsx)(n.a,{href:"/integrate-logto/interact-with-management-api",children:"Management API"})," to update the global settings."]}),"\n",(0,a.jsxs)(n.p,{children:["The API endpoint ",(0,a.jsx)(n.code,{children:"/api/account-center"})," can be used to retrieve and update the account center settings. You can use it to enable or disable the Account API and customize the fields."]}),"\n",(0,a.jsx)(n.p,{children:"Example request:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'curl -X PATCH https://[tenant-id].logto.app/api/account-center \\\n  -H \'authorization: Bearer <access_token for Logto Management API>\' \\\n  -H \'content-type: application/json\' \\\n  --data-raw \'{"enabled":true,"fields":{"username":"Edit"}}\'\n'})}),"\n",(0,a.jsxs)(n.p,{children:["The ",(0,a.jsx)(n.code,{children:"enabled"})," field is used to enable or disable the Account API, and the ",(0,a.jsx)(n.code,{children:"fields"})," field is used to customize the fields, the value can be ",(0,a.jsx)(n.code,{children:"Off"}),", ",(0,a.jsx)(n.code,{children:"Edit"}),", ",(0,a.jsx)(n.code,{children:"ReadOnly"}),". The default value is ",(0,a.jsx)(n.code,{children:"Off"}),". The list of fields:"]}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"name"}),": The name field."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"avatar"}),": The avatar field."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"profile"}),": The profile field, including its sub fields."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"username"}),": The username field."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"email"}),": The email field."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"phone"}),": The phone field."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"password"}),": The password field, when getting, it will return ",(0,a.jsx)(n.code,{children:"true"})," if the user has set a password, otherwise ",(0,a.jsx)(n.code,{children:"false"}),"."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"social"}),": Social connections."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"mfa"}),": MFA factors."]}),"\n"]}),"\n",(0,a.jsxs)(n.p,{children:["Learn more about the API details in ",(0,a.jsx)(n.a,{href:"https://openapi.logto.io/group/endpoint-account-center",children:"Logto Management API Reference"}),"."]}),"\n",(0,a.jsx)(n.h2,{id:"how-to-access-account-api",children:"How to access Account API"}),"\n",(0,a.jsx)(n.h3,{id:"fetch-an-access-token",children:"Fetch an access token"}),"\n",(0,a.jsxs)(n.p,{children:["After setting up the SDK in your application, you can use the ",(0,a.jsx)(n.code,{children:"client.getAccessToken()"})," method to fetch an access token. This token is an opaque token that can be used to access the Account API."]}),"\n",(0,a.jsxs)(n.p,{children:["If you are not using the official SDK, you should set the ",(0,a.jsx)(n.code,{children:"resource"})," to empty for the access token grant request to ",(0,a.jsx)(n.code,{children:"/oidc/token"}),"."]}),"\n",(0,a.jsx)(n.h3,{id:"access-account-api-using-access-token",children:"Access Account API using access token"}),"\n",(0,a.jsxs)(n.p,{children:["You should include the access token in the ",(0,a.jsx)(n.code,{children:"Authorization"})," field of HTTP headers with the Bearer format (",(0,a.jsx)(n.code,{children:"Bearer YOUR_TOKEN"}),") when interacting with the Account API."]}),"\n",(0,a.jsx)(n.p,{children:"Here's an example to get the user account information:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"curl https://[tenant-id].logto.app/api/my-account \\\n  -H 'authorization: Bearer <access_token>'\n"})}),"\n",(0,a.jsx)(n.h2,{id:"manage-basic-account-information",children:"Manage basic account information"}),"\n",(0,a.jsx)(n.h3,{id:"retrieve-user-account-information",children:"Retrieve user account information"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"curl https://[tenant-id].logto.app/api/my-account \\\n  -H 'authorization: Bearer <access_token>'\n"})}),"\n",(0,a.jsx)(n.p,{children:"The response body would be like:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-json",children:'{\n  "id": "...",\n  "username": "...",\n  "name": "...",\n  "avatar": "..."\n}\n'})}),"\n",(0,a.jsx)(n.p,{children:"The response fields may vary depending on the account center settings."}),"\n",(0,a.jsx)(n.h3,{id:"update-basic-account-information",children:"Update basic account information"}),"\n",(0,a.jsx)(n.p,{children:"Basic account information includes the username, name, avatar, and profile."}),"\n",(0,a.jsxs)(n.p,{children:["To update username, name, and avatar, you can use the ",(0,a.jsx)(n.code,{children:"PATCH /api/my-account"})," endpoint."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'curl -X PATCH https://[tenant-id].logto.app/api/my-account \\\n  -H \'authorization: Bearer <access_token>\' \\\n  -H \'content-type: application/json\' \\\n  --data-raw \'{"username":"...","name":"...","avatar":"..."}\'\n'})}),"\n",(0,a.jsxs)(n.p,{children:["To update profile, you can use the ",(0,a.jsx)(n.code,{children:"PATCH /api/my-account/profile"})," endpoint."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'curl -X PATCH https://[tenant-id].logto.app/api/my-account/profile \\\n  -H \'authorization: Bearer <access_token>\' \\\n  -H \'content-type: application/json\' \\\n  --data-raw \'{"familyName":"...","givenName":"..."}\'\n'})}),"\n",(0,a.jsx)(n.h2,{id:"manage-identifiers-and-other-sensitive-information",children:"Manage identifiers and other sensitive information"}),"\n",(0,a.jsx)(n.p,{children:"For security reasons, the Account API requires an additional layer of authorization for operations that involve identifiers and other sensitive information."}),"\n",(0,a.jsx)(n.h3,{id:"get-a-verification-record-id",children:"Get a verification record id"}),"\n",(0,a.jsx)(n.p,{children:"First, you need to get a verification record ID. This can be used to verify the user's identity when updating identifiers."}),"\n",(0,a.jsx)(n.p,{children:"To get a verification record ID, you can verify the user's password or send a verification code to the user's email or phone."}),"\n",(0,a.jsxs)(n.p,{children:["To learn more about verifications, please refer to ",(0,a.jsx)(n.a,{href:"/end-user-flows/security-verification",children:"Security verification by Account API"}),"."]}),"\n",(0,a.jsx)(n.h4,{id:"verify-the-users-password",children:"Verify the user's password"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"curl -X POST https://[tenant-id].logto.app/api/verifications/password \\\n  -H 'authorization: Bearer <access_token>' \\\n  -H 'content-type: application/json' \\\n  --data-raw '{\"password\":\"...\"}'\n"})}),"\n",(0,a.jsx)(n.p,{children:"The response body would be like:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-json",children:'{\n  "verificationRecordId": "...",\n  "expiresAt": "..."\n}\n'})}),"\n",(0,a.jsx)(n.h4,{id:"verify-by-sending-a-verification-code-to-the-users-email-or-phone",children:"Verify by sending a verification code to the user's email or phone"}),"\n",(0,a.jsx)(n.admonition,{type:"note",children:(0,a.jsxs)(n.p,{children:["To use this method, you need to ",(0,a.jsx)(n.a,{href:"/connectors/email-connectors/",children:"configure the email connector"})," or ",(0,a.jsx)(n.a,{href:"/connectors/sms-connectors/",children:"SMS connector"}),", and make sure the ",(0,a.jsx)(n.code,{children:"UserPermissionValidation"})," template is configured."]})}),"\n",(0,a.jsx)(n.p,{children:"Take email as an example, request a new verification code and get the verification record ID:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'curl -X POST https://[tenant-id].logto.app/api/verifications/verification-code \\\n  -H \'authorization: Bearer <access_token>\' \\\n  -H \'content-type: application/json\' \\\n  --data-raw \'{"identifier":{"type":"email","value":"..."}}\'\n'})}),"\n",(0,a.jsx)(n.p,{children:"The response body would be like:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-json",children:'{\n  "verificationRecordId": "...",\n  "expiresAt": "..."\n}\n'})}),"\n",(0,a.jsx)(n.p,{children:"Upon receiving the verification code, you can use it to update the verification status of the verification record."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'curl -X POST https://[tenant-id].logto.app/api/verifications/verification-code/verify \\\n  -H \'authorization: Bearer <access_token>\' \\\n  -H \'content-type: application/json\' \\\n  --data-raw \'{"identifier":{"type":"email","value":"..."},"verificationId":"...","code":"123456"}\'\n'})}),"\n",(0,a.jsx)(n.p,{children:"After verifying the code, you can now use the verification record ID to update the user's identifier."}),"\n",(0,a.jsx)(n.h3,{id:"send-request-with-verification-record-id",children:"Send request with verification record id"}),"\n",(0,a.jsxs)(n.p,{children:["When sending a request to update the user's identifier, you need to include the verification record ID in the request header with the ",(0,a.jsx)(n.code,{children:"logto-verification-id"})," field."]}),"\n",(0,a.jsx)(n.h3,{id:"update-users-password",children:"Update user's password"}),"\n",(0,a.jsxs)(n.p,{children:["To update the user's password, you can use the ",(0,a.jsx)(n.code,{children:"POST /api/my-account/password"})," endpoint."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"curl -X POST https://[tenant-id].logto.app/api/my-account/password \\\n  -H 'authorization: Bearer <access_token>' \\\n  -H 'logto-verification-id: <verification_record_id>' \\\n  -H 'content-type: application/json' \\\n  --data-raw '{\"password\":\"...\"}'\n"})}),"\n",(0,a.jsx)(n.h3,{id:"update-or-link-new-email",children:"Update or link new email"}),"\n",(0,a.jsx)(n.admonition,{type:"note",children:(0,a.jsxs)(n.p,{children:["To use this method, you need to ",(0,a.jsx)(n.a,{href:"/connectors/email-connectors/",children:"configure the email connector"}),", and make sure the ",(0,a.jsx)(n.code,{children:"BindNewIdentifier"})," template is configured."]})}),"\n",(0,a.jsx)(n.p,{children:"To update or link a new email, you should first prove the ownership of the email."}),"\n",(0,a.jsxs)(n.p,{children:["Call the ",(0,a.jsx)(n.code,{children:"POST /api/verifications/verification-code"})," endpoint to request a verification code."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'curl -X POST https://[tenant-id].logto.app/api/verifications/verification-code \\\n  -H \'authorization: Bearer <access_token>\' \\\n  -H \'content-type: application/json\' \\\n  --data-raw \'{"identifier":{"type":"email","value":"..."}}\'\n'})}),"\n",(0,a.jsxs)(n.p,{children:["You will find a ",(0,a.jsx)(n.code,{children:"verificationId"})," in the response, and receive a verification code in the email, use it to verify the email."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'curl -X POST https://[tenant-id].logto.app/api/verifications/verification-code/verify \\\n  -H \'authorization: Bearer <access_token>\' \\\n  -H \'content-type: application/json\' \\\n  --data-raw \'{"identifier":{"type":"email","value":"..."},"verificationId":"...","code":"..."}\'\n'})}),"\n",(0,a.jsxs)(n.p,{children:["After verifying the code, you can now update the user's email, set the ",(0,a.jsx)(n.code,{children:"verificationId"})," to the request body as ",(0,a.jsx)(n.code,{children:"newIdentifierVerificationRecordId"}),"."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"curl -X POST https://[tenant-id].logto.app/api/my-account/primary-email \\\n  -H 'authorization: Bearer <access_token>' \\\n  -H 'logto-verification-id: <verification_record_id>' \\\n  -H 'content-type: application/json' \\\n  --data-raw '{\"email\":\"...\",\"newIdentifierVerificationRecordId\":\"...\"}'\n"})}),"\n",(0,a.jsx)(n.h3,{id:"remove-the-users-email",children:"Remove the user's email"}),"\n",(0,a.jsxs)(n.p,{children:["To remove the user's email, you can use the ",(0,a.jsx)(n.code,{children:"DELETE /api/my-account/primary-email"})," endpoint."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"curl -X DELETE https://[tenant-id].logto.app/api/my-account/primary-email \\\n  -H 'authorization: Bearer <access_token>' \\\n  -H 'logto-verification-id: <verification_record_id>'\n"})}),"\n",(0,a.jsx)(n.h3,{id:"manage-phone",children:"Manage phone"}),"\n",(0,a.jsx)(n.admonition,{type:"note",children:(0,a.jsxs)(n.p,{children:["To use this method, you need to ",(0,a.jsx)(n.a,{href:"/connectors/sms-connectors/",children:"configure the SMS connector"}),", and make sure the ",(0,a.jsx)(n.code,{children:"BindNewIdentifier"})," template is configured."]})}),"\n",(0,a.jsxs)(n.p,{children:["Similar to updating email, you can use the ",(0,a.jsx)(n.code,{children:"PATCH /api/my-account/primary-phone"})," endpoint to update or link a new phone. And use the ",(0,a.jsx)(n.code,{children:"DELETE /api/my-account/primary-phone"})," endpoint to remove the user's phone."]}),"\n",(0,a.jsx)(n.h3,{id:"link-a-new-social-connection",children:"Link a new social connection"}),"\n",(0,a.jsx)(n.p,{children:"To link a new social connection, first you should request an authorization URL:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'curl -X POST https://[tenant-id].logto.app/api/verifications/social \\\n  -H \'authorization: Bearer <access_token>\' \\\n  -H \'content-type: application/json\' \\\n  --data-raw \'{"connectorId":"...","redirectUri":"...","state":"..."}\'\n'})}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"connectorId"}),": The ID of the ",(0,a.jsx)(n.a,{href:"/connectors/social-connectors/",children:"social connector"}),"."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"redirectUri"}),": The redirect URI after the user authorizes the application, you should host a web page at this URL and capture the callback."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"state"}),": The state to be returned after the user authorizes the application, it is a random string that is used to prevent CSRF attacks."]}),"\n"]}),"\n",(0,a.jsxs)(n.p,{children:["In the response, you will find a ",(0,a.jsx)(n.code,{children:"verificationRecordId"}),", keep it for later use."]}),"\n",(0,a.jsxs)(n.p,{children:["After the user authorizes the application, you will receive a callback at the ",(0,a.jsx)(n.code,{children:"redirectUri"})," with the ",(0,a.jsx)(n.code,{children:"state"})," parameter. Then you can use the ",(0,a.jsx)(n.code,{children:"POST /api/verifications/social/verify"})," endpoint to verify the social connection."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'curl -X POST https://[tenant-id].logto.app/api/verifications/social/verify \\\n  -H \'authorization: Bearer <access_token>\' \\\n  -H \'content-type: application/json\' \\\n  --data-raw \'{"connectorData":"...","verificationRecordId":"..."}\'\n'})}),"\n",(0,a.jsxs)(n.p,{children:["The ",(0,a.jsx)(n.code,{children:"connectorData"})," is the data returned by the social connector after the user authorizes the application, you need to parse and get the query parameters from the ",(0,a.jsx)(n.code,{children:"redirectUri"})," in your callback page, and wrap them as a JSON as the value of the ",(0,a.jsx)(n.code,{children:"connectorData"})," field."]}),"\n",(0,a.jsxs)(n.p,{children:["Finally, you can use the ",(0,a.jsx)(n.code,{children:"POST /api/my-account/identities"})," endpoint to link the social connection."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"curl -X POST https://[tenant-id].logto.app/api/my-account/identities \\\n  -H 'authorization: Bearer <access_token>' \\\n  -H 'logto-verification-id: <verification_record_id>' \\\n  -H 'content-type: application/json' \\\n  --data-raw '{\"newIdentifierVerificationRecordId\":\"...\"}'\n"})}),"\n",(0,a.jsx)(n.h3,{id:"remove-a-social-connection",children:"Remove a social connection"}),"\n",(0,a.jsxs)(n.p,{children:["To remove a social connection, you can use the ",(0,a.jsx)(n.code,{children:"DELETE /api/my-account/identities"})," endpoint."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"curl -X DELETE https://[tenant-id].logto.app/api/my-account/identities/[connector_target_id] \\\n  -H 'authorization: Bearer <access_token>' \\\n  -H 'logto-verification-id: <verification_record_id>'\n"})}),"\n",(0,a.jsx)(n.h3,{id:"link-a-new-webauthn-passkey",children:"Link a new WebAuthn passkey"}),"\n",(0,a.jsx)(n.admonition,{type:"note",children:(0,a.jsxs)(n.p,{children:["Remember to ",(0,a.jsx)(n.a,{href:"/end-user-flows/mfa",children:"enable MFA and WebAuthn"})," first."]})}),"\n",(0,a.jsx)(n.admonition,{type:"note",children:(0,a.jsxs)(n.p,{children:["To use this method, you need to enable the ",(0,a.jsx)(n.code,{children:"mfa"})," field in the account center settings."]})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Step 0: Add your front-end app origin to the related origins."})}),"\n",(0,a.jsx)(n.p,{children:"A passkey in Browser is linked to a specific hostname (RP ID), and only the origin of the RP ID can be used to register or verify a passkey. However, your front-end app which is sending the request to the Account API is not the same as Logto's sign-in page, so you need to add your front-end app origin to the related origins list. This will allow your front-end app to register and verify a passkey under other RP IDs."}),"\n",(0,a.jsxs)(n.p,{children:["By default, Logto will set the RP ID to the tenant domain, for example, if your tenant domain is ",(0,a.jsx)(n.code,{children:"https://example.logto.app"}),", the RP ID will be ",(0,a.jsx)(n.code,{children:"example.logto.app"}),". If you are using a custom domain, the RP ID will be the custom domain, for example, if your custom domain is ",(0,a.jsx)(n.code,{children:"https://auth.example.com"}),", the RP ID will be ",(0,a.jsx)(n.code,{children:"auth.example.com"}),"."]}),"\n",(0,a.jsxs)(n.p,{children:["Now, let's add your front-end app origin to the related origins, for example, if your front-end app origin is ",(0,a.jsx)(n.code,{children:"https://account.example.com"}),":"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"curl -X PATCH https://[tenant-id].logto.app/api/webauthn-connectors \\\n  -H 'authorization: Bearer <access_token>' \\\n  -H 'content-type: application/json' \\\n  --data-raw '{\"webauthnRelatedOrigins\":[\"https://account.example.com\"]}'\n"})}),"\n",(0,a.jsxs)(n.p,{children:["To learn more about the related origins, please refer to ",(0,a.jsx)(n.a,{href:"https://passkeys.dev/docs/advanced/related-origins/",children:"Related Origin Requests"})," documentation."]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Step 1: request new registration options."})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"curl -X POST https://[tenant-id].logto.app/api/verifications/web-authn/registration \\\n  -H 'authorization: Bearer <access_token>' \\\n  -H 'content-type: application/json'\n"})}),"\n",(0,a.jsx)(n.p,{children:"You'll get a response like:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-json",children:'{\n  "registrationOptions": "...",\n  "verificationRecordId": "...",\n  "expiresAt": "..."\n}\n'})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Step 2: register the passkey in local browser."})}),"\n",(0,a.jsxs)(n.p,{children:["Take ",(0,a.jsx)(n.a,{href:"https://simplewebauthn.dev/",children:(0,a.jsx)(n.code,{children:"@simplewebauthn/browser"})})," as an example, you can use the ",(0,a.jsx)(n.code,{children:"startRegistration"})," function to register the passkey in local browser."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ts",children:"import { startRegistration } from '@simplewebauthn/browser';\n\n// ...\nconst response = await startRegistration({\n  optionsJSON: registrationOptions, // The data returned by the server in step 1\n});\n// Save the response for later use\n"})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Step 3: verify the passkey."})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'curl -X POST https://[tenant-id].logto.app/api/verifications/web-authn/registration/verify \\\n  -H \'authorization: Bearer <access_token>\' \\\n  -H \'content-type: application/json\' \\\n  --data-raw \'{"payload":"...","verificationRecordId":"..."}\'\n'})}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"payload"}),": The response from the local browser in step 2."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"verificationRecordId"}),": The verification record ID returned by the server in step 1."]}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Step 4: finally, you can link the passkey."})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"curl -X POST https://[tenant-id].logto.app/api/my-account/mfa-verifications \\\n  -H 'authorization: Bearer <access_token>' \\\n  -H 'logto-verification-id: <verification_record_id>' \\\n  -H 'content-type: application/json' \\\n  --data-raw '{\"type\":\"WebAuthn\",\"newIdentifierVerificationRecordId\":\"...\"}'\n"})}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"verification_record_id"}),": a valid verification record ID, granted by verifying the user's existing factor, you can refer to the ",(0,a.jsx)(n.a,{href:"#get-a-verification-record-id",children:"Get a verification record ID"})," section for more details."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"type"}),": the type of the MFA factor, currently only ",(0,a.jsx)(n.code,{children:"WebAuthn"})," is supported."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"newIdentifierVerificationRecordId"}),": the verification record ID returned by the server in step 1."]}),"\n"]}),"\n",(0,a.jsx)(n.h3,{id:"manage-existing-webauthn-passkey",children:"Manage existing WebAuthn passkey"}),"\n",(0,a.jsxs)(n.p,{children:["To manage an existing WebAuthn passkey, you can use the ",(0,a.jsx)(n.code,{children:"GET /api/my-account/mfa-verifications"})," endpoint to get current passkeys and other MFA verification factors."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"curl https://[tenant-id].logto.app/api/my-account/mfa-verifications \\\n  -H 'authorization: Bearer <access_token>'\n"})}),"\n",(0,a.jsx)(n.p,{children:"The response body would be like:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-json",children:'[\n  {\n    "id": "...",\n    "type": "WebAuthn",\n    "name": "...",\n    "agent": "...",\n    "createdAt": "...",\n    "updatedAt": "..."\n  }\n]\n'})}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"id"}),": the ID of the verification."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"type"}),": the type of the verification, ",(0,a.jsx)(n.code,{children:"WebAuthn"})," for WebAuthn passkey."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"name"}),": the name of the passkey, optional field."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"agent"}),": the user agent of the passkey."]}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"Update the passkey name:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"curl -X PATCH https://[tenant-id].logto.app/api/my-account/mfa-verifications/{verificationId}/name \\\n  -H 'authorization: Bearer <access_token>' \\\n  -H 'logto-verification-id: <verification_record_id>' \\\n  -H 'content-type: application/json' \\\n  --data-raw '{\"name\":\"...\"}'\n"})}),"\n",(0,a.jsx)(n.p,{children:"Delete the passkey:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"curl -X DELETE https://[tenant-id].logto.app/api/my-account/mfa-verifications/{verificationId} \\\n  -H 'authorization: Bearer <access_token>' \\\n  -H 'logto-verification-id: <verification_record_id>'\n"})}),"\n",(0,a.jsx)(n.h3,{id:"link-a-new-totp",children:"Link a new TOTP"}),"\n",(0,a.jsx)(n.admonition,{type:"note",children:(0,a.jsxs)(n.p,{children:["Remember to ",(0,a.jsx)(n.a,{href:"/end-user-flows/mfa",children:"enable MFA and TOTP"})," first."]})}),"\n",(0,a.jsx)(n.admonition,{type:"note",children:(0,a.jsxs)(n.p,{children:["To use this method, you need to enable the ",(0,a.jsx)(n.code,{children:"mfa"})," field in the account center settings."]})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Step 1: Generate a TOTP secret."})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"curl -X POST https://[tenant-id].logto.app/api/my-account/mfa-verifications/totp-secret/generate \\\n  -H 'authorization: Bearer <access_token>' \\\n  -H 'content-type: application/json'\n"})}),"\n",(0,a.jsx)(n.p,{children:"The response body would be like:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-json",children:'{\n  "secret": "..."\n}\n'})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Step 2: Display the TOTP secret to the user."})}),"\n",(0,a.jsx)(n.p,{children:"Use the secret to generate a QR code or display it directly to the user. The user should add it to their authenticator app (such as Google Authenticator, Microsoft Authenticator, or Authy)."}),"\n",(0,a.jsx)(n.p,{children:"The URI format for the QR code should be:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:"otpauth://totp/[Issuer]:[Account]?secret=[Secret]&issuer=[Issuer]\n"})}),"\n",(0,a.jsx)(n.p,{children:"Example:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:"otpauth://totp/YourApp:user@example.com?secret=JBSWY3DPEHPK3PXP&issuer=YourApp\n"})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Step 3: Bind the TOTP factor."})}),"\n",(0,a.jsx)(n.p,{children:"After the user has added the secret to their authenticator app, they need to verify it and bind it to their account:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"curl -X POST https://[tenant-id].logto.app/api/my-account/mfa-verifications \\\n  -H 'authorization: Bearer <access_token>' \\\n  -H 'logto-verification-id: <verification_record_id>' \\\n  -H 'content-type: application/json' \\\n  --data-raw '{\"type\":\"Totp\",\"secret\":\"...\"}'\n"})}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"verification_record_id"}),": a valid verification record ID, granted by verifying the user's existing factor. You can refer to the ",(0,a.jsx)(n.a,{href:"#get-a-verification-record-id",children:"Get a verification record ID"})," section for more details."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"type"}),": must be ",(0,a.jsx)(n.code,{children:"Totp"}),"."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"secret"}),": the TOTP secret generated in step 1."]}),"\n"]}),"\n",(0,a.jsx)(n.admonition,{type:"note",children:(0,a.jsx)(n.p,{children:"A user can only have one TOTP factor at a time. If the user already has a TOTP factor, attempting to add another one will result in a 422 error."})}),"\n",(0,a.jsx)(n.h3,{id:"manage-backup-codes",children:"Manage backup codes"}),"\n",(0,a.jsx)(n.admonition,{type:"note",children:(0,a.jsxs)(n.p,{children:["Remember to ",(0,a.jsx)(n.a,{href:"/end-user-flows/mfa",children:"enable MFA and backup codes"})," first."]})}),"\n",(0,a.jsx)(n.admonition,{type:"note",children:(0,a.jsxs)(n.p,{children:["To use this method, you need to enable the ",(0,a.jsx)(n.code,{children:"mfa"})," field in the account center settings."]})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Step 1: Generate new backup codes:"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"curl -X POST https://[tenant-id].logto.app/api/my-account/mfa-verifications/backup-codes/generate \\\n  -H 'authorization: Bearer <access_token>' \\\n  -H 'content-type: application/json'\n"})}),"\n",(0,a.jsx)(n.p,{children:"The response body would be like:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-json",children:'{\n  "codes": ["...", "...", "..."]\n}\n'})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Step 2: Display backup codes to the user:"})}),"\n",(0,a.jsxs)(n.admonition,{type:"important",children:[(0,a.jsx)(n.p,{children:"Before binding the backup codes to the user's account, you must display them to the user and instruct them to:"}),(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Download or write down these codes immediately"}),"\n",(0,a.jsx)(n.li,{children:"Store them in a secure location"}),"\n",(0,a.jsx)(n.li,{children:"Understand that each code can only be used once"}),"\n",(0,a.jsx)(n.li,{children:"Know that these codes are their last resort if they lose access to their primary MFA methods"}),"\n"]}),(0,a.jsx)(n.p,{children:"You should display the codes in a clear, easy-to-copy format and consider providing a download option (e.g., as a text file or PDF)."})]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Step 3: Bind backup codes to the user account:"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'curl -X POST https://[tenant-id].logto.app/api/my-account/mfa-verifications \\\n  -H \'authorization: Bearer <access_token>\' \\\n  -H \'logto-verification-id: <verification_record_id>\' \\\n  -H \'content-type: application/json\' \\\n  --data-raw \'{"type":"BackupCode","codes":["...","...","..."]}\'\n'})}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"verification_record_id"}),": a valid verification record ID, granted by verifying the user's existing factor. You can refer to the ",(0,a.jsx)(n.a,{href:"#get-a-verification-record-id",children:"Get a verification record ID"})," section for more details."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"type"}),": must be ",(0,a.jsx)(n.code,{children:"BackupCode"}),"."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"codes"}),": the array of backup codes generated in the previous step."]}),"\n"]}),"\n",(0,a.jsx)(n.admonition,{type:"note",children:(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"A user can only have one set of backup codes at a time. If all codes have been used, the user needs to generate and bind new codes."}),"\n",(0,a.jsx)(n.li,{children:"Backup codes cannot be the only MFA factor. The user must have at least one other MFA factor (such as WebAuthn or TOTP) enabled."}),"\n",(0,a.jsx)(n.li,{children:"Each backup code can only be used once."}),"\n"]})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"View existing backup codes:"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"curl https://[tenant-id].logto.app/api/my-account/mfa-verifications/backup-codes \\\n  -H 'authorization: Bearer <access_token>'\n"})}),"\n",(0,a.jsx)(n.p,{children:"The response body would be like:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-json",children:'{\n  "codes": [\n    {\n      "code": "...",\n      "usedAt": null\n    },\n    {\n      "code": "...",\n      "usedAt": "2024-01-15T10:30:00.000Z"\n    }\n  ]\n}\n'})}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"code"}),": the backup code."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"usedAt"}),": the timestamp when the code was used, ",(0,a.jsx)(n.code,{children:"null"})," if not used yet."]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(l,{...e})}):l(e)}},79621:(e,n,i)=>{i.d(n,{R:()=>s,x:()=>c});var t=i(58101);const a={},o=t.createContext(a);function s(e){const n=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:s(e.components),t.createElement(o.Provider,{value:n},e.children)}}}]);