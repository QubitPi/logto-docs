"use strict";(self.webpackChunk_logto_docs=self.webpackChunk_logto_docs||[]).push([[63718],{49613:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return p}});var o=n(59496);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function a(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},i=Object.keys(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var d=o.createContext({}),c=function(e){var t=o.useContext(d),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},u=function(e){var t=c(e.components);return o.createElement(d.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},k=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,d=e.parentName,u=a(e,["components","mdxType","originalType","parentName"]),k=c(n),p=r,m=k["".concat(d,".").concat(p)]||k[p]||s[p]||i;return n?o.createElement(m,l(l({ref:t},u),{},{components:n})):o.createElement(m,l({ref:t},u))}));function p(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,l=new Array(i);l[0]=k;var a={};for(var d in t)hasOwnProperty.call(t,d)&&(a[d]=t[d]);a.originalType=e,a.mdxType="string"==typeof e?e:r,l[1]=a;for(var c=2;c<i;c++)l[c]=n[c];return o.createElement.apply(null,l)}return o.createElement.apply(null,n)}k.displayName="MDXCreateElement"},91558:function(e,t,n){n.r(t),n.d(t,{assets:function(){return u},contentTitle:function(){return d},default:function(){return p},frontMatter:function(){return a},metadata:function(){return c},toc:function(){return s}});var o=n(665),r=n(40151),i=(n(59496),n(49613)),l=["components"],a={},d="decodeIdToken",c={unversionedId:"sdk/Kotlin/kotlin/io.logto.sdk.core.util/-token-utils/decode-id-token",id:"version-1.x/sdk/Kotlin/kotlin/io.logto.sdk.core.util/-token-utils/decode-id-token",title:"decodeIdToken",description:"fun decodeIdToken(token IdTokenClaims",source:"@site/versioned_docs/version-1.x/sdk/Kotlin/kotlin/io.logto.sdk.core.util/-token-utils/decode-id-token.md",sourceDirName:"sdk/Kotlin/kotlin/io.logto.sdk.core.util/-token-utils",slug:"/sdk/Kotlin/kotlin/io.logto.sdk.core.util/-token-utils/decode-id-token",permalink:"/sdk/Kotlin/kotlin/io.logto.sdk.core.util/-token-utils/decode-id-token",draft:!1,editUrl:"https://github.com/logto-io/docs/tree/master/versioned_docs/version-1.x/sdk/Kotlin/kotlin/io.logto.sdk.core.util/-token-utils/decode-id-token.md",tags:[],version:"1.x",frontMatter:{},sidebar:"sdkSidebar",previous:{title:"TokenUtils",permalink:"/sdk/Kotlin/kotlin/io.logto.sdk.core.util/-token-utils/"},next:{title:"verifyIdToken",permalink:"/sdk/Kotlin/kotlin/io.logto.sdk.core.util/-token-utils/verify-id-token"}},u={},s=[{value:"Return",id:"return",level:4},{value:"Parameters",id:"parameters",level:2},{value:"Throws",id:"throws",level:2}],k={toc:s};function p(e){var t=e.components,n=(0,r.Z)(e,l);return(0,i.kt)("wrapper",(0,o.Z)({},k,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"decodeidtoken"},"decodeIdToken"),(0,i.kt)("p",null,"fun decodeIdToken(token: ",(0,i.kt)("a",{parentName:"p",href:"https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-string/index.html"},"String"),"): ",(0,i.kt)("a",{parentName:"p",href:"/sdk/Kotlin/kotlin/io.logto.sdk.core.type/-id-token-claims/"},"IdTokenClaims")),(0,i.kt)("p",null,"Decode ID token without verification"),(0,i.kt)("h4",{id:"return"},"Return"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/sdk/Kotlin/kotlin/io.logto.sdk.core.type/-id-token-claims/"},"IdTokenClaims")),(0,i.kt)("h2",{id:"parameters"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Name"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"token"),(0,i.kt)("td",{parentName:"tr",align:null},"the row string ID token to be decoded")))),(0,i.kt)("h2",{id:"throws"},"Throws"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Exception"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"org.jose4j.jwt.consumer.InvalidJwtException")))))}p.isMDXComponent=!0}}]);