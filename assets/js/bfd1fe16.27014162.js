"use strict";(self.webpackChunk_logto_docs=self.webpackChunk_logto_docs||[]).push([[5448],{56659:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>p,frontMatter:()=>t,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"authorization/organization-template","title":"Organization template","description":"The organization template in Logto defines a consistent set of roles and permissions available to every organization (tenant) in your SaaS product. By centralizing these definitions, you can enforce security, enable scalable onboarding, and ensure an excellent user experience across all organizations.","source":"@site/docs/authorization/organization-template.mdx","sourceDirName":"authorization","slug":"/authorization/organization-template","permalink":"/authorization/organization-template","draft":false,"unlisted":false,"editUrl":"https://github.com/logto-io/docs/tree/master/docs/authorization/organization-template.mdx","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2},"sidebar":"docsSidebar","previous":{"title":"Role-based access control (RBAC)","permalink":"/authorization/role-based-access-control"},"next":{"title":"Protect global API resources","permalink":"/authorization/global-api-resources"}}');var o=i(25105),r=i(79621);const a=i.p+"assets/images/organization-template-c98a7c16f0e509728e3b063306cf3063.png",t={sidebar_position:2},l="Organization template",c={},d=[{value:"What is the organization template?",id:"what-is-the-organization-template",level:2},{value:"Core concepts",id:"core-concepts",level:3},{value:"Comparison with global roles and permissions",id:"comparison-with-global-roles-and-permissions",level:3},{value:"Anatomy of an organization template",id:"anatomy-of-an-organization-template",level:3},{value:"Use organization template in your product",id:"use-organization-template-in-your-product",level:2},{value:"Best practices &amp; versioning",id:"best-practices-versioning",level:3},{value:"Managing your organization template",id:"managing-your-organization-template",level:2},{value:"FAQs",id:"faqs",level:2},{value:"Do I have to use organization permissions?",id:"do-i-have-to-use-organization-permissions",level:3},{value:"What happens if I change the organization template?",id:"what-happens-if-i-change-the-organization-template",level:3},{value:"Can I customize roles or permissions per organization?",id:"can-i-customize-roles-or-permissions-per-organization",level:3},{value:"How do I roll back or migrate changes?",id:"how-do-i-roll-back-or-migrate-changes",level:3},{value:"What if I delete a role or permission?",id:"what-if-i-delete-a-role-or-permission",level:3},{value:"Are there limitations?",id:"are-there-limitations",level:3},{value:"Further reading",id:"further-reading",level:2}];function h(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",strong:"strong",ul:"ul",...(0,r.R)(),...e.components},{CloudLink:i,Details:s,Url:t}=n;return i||m("CloudLink",!0),s||m("Details",!0),t||m("Url",!0),(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"organization-template",children:"Organization template"})}),"\n",(0,o.jsxs)(n.p,{children:["The ",(0,o.jsx)(i,{to:"/organization-template",children:"organization template"})," in Logto defines a consistent set of roles and permissions available to every organization (tenant) in your SaaS product. By centralizing these definitions, you can enforce security, enable scalable onboarding, and ensure an excellent user experience across all organizations."]}),"\n",(0,o.jsx)(n.admonition,{type:"info",children:(0,o.jsx)(n.p,{children:"If you are not building a multi-tenant application or do not need organization-specific roles/permissions, you can skip this section. Logto's global roles and permissions are sufficient for single-tenant or non-organization-based applications."})}),"\n",(0,o.jsx)(n.h2,{id:"what-is-the-organization-template",children:"What is the organization template?"}),"\n",(0,o.jsx)(n.p,{children:"An organization template is a blueprint that specifies which roles and permissions are available in each organization. Every organization created in your Logto tenant automatically inherits the template, guaranteeing a consistent authorization model across all tenants."}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Why use a template?"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Enforces uniform access control policies for every organization."}),"\n",(0,o.jsx)(n.li,{children:"Simplifies onboarding for new tenants and team members."}),"\n",(0,o.jsx)(n.li,{children:"Makes role-based access control (RBAC) updates and audits easier as your product grows."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"core-concepts",children:"Core concepts"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Organization roles:"})," Collections of permissions granted to users or M2M (machine-to-machine) clients within an organization. Roles define \u201cwho can do what\u201d inside each organization."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Organization permissions:"})," Fine-grained non-API actions (e.g., UI features, business logic) that can be assigned to roles."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"API resources:"})," API endpoints/services protected by permissions. Organization roles can be linked to API resources for organization-scoped API access."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Role-permission mapping:"})," Each organization role in the template can be mapped to one or more permissions."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Template propagation:"})," Changes to the template update the roles and permissions available to all organizations."]}),"\n"]}),"\n",(0,o.jsx)(n.admonition,{type:"note",children:(0,o.jsx)(n.p,{children:"Organization roles and permissions (including API resource permissions) are distinct from global roles and their permissions. However, API resources and their permissions are centrally defined and can be referenced in both global and organization contexts."})}),"\n",(0,o.jsx)(n.h3,{id:"comparison-with-global-roles-and-permissions",children:"Comparison with global roles and permissions"}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Role type comparison"})}),"\n",(0,o.jsxs)("table",{children:[(0,o.jsx)("thead",{children:(0,o.jsxs)("tr",{children:[(0,o.jsx)("th",{style:{width:"200px"},children:"Role type"}),(0,o.jsx)("th",{children:"Can have API resource permissions?"}),(0,o.jsx)("th",{children:"Can have organization (non-API) permissions?"})]})}),(0,o.jsxs)("tbody",{children:[(0,o.jsxs)("tr",{children:[(0,o.jsx)("td",{children:"Global"}),(0,o.jsx)("td",{children:"Yes"}),(0,o.jsx)("td",{children:"No"})]}),(0,o.jsxs)("tr",{children:[(0,o.jsx)("td",{children:"Organization"}),(0,o.jsx)("td",{children:"Yes"}),(0,o.jsx)("td",{children:"Yes"})]})]})]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Permissions type comparison"})}),"\n",(0,o.jsxs)("table",{children:[(0,o.jsx)("thead",{children:(0,o.jsxs)("tr",{children:[(0,o.jsx)("th",{style:{width:"200px"},children:"Permission type"}),(0,o.jsx)("th",{children:"Defined in"}),(0,o.jsx)("th",{children:"Assignable to global roles?"}),(0,o.jsx)("th",{children:"Assignable to organization roles?"})]})}),(0,o.jsxs)("tbody",{children:[(0,o.jsxs)("tr",{children:[(0,o.jsx)("td",{children:"API resource"}),(0,o.jsx)("td",{children:"API resource entity"}),(0,o.jsx)("td",{children:"Yes"}),(0,o.jsx)("td",{children:"Yes"})]}),(0,o.jsxs)("tr",{children:[(0,o.jsx)("td",{children:"Organization"}),(0,o.jsx)("td",{children:"Organization template"}),(0,o.jsx)("td",{children:"No"}),(0,o.jsx)("td",{children:"Yes"})]})]})]}),"\n",(0,o.jsx)(n.h3,{id:"anatomy-of-an-organization-template",children:"Anatomy of an organization template"}),"\n",(0,o.jsx)(n.p,{children:"An organization template is made up of:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Roles:"})," E.g., ",(0,o.jsx)(n.code,{children:"Admin"}),", ",(0,o.jsx)(n.code,{children:"Member"}),", ",(0,o.jsx)(n.code,{children:"Viewer"}),", ",(0,o.jsx)(n.code,{children:"Billing"})]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Organization permissions:"})," E.g., ",(0,o.jsx)(n.code,{children:"invite:member"}),", ",(0,o.jsx)(n.code,{children:"manage:billing"}),", ",(0,o.jsx)(n.code,{children:"view:analytics"})]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Role-permission matrix:"})," A mapping of which permissions (including organization permissions and API resource permissions) are granted by each role."]}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Visual overview"})}),"\n",(0,o.jsx)("img",{src:a,alt:"Organization template overview",style:{width:"100%"}}),"\n",(0,o.jsx)("center",{children:(0,o.jsx)("figcaption",{children:(0,o.jsx)("i",{children:(0,o.jsx)(n.p,{children:"This diagram illustrates how organization roles, permissions, and API resources connect in a\nLogto organization template."})})})}),"\n",(0,o.jsx)(n.p,{children:"Each organization created in Logto will have this same set of roles and permissions, and users/clients can be assigned roles per organization as needed."}),"\n",(0,o.jsx)(n.h2,{id:"use-organization-template-in-your-product",children:"Use organization template in your product"}),"\n",(0,o.jsx)(n.p,{children:"Logto's organization template is designed for modern, multi-tenant SaaS applications where:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Each organization should have the same role and permission options for onboarding, collaboration, and management."}),"\n",(0,o.jsx)(n.li,{children:"You want to avoid manually defining roles/permissions for each new organization."}),"\n",(0,o.jsx)(n.li,{children:"Consistent RBAC is critical for compliance, security, and customer trust."}),"\n",(0,o.jsx)(n.li,{children:"You need to evolve access control as your product changes, without breaking existing organizations."}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Example use cases"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"SaaS products offering workspaces, teams, or companies (each a tenant)."}),"\n",(0,o.jsx)(n.li,{children:"Platforms with granular admin/member/viewer roles per organization."}),"\n",(0,o.jsx)(n.li,{children:"Products with both API and non-API permissions."}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"best-practices-versioning",children:"Best practices & versioning"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Keep roles and permissions business-driven:"})," Use clear names that map to real actions (not just technical endpoints)."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Avoid role/permission sprawl:"})," Start simple; add new roles/permissions only when your product genuinely needs them."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Communicate changes:"})," Let users/admins know if the role or permission options in their organizations are about to change."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Evolve the template:"})," As your product grows, you can update the template at any time. All organizations will automatically have access to new roles/permissions."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Versioning (optional):"})," For major changes, consider versioning your template and communicating migration plans to your customers."]}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"managing-your-organization-template",children:"Managing your organization template"}),"\n",(0,o.jsxs)(n.p,{children:["You can manage the organization template from the ",(0,o.jsx)(i,{to:"/organization-template",children:"Console \u2192 Organization template"})," or via the Logto Management API."]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Create roles:"})," Add user roles and M2M roles to your template. Each role is available to all organizations in your Logto tenant."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Create permissions:"})," Define permissions for both API resources and non-API (in-app) actions."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Edit the role-permission matrix:"})," Assign permissions to roles using Logto Console or Management API."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Update or delete roles/permissions:"})," Changes to the template are automatically applied to all organizations. (Users/clients keep their role assignments; only the permission set changes.)"]}),"\n"]}),"\n",(0,o.jsxs)(n.p,{children:["For step-by-step guides on managing the organization roles and permissions, see ",(0,o.jsx)(n.a,{href:"/authorization/role-based-access-control",children:"Role-based access control"}),"."]}),"\n",(0,o.jsx)(n.h2,{id:"faqs",children:"FAQs"}),"\n",(0,o.jsxs)(s,{children:[(0,o.jsx)("summary",{children:(0,o.jsx)(n.h3,{id:"do-i-have-to-use-organization-permissions",children:"Do I have to use organization permissions?"})}),(0,o.jsx)(n.p,{children:"No, organization permissions are optional. You can use the organization template solely for defining roles and API resource permissions if you prefer."})]}),"\n",(0,o.jsxs)(s,{children:[(0,o.jsx)("summary",{children:(0,o.jsx)(n.h3,{id:"what-happens-if-i-change-the-organization-template",children:"What happens if I change the organization template?"})}),(0,o.jsx)(n.p,{children:"Changes to roles or permissions are immediately reflected across all organizations. Users and clients keep their role assignments; only what those roles allow may change."})]}),"\n",(0,o.jsxs)(s,{children:[(0,o.jsx)("summary",{children:(0,o.jsx)(n.h3,{id:"can-i-customize-roles-or-permissions-per-organization",children:"Can I customize roles or permissions per organization?"})}),(0,o.jsx)(n.p,{children:"Not directly. Organization templates enforce a consistent model across all tenants. (You can still assign different roles to different users/clients in each organization.)"})]}),"\n",(0,o.jsxs)(s,{children:[(0,o.jsx)("summary",{children:(0,o.jsx)(n.h3,{id:"how-do-i-roll-back-or-migrate-changes",children:"How do I roll back or migrate changes?"})}),(0,o.jsx)(n.p,{children:"Manually update the template to restore previous roles/permissions. For complex migrations, consider versioning strategies."})]}),"\n",(0,o.jsxs)(s,{children:[(0,o.jsx)("summary",{children:(0,o.jsx)(n.h3,{id:"what-if-i-delete-a-role-or-permission",children:"What if I delete a role or permission?"})}),(0,o.jsx)(n.p,{children:"Users/clients with that role lose access to permissions tied to it. Deleting a permission removes it from all roles that had it."})]}),"\n",(0,o.jsxs)(s,{children:[(0,o.jsx)("summary",{children:(0,o.jsx)(n.h3,{id:"are-there-limitations",children:"Are there limitations?"})}),(0,o.jsxs)(n.p,{children:["Customization is at the template level, not per organization. ",(0,o.jsx)(n.a,{href:"https://logto.io/contact",children:"Contact us"})," if you need advanced per-tenant exceptions."]})]}),"\n",(0,o.jsx)(n.h2,{id:"further-reading",children:"Further reading"}),"\n",(0,o.jsx)(t,{href:"/authorization/organization-permissions",children:"Protect organization (non-API) permissions"}),"\n",(0,o.jsx)(t,{href:"/authorization/organization-level-api-resources",children:(0,o.jsx)(n.p,{children:"Protect organization-level API resources"})}),"\n",(0,o.jsx)(t,{href:"/developers/custom-token-claims",children:"Customizing token claims"})]})}function p(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(h,{...e})}):h(e)}function m(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},79621:(e,n,i)=>{i.d(n,{R:()=>a,x:()=>t});var s=i(58101);const o={},r=s.createContext(o);function a(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);