"use strict";(self.webpackChunk_logto_docs=self.webpackChunk_logto_docs||[]).push([[1551],{65544:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>r,default:()=>m,frontMatter:()=>s,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"integrations/email/http-mail/README","title":"Set up email verification via HTTP call","description":"The official Logto connector for HTTP email.","source":"@site/docs/integrations/email/http-mail/README.mdx","sourceDirName":"integrations/email/http-mail","slug":"/integrations/http-email","permalink":"/integrations/http-email","draft":false,"unlisted":false,"editUrl":"https://github.com/logto-io/docs/tree/master/docs/integrations/email/http-mail/README.mdx","tags":[],"version":"current","frontMatter":{"slug":"/integrations/http-email","sidebar_label":"HTTP Email","sidebar_custom_props":{"description":"Send email via HTTP call."}},"sidebar":"integrationsSidebar","previous":{"title":"AWS Direct Mail","permalink":"/integrations/aws-ses"},"next":{"title":"Mailgun","permalink":"/integrations/mailgun"}}');var a=n(25105),o=n(79621),l=n(75679);const s={slug:"/integrations/http-email",sidebar_label:"HTTP Email",sidebar_custom_props:{description:"Send email via HTTP call."}},r="Set up email verification via HTTP call",c={},d=[...l.RM,{value:"Get started",id:"get-started",level:2},{value:"Set up HTTP email connector",id:"set-up-http-email-connector",level:2},{value:"Payload",id:"payload",level:2}];function p(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.header,{children:(0,a.jsx)(t.h1,{id:"set-up-email-verification-via-http-call",children:"Set up email verification via HTTP call"})}),"\n",(0,a.jsx)(t.p,{children:"The official Logto connector for HTTP email."}),"\n",(0,a.jsx)(l.Ay,{}),"\n",(0,a.jsx)(t.h2,{id:"get-started",children:"Get started"}),"\n",(0,a.jsx)(t.p,{children:"The HTTP email connector allows you to send emails via HTTP call. To use the HTTP email connector, you'll need to have your own email service that expose an HTTP API for sending emails. Logto will call this API when it needs to send an email. For example, when a user registers, Logto will call the HTTP API to send a verification email."}),"\n",(0,a.jsx)(t.h2,{id:"set-up-http-email-connector",children:"Set up HTTP email connector"}),"\n",(0,a.jsx)(t.p,{children:"To use the HTTP email connector, you need to set up an HTTP endpoint that Logto can call. And an optional authorization token for the endpoint."}),"\n",(0,a.jsx)(t.h2,{id:"payload",children:"Payload"}),"\n",(0,a.jsxs)(t.p,{children:["The HTTP email connector sends a payload to the endpoint when triggering an email. It includes the recipient\u2019s email (",(0,a.jsx)(t.code,{children:"to"}),"), the email ",(0,a.jsx)(t.a,{href:"/connectors/email-connectors/email-templates#email-template-types",children:"usageType"})," indicating the authentication flow (",(0,a.jsx)(t.code,{children:"type"}),"), and a ",(0,a.jsx)(t.code,{children:"payload"})," containing available ",(0,a.jsx)(t.a,{href:"/connectors/email-connectors/email-templates#email-template-variables",children:"variables"})," (e.g., verification code, link, application info, organization info, user info) and the user\u2019s ",(0,a.jsx)(t.a,{href:"/connectors/email-connectors/email-templates#email-template-localization",children:"locale"}),"."]}),"\n",(0,a.jsx)(t.p,{children:"Example:"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-json",children:'{\n  "to": "foo@logto.io",\n  "type": "SignIn",\n  "payload": {\n    "code": "123456"\n    "locale": "de"\n  }\n}\n'})}),"\n",(0,a.jsx)(t.p,{children:"You can use this information to customize email templates in your email delivery provider."}),"\n",(0,a.jsxs)(t.p,{children:["For all available types, see ",(0,a.jsx)(t.a,{href:"/connectors/email-connectors/email-templates#email-template-types",children:"Email template"}),". The full ",(0,a.jsx)(t.code,{children:"SendMessageData"})," type definition is in ",(0,a.jsx)(t.a,{href:"https://github.com/logto-io/logto/tree/master/packages/toolkit/connector-kit/src/types/passwordless.ts",children:"connector-kit"}),"."]})]})}function m(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(p,{...e})}):p(e)}},75679:(e,t,n)=>{n.d(t,{Ay:()=>s,RM:()=>o});var i=n(25105),a=n(79621);const o=[];function l(e){const t={a:"a",admonition:"admonition",p:"p",...(0,a.R)(),...e.components};return(0,i.jsx)(t.admonition,{type:"tip",children:(0,i.jsxs)(t.p,{children:["This guide assumes you have basic understanding of Logto Connectors. For those unfamiliar, please refer to the ",(0,i.jsx)(t.a,{href:"/connectors",children:"Connectors"})," guide to get started."]})})}function s(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},79621:(e,t,n)=>{n.d(t,{R:()=>l,x:()=>s});var i=n(58101);const a={},o=i.createContext(a);function l(e){const t=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:l(e.components),i.createElement(o.Provider,{value:t},e.children)}}}]);