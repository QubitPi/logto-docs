"use strict";(self.webpackChunk_logto_docs=self.webpackChunk_logto_docs||[]).push([[6774],{91120:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>c,frontMatter:()=>a,metadata:()=>r,toc:()=>h});const r=JSON.parse('{"id":"user-management/user-migration","title":"User migration","description":"Logto supports manual migration of existing users from another platform, this guide will show you how to import existing users via Management API and talk about things that you should consider before migrating.","source":"@site/docs/user-management/user-migration.mdx","sourceDirName":"user-management","slug":"/user-management/user-migration","permalink":"/user-management/user-migration","draft":false,"unlisted":false,"editUrl":"https://github.com/logto-io/docs/tree/master/docs/user-management/user-migration.mdx","tags":[],"version":"current","sidebarPosition":5,"frontMatter":{"sidebar_position":5},"sidebar":"docsSidebar","previous":{"title":"Personal access token","permalink":"/user-management/personal-access-token"},"next":{"title":"User management","permalink":"/user-management/"}}');var n=s(25105),o=s(79621);const a={sidebar_position:5},i="User migration",l={},h=[{value:"User schema",id:"user-schema",level:2},{value:"Password hashing",id:"password-hashing",level:2},{value:"Steps to migrate",id:"steps-to-migrate",level:2},{value:"Related resources",id:"related-resources",level:2}];function d(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",...(0,o.R)(),...e.components},{Url:s}=t;return s||function(e,t){throw new Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Url",!0),(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.header,{children:(0,n.jsx)(t.h1,{id:"user-migration",children:"User migration"})}),"\n",(0,n.jsx)(t.p,{children:"Logto supports manual migration of existing users from another platform, this guide will show you how to import existing users via Management API and talk about things that you should consider before migrating."}),"\n",(0,n.jsx)(t.h2,{id:"user-schema",children:"User schema"}),"\n",(0,n.jsxs)(t.p,{children:["Before we start, let's take a look at the ",(0,n.jsx)(t.a,{href:"/user-management/user-data/#user-profile",children:"user schema"})," in Logto. There are 3 parts of the user schema that you should be aware of:"]}),"\n",(0,n.jsxs)(t.ol,{children:["\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.strong,{children:"Basic data"}),": is the basic info from the user profile, you can match the data from your existing user profile."]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.strong,{children:"Custom data"}),": stores additional user info, you can use this to store files that are unable to match the basic data."]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.strong,{children:"Social identities"}),": stores the user info retrieved from social sign-in."]}),"\n"]}),"\n",(0,n.jsxs)(t.p,{children:["You can create a map to match the user info from your existing user profile to ",(0,n.jsx)(t.strong,{children:"basic data"})," and ",(0,n.jsx)(t.strong,{children:"custom data"}),". For social sign in, you'll need additional steps to import the social identities, please refer to the API of ",(0,n.jsx)(t.a,{href:"https://openapi.logto.io/operation/operation-createuseridentity",children:"Link social identity to user"}),"."]}),"\n",(0,n.jsx)(t.h2,{id:"password-hashing",children:"Password hashing"}),"\n",(0,n.jsxs)(t.p,{children:["Logto uses ",(0,n.jsx)(t.a,{href:"https://en.wikipedia.org/wiki/Argon2",children:"Argon2"})," to hash the user's password, and also supports other algorithms like ",(0,n.jsx)(t.code,{children:"MD5"}),", ",(0,n.jsx)(t.code,{children:"SHA1"}),", ",(0,n.jsx)(t.code,{children:"SHA256"})," and ",(0,n.jsx)(t.code,{children:"Bcrypt"})," for the convenience of migration. Those algorithms are considered insecure, the corrosponding password hashes will be migrated to Argon2 upon the user's first successful sign in."]}),"\n",(0,n.jsxs)(t.p,{children:["If you are using other hashing algorithms or salt, you can set the ",(0,n.jsx)(t.code,{children:"passwordAlgorithm"})," to ",(0,n.jsx)(t.code,{children:"Legacy"}),", this allows you to use any hash algorithm supported by Node.js. You can find the list of supported algorithms in the ",(0,n.jsx)(t.a,{href:"https://nodejs.org/api/crypto.html#cryptogethashes",children:"Node.js crypto documentation"}),". In this case, the ",(0,n.jsx)(t.code,{children:"passwordDigest"})," will be a JSON string that contains the hash algorithm and other algorithm-specific parameters."]}),"\n",(0,n.jsx)(t.p,{children:"The format of the JSON string is as follows:"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-json",children:'["hash_algorithm", ["argument1", "argument2", ...], "expected_hashed_value"]\n'})}),"\n",(0,n.jsxs)(t.p,{children:["And you can use ",(0,n.jsx)(t.code,{children:"@"})," as a placeholder for the actual password value in the arguments."]}),"\n",(0,n.jsx)(t.p,{children:"For example, if you are using SHA256 with a salt, you can store the password in the following format:"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-json",children:'["sha256", ["salt123", "@"], "c465f66c6ac481a7a17e9ed5b4e2e7e7288d892f12bf1c95c140901e9a70436e"]\n'})}),"\n",(0,n.jsx)(t.p,{children:"This equals to the following code:"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-ts",children:"const hash = crypto.createHash('sha256');\nhash.update('salt123' + 'password123');\nconst expectedHashedValue = hash.digest('hex');\n"})}),"\n",(0,n.jsx)(t.h2,{id:"steps-to-migrate",children:"Steps to migrate"}),"\n",(0,n.jsxs)(t.ol,{children:["\n",(0,n.jsxs)(t.li,{children:["\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.strong,{children:"Prepare the user data"}),"\nYou should first export the user data from your existing platform, and then map the user info to the Logto user schema. We recommend you to prepare the mapped data in a JSON format. Here is an example of the user data:"]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-json",children:'[\n  {\n    "username": "user1",\n    "passwordDigest": "password-encrypted",\n    "passwordAlgorithm": "SHA256"\n  },\n  {\n    "username": "user2",\n    "passwordDigest": "password-encrypted",\n    "passwordAlgorithm": "SHA256"\n  }\n]\n'})}),"\n"]}),"\n",(0,n.jsxs)(t.li,{children:["\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.strong,{children:"Create a Logto tenant"}),"\nYou'll need to setup a tenant in Logto. You can use either Logto Cloud or Logto OSS. If you haven't done this yet, please refer to the ",(0,n.jsx)(t.a,{href:"/introduction/set-up-logto-cloud/#create-logto-tenant",children:"Set up Logto cloud"})," guide."]}),"\n"]}),"\n",(0,n.jsxs)(t.li,{children:["\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.strong,{children:"Setup the connection of Management API"}),"\nWe'll use the Management API to import the user data, you can refer to the ",(0,n.jsx)(t.a,{href:"/integrate-logto/interact-with-management-api",children:"Management API"})," to learn how to setup the connection in your development environment."]}),"\n"]}),"\n",(0,n.jsxs)(t.li,{children:["\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.strong,{children:"Import the user data"}),"\nIt is recommended to prepare a script to import the user data one by one, we'll call ",(0,n.jsx)(t.a,{href:"https://openapi.logto.io/operation/operation-createuser",children:"create user"})," API to import the user data. Here is an example of the script:"]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-jsx",children:"const users = require('./users.json');\n\nconst importUsers = async () => {\n  for (const user of users) {\n    try {\n      await fetch('https://[tenant_id].logto.app/api/users', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer [your-access-token]',\n        },\n        body: JSON.stringify(user),\n      });\n      // Sleep for a while to avoid rate limit\n      await new Promise((resolve) => setTimeout(resolve, 200));\n    } catch (error) {\n      console.error(`Failed to import user ${user.username}: ${error.message}`);\n    }\n  }\n};\n\nimportUsers();\n"})}),"\n"]}),"\n"]}),"\n",(0,n.jsxs)(t.p,{children:["Please noted that the API point is rate limited, you should add a sleep between each request to avoid the rate limit. Please review our ",(0,n.jsx)(t.a,{href:"/integrate-logto/interact-with-management-api/#rate-limit",children:"rate limits"})," page for details."]}),"\n",(0,n.jsxs)(t.p,{children:["If you have a large amount of user data (100k+ users), you can ",(0,n.jsx)(t.a,{href:"https://logto.io/contact",children:"reach out to us"})," to increase the rate limit."]}),"\n",(0,n.jsx)(t.h2,{id:"related-resources",children:"Related resources"}),"\n",(0,n.jsx)(s,{href:"https://blog.logto.io/general-migration-guide",children:(0,n.jsx)(t.p,{children:"A general guideline to migrate your existing user database to Logto"})})]})}function c(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}},79621:(e,t,s)=>{s.d(t,{R:()=>a,x:()=>i});var r=s(58101);const n={},o=r.createContext(n);function a(e){const t=r.useContext(o);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:a(e.components),r.createElement(o.Provider,{value:t},e.children)}}}]);