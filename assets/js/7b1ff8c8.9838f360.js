"use strict";(self.webpackChunk_logto_docs=self.webpackChunk_logto_docs||[]).push([[1466],{75679:(e,n,i)=>{i.d(n,{Ay:()=>a,RM:()=>s});var o=i(25105),t=i(79621);const s=[];function r(e){const n={a:"a",admonition:"admonition",p:"p",...(0,t.R)(),...e.components};return(0,o.jsx)(n.admonition,{type:"tip",children:(0,o.jsxs)(n.p,{children:["This guide assumes you have basic understanding of Logto Connectors. For those unfamiliar, please refer to the ",(0,o.jsx)(n.a,{href:"/connectors",children:"Connectors"})," guide to get started."]})})}function a(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(r,{...e})}):r(e)}},18442:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>d,contentTitle:()=>p,default:()=>g,frontMatter:()=>c,metadata:()=>o,toc:()=>h});const o=JSON.parse('{"id":"integrations/social/apple/README","title":"Set up social login with Apple","description":"The official Logto connector for Apple social sign-in.","source":"@site/docs/integrations/social/apple/README.mdx","sourceDirName":"integrations/social/apple","slug":"/integrations/apple","permalink":"/integrations/apple","draft":false,"unlisted":false,"editUrl":"https://github.com/logto-io/docs/tree/master/docs/integrations/social/apple/README.mdx","tags":[],"version":"current","frontMatter":{"slug":"/integrations/apple","sidebar_label":"Apple","sidebar_custom_props":{"darkLogoFilename":"apple-dark.svg","description":"Apple is a multinational high-end provider of hardware and software."},"tutorial_config_name":"Apple Sign-in"},"sidebar":"integrationsSidebar","previous":{"title":"Amazon","permalink":"/integrations/amazon"},"next":{"title":"Microsoft","permalink":"/integrations/azuread"}}');var t=i(25105),s=i(79621),r=i(75679);function a(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.admonition,{type:"note",children:(0,t.jsx)(n.p,{children:"Apple sign-in is required for AppStore if you have other social sign-in methods in your app.\nHaving Apple sign-in on Android devices is great if you also provide an Android app."})}),"\n",(0,t.jsxs)(n.p,{children:["You need to enroll ",(0,t.jsx)(n.a,{href:"https://developer.apple.com/programs/",children:"Apple Developer Program"})," before continuing."]}),"\n",(0,t.jsx)(n.h3,{id:"enable-sign-in-with-apple-for-your-app",children:"Enable Sign in with Apple for your app"}),"\n",(0,t.jsx)(n.admonition,{type:"caution",children:(0,t.jsx)(n.p,{children:"Even if you want to implement Sign in with Apple on a web app only, you still need to have an existing app that embraces the AppStore ecosystem (i.e., have a valid App ID)."})}),"\n",(0,t.jsxs)(n.p,{children:["You can do it via Xcode -> Project settings -> Signing & Capabilities, or visit ",(0,t.jsx)(n.a,{href:"https://developer.apple.com/account/resources/identifiers/list/bundleId",children:"Certificates, Identifiers & Profiles"}),"."]}),"\n",(0,t.jsx)("img",{src:"/img/assets/enable-sign-in-with-apple-in-xcode.png",alt:"Enable Sign in with Apple"}),"\n",(0,t.jsxs)(n.p,{children:['See the "Enable an App ID" section in ',(0,t.jsx)(n.a,{href:"https://developer.apple.com/documentation/sign_in_with_apple/configuring_your_environment_for_sign_in_with_apple",children:"Apple official docs"})," for more info."]}),"\n",(0,t.jsx)(n.h3,{id:"create-an-identifier",children:"Create an identifier"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["Visit ",(0,t.jsx)(n.a,{href:"https://developer.apple.com/account/resources/identifiers/list/serviceId",children:"Certificates, Identifiers & Profiles"}),', then click the "+" button next to "Identifier".']}),"\n",(0,t.jsx)(n.li,{children:'In the "Register a new identifier" page, choose "Services IDs" and click "Continue".'}),"\n",(0,t.jsxs)(n.li,{children:['Fill out "Description" and "Identifier" (E.g., ',(0,t.jsx)(n.code,{children:"Logto Test"})," and ",(0,t.jsx)(n.code,{children:"io.logto.test"}),'), then click "Continue".']}),"\n",(0,t.jsx)(n.li,{children:'Double-check the info and click "Register".'}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"enable-sign-in-with-apple-for-your-identifier",children:"Enable Sign in with Apple for your identifier"}),"\n",(0,t.jsx)(n.p,{children:'Click the identifier you just created. Check "Sign in with Apple" on the details page and click "Configure".'}),"\n",(0,t.jsx)("img",{src:"/img/assets/enable-sign-in-with-apple.png",alt:"Enable Sign in with Apple"}),"\n",(0,t.jsx)(n.p,{children:"In the opening modal, select the App ID you just enabled Sign in with Apple."}),"\n",(0,t.jsxs)(n.p,{children:["Enter the domain of your Logto instance without protocol and port, e.g., ",(0,t.jsx)(n.code,{children:"your.logto.domain"}),'; then enter the "Return URL" (i.e., Redirect URI), which is the Logto URL with ',(0,t.jsx)(n.code,{children:"/callback/${connector_id}"}),", e.g., ",(0,t.jsx)(n.code,{children:"https://your.logto.domain/callback/apple-universal"}),". You can get the randomly generated ",(0,t.jsx)(n.code,{children:"connector_id"})," after creating Apple connector in Admin Console."]}),"\n",(0,t.jsx)("img",{src:"/img/assets/domain-and-url.png",alt:"Domain and URL"}),"\n",(0,t.jsx)(n.p,{children:'Click "Next" then "Done" to close the modal. Click "Continue" on the top-right corner, then click "Save" to save your configuration.'}),"\n",(0,t.jsxs)(n.admonition,{type:"caution",children:[(0,t.jsxs)(n.p,{children:["Apple does NOT allow Return URLs with HTTP protocol and ",(0,t.jsx)(n.code,{children:"localhost"})," domain."]}),(0,t.jsxs)(n.p,{children:["If you want to test locally, you need to edit ",(0,t.jsx)(n.code,{children:"/etc/hosts"})," file to map localhost to a custom domain and set up a local HTTPS environment. ",(0,t.jsx)(n.a,{href:"https://github.com/FiloSottile/mkcert",children:"mkcert"})," can help you for setting up local HTTPS."]})]}),"\n",(0,t.jsx)(n.h2,{id:"configure-scope",children:"Configure scope"}),"\n",(0,t.jsxs)(n.p,{children:["To get user's email from Apple, you need to configure the scope to include ",(0,t.jsx)(n.code,{children:"email"}),". For both email and name, you can use ",(0,t.jsx)(n.code,{children:"name email"})," as the scope. See ",(0,t.jsx)(n.a,{href:"https://developer.apple.com/documentation/sign_in_with_apple/sign_in_with_apple_js/incorporating_sign_in_with_apple_into_other_platforms#3332113",children:"Apple official docs"})," for more info."]}),"\n",(0,t.jsx)(n.admonition,{type:"note",children:(0,t.jsxs)(n.p,{children:["The user may choose to hide their email address from your app. In this case, you will not be able to retrieve the real email address. An email address like ",(0,t.jsx)(n.code,{children:"random@privaterelay.appleid.com"})," will be returned instead."]})})]})}function l(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(a,{...e})}):a(e)}const c={slug:"/integrations/apple",sidebar_label:"Apple",sidebar_custom_props:{darkLogoFilename:"apple-dark.svg",description:"Apple is a multinational high-end provider of hardware and software."},tutorial_config_name:"Apple Sign-in"},p="Set up social login with Apple",d={},h=[...r.RM,{value:"Get started",id:"get-started",level:2},{value:"Enable Sign in with Apple for your app",id:"enable-sign-in-with-apple-for-your-app",level:3},{value:"Create an identifier",id:"create-an-identifier",level:3},{value:"Enable Sign in with Apple for your identifier",id:"enable-sign-in-with-apple-for-your-identifier",level:3},{value:"Configure scope",id:"configure-scope",level:2},{value:"Pitfalls of configuring scope",id:"pitfalls-of-configuring-scope",level:3},{value:"Test Apple connector",id:"test-apple-connector",level:2}];function u(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"set-up-social-login-with-apple",children:"Set up social login with Apple"})}),"\n",(0,t.jsx)(n.p,{children:"The official Logto connector for Apple social sign-in."}),"\n",(0,t.jsx)(r.Ay,{}),"\n",(0,t.jsx)(n.h2,{id:"get-started",children:"Get started"}),"\n",(0,t.jsxs)(n.p,{children:["If you don't know the concept of the connector or don't know how to add this connector to your Sign-in experience, please see ",(0,t.jsx)(n.a,{href:"/connectors/social-connectors",children:"Logto tutorial"}),"."]}),"\n",(0,t.jsx)(l,{}),"\n",(0,t.jsx)(n.h3,{id:"pitfalls-of-configuring-scope",children:"Pitfalls of configuring scope"}),"\n",(0,t.jsxs)(n.p,{children:["If you have configured your app to request users' email addresses after they have already signed in with Apple, you will not be able to retrieve the email addresses for those existing users, even if they sign in again using Apple ID. To address this, you need to instruct your users to visit the ",(0,t.jsx)(n.a,{href:"https://appleid.apple.com/account/manage",children:"Apple ID account management page"}),' and remove your application from the "Sign in with Apple" section. This can be done by selecting "Stop using Apple Sign In" on your app\'s detail page.']}),"\n",(0,t.jsxs)(n.p,{children:["For instance, if your app requests both the users' email and name (",(0,t.jsx)(n.code,{children:"email name"})," scope), the consent screen that new users see during their first sign-in should look similar to this:"]}),"\n",(0,t.jsx)("img",{src:"/img/assets/sign-in-with-apple-consent-screen.png",alt:"Sign in with Apple consent screen"}),"\n",(0,t.jsxs)(n.p,{children:["See developer discussion ",(0,t.jsx)(n.a,{href:"https://forums.developer.apple.com/forums/thread/132223",children:"here"}),"."]}),"\n",(0,t.jsx)(n.h2,{id:"test-apple-connector",children:"Test Apple connector"}),"\n",(0,t.jsxs)(n.p,{children:["That's it. The Apple connector should be available in both web and native apps. Don't forget to ",(0,t.jsx)(n.a,{href:"/connectors/social-connectors/#enable-social-sign-in",children:"Enable social connector in sign-in experience"}),"."]})]})}function g(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(u,{...e})}):u(e)}},79621:(e,n,i)=>{i.d(n,{R:()=>r,x:()=>a});var o=i(58101);const t={},s=o.createContext(t);function r(e){const n=o.useContext(s);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),o.createElement(s.Provider,{value:n},e.children)}}}]);