"use strict";(self.webpackChunk_logto_docs=self.webpackChunk_logto_docs||[]).push([[7627],{30926:(e,o,t)=>{t.r(o),t.d(o,{assets:()=>l,contentTitle:()=>i,default:()=>h,frontMatter:()=>c,metadata:()=>n,toc:()=>d});const n=JSON.parse('{"id":"logto-oss/develop-your-connector/connector-file-structure","title":"Connector file structure","description":"Attached is a file tree to demonstrate how are connectors\' files organized as a TypeScript project.","source":"@site/docs/logto-oss/develop-your-connector/connector-file-structure.mdx","sourceDirName":"logto-oss/develop-your-connector","slug":"/logto-oss/develop-your-connector/connector-file-structure","permalink":"/logto-oss/develop-your-connector/connector-file-structure","draft":false,"unlisted":false,"editUrl":"https://github.com/logto-io/docs/tree/master/docs/logto-oss/develop-your-connector/connector-file-structure.mdx","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"docsSidebar","previous":{"title":"Develop your connector","permalink":"/logto-oss/develop-your-connector/"},"next":{"title":"Implement connectors","permalink":"/logto-oss/develop-your-connector/implement-connectors"}}');var s=t(25105),r=t(79621);const c={sidebar_position:1},i="Connector file structure",l={},d=[{value:"package.json",id:"packagejson",level:3},{value:"README.md",id:"readmemd",level:3},{value:"logo.svg",id:"logosvg",level:3},{value:"logo-dark.svg",id:"logo-darksvg",level:3},{value:"index.ts",id:"indexts",level:3},{value:"index.test.ts",id:"indextestts",level:3},{value:"types.ts",id:"typests",level:3},{value:"constant.ts",id:"constantts",level:3},{value:"mock.ts",id:"mockts",level:3},{value:"utils.ts",id:"utilsts",level:3}];function a(e){const o={a:"a",admonition:"admonition",code:"code",h1:"h1",h3:"h3",header:"header",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(o.header,{children:(0,s.jsx)(o.h1,{id:"connector-file-structure",children:"Connector file structure"})}),"\n",(0,s.jsx)(o.p,{children:"Attached is a file tree to demonstrate how are connectors' files organized as a TypeScript project."}),"\n",(0,s.jsxs)(o.p,{children:["Files whose name ends up with ",(0,s.jsx)(o.code,{children:"^"})," refer to an optional file, otherwise are required."]}),"\n",(0,s.jsx)(o.pre,{children:(0,s.jsx)(o.code,{children:"ConnectorRootDir/\n\u251c\u2500\u2500 package.json\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 logo.svg\n\u251c\u2500\u2500 logo-dark.svg^\n\u2514\u2500\u2500 src/\n    \u251c\u2500\u2500 index.ts\n    \u251c\u2500\u2500 index.test.ts\n    \u251c\u2500\u2500 types.ts\n    \u251c\u2500\u2500 constant.ts\n    \u251c\u2500\u2500 mock.ts^\n    \u251c\u2500\u2500 utils.ts^\n    \u251c\u2500\u2500 utils.test.ts^\n    \u2514\u2500\u2500 ...\n"})}),"\n",(0,s.jsx)(o.p,{children:"Based on the connector file structure, let's go through each file and figure out how they work together as a whole system."}),"\n",(0,s.jsx)(o.h3,{id:"packagejson",children:"package.json"}),"\n",(0,s.jsxs)(o.p,{children:[(0,s.jsx)(o.code,{children:"package.json"})," contains configurations of this connector repo. It will be merged with a sharing ",(0,s.jsx)(o.code,{children:"package.json"}),", which contains common dependencies and attributes."]}),"\n",(0,s.jsx)(o.h3,{id:"readmemd",children:"README.md"}),"\n",(0,s.jsxs)(o.p,{children:[(0,s.jsx)(o.code,{children:"README.md"})," is an elaborated guide for setting up the connector's config."]}),"\n",(0,s.jsx)(o.h3,{id:"logosvg",children:"logo.svg"}),"\n",(0,s.jsxs)(o.p,{children:[(0,s.jsx)(o.code,{children:"logo.svg"})," is a file that stores the connector's logo in vector image format."]}),"\n",(0,s.jsx)(o.h3,{id:"logo-darksvg",children:"logo-dark.svg"}),"\n",(0,s.jsxs)(o.p,{children:[(0,s.jsx)(o.code,{children:"logo-dark.svg"})," file contains vector graphic of connector's dark mode logo."]}),"\n",(0,s.jsx)(o.admonition,{type:"note",children:(0,s.jsxs)(o.p,{children:["See ",(0,s.jsx)(o.a,{href:"/connectors/connector-data-structure/#logo",children:"connector logo"})," to know more about the relationship between ",(0,s.jsx)(o.code,{children:"logo.svg"})," and ",(0,s.jsx)(o.code,{children:"logo-dark.svg"}),"."]})}),"\n",(0,s.jsx)(o.h3,{id:"indexts",children:"index.ts"}),"\n",(0,s.jsxs)(o.p,{children:[(0,s.jsx)(o.code,{children:"index.ts"})," is the file for connector class implementation."]}),"\n",(0,s.jsx)(o.h3,{id:"indextestts",children:"index.test.ts"}),"\n",(0,s.jsxs)(o.p,{children:[(0,s.jsx)(o.code,{children:"index.test.ts"})," is a file containing corresponding unit tests (UTs) for implementations in ",(0,s.jsx)(o.code,{children:"index.ts"}),"."]}),"\n",(0,s.jsx)(o.h3,{id:"typests",children:"types.ts"}),"\n",(0,s.jsxs)(o.p,{children:[(0,s.jsx)(o.code,{children:"types.ts"})," is where you should define variables' types."]}),"\n",(0,s.jsx)(o.h3,{id:"constantts",children:"constant.ts"}),"\n",(0,s.jsxs)(o.p,{children:[(0,s.jsx)(o.code,{children:"constant.ts"})," is where you should put constants related to the connector, including endpoints, connector metadata, etc."]}),"\n",(0,s.jsx)(o.h3,{id:"mockts",children:"mock.ts"}),"\n",(0,s.jsxs)(o.p,{children:[(0,s.jsx)(o.code,{children:"mock.ts"})," is the file you may put mocked values for testing purposes."]}),"\n",(0,s.jsx)(o.h3,{id:"utilsts",children:"utils.ts"}),"\n",(0,s.jsxs)(o.p,{children:[(0,s.jsx)(o.code,{children:"utils.ts"})," is the file where developers put utility functions, and ",(0,s.jsx)(o.code,{children:"utils.test.ts"})," should contain relating UTs."]})]})}function h(e={}){const{wrapper:o}={...(0,r.R)(),...e.components};return o?(0,s.jsx)(o,{...e,children:(0,s.jsx)(a,{...e})}):a(e)}},79621:(e,o,t)=>{t.d(o,{R:()=>c,x:()=>i});var n=t(58101);const s={},r=n.createContext(s);function c(e){const o=n.useContext(r);return n.useMemo((function(){return"function"==typeof e?e(o):{...o,...e}}),[o,e])}function i(e){let o;return o=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:c(e.components),n.createElement(r.Provider,{value:o},e.children)}}}]);