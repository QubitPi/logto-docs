"use strict";(self.webpackChunk_logto_docs=self.webpackChunk_logto_docs||[]).push([[5498],{5054:(e,n,t)=>{t.d(n,{Ay:()=>c,RM:()=>i});var s=t(25105),o=t(79621);const i=[];function r(e){const n={a:"a",p:"p",...(0,o.R)(),...e.components};return(0,s.jsxs)(n.p,{children:["We recommend to read ",(0,s.jsx)(n.a,{href:"/authorization/role-based-access-control",children:"\ud83d\udd10 Role-Based Access Control (RBAC)"})," first to understand the basic concepts of Logto RBAC and how to set up API resources properly."]})}function c(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(r,{...e})}):r(e)}},46409:(e,n,t)=>{t.d(n,{Ay:()=>c,RM:()=>i});var s=t(25105),o=t(79621);const i=[{value:"Checkpoint: Test your application",id:"checkpoint-test-your-application",level:3}];function r(e){const n={h3:"h3",li:"li",ol:"ol",p:"p",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h3,{id:"checkpoint-test-your-application",children:"Checkpoint: Test your application"}),"\n",(0,s.jsx)(n.p,{children:"Now, you can test your application:"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"Run your application, you will see the sign-in button."}),"\n",(0,s.jsx)(n.li,{children:"Click the sign-in button, the SDK will init the sign-in process and redirect you to the Logto sign-in page."}),"\n",(0,s.jsx)(n.li,{children:"After you signed in, you will be redirected back to your application and see the sign-out button."}),"\n",(0,s.jsx)(n.li,{children:"Click the sign-out button to clear token storage and sign out."}),"\n"]})]})}function c(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(r,{...e})}):r(e)}},61770:(e,n,t)=>{t.d(n,{Ay:()=>c,RM:()=>i});var s=t(25105),o=t(79621);const i=[];function r(e){const n={a:"a",admonition:"admonition",code:"code",p:"p",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.p,{children:"Once you have set up the API resources, you can add them when configuring Logto in your app:"}),"\n",e.configResourcesCode,"\n",(0,s.jsx)(n.p,{children:"Each API resource has its own permissions (scopes)."}),"\n",(0,s.jsxs)(n.p,{children:["For example, the ",(0,s.jsx)(n.code,{children:"https://shopping.your-app.com/api"})," resource has the ",(0,s.jsx)(n.code,{children:"shopping:read"})," and ",(0,s.jsx)(n.code,{children:"shopping:write"})," permissions, and the ",(0,s.jsx)(n.code,{children:"https://store.your-app.com/api"})," resource has the ",(0,s.jsx)(n.code,{children:"store:read"})," and ",(0,s.jsx)(n.code,{children:"store:write"})," permissions."]}),"\n",(0,s.jsx)(n.p,{children:"To request these permissions, you can add them when configuring Logto in your app:"}),"\n",e.configResourcesWithScopesCode,"\n",(0,s.jsxs)(n.p,{children:["You may notice that scopes are defined separately from API resources. This is because ",(0,s.jsx)(n.a,{href:"https://www.rfc-editor.org/rfc/rfc8707.html",children:"Resource Indicators for OAuth 2.0"})," specifies the final scopes for the request will be the cartesian product of all the scopes at all the target services."]}),"\n",e.configResourcesWithSharedScopesCode&&(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)("p",{children:["Thus, in the above case, scopes can be simplified from the definition in Logto, both of the API resources can have ",(0,s.jsx)("code",{children:"read"})," and ",(0,s.jsx)("code",{children:"write"})," scopes without the prefix. Then, in the Logto config:"]}),e.configResourcesWithSharedScopesCode,(0,s.jsxs)("p",{children:["For every API resource, it will request for both ",(0,s.jsx)("code",{children:"read"})," and ",(0,s.jsx)("code",{children:"write"})," scopes."]})]}),"\n",(0,s.jsx)(n.admonition,{type:"note",children:(0,s.jsxs)(n.p,{children:["It is fine to request scopes that are not defined in the API resources. For example, you can request the ",(0,s.jsx)(n.code,{children:"email"})," scope even if the API resources don't have the ",(0,s.jsx)(n.code,{children:"email"})," scope available. Unavailable scopes will be safely ignored."]})}),"\n",(0,s.jsx)(n.p,{children:"After the successful sign-in, Logto will issue proper scopes to API resources according to the user's roles."})]})}function c(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(r,{...e})}):r(e)}},73984:(e,n,t)=>{t.d(n,{Ay:()=>c,RM:()=>i});var s=t(25105),o=t(79621);const i=[];function r(e){const n={p:"p",...(0,o.R)(),...e.components};return(0,s.jsxs)(n.p,{children:["You may find some user information are missing in the returned object from ",(0,s.jsx)("code",{children:e.method}),". This is because OAuth 2.0 and OpenID Connect (OIDC) are designed to follow the principle of least privilege (PoLP), and Logto is built on top of these standards."]})}function c(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(r,{...e})}):r(e)}},38517:(e,n,t)=>{t.d(n,{Ay:()=>c,RM:()=>i});var s=t(25105),o=t(79621);const i=[];function r(e){const{Url:n}={...(0,o.R)(),...e.components};return n||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Url",!0),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n,{href:"/end-user-flows",children:" End-user flows: authentication flows, account flows, and organization flows "}),"\n",(0,s.jsx)(n,{href:"/connectors",children:" Configure connectors "}),"\n",(0,s.jsx)(n,{href:"/authorization",children:" Authorization "})]})}function c(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(r,{...e})}):r(e)}},71019:(e,n,t)=>{t.d(n,{Ay:()=>c,RM:()=>i});var s=t(25105),o=t(79621);const i=[{value:"Regarding redirect-based sign-in",id:"regarding-redirect-based-sign-in",level:3}];function r(e){const n={a:"a",h3:"h3",li:"li",ol:"ol",p:"p",...(0,o.R)(),...e.components},{Details:t,MainSiteUrl:i}=n;return t||d("Details",!0),i||d("MainSiteUrl",!0),(0,s.jsxs)(t,{children:[(0,s.jsx)("summary",{children:(0,s.jsx)(n.h3,{id:"regarding-redirect-based-sign-in",children:"Regarding redirect-based sign-in"})}),(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["This authentication process follows the ",(0,s.jsx)(n.a,{href:"https://openid.net/specs/openid-connect-core-1_0.html",children:"OpenID Connect (OIDC)"})," protocol, and Logto enforces strict security measures to protect user sign-in."]}),"\n",(0,s.jsx)(n.li,{children:"If you have multiple apps, you can use the same identity provider (Logto). Once the user signs in to one app, Logto will automatically complete the sign-in process when the user accesses another app."}),"\n"]}),(0,s.jsxs)(n.p,{children:["To learn more about the rationale and benefits of redirect-based sign-in, see ",(0,s.jsx)(i,{href:"/concepts/sign-in-experience",children:"Logto sign-in experience explained"}),"."]})]})}function c(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(r,{...e})}):r(e)}function d(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},99205:(e,n,t)=>{t.d(n,{Ay:()=>c,RM:()=>i});var s=t(25105),o=t(79621);const i=[];function r(e){const n={a:"a",admonition:"admonition",code:"code",hr:"hr",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.p,{children:"Here's the list of supported scopes and the corresponding claims:"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"openid"})})}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Claim name"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Description"}),(0,s.jsx)(n.th,{children:"Needs userinfo?"})]})}),(0,s.jsx)(n.tbody,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"sub"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"string"})}),(0,s.jsx)(n.td,{children:"The unique identifier of the user"}),(0,s.jsx)(n.td,{children:"No"})]})})]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"profile"})})}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Claim name"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Description"}),(0,s.jsx)(n.th,{children:"Needs userinfo?"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"name"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"string"})}),(0,s.jsx)(n.td,{children:"The full name of the user"}),(0,s.jsx)(n.td,{children:"No"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"username"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"string"})}),(0,s.jsx)(n.td,{children:"The username of the user"}),(0,s.jsx)(n.td,{children:"No"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"picture"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"string"})}),(0,s.jsx)(n.td,{children:"URL of the End-User's profile picture. This URL MUST refer to an image file (for example, a PNG, JPEG, or GIF image file), rather than to a Web page containing an image. Note that this URL SHOULD specifically reference a profile photo of the End-User suitable for displaying when describing the End-User, rather than an arbitrary photo taken by the End-User."}),(0,s.jsx)(n.td,{children:"No"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"created_at"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"number"})}),(0,s.jsx)(n.td,{children:"Time the End-User was created. The time is represented as the number of milliseconds since the Unix epoch (1970-01-01T00:00:00Z)."}),(0,s.jsx)(n.td,{children:"No"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"updated_at"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"number"})}),(0,s.jsx)(n.td,{children:"Time the End-User's information was last updated. The time is represented as the number of milliseconds since the Unix epoch (1970-01-01T00:00:00Z)."}),(0,s.jsx)(n.td,{children:"No"})]})]})]}),"\n",(0,s.jsxs)(n.p,{children:["Other ",(0,s.jsx)(n.a,{href:"https://openid.net/specs/openid-connect-core-1_0.html#StandardClaims",children:"standard claims"})," include ",(0,s.jsx)(n.code,{children:"family_name"}),", ",(0,s.jsx)(n.code,{children:"given_name"}),", ",(0,s.jsx)(n.code,{children:"middle_name"}),", ",(0,s.jsx)(n.code,{children:"nickname"}),", ",(0,s.jsx)(n.code,{children:"preferred_username"}),", ",(0,s.jsx)(n.code,{children:"profile"}),", ",(0,s.jsx)(n.code,{children:"website"}),", ",(0,s.jsx)(n.code,{children:"gender"}),", ",(0,s.jsx)(n.code,{children:"birthdate"}),", ",(0,s.jsx)(n.code,{children:"zoneinfo"}),", and ",(0,s.jsx)(n.code,{children:"locale"})," will be also included in the ",(0,s.jsx)(n.code,{children:"profile"})," scope without the need for requesting the userinfo endpoint. A difference compared to the claims above is that these claims will only be returned when their values are not empty, while the claims above will return ",(0,s.jsx)(n.code,{children:"null"})," if the values are empty."]}),"\n",(0,s.jsx)(n.admonition,{type:"note",children:(0,s.jsxs)(n.p,{children:["Unlike the standard claims, the ",(0,s.jsx)(n.code,{children:"created_at"})," and ",(0,s.jsx)(n.code,{children:"updated_at"})," claims are using milliseconds instead of seconds."]})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"email"})})}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Claim name"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Description"}),(0,s.jsx)(n.th,{children:"Needs userinfo?"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"email"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"string"})}),(0,s.jsx)(n.td,{children:"The email address of the user"}),(0,s.jsx)(n.td,{children:"No"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"email_verified"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"boolean"})}),(0,s.jsx)(n.td,{children:"Whether the email address has been verified"}),(0,s.jsx)(n.td,{children:"No"})]})]})]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"phone"})})}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Claim name"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Description"}),(0,s.jsx)(n.th,{children:"Needs userinfo?"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"phone_number"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"string"})}),(0,s.jsx)(n.td,{children:"The phone number of the user"}),(0,s.jsx)(n.td,{children:"No"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"phone_number_verified"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"boolean"})}),(0,s.jsx)(n.td,{children:"Whether the phone number has been verified"}),(0,s.jsx)(n.td,{children:"No"})]})]})]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"address"})})}),"\n",(0,s.jsxs)(n.p,{children:["Please refer to the ",(0,s.jsx)(n.a,{href:"https://openid.net/specs/openid-connect-core-1_0.html#AddressClaim",children:"OpenID Connect Core 1.0"})," for the details of the address claim."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"custom_data"})})}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Claim name"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Description"}),(0,s.jsx)(n.th,{children:"Needs userinfo?"})]})}),(0,s.jsx)(n.tbody,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"custom_data"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"object"})}),(0,s.jsx)(n.td,{children:"The custom data of the user"}),(0,s.jsx)(n.td,{children:"Yes"})]})})]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"identities"})})}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Claim name"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Description"}),(0,s.jsx)(n.th,{children:"Needs userinfo?"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"identities"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"object"})}),(0,s.jsx)(n.td,{children:"The linked identities of the user"}),(0,s.jsx)(n.td,{children:"Yes"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"sso_identities"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"array"})}),(0,s.jsx)(n.td,{children:"The linked SSO identities of the user"}),(0,s.jsx)(n.td,{children:"Yes"})]})]})]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"roles"})})}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Claim name"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Description"}),(0,s.jsx)(n.th,{children:"Needs userinfo?"})]})}),(0,s.jsx)(n.tbody,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"roles"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"string[]"})}),(0,s.jsx)(n.td,{children:"The roles of the user"}),(0,s.jsx)(n.td,{children:"No"})]})})]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"urn:logto:scope:organizations"})})}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Claim name"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Description"}),(0,s.jsx)(n.th,{children:"Needs userinfo?"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"organizations"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"string[]"})}),(0,s.jsx)(n.td,{children:"The organization IDs the user belongs to"}),(0,s.jsx)(n.td,{children:"No"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"organization_data"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"object[]"})}),(0,s.jsx)(n.td,{children:"The organization data the user belongs to"}),(0,s.jsx)(n.td,{children:"Yes"})]})]})]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"urn:logto:scope:organization_roles"})})}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Claim name"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Description"}),(0,s.jsx)(n.th,{children:"Needs userinfo?"})]})}),(0,s.jsx)(n.tbody,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"organization_roles"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"string[]"})}),(0,s.jsxs)(n.td,{children:["The organization roles the user belongs to with the format of ",(0,s.jsx)(n.code,{children:"<organization_id>:<role_name>"})]}),(0,s.jsx)(n.td,{children:"No"})]})})]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsxs)(n.p,{children:['Considering performance and the data size, if "Needs userinfo?" is "Yes", it means the claim will not show up in the ID token, but will be returned in the ',(0,s.jsx)(n.a,{href:"https://openid.net/specs/openid-connect-core-1_0.html#UserInfo",children:"userinfo endpoint"})," response."]})]})}function c(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(r,{...e})}):r(e)}},36608:(e,n,t)=>{t.d(n,{Ay:()=>d,RM:()=>r});var s=t(25105),o=t(79621),i=t(99205);const r=[...i.RM];function c(e){const n={a:"a",p:"p",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.p,{children:["Logto uses OIDC ",(0,s.jsx)(n.a,{href:"https://openid.net/specs/openid-connect-core-1_0.html#Claims",children:"scopes and claims conventions"})," to define the scopes and claims for retrieving user information from the ID token and OIDC ",(0,s.jsx)("a",{href:"https://openid.net/specs/openid-connect-core-1_0.html#UserInfo",children:"userinfo endpoint"}),'. Both of the "scope" and the "claim" are terms from the OAuth 2.0 and OpenID Connect (OIDC) specifications.']}),"\n","\n",e.configScopesCode&&(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)("p",{children:"In short, when you request a scope, you will get the corresponding claims in the user information. For example, if you request the `email` scope, you will get the `email` and `email_verified` data of the user."}),(0,s.jsx)("p",{children:"By default, Logto SDK will always request three scopes: `openid`, `profile`. And `offline_access`, and there is no way to remove these default scopes. But you can add more scopes when configuring Logto:"}),e.configScopesCode]}),"\n",(0,s.jsx)(i.Ay,{})]})}function d(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},21841:(e,n,t)=>{t.d(n,{Ay:()=>c,RM:()=>i});var s=t(25105),o=t(79621);const i=[];function r(e){const n={admonition:"admonition",code:"code",mermaid:"mermaid",p:"p",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.p,{children:"By default, limited claims are returned. If you need more information, you can request additional scopes to access more claims."}),"\n",(0,s.jsx)(n.admonition,{type:"info",children:(0,s.jsx)(n.p,{children:'A "claim" is an assertion made about a subject; a "scope" is a group of claims. In the current case, a claim is a piece of information about the user.'})}),"\n",(0,s.jsx)(n.p,{children:"Here's a non-normative example the scope - claim relationship:"}),"\n",(0,s.jsx)(n.mermaid,{value:"classDiagram\n  class openid {\n    +sub\n  }\n\n  class profile {\n    +name\n    +username\n    +picture\n    +...\n  }\n\n  class email {\n    +email\n    +email_verified\n  }\n\n  class phone {\n    +phone_number\n    +phone_number_verified\n  }"}),"\n",(0,s.jsx)(n.admonition,{type:"tip",children:(0,s.jsx)(n.p,{children:'The "sub" claim means "subject", which is the unique identifier of the user (i.e. user ID).'})}),"\n",(0,s.jsxs)(n.p,{children:["Logto SDK will always request three scopes: ",(0,s.jsx)(n.code,{children:"openid"}),", ",(0,s.jsx)(n.code,{children:"profile"}),", and ",(0,s.jsx)(n.code,{children:"offline_access"}),"."]})]})}function c(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(r,{...e})}):r(e)}},68547:(e,n,t)=>{t.d(n,{Ay:()=>d,Ip:()=>i,RM:()=>r});var s=t(25105),o=t(79621);const i="http://localhost:3000/",r=[];function c(e){const n={admonition:"admonition",p:"p",...(0,o.R)(),...e.components};return(0,s.jsx)(n.admonition,{type:"note",children:(0,s.jsxs)(n.p,{children:["In the following code snippets, we assume your app is running on ",(0,s.jsx)("code",{children:i}),"."]})})}function d(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},75715:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>T,contentTitle:()=>k,default:()=>N,frontMatter:()=>C,metadata:()=>s,toc:()=>S});const s=JSON.parse('{"id":"quick-starts/framework/dotnet-blazor-server/README","title":"Add authentication to your .NET Core (Blazor Server) application","description":"Prerequisites \\\\","source":"@site/docs/quick-starts/framework/dotnet-blazor-server/README.mdx","sourceDirName":"quick-starts/framework/dotnet-blazor-server","slug":"/quick-starts/dotnet-core/blazor-server","permalink":"/quick-starts/dotnet-core/blazor-server","draft":false,"unlisted":false,"editUrl":"https://github.com/logto-io/docs/tree/master/docs/quick-starts/framework/dotnet-blazor-server/README.mdx","tags":[],"version":"current","frontMatter":{"slug":"/quick-starts/dotnet-core/blazor-server","sidebar_label":".NET Core (Blazor Server)","sidebar_custom_props":{"logoFilename":"dotnet-blazor.svg","description":"Integrate Logto into your .NET Core Blazor Server app."},"language":"c#","official_link":"https://learn.microsoft.com/en-us/aspnet/core/blazor/hosting-models?view=aspnetcore-9.0#blazor-server","app_type":"Traditional web","framework":".Net Core (Blazor Server)"},"sidebar":"quickStartSidebar","previous":{"title":"Chrome extension","permalink":"/quick-starts/chrome-extension"},"next":{"title":".NET Core (Blazor WASM)","permalink":"/quick-starts/dotnet-core/blazor-wasm"}}');var o=t(25105),i=t(79621),r=t(5054),c=t(46409),d=t(38517),a=t(83322),l=t(55317),h=t(8425),p=t(16313),u=t(17990),x=t(84292),j=t(17066),m=t(43204);function g(e){const n={code:"code",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.p,{children:"Since Blazor Server uses SignalR to communicate between the server and the client, this means methods that directly manipulate the HTTP context (like issuing challenges or redirects) don't work as expected when called from a Blazor component."}),"\n",(0,o.jsx)(n.p,{children:"To make it right, we need to explicitly add two endpoints for sign-in and sign-out redirects:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-csharp",metastring:'title="Program.cs"',children:'app.MapGet("/SignIn", async context =>\n{\n    if (!(context.User?.Identity?.IsAuthenticated ?? false))\n    {\n        await context.ChallengeAsync(new AuthenticationProperties { RedirectUri = "/" });\n    } else {\n        context.Response.Redirect("/");\n    }\n});\n\napp.MapGet("/SignOut", async context =>\n{\n    if (context.User?.Identity?.IsAuthenticated ?? false)\n    {\n        await context.SignOutAsync(new AuthenticationProperties { RedirectUri = "/" });\n    } else {\n        context.Response.Redirect("/");\n    }\n});\n'})}),"\n",(0,o.jsx)(n.p,{children:"Now we can redirect to these endpoints to trigger sign-in and sign-out."})]})}function f(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(g,{...e})}):g(e)}function y(e){const n={code:"code",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsxs)(n.p,{children:["Alternatively, you can use the ",(0,o.jsx)(n.code,{children:"AuthorizeView"})," component to conditionally render content based on the user's authentication state. This component is useful when you want to show different content to authenticated and unauthenticated users."]}),"\n",(0,o.jsx)(n.p,{children:"In your Razor component, add the following code:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-cshtml",metastring:'title="Components/Pages/Index.razor"',children:"@using Microsoft.AspNetCore.Components.Authorization\n\n@* ... *@\n\n<AuthorizeView>\n    <Authorized>\n        <p>Name: @User?.Identity?.Name</p>\n        @* Content for authenticated users *@\n    </Authorized>\n    <NotAuthorized>\n        @* Content for unauthenticated users *@\n    </NotAuthorized>\n</AuthorizeView>\n\n@* ... *@\n"})}),"\n",(0,o.jsxs)(n.p,{children:["The ",(0,o.jsx)(n.code,{children:"AuthorizeView"})," component requires a cascading parameter of type ",(0,o.jsx)(n.code,{children:"Task<AuthenticationState>"}),". A direct way to get this parameter is to add the ",(0,o.jsx)(n.code,{children:"<CascadingAuthenticationState>"})," component. However, due to the nature of Blazor Server, we cannot simply add the component to the layout or the root component (it may not work as expected). Instead, we can add the following code to the builder (",(0,o.jsx)(n.code,{children:"Program.cs"})," or ",(0,o.jsx)(n.code,{children:"Startup.cs"}),") to provide the cascading parameter:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-csharp",metastring:'title="Program.cs"',children:"builder.Services.AddCascadingAuthenticationState();\n"})}),"\n",(0,o.jsxs)(n.p,{children:["Then you can use the ",(0,o.jsx)(n.code,{children:"AuthorizeView"})," component in every component that needs it."]})]})}function b(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(y,{...e})}):y(e)}function v(e){const n={code:"code",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsxs)(n.p,{children:["Since we cannot directly access ",(0,o.jsx)(n.code,{children:"HttpContext"})," in Razor components, we need to inject the ",(0,o.jsx)(n.code,{children:"HttpContextAccessor"})," to the component and use it to fetch the tokens. The following code demonstrates how to fetch the access token for the API resource in a Razor component:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-cshtml",metastring:'title="Components/Pages/Index.razor"',children:'@using Microsoft.AspNetCore.Components.Authorization\n@using System.Security.Claims\n@using Logto.AspNetCore.Authentication\n@using Microsoft.AspNetCore.Authentication\n@inject AuthenticationStateProvider AuthenticationStateProvider\n@inject IHttpContextAccessor HttpContextAccessor\n\n@* ... *@\n\n<p><b>Resource:</b> @(Resource ?? "(null)")</p>\n<p><b>Access Token:</b> @(AccessToken ?? "(null)")</p>\n\n@* ... *@\n\n@code {\n    private ClaimsPrincipal? User { get; set; }\n    private string? AccessToken { get; set; }\n    private string? Resource { get; set; }\n\n    protected override async Task OnInitializedAsync()\n    {\n        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();\n        User = authState.User;\n\n        if (User?.Identity?.IsAuthenticated == true)\n        {\n            await FetchTokenAsync();\n        }\n    }\n\n    private async Task FetchTokenAsync()\n    {\n        var httpContext = HttpContextAccessor.HttpContext;\n        if (httpContext == null)\n        {\n            return;\n        }\n\n        var logtoOptions = httpContext.GetLogtoOptions();\n        Resource = logtoOptions?.Resource;\n        // Replace with other token types if needed\n        AccessToken = await httpContext.GetTokenAsync(LogtoParameters.Tokens.AccessTokenForResource);\n    }\n}\n'})})]})}function w(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(v,{...e})}):v(e)}function A(e){const n={code:"code",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.p,{children:"In the Razor component, add the following code:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-cshtml",metastring:'title="Components/Pages/Index.razor"',children:'@using Microsoft.AspNetCore.Components.Authorization\n@using System.Security.Claims\n@inject AuthenticationStateProvider AuthenticationStateProvider\n@inject NavigationManager NavigationManager\n\n@* ... *@\n\n<p>Is authenticated: @User.Identity?.IsAuthenticated</p>\n@if (User.Identity?.IsAuthenticated == true)\n{\n    <button @onclick="SignOut">Sign out</button>\n}\nelse\n{\n    <button @onclick="SignIn">Sign in</button>\n}\n\n@* ... *@\n\n@code {\n    private ClaimsPrincipal? User { get; set; }\n\n    protected override async Task OnInitializedAsync()\n    {\n        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();\n        User = authState.User;\n    }\n\n    private void SignIn()\n    {\n        NavigationManager.NavigateTo("/SignIn", forceLoad: true);\n    }\n\n    private void SignOut()\n    {\n        NavigationManager.NavigateTo("/SignOut", forceLoad: true);\n    }\n}\n'})}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Explanation"}),":"]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["The injected ",(0,o.jsx)(n.code,{children:"AuthenticationStateProvider"})," is used to get the current user's authentication state, and populate the ",(0,o.jsx)(n.code,{children:"User"})," property."]}),"\n",(0,o.jsxs)(n.li,{children:["The ",(0,o.jsx)(n.code,{children:"SignIn"})," and ",(0,o.jsx)(n.code,{children:"SignOut"})," methods are used to redirect the user to the sign-in and sign-out endpoints respectively. Since the nature of Blazor Server, we need to use ",(0,o.jsx)(n.code,{children:"NavigationManager"})," with force load to trigger the redirection."]}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:'The page will show the "Sign in" button if the user is not authenticated, and show the "Sign out" button if the user is authenticated.'})]})}function R(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(A,{...e})}):A(e)}const C={slug:"/quick-starts/dotnet-core/blazor-server",sidebar_label:".NET Core (Blazor Server)",sidebar_custom_props:{logoFilename:"dotnet-blazor.svg",description:"Integrate Logto into your .NET Core Blazor Server app."},language:"c#",official_link:"https://learn.microsoft.com/en-us/aspnet/core/blazor/hosting-models?view=aspnetcore-9.0#blazor-server",app_type:"Traditional web",framework:".Net Core (Blazor Server)"},k="Add authentication to your .NET Core (Blazor Server) application",T={},S=[...u.RM,{value:"Prerequisites",id:"prerequisites",level:2},{value:"Installation",id:"installation",level:2},...x.RM,{value:"Integration",id:"integration",level:2},{value:"Add Logto authentication",id:"add-logto-authentication",level:3},...a.RM,{value:"Sign-in and sign-out flows",id:"sign-in-and-sign-out-flows",level:3},...j.RM,{value:"Configure redirect URIs",id:"configure-redirect-uris",level:3},...l.RM,{value:"Add routes",id:"add-routes",level:3},{value:"Implement sign-in and sign-out buttons",id:"implement-sign-in-and-sign-out-buttons",level:3},{value:"The <code>&lt;AuthorizeView /&gt;</code> component",id:"the-authorizeview--component",level:3},...c.RM,{value:"Get user information",id:"get-user-information",level:2},...p.RM,{value:"API resources",id:"api-resources",level:2},...r.RM,{value:"Configure API resource in your app",id:"configure-api-resource-in-your-app",level:3},...m.RM,{value:"Fetch tokens",id:"fetch-tokens",level:2},{value:"Fetch token via <code>HttpContext</code>",id:"fetch-token-via-httpcontext",level:3},...h.RM,{value:"Fetch token in Razor components",id:"fetch-token-in-razor-components",level:3},{value:"Further readings",id:"further-readings",level:2},...d.RM];function I(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ul:"ul",...(0,i.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"add-authentication-to-your-net-core-blazor-server-application",children:"Add authentication to your .NET Core (Blazor Server) application"})}),"\n",(0,o.jsx)(u.Ay,{}),"\n",(0,o.jsx)(n.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["A ",(0,o.jsx)(n.a,{href:"https://cloud.logto.io",children:"Logto Cloud"})," account or a ",(0,o.jsx)(n.a,{href:"/introduction/set-up-logto-oss",children:"self-hosted Logto"}),"."]}),"\n",(0,o.jsx)(n.li,{children:"A Logto traditional web application created."}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"installation",children:"Installation"}),"\n",(0,o.jsx)(x.Ay,{}),"\n",(0,o.jsx)(n.h2,{id:"integration",children:"Integration"}),"\n",(0,o.jsx)(n.h3,{id:"add-logto-authentication",children:"Add Logto authentication"}),"\n",(0,o.jsx)(a.Ay,{}),"\n",(0,o.jsx)(n.h3,{id:"sign-in-and-sign-out-flows",children:"Sign-in and sign-out flows"}),"\n",(0,o.jsx)(j.Ay,{}),"\n",(0,o.jsx)(n.h3,{id:"configure-redirect-uris",children:"Configure redirect URIs"}),"\n",(0,o.jsx)(l.Ay,{}),"\n",(0,o.jsx)(n.h3,{id:"add-routes",children:"Add routes"}),"\n",(0,o.jsx)(f,{}),"\n",(0,o.jsx)(n.h3,{id:"implement-sign-in-and-sign-out-buttons",children:"Implement sign-in and sign-out buttons"}),"\n",(0,o.jsx)(R,{}),"\n",(0,o.jsxs)(n.h3,{id:"the-authorizeview--component",children:["The ",(0,o.jsx)(n.code,{children:"<AuthorizeView />"})," component"]}),"\n",(0,o.jsx)(b,{}),"\n",(0,o.jsx)(c.Ay,{}),"\n",(0,o.jsx)(n.h2,{id:"get-user-information",children:"Get user information"}),"\n",(0,o.jsx)(p.Ay,{}),"\n",(0,o.jsx)(n.h2,{id:"api-resources",children:"API resources"}),"\n",(0,o.jsx)(r.Ay,{}),"\n",(0,o.jsx)(n.h3,{id:"configure-api-resource-in-your-app",children:"Configure API resource in your app"}),"\n",(0,o.jsx)(m.Ay,{}),"\n",(0,o.jsx)(n.h2,{id:"fetch-tokens",children:"Fetch tokens"}),"\n",(0,o.jsxs)(n.h3,{id:"fetch-token-via-httpcontext",children:["Fetch token via ",(0,o.jsx)(n.code,{children:"HttpContext"})]}),"\n",(0,o.jsx)(h.Ay,{}),"\n",(0,o.jsx)(n.h3,{id:"fetch-token-in-razor-components",children:"Fetch token in Razor components"}),"\n",(0,o.jsx)(w,{}),"\n",(0,o.jsx)(n.h2,{id:"further-readings",children:"Further readings"}),"\n",(0,o.jsx)(d.Ay,{})]})}function N(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(I,{...e})}):I(e)}},83322:(e,n,t)=>{t.d(n,{Ay:()=>c,RM:()=>i});var s=t(25105),o=t(79621);const i=[];function r(e){const n={code:"code",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.p,{children:["Open ",(0,s.jsx)(n.code,{children:"Startup.cs"})," (or ",(0,s.jsx)(n.code,{children:"Program.cs"}),") and add the following code to register Logto authentication services:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-csharp",metastring:'title="Program.cs"',children:'using Logto.AspNetCore.Authentication;\n\nvar builder = WebApplication.CreateBuilder(args);\n\nbuilder.Services.AddLogtoAuthentication(options =>\n{\n  options.Endpoint = builder.Configuration["Logto:Endpoint"]!;\n  options.AppId = builder.Configuration["Logto:AppId"]!;\n  options.AppSecret = builder.Configuration["Logto:AppSecret"];\n});\n'})}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"AddLogtoAuthentication"})," method will do the following things:"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Set the default authentication scheme to ",(0,s.jsx)(n.code,{children:"LogtoDefaults.CookieScheme"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:["Set the default challenge scheme to ",(0,s.jsx)(n.code,{children:"LogtoDefaults.AuthenticationScheme"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:["Set the default sign-out scheme to ",(0,s.jsx)(n.code,{children:"LogtoDefaults.AuthenticationScheme"}),"."]}),"\n",(0,s.jsx)(n.li,{children:"Add cookie and OpenID Connect authentication handlers to the authentication scheme."}),"\n"]})]})}function c(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(r,{...e})}):r(e)}},55317:(e,n,t)=>{t.d(n,{Ay:()=>a,RM:()=>c});var s=t(25105),o=t(79621),i=t(80173),r=t(68547);const c=[...r.RM,{value:"Change the default paths",id:"change-the-default-paths",level:4}];function d(e){const n={code:"code",h4:"h4",p:"p",pre:"pre",strong:"strong",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(r.Ay,{}),"\n",(0,s.jsxs)(n.p,{children:["First, let's configure the ",(0,s.jsx)(n.strong,{children:"Logto redirect URI"}),'. Add the following URI to the "Redirect URIs" list in the Logto application details page:']}),"\n",(0,s.jsx)(i.A,{children:`${r.Ip}Callback`}),"\n",(0,s.jsxs)(n.p,{children:["To configure the ",(0,s.jsx)(n.strong,{children:"Logto post sign-out redirect URI"}),', add the following URI to the "Post sign-out redirect URIs" list in the Logto application details page:']}),"\n",(0,s.jsx)(i.A,{children:`${r.Ip}SignedOutCallback`}),"\n",(0,s.jsx)(n.h4,{id:"change-the-default-paths",children:"Change the default paths"}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.strong,{children:"Logto redirect URI"})," has a default path of ",(0,s.jsx)(n.code,{children:"/Callback"}),", and the ",(0,s.jsx)(n.strong,{children:"Logto post sign-out redirect URI"})," has a default path of ",(0,s.jsx)(n.code,{children:"/SignedOutCallback"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["You can leave them as are if there's no special requirement. If you want to change it, you can set the ",(0,s.jsx)(n.code,{children:"CallbackPath"})," and ",(0,s.jsx)(n.code,{children:"SignedOutCallbackPath"})," property for ",(0,s.jsx)(n.code,{children:"LogtoOptions"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-csharp",metastring:'title="Program.cs"',children:'builder.Services.AddLogtoAuthentication(options =>\n{\n  // Other configurations...\n  // highlight-start\n  options.CallbackPath = "/Foo";\n  options.SignedOutCallbackPath = "/Bar";\n  // highlight-end\n});\n'})}),"\n",(0,s.jsx)(n.p,{children:"Remember to update the value in the Logto application details page accordingly."})]})}function a(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8425:(e,n,t)=>{t.d(n,{Ay:()=>c,RM:()=>i});var s=t(25105),o=t(79621);const i=[];function r(e){const n={admonition:"admonition",code:"code",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.p,{children:["Sometimes you may need to fetch the access token or ID token for API calls. You can use the ",(0,s.jsx)(n.code,{children:"GetTokenAsync"})," method to fetch the tokens:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-csharp",children:"var accessToken = await HttpContext.GetTokenAsync(LogtoParameters.Tokens.AccessToken);\nvar idToken = await HttpContext.GetTokenAsync(LogtoParameters.Tokens.IdToken);\n"})}),"\n",(0,s.jsx)(n.p,{children:"No need to worry about the token expiration, the authentication middleware will automatically refresh the tokens when necessary."}),"\n",(0,s.jsx)(n.admonition,{type:"caution",children:(0,s.jsx)(n.p,{children:"Although the authentication middleware will automatically refresh the tokens, the claims in the user object will not be updated due to the limitation of the underlying OpenID Connect authentication handler.\nThis can be resolved once we write our own authentication handler."})}),"\n",(0,s.jsxs)(n.p,{children:["Note the access token above is an opaque token for the userinfo endpoint in OpenID Connect, which is not a JWT. If you have specified the API resource, you need to use ",(0,s.jsx)(n.code,{children:"LogtoParameters.Tokens.AccessTokenForResource"})," to fetch the access token for the API resource:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-csharp",children:"var accessToken = await HttpContext.GetTokenAsync(LogtoParameters.Tokens.AccessTokenForResource);\n"})}),"\n",(0,s.jsx)(n.p,{children:"This token will be a JWT with the API resource as the audience."})]})}function c(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(r,{...e})}):r(e)}},16313:(e,n,t)=>{t.d(n,{Ay:()=>l,RM:()=>d});var s=t(25105),o=t(79621),i=t(73984),r=t(36608),c=t(21841);const d=[{value:"Display user information",id:"display-user-information",level:3},{value:"Request additional claims",id:"request-additional-claims",level:3},...i.RM,...c.RM,{value:"Claims that need network request",id:"claims-that-need-network-request",level:3},{value:"Scopes and claims",id:"scopes-and-claims",level:3},...r.RM];function a(e){const n={a:"a",code:"code",h3:"h3",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h3,{id:"display-user-information",children:"Display user information"}),"\n",(0,s.jsxs)(n.p,{children:["To know if the user is authenticated, you can check the ",(0,s.jsx)(n.code,{children:"User.Identity?.IsAuthenticated"})," property."]}),"\n",(0,s.jsxs)(n.p,{children:["To get the user profile claims, you can use the ",(0,s.jsx)(n.code,{children:"User.Claims"})," property:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-csharp",metastring:'title="Controllers/HomeController.cs"',children:"var claims = User.Claims;\n\n// Get the user ID\nvar userId = claims.FirstOrDefault(c => c.Type == LogtoParameters.Claims.Subject)?.Value;\n"})}),"\n",(0,s.jsxs)(n.p,{children:["See ",(0,s.jsx)(n.a,{href:"https://github.com/logto-io/csharp/blob/master/src/Logto.AspNetCore.Authentication/LogtoParameters.cs",children:(0,s.jsx)(n.code,{children:"LogtoParameters.Claims"})})," for the list of claim names and their meanings."]}),"\n",(0,s.jsx)(n.h3,{id:"request-additional-claims",children:"Request additional claims"}),"\n",(0,s.jsx)(i.Ay,{method:"User.Claims"}),"\n",(0,s.jsx)(c.Ay,{}),"\n",(0,s.jsxs)(n.p,{children:["To request additional scopes, you can configure the ",(0,s.jsx)(n.code,{children:"Scopes"})," property in the ",(0,s.jsx)(n.code,{children:"options"})," object:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-csharp",metastring:'title="Program.cs"',children:"builder.Services.AddLogtoAuthentication(options =>\n{\n  // ...\n  // highlight-start\n  options.Scopes = new string[] {\n    LogtoParameters.Scopes.Email,\n    LogtoParameters.Scopes.Phone\n  }\n  // highlight-end\n});\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Then you can access the additional claims via ",(0,s.jsx)(n.code,{children:"User.Claims"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-csharp",metastring:'title="Controllers/HomeController.cs"',children:"var claims = User.Claims;\n\n// Get the user email\nvar email = claims.FirstOrDefault(c => c.Type == LogtoParameters.Claims.Email)?.Value;\n"})}),"\n",(0,s.jsx)(n.h3,{id:"claims-that-need-network-request",children:"Claims that need network request"}),"\n",(0,s.jsxs)(n.p,{children:["To prevent bloating the user object, some claims require network requests to fetch. For example, the custom_data claim is not included in the user object even if it's requested in the scopes. To fetch these claims, you can set ",(0,s.jsx)(n.code,{children:"GetClaimsFromUserInfoEndpoint"})," to ",(0,s.jsx)(n.code,{children:"true"})," in the ",(0,s.jsx)(n.code,{children:"options"})," object:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-csharp",metastring:'title="Program.cs"',children:"builder.Services.AddLogtoAuthentication(options =>\n{\n  // ...\n  // highlight-next-line\n  options.GetClaimsFromUserInfoEndpoint = true;\n});\n"})}),"\n",(0,s.jsx)(n.h3,{id:"scopes-and-claims",children:"Scopes and claims"}),"\n",(0,s.jsx)(r.Ay,{})]})}function l(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(a,{...e})}):a(e)}},17990:(e,n,t)=>{t.d(n,{Ay:()=>c,RM:()=>i});var s=t(25105),o=t(79621);const i=[];function r(e){const n={a:"a",admonition:"admonition",li:"li",ul:"ul",...(0,o.R)(),...e.components};return(0,s.jsx)(n.admonition,{type:"tip",children:(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"The following demonstration is built on .NET Core 8.0. The SDK is compatible with .NET 6.0 or higher."}),"\n",(0,s.jsxs)(n.li,{children:["The .NET Core sample projects are available in the ",(0,s.jsx)(n.a,{href:"https://github.com/logto-io/csharp",children:"GitHub repository"}),"."]}),"\n"]})})}function c(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(r,{...e})}):r(e)}},84292:(e,n,t)=>{t.d(n,{Ay:()=>c,RM:()=>i});var s=t(25105),o=t(79621);const i=[];function r(e){const n={code:"code",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.p,{children:"Add the NuGet package to your project:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"dotnet add package Logto.AspNetCore.Authentication\n"})})]})}function c(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(r,{...e})}):r(e)}},17066:(e,n,t)=>{t.d(n,{Ay:()=>d,RM:()=>r});var s=t(25105),o=t(79621),i=t(71019);const r=[...i.RM];function c(e){const n={li:"li",mermaid:"mermaid",ol:"ol",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.p,{children:"Before we proceed, there are two confusing terms in the .NET Core authentication middleware that we need to clarify:"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"CallbackPath"}),': The URI that Logto will redirect the user back to after the user has signed in (the "redirect URI" in Logto)']}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"RedirectUri"}),": The URI that will be redirected to after necessary actions have been taken in the Logto authentication middleware."]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"The sign-in process can be illustrated as follows:"}),"\n",(0,s.jsx)(n.mermaid,{value:"graph LR\n  subgraph Your app\n    A\n    C\n    D\n  end\n  subgraph Logto\n    B\n  end\n  A(Sign-in path) --\x3e|Redirect to| B(Logto)\n  B --\x3e|Redirect to| C(CallbackPath)\n  C --\x3e|Redirect to| D(RedirectUri)"}),"\n",(0,s.jsx)("br",{}),"\n",(0,s.jsxs)(n.p,{children:["Similarly, .NET Core also has ",(0,s.jsx)(n.strong,{children:"SignedOutCallbackPath"})," and ",(0,s.jsx)(n.strong,{children:"RedirectUri"})," for the sign-out flow."]}),"\n",(0,s.jsx)(n.p,{children:"For the sake of clarity, we'll refer them as follows:"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Term we use"}),(0,s.jsx)(n.th,{children:".NET Core term"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Logto redirect URI"}),(0,s.jsx)(n.td,{children:"CallbackPath"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Logto post sign-out redirect URI"}),(0,s.jsx)(n.td,{children:"SignedOutCallbackPath"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Application redirect URI"}),(0,s.jsx)(n.td,{children:"RedirectUri"})]})]})]}),"\n",(0,s.jsx)(i.Ay,{})]})}function d(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},43204:(e,n,t)=>{t.d(n,{Ay:()=>p,RM:()=>l});var s=t(25105),o=t(79621),i=t(61770);function r(e){const n={code:"code",pre:"pre",...(0,o.R)(),...e.components};return(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-csharp",metastring:'title="Program.cs"',children:'builder.Services.AddLogtoAuthentication(options =>\n{\n  // ...\n  // highlight-next-line\n  options.Resource = "https://<your-api-resource-indicator>";\n});\n'})})}function c(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(r,{...e})}):r(e)}function d(e){const n={code:"code",pre:"pre",...(0,o.R)(),...e.components};return(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-csharp",metastring:'title="Program.cs"',children:'builder.Services.AddLogtoAuthentication(options =>\n{\n  // ...\n  // highlight-start\n  options.Resource = "https://shopping.your-app.com/api";\n  options.Scopes = new string[] {\n    "openid",\n    "profile",\n    "offline_access",\n    "read",\n    "write"\n  };\n  // highlight-end\n});\n'})})}function a(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}const l=[...i.RM];function h(e){return(0,s.jsx)(i.Ay,{configResourcesCode:(0,s.jsx)(c,{}),configResourcesWithScopesCode:(0,s.jsx)(a,{})})}function p(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(h,{...e})}):h()}},55138:(e,n,t)=>{t.d(n,{A:()=>j});var s=t(28259),o=t(6097),i=t(58574),r=t(9484),c=t(76566),d=t(26346),a=t(17867),l=t(17510),h=t(13526),p=t(72355);const u={codeBlockContent:"codeBlockContent_m3Ux",codeBlockTitle:"codeBlockTitle_P25_",codeBlock:"codeBlock_qGQc",codeBlockStandalone:"codeBlockStandalone_zC50",codeBlockLines:"codeBlockLines_p187",codeBlockLinesWithNumbering:"codeBlockLinesWithNumbering_OFgW",buttonGroup:"buttonGroup_6DOT"};var x=t(25105);function j(e){let{children:n,className:t="",metastring:j,title:m,showLineNumbers:g,language:f}=e;const{prism:{defaultLanguage:y,magicComments:b}}=(0,s.p)(),v=function(e){return e?.toLowerCase()}(f??(0,i.Op)(t)??y),w=(0,o.A)(),A=(0,r.f)(),R=(0,i.wt)(j)||m,{lineClassNames:C,code:k}=(0,i.Li)(n,{metastring:j,language:v,magicComments:b}),T=g??(0,i._u)(j);return(0,x.jsxs)(c.A,{as:"div",className:(0,h.A)(t,v&&!t.includes(`language-${v}`)&&`language-${v}`),children:[R&&(0,x.jsx)("div",{className:u.codeBlockTitle,children:R}),(0,x.jsxs)("div",{className:u.codeBlockContent,children:[(0,x.jsx)(p.f4,{theme:w,code:k,language:v??"text",children:e=>{let{className:n,tokens:t,getLineProps:s,getTokenProps:o}=e;return(0,x.jsx)("pre",{ref:A.codeBlockRef,tabIndex:0,className:(0,h.A)(n,u.codeBlock,"thin-scrollbar"),children:(0,x.jsx)("code",{className:(0,h.A)(u.codeBlockLines,T&&u.codeBlockLinesWithNumbering),children:t.map(((e,n)=>(0,x.jsx)(a.A,{line:e,getLineProps:s,getTokenProps:o,classNames:C[n],showLineNumbers:T},n)))})})}}),(0,x.jsxs)("div",{className:u.buttonGroup,children:[(A.isEnabled||A.isCodeScrollable)&&(0,x.jsx)(l.A,{className:u.codeButton,isEnabled:A.isEnabled,onClick:()=>{A.toggle()}}),(0,x.jsx)(d.A,{className:u.codeButton,code:k})]})]})]})}}}]);