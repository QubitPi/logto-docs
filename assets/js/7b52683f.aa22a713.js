"use strict";(self.webpackChunk_logto_docs=self.webpackChunk_logto_docs||[]).push([[21148],{3187:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>h,frontMatter:()=>r,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"integrate-logto/integrate-logto-into-your-application/understand-authentication-flow","title":"Understand authentication flow","description":"Logto is built on OAuth 2.0 and OpenID Connect (OIDC) standards. Understanding these authentication standards will make the integration process smoother and more straightforward.","source":"@site/docs/integrate-logto/integrate-logto-into-your-application/understand-authentication-flow.mdx","sourceDirName":"integrate-logto/integrate-logto-into-your-application","slug":"/integrate-logto/integrate-logto-into-your-application/understand-authentication-flow","permalink":"/integrate-logto/integrate-logto-into-your-application/understand-authentication-flow","draft":false,"unlisted":false,"editUrl":"https://github.com/logto-io/docs/tree/master/docs/integrate-logto/integrate-logto-into-your-application/understand-authentication-flow.mdx","tags":[],"version":"current","frontMatter":{},"sidebar":"docsSidebar","previous":{"title":"Integrate Logto into your application","permalink":"/integrate-logto/integrate-logto-into-your-application/"},"next":{"title":"Protected App","permalink":"/integrate-logto/protected-app"}}');var o=n(25105),a=n(79621);const r={},s="Understand authentication flow",c={},l=[{value:"User authentication flow",id:"user-authentication-flow",level:3},{value:"Machine-to-machine authentication flow",id:"machine-to-machine-authentication-flow",level:3},{value:"Related resources",id:"related-resources",level:2}];function d(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",mermaid:"mermaid",p:"p",ul:"ul",...(0,a.R)(),...e.components},{Url:n}=t;return n||function(e,t){throw new Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Url",!0),(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.header,{children:(0,o.jsx)(t.h1,{id:"understand-authentication-flow",children:"Understand authentication flow"})}),"\n",(0,o.jsxs)(t.p,{children:["Logto is built on ",(0,o.jsx)(t.a,{href:"https://auth.wiki/oauth-2.0",children:"OAuth 2.0"})," and ",(0,o.jsx)(t.a,{href:"https://auth.wiki/openid-connect",children:"OpenID Connect (OIDC)"})," standards. Understanding these authentication standards will make the integration process smoother and more straightforward."]}),"\n",(0,o.jsx)(t.h3,{id:"user-authentication-flow",children:"User authentication flow"}),"\n",(0,o.jsx)(t.p,{children:"Here's what happens when a user signs in with Logto:"}),"\n",(0,o.jsx)(t.mermaid,{value:"sequenceDiagram\n    autonumber\n    participant User\n    participant Application\n    participant Logto\n\n    User->>Application: Click sign-in button\n    Application->>Logto: Initiate sign-in and redirect to Logto sign-in page\n    User->>Logto: Enter credentials for authentication\n    Logto->>Application: Complete sign-in and redirect back\n    Application->>Logto: Process callback and request access token and user info\n    Logto->>Application: Return access token and user info\n    Application->>User: Sign-in successful"}),"\n",(0,o.jsx)(t.p,{children:"In this flow, several key concepts are essential for the integration process:"}),"\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsxs)(t.li,{children:[(0,o.jsx)(t.code,{children:"Application"}),": This represents your app in Logto. You'll create an application configuration in the Logto Console to establish a connection between your actual application and Logto services. Learn more about ",(0,o.jsx)(t.a,{href:"/integrate-logto/application-data-structure/#introduction",children:"Application"}),"."]}),"\n",(0,o.jsxs)(t.li,{children:[(0,o.jsx)(t.code,{children:"Redirect URI"}),": After users complete authentication on the Logto sign-in page, Logto redirects them back to your application through this URI. You'll need to configure the Redirect URI in your Application settings. For more details, see ",(0,o.jsx)(t.a,{href:"/integrate-logto/application-data-structure/#redirect-uris",children:"Redirect URIs"}),"."]}),"\n",(0,o.jsxs)(t.li,{children:[(0,o.jsx)(t.code,{children:"Handle sign-in callback"}),": When Logto redirects users back to your application, your app needs to process the authentication data and request access tokens and user information. Don't worry - the Logto SDK handles this automatically."]}),"\n"]}),"\n",(0,o.jsxs)(t.p,{children:["This overview covers the essentials for quick integration. For a deeper understanding, check out our ",(0,o.jsx)(t.a,{href:"/concepts/sign-in-experience/",children:"Sign-in experience explained"})," guide."]}),"\n",(0,o.jsx)(t.h3,{id:"machine-to-machine-authentication-flow",children:"Machine-to-machine authentication flow"}),"\n",(0,o.jsxs)(t.p,{children:["Logto provides ",(0,o.jsx)(t.a,{href:"/quick-starts/m2m",children:"machine-to-machine (M2M) application"})," type to enable direct authentication between services, based on ",(0,o.jsx)(t.a,{href:"https://auth.wiki/client-credentials-flow",children:"OAuth 2.0 Client Credentials flow"}),":"]}),"\n",(0,o.jsx)(t.mermaid,{value:"sequenceDiagram\n    participant Service A\n    participant Logto\n    participant Service B\n\n    Service A->>Logto: Request access token with client credentials\n    Logto->>Service A: Return access token\n    Service A->>Service B: API request with access token\n    Service B->>Logto: Validate token\n    Logto->>Service B: Token validation result\n    Service B->>Service A: API response"}),"\n",(0,o.jsx)(t.p,{children:"This machine-to-machine (M2M) authentication flow is designed for applications that need to directly communicate with resources without user interaction (thus no UI), such as an API service updating user data in Logto or a statistics service pulling daily orders."}),"\n",(0,o.jsxs)(t.p,{children:["In this flow, services authenticate using client credentials - a combination of ",(0,o.jsx)(t.a,{href:"/integrate-logto/application-data-structure/#application-id",children:"Application ID"})," and ",(0,o.jsx)(t.a,{href:"/integrate-logto/application-data-structure/#application-secret",children:"Application Secret"})," that uniquely identifies and authenticates the service. These credentials serve as the service's identity when requesting ",(0,o.jsx)(t.a,{href:"https://auth.wiki/access-token",children:"access tokens"})," from Logto."]}),"\n",(0,o.jsx)(t.h2,{id:"related-resources",children:"Related resources"}),"\n",(0,o.jsx)(n,{href:"https://blog.logto.io/secure-cloud-apps-with-oauth-and-openid-connect",children:(0,o.jsx)(t.p,{children:"Blog: Secure cloud-based applications with OAuth 2.0 and OpenID Connect"})}),"\n",(0,o.jsx)(n,{href:"https://blog.logto.io/sso-is-better",children:(0,o.jsx)(t.p,{children:"Why single sign-on (SSO) for multiple applications is better"})}),"\n",(0,o.jsx)(n,{href:"https://blog.logto.io/centralized-identity-system",children:(0,o.jsx)(t.p,{children:"Why you need a centralized identity system for a multi-app business"})})]})}function h(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},79621:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>s});var i=n(58101);const o={},a=i.createContext(o);function r(e){const t=i.useContext(a);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),i.createElement(a.Provider,{value:t},e.children)}}}]);