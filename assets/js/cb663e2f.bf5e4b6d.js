"use strict";(self.webpackChunk_logto_docs=self.webpackChunk_logto_docs||[]).push([[86577],{62453:(o,e,n)=>{n.r(e),n.d(e,{assets:()=>a,contentTitle:()=>s,default:()=>h,frontMatter:()=>r,metadata:()=>i,toc:()=>l});var c=n(11527),t=n(17279);const r={sidebar_label:"Configure popular social connector",sidebar_position:1},s="Configure popular social connector",i={id:"docs/recipes/configure-connectors/social-connector/configure-popular-social-connector",title:"Configure popular social connector",description:"We have provided lots of universal third-party social platforms preinstalled by Logto Console.",source:"@site/docs/docs/recipes/configure-connectors/social-connector/configure-popular-social-connector.md",sourceDirName:"docs/recipes/configure-connectors/social-connector",slug:"/docs/recipes/configure-connectors/social-connector/configure-popular-social-connector",permalink:"/docs/recipes/configure-connectors/social-connector/configure-popular-social-connector",draft:!1,unlisted:!1,editUrl:"https://github.com/logto-io/docs/tree/master/docs/docs/recipes/configure-connectors/social-connector/configure-popular-social-connector.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_label:"Configure popular social connector",sidebar_position:1},sidebar:"docsSidebar",previous:{title:"Social connectors",permalink:"/docs/recipes/configure-connectors/social-connector/"},next:{title:"Custom social connector with standard protocols",permalink:"/docs/recipes/configure-connectors/social-connector/custom-social-connector-with-standard-protocols"}},a={},l=[{value:"Configure steps",id:"configure-steps",level:2}];function d(o){const e={a:"a",admonition:"admonition",em:"em",h1:"h1",h2:"h2",img:"img",li:"li",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,t.a)(),...o.components};return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)(e.h1,{id:"configure-popular-social-connector",children:"Configure popular social connector"}),"\n",(0,c.jsx)(e.p,{children:"We have provided lots of universal third-party social platforms preinstalled by Logto Console."}),"\n",(0,c.jsx)(e.p,{children:"Follow the README to compose the connector config with little effort."}),"\n",(0,c.jsxs)(e.ul,{children:["\n",(0,c.jsxs)(e.li,{children:[(0,c.jsx)(e.strong,{children:"Google"})," ",(0,c.jsx)(e.a,{href:"https://github.com/logto-io/logto/tree/master/packages/connectors/connector-google",children:"Universal connector"})]}),"\n",(0,c.jsxs)(e.li,{children:[(0,c.jsx)(e.strong,{children:"Apple"})," ",(0,c.jsx)(e.a,{href:"https://github.com/logto-io/logto/tree/master/packages/connectors/connector-apple",children:"Universal connector"})]}),"\n",(0,c.jsxs)(e.li,{children:[(0,c.jsx)(e.strong,{children:"Facebook"})," ",(0,c.jsx)(e.a,{href:"https://github.com/logto-io/logto/tree/master/packages/connectors/connector-facebook",children:"Universal connector"})]}),"\n",(0,c.jsxs)(e.li,{children:[(0,c.jsx)(e.strong,{children:"GitHub"})," ",(0,c.jsx)(e.a,{href:"https://github.com/logto-io/logto/tree/master/packages/connectors/connector-github",children:"Universal connector"})]}),"\n",(0,c.jsxs)(e.li,{children:[(0,c.jsx)(e.strong,{children:"Discord"})," ",(0,c.jsx)(e.a,{href:"https://github.com/logto-io/logto/tree/master/packages/connectors/connector-discord",children:"Universal connector"})]}),"\n",(0,c.jsxs)(e.li,{children:[(0,c.jsx)(e.strong,{children:"WeChat"})," ",(0,c.jsx)(e.a,{href:"https://github.com/logto-io/logto/tree/master/packages/connectors/connector-wechat-web",children:"Web connector"})," | ",(0,c.jsx)(e.a,{href:"https://github.com/logto-io/logto/tree/master/packages/connectors/connector-wechat-native",children:"Native connector"})]}),"\n",(0,c.jsxs)(e.li,{children:[(0,c.jsx)(e.strong,{children:"Alipay"})," ",(0,c.jsx)(e.a,{href:"https://github.com/logto-io/logto/tree/master/packages/connectors/connector-alipay-web",children:"Web connector"})," | ",(0,c.jsx)(e.a,{href:"https://github.com/logto-io/logto/tree/master/packages/connectors/connector-alipay-native",children:"Native connector"})]}),"\n",(0,c.jsxs)(e.li,{children:[(0,c.jsx)(e.strong,{children:"Kakao"})," ",(0,c.jsx)(e.a,{href:"https://github.com/logto-io/logto/tree/master/packages/connectors/connector-kakao",children:"Universal connector"})]}),"\n",(0,c.jsxs)(e.li,{children:[(0,c.jsx)(e.strong,{children:"Naver"})," ",(0,c.jsx)(e.a,{href:"https://github.com/logto-io/logto/tree/master/packages/connectors/connector-naver",children:"Universal connector"})]}),"\n",(0,c.jsxs)(e.li,{children:[(0,c.jsx)(e.strong,{children:"Microsoft Azure AD"})," ",(0,c.jsx)(e.a,{href:"https://github.com/logto-io/logto/tree/master/packages/connectors/connector-azuread",children:"Universal connector"})]}),"\n"]}),"\n",(0,c.jsxs)(e.admonition,{title:"About the platform of Social connector",type:"info",children:[(0,c.jsxs)(e.p,{children:["You may find that some connectors do not have a secondary choice of platform, such as Google, Facebook, and GitHub. These connectors' ",(0,c.jsx)(e.em,{children:"platform"})," are ",(0,c.jsx)(e.em,{children:"Universal"}),". Explore ",(0,c.jsx)(e.a,{href:"https://docs.logto.io/docs/references/connectors/README.mdx#platform",children:(0,c.jsx)(e.em,{children:"platform"})})," to know more."]}),(0,c.jsxs)(e.p,{children:["Choose a proper ",(0,c.jsx)(e.em,{children:"platform"})," from either ",(0,c.jsx)(e.em,{children:"Web"})," or ",(0,c.jsx)(e.em,{children:"Native"})," for connectors to fit your use case. You can set up a single ",(0,c.jsx)(e.em,{children:"Native"})," connector w/o adding a ",(0,c.jsx)(e.em,{children:"Web"})," connector if you only provide native mobile apps and vice versa."]})]}),"\n",(0,c.jsx)(e.h2,{id:"configure-steps",children:"Configure steps"}),"\n",(0,c.jsxs)(e.p,{children:["To add a new Social connector in Logto Console, navigate to \u201c",(0,c.jsx)(e.strong,{children:"Connector > Social connectors"}),"\u201d and click the \u201c",(0,c.jsx)(e.strong,{children:"Add social connector"}),"\u201d button. Then Select the desired social connector type in the Modal that appears and click the \u201c",(0,c.jsx)(e.strong,{children:"Next"}),"\u201d button."]}),"\n",(0,c.jsxs)(e.p,{children:["Note that ",(0,c.jsx)(e.strong,{children:"each type of common social connector can only create one instance"})," in a Logto tenant."]}),"\n",(0,c.jsx)(e.p,{children:(0,c.jsx)(e.img,{alt:"Add social connector",src:n(11215).Z+"",width:"2818",height:"1564"})}),"\n",(0,c.jsxs)(e.ol,{children:["\n",(0,c.jsxs)(e.li,{children:["All types of social connectors can choose how to \u201c",(0,c.jsx)(e.strong,{children:"sync user profiles"}),"\u201d (such as avatars and usernames). The default setting is to only sync at registration. Still, you can also choose to always sync at each sign-in, but be careful that this may overwrite customized information in your application at user each social sign-in."]}),"\n",(0,c.jsxs)(e.li,{children:["Each social connector has a unique ",(0,c.jsx)(e.strong,{children:"\u201cIdentity provider name (IdP name)\u201d"})," to distinguish social identities. Common social connectors use a default IdP name value that cannot be modified, ensuring that you always own the same user identity pool, even if this social connector is re-added. ( For Standard Connectors, you should customize the IdP name value. You can learn more about IdP names before setting up a standard connector. )"]}),"\n",(0,c.jsxs)(e.li,{children:["Finally, note that different social connectors require different configuration parameters. You can refer to the left ",(0,c.jsx)(e.strong,{children:"README"})," for guidance on filling out the forms."]}),"\n"]}),"\n",(0,c.jsx)(e.p,{children:(0,c.jsx)(e.img,{alt:"Configure social connector guideline",src:n(40843).Z+"",width:"3018",height:"1700"})})]})}function h(o={}){const{wrapper:e}={...(0,t.a)(),...o.components};return e?(0,c.jsx)(e,{...o,children:(0,c.jsx)(d,{...o})}):d(o)}},11215:(o,e,n)=>{n.d(e,{Z:()=>c});const c=n.p+"assets/images/configure-add-social-connector-3373fc284f4a60e5db9feab833067ec8.png"},40843:(o,e,n)=>{n.d(e,{Z:()=>c});const c=n.p+"assets/images/configure-social-connector-guideline-c95b6c00e254c29dad6706acccab37a7.png"},17279:(o,e,n)=>{n.d(e,{Z:()=>i,a:()=>s});var c=n(50959);const t={},r=c.createContext(t);function s(o){const e=c.useContext(r);return c.useMemo((function(){return"function"==typeof o?o(e):{...e,...o}}),[e,o])}function i(o){let e;return e=o.disableParentContext?"function"==typeof o.components?o.components(t):o.components||t:s(o.components),c.createElement(r.Provider,{value:e},o.children)}}}]);