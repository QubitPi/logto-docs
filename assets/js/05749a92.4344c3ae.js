"use strict";(self.webpackChunk_logto_docs=self.webpackChunk_logto_docs||[]).push([[91469],{49613:function(e,t,o){o.d(t,{Zo:function(){return a},kt:function(){return d}});var r=o(59496);function n(e,t,o){return t in e?Object.defineProperty(e,t,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[t]=o,e}function s(e,t){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),o.push.apply(o,r)}return o}function i(e){for(var t=1;t<arguments.length;t++){var o=null!=arguments[t]?arguments[t]:{};t%2?s(Object(o),!0).forEach((function(t){n(e,t,o[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):s(Object(o)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(o,t))}))}return e}function c(e,t){if(null==e)return{};var o,r,n=function(e,t){if(null==e)return{};var o,r,n={},s=Object.keys(e);for(r=0;r<s.length;r++)o=s[r],t.indexOf(o)>=0||(n[o]=e[o]);return n}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)o=s[r],t.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(n[o]=e[o])}return n}var u=r.createContext({}),l=function(e){var t=r.useContext(u),o=t;return e&&(o="function"==typeof e?e(t):i(i({},t),e)),o},a=function(e){var t=l(e.components);return r.createElement(u.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var o=e.components,n=e.mdxType,s=e.originalType,u=e.parentName,a=c(e,["components","mdxType","originalType","parentName"]),f=l(o),d=n,g=f["".concat(u,".").concat(d)]||f[d]||p[d]||s;return o?r.createElement(g,i(i({ref:t},a),{},{components:o})):r.createElement(g,i({ref:t},a))}));function d(e,t){var o=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var s=o.length,i=new Array(s);i[0]=f;var c={};for(var u in t)hasOwnProperty.call(t,u)&&(c[u]=t[u]);c.originalType=e,c.mdxType="string"==typeof e?e:n,i[1]=c;for(var l=2;l<s;l++)i[l]=o[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,o)}f.displayName="MDXCreateElement"},75879:function(e,t,o){o.r(t),o.d(t,{assets:function(){return a},contentTitle:function(){return u},default:function(){return d},frontMatter:function(){return c},metadata:function(){return l},toc:function(){return p}});var r=o(665),n=o(40151),s=(o(59496),o(49613)),i=["components"],c={},u=void 0,l={unversionedId:"sdk/Swift/Logto/Structs/LogtoCore.UserInfoResponse",id:"version-1.x/sdk/Swift/Logto/Structs/LogtoCore.UserInfoResponse",title:"LogtoCore.UserInfoResponse",description:"STRUCT",source:"@site/versioned_docs/version-1.x/sdk/Swift/Logto/Structs/LogtoCore.UserInfoResponse.md",sourceDirName:"sdk/Swift/Logto/Structs",slug:"/sdk/Swift/Logto/Structs/LogtoCore.UserInfoResponse",permalink:"/logto-docs/sdk/Swift/Logto/Structs/LogtoCore.UserInfoResponse",draft:!1,editUrl:"https://github.com/logto-io/docs/tree/master/versioned_docs/version-1.x/sdk/Swift/Logto/Structs/LogtoCore.UserInfoResponse.md",tags:[],version:"1.x",frontMatter:{},sidebar:"sdkSidebar",previous:{title:"LogtoCore.RefreshTokenTokenResponse",permalink:"/logto-docs/sdk/Swift/Logto/Structs/LogtoCore.RefreshTokenTokenResponse"},next:{title:"NetworkSession",permalink:"/logto-docs/sdk/Swift/Logto/Protocols/NetworkSession"}},a={},p=[],f={toc:p};function d(e){var t=e.components,o=(0,n.Z)(e,i);return(0,s.kt)("wrapper",(0,r.Z)({},f,o,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"STRUCT")),(0,s.kt)("h1",{id:"logtocoreuserinforesponse"},(0,s.kt)("inlineCode",{parentName:"h1"},"LogtoCore.UserInfoResponse")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-swift"},"struct UserInfoResponse: UserInfoProtocol {\n    public let sub: String\n    public let name: String?\n    public let picture: String?\n    public let username: String?\n    public let email: String?\n    public let emailVerified: Bool?\n    public let phoneNumber: String?\n    public let phoneNumberVerified: Bool?\n    public let customData: JsonObject?\n    public let identities: JsonObject?\n}\n")))}d.isMDXComponent=!0}}]);