"use strict";(self.webpackChunk_logto_docs=self.webpackChunk_logto_docs||[]).push([[66308],{57289:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>p,frontMatter:()=>r,metadata:()=>n,toc:()=>l});const n=JSON.parse('{"id":"authorization/organization-template/protect-api-reources","title":"Protect API resource with organization template","description":"In addition to Protect your API which secures resources by ensuring a valid JWT is present, organization roles can also be applied to filter the scopes. In this article, We\'ll focus on how organization role affects scope delegation and validation in your authentication flow.","source":"@site/docs/authorization/organization-template/protect-api-reources.mdx","sourceDirName":"authorization/organization-template","slug":"/authorization/organization-template/protect-api-reources","permalink":"/authorization/organization-template/protect-api-reources","draft":false,"unlisted":false,"editUrl":"https://github.com/logto-io/docs/tree/master/docs/authorization/organization-template/protect-api-reources.mdx","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3},"sidebar":"docsSidebar","previous":{"title":"Protect organization resources","permalink":"/authorization/organization-template/protect-organization-resources"},"next":{"title":"Authorization","permalink":"/authorization/"}}');var i=o(25105),a=o(79621);const r={sidebar_position:3},s="Protect API resource with organization template",c={},l=[{value:"The additional <code>organization_id</code> parameter",id:"the-additional-organization_id-parameter",level:2},{value:"Client setup",id:"client-setup",level:2},{value:"API server validation",id:"api-server-validation",level:2}];function d(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",mermaid:"mermaid",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.header,{children:(0,i.jsx)(t.h1,{id:"protect-api-resource-with-organization-template",children:"Protect API resource with organization template"})}),"\n",(0,i.jsxs)(t.p,{children:["In addition to ",(0,i.jsx)(t.a,{href:"/authorization/api-resources/protect-your-api",children:"Protect your API"})," which secures resources by ensuring a valid JWT is present, organization roles can also be applied to filter the scopes. In this article, We'll focus on how organization role affects scope delegation and validation in your authentication flow."]}),"\n",(0,i.jsx)(t.mermaid,{value:"sequenceDiagram\n    participant Client\n    participant Logto\n    participant API\n\n    Note over Client,API: Token Request\n    Client->>Logto: POST /oidc/token\n    Note right of Client: with resource, organization_id,<br/>and requested scopes\n\n    Note over Logto: Verify user belongs to<br/>the specified organization\n    Logto--\x3e>Client: Returns JWT access token\n    Note left of Logto: Token contains:<br/>- Standard JWT claims<br/>- organization_id<br/>- Scopes filtered by organization role\n\n    Note over Client,API: API Request\n    Client->>API: Request with Bearer token\n\n    Note over API: Validate JWT token:<br/>1. Standard JWT validation<br/>2. Verify organization_id<br/>3. Verify scopes\n\n    alt Token Invalid\n        API--\x3e>Client: 401 Unauthorized\n    else Token Valid\n        alt Valid organization_id and scope\n            API--\x3e>Client: Protected Resource\n        else Otherwise\n            API--\x3e>Client: 403 Forbidden\n        end\n    end"}),"\n",(0,i.jsxs)(t.h2,{id:"the-additional-organization_id-parameter",children:["The additional ",(0,i.jsx)(t.code,{children:"organization_id"})," parameter"]}),"\n",(0,i.jsxs)(t.p,{children:["In addition to normal access token grant request, in the diagram we add an additional ",(0,i.jsx)(t.code,{children:"organization_id"})," parameter, this tells Logto to narrow down the scopes to specific organization's roles."]}),"\n",(0,i.jsx)(t.h2,{id:"client-setup",children:"Client setup"}),"\n",(0,i.jsxs)(t.p,{children:["If you are using Logto's SDK, you can add ",(0,i.jsx)(t.code,{children:"organization_id"})," as the second parameter of the ",(0,i.jsx)(t.code,{children:"getAccessToken"})," method."]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-tsx",children:"const accessToken = await logto.getAccessToken('https://my-resource.com/api', 'org_1');\n\n// Or getting claims directly\nconst accessTokenClaims = await logto.getAccessTokenClaims('https://my-resource.com/api', 'org_1');\nconsole.log(accessTokenClaims.organization_id); // 'org_1'\nconsole.log(accessTokenClaims.aud); // 'https://my-resource.com/api'\n"})}),"\n",(0,i.jsxs)(t.p,{children:["Then only the scopes inherited from this organization's roles will be included in the access token, as well as an additional claim ",(0,i.jsx)(t.code,{children:"organization_id"})," ."]}),"\n",(0,i.jsx)(t.h2,{id:"api-server-validation",children:"API server validation"}),"\n",(0,i.jsxs)(t.p,{children:["In addition to the normal JWT access token validation, you\u2019ll need to add additional level to check if ",(0,i.jsx)(t.code,{children:"organization_id"})," is present and valid."]})]})}function p(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},79621:(e,t,o)=>{o.d(t,{R:()=>r,x:()=>s});var n=o(58101);const i={},a=n.createContext(i);function r(e){const t=n.useContext(a);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),n.createElement(a.Provider,{value:t},e.children)}}}]);