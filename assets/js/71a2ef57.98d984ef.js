"use strict";(self.webpackChunk_logto_docs=self.webpackChunk_logto_docs||[]).push([[2963],{9919:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>r,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"concepts/sign-in-experience","title":"Sign-in experience explained","description":"This page explains the sign-in experience in Logto and why it is designed this way.","source":"@site/docs/concepts/sign-in-experience.mdx","sourceDirName":"concepts","slug":"/concepts/sign-in-experience","permalink":"/concepts/sign-in-experience","draft":false,"unlisted":false,"editUrl":"https://github.com/logto-io/docs/tree/master/docs/concepts/sign-in-experience.mdx","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1,"sidebar_label":"Sign-in experience"},"sidebar":"docsSidebar","previous":{"title":"Concepts","permalink":"/concepts/"},"next":{"title":"Authentication vs. authorization","permalink":"/concepts/authn-vs-authz"}}');var s=n(25105),o=n(79621);const r={sidebar_position:1,sidebar_label:"Sign-in experience"},a="Sign-in experience explained",c={},l=[{value:"Introduction",id:"introduction",level:2},{value:"Why redirect?",id:"why-redirect",level:2},{value:"Flexibility",id:"flexibility",level:3},{value:"Multi-app support",id:"multi-app-support",level:3},{value:"Native apps",id:"native-apps",level:3},{value:"Security",id:"security",level:3},{value:"What if I need to show some sign-in components in my app?",id:"what-if-i-need-to-show-some-sign-in-components-in-my-app",level:2},{value:"How does it work?",id:"how-does-it-work",level:3},{value:"Process of clicking &quot;Get started&quot;",id:"process-of-clicking-get-started",level:4},{value:"Process of clicking &quot;Sign in with Google&quot;",id:"process-of-clicking-sign-in-with-google",level:4},{value:"Use direct sign-in in your app",id:"use-direct-sign-in-in-your-app",level:3},{value:"I need my users to fill in their credentials in my app",id:"i-need-my-users-to-fill-in-their-credentials-in-my-app",level:2},{value:"Related resources",id:"related-resources",level:2}];function d(e){const i={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",hr:"hr",li:"li",mermaid:"mermaid",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components},{Url:n}=i;return n||function(e,i){throw new Error("Expected "+(i?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Url",!0),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(i.header,{children:(0,s.jsx)(i.h1,{id:"sign-in-experience-explained",children:"Sign-in experience explained"})}),"\n",(0,s.jsx)(i.p,{children:"This page explains the sign-in experience in Logto and why it is designed this way."}),"\n",(0,s.jsx)(i.h2,{id:"introduction",children:"Introduction"}),"\n",(0,s.jsx)(i.p,{children:"Sign-in experience is the user authentication process in Logto. The process can be simplified as follows:"}),"\n",(0,s.jsx)(i.mermaid,{value:"graph LR\n    A(<b>Your app</b>) --\x3e|1. Invoke sign-in| B(<b>Logto</b>)\n    B --\x3e|2. Finish sign-in| A"}),"\n",(0,s.jsxs)(i.ol,{children:["\n",(0,s.jsx)(i.li,{children:"Your app invokes the sign-in method."}),"\n",(0,s.jsx)(i.li,{children:"The user is redirected to the Logto sign-in page. For native apps, the system browser is opened."}),"\n",(0,s.jsx)(i.li,{children:'The user signs in and is redirected back to your app (configured as the "Redirect URI" in Logto).'}),"\n"]}),"\n",(0,s.jsx)(i.p,{children:"While the process is simple, the redirecting part may look overkill some times. However, it can be beneficial and secure in many ways. We'll explain the reasons in the following sections."}),"\n",(0,s.jsx)(i.h2,{id:"why-redirect",children:"Why redirect?"}),"\n",(0,s.jsx)(i.h3,{id:"flexibility",children:"Flexibility"}),"\n",(0,s.jsx)(i.p,{children:"Redirecting allows you to decouple the authentication process from your app. As your business grows, you can still keep the same authentication process without changing your app. For example, you can add multi-factor authentication (MFA) or change the sign-in methods without touching your app."}),"\n",(0,s.jsx)(i.mermaid,{value:'graph LR\n    A(<b>Your app</b>) --\x3e|1. Invoke sign-in| B("<b>Logto</b>\\nEmail\\nGoogle\\nFacebook")\n    B --\x3e|2. Finish sign-in| A'}),"\n",(0,s.jsx)(i.h3,{id:"multi-app-support",children:"Multi-app support"}),"\n",(0,s.jsx)(i.p,{children:"If you have multiple apps, your users can sign in once and access all apps without signing in again. This is especially useful for SaaS businesses or companies with multiple services."}),"\n",(0,s.jsx)(i.mermaid,{value:"graph LR\n    A(<b>Your app 1</b>) <--\x3e B(<b>Logto</b>)\n    C(<b>Your app 2</b>) <--\x3e B\n    B <--\x3e D(<b>Your app 3</b>)"}),"\n",(0,s.jsx)(i.h3,{id:"native-apps",children:"Native apps"}),"\n",(0,s.jsx)(i.p,{children:"For native apps, redirecting to the system browser is a secure way to authenticate users and has built-in support for both iOS and Android."}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"iOS"}),": Apple offers ",(0,s.jsx)(i.a,{href:"https://developer.apple.com/documentation/authenticationservices/aswebauthenticationsession",children:"ASWebAuthenticationSession"})," for secure authentication."]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"Android"}),": Google provides ",(0,s.jsx)(i.a,{href:"https://developer.chrome.com/docs/android/custom-tabs",children:"Custom Tabs"})," for a seamless experience."]}),"\n"]}),"\n",(0,s.jsx)(i.h3,{id:"security",children:"Security"}),"\n",(0,s.jsxs)(i.p,{children:["Under the hood, Logto is an ",(0,s.jsx)(i.a,{href:"https://openid.net/specs/openid-connect-core-1_0.html",children:"OpenID Connect (OIDC)"})," provider. OIDC is a widely adopted standard for user authentication."]}),"\n",(0,s.jsxs)(i.p,{children:["Logto enforces strict security measures, such as ",(0,s.jsx)(i.a,{href:"https://tools.ietf.org/html/rfc7636",children:"PKCE"}),", and disables insecure flows like the implicit flow. Redirecting is a secure way to authenticate users and can prevent many common attacks."]}),"\n",(0,s.jsx)(i.h2,{id:"what-if-i-need-to-show-some-sign-in-components-in-my-app",children:"What if I need to show some sign-in components in my app?"}),"\n",(0,s.jsx)(i.p,{children:'Sometimes your team may want to show some sign-in components in the app, such as a "Sign in with Google" button. This can be achieved by using the "Direct sign-in" feature in Logto.'}),"\n",(0,s.jsx)(i.h3,{id:"how-does-it-work",children:"How does it work?"}),"\n",(0,s.jsx)(i.p,{children:'Let\'s say you have two call-to-action buttons in your app: "Get started" and "Sign in with Google". These buttons are designed to:'}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:'"Get started": Redirect to the normal sign-in page.'}),"\n",(0,s.jsx)(i.li,{children:'"Sign in with Google": Redirect to the Google sign-in page.'}),"\n"]}),"\n",(0,s.jsx)(i.p,{children:"Both actions need to complete the sign-in process and redirect back to your app."}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"process-of-clicking-get-started",children:'Process of clicking "Get started"'}),"\n",(0,s.jsx)(i.p,{children:"In this case, the sign-in experience is the same as the default. The user is redirected to the Logto sign-in page and then back to your app."}),"\n",(0,s.jsx)(i.mermaid,{value:'sequenceDiagram\n  participant A as Your app\n  participant B as Logto\n\n  Note over A: User clicks<br/>"Get started"\n  A->>B: Redirect\n  B->B: User finishes sign-in\n  B->>A: Redirect back'}),"\n",(0,s.jsx)(i.admonition,{type:"note",children:(0,s.jsx)(i.p,{children:"If you have configured social sign-in methods (e.g., Google, Facebook) in Logto, the user may be redirected to the corresponding sign-in page. In the illustration, we only show the general flow for simplicity."})}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"process-of-clicking-sign-in-with-google",children:'Process of clicking "Sign in with Google"'}),"\n",(0,s.jsx)(i.p,{children:"In this case, the user is redirected to the Google sign-in page automatically without interacting with the Logto sign-in page. The speed of this auto-redirect is almost instant that users may not notice the redirection."}),"\n",(0,s.jsx)(i.mermaid,{value:'sequenceDiagram\n  participant A as Your app\n  participant B as Logto\n  participant C as Google\n\n  Note over A: User clicks<br/>"Sign in with Google"\n  A->>B: Redirect with direct sign-in parameters\n  B->>C: Automatically redirect\n  C->C: User finishes sign-in\n  C->>B: Redirect back\n  B->>A: Redirect back'}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.p,{children:"In summary, the direct sign-in feature is a way to automate some interactions in the sign-in experience without changing the security level."}),"\n",(0,s.jsx)(i.h3,{id:"use-direct-sign-in-in-your-app",children:"Use direct sign-in in your app"}),"\n",(0,s.jsxs)(i.p,{children:["To use direct sign-in, you need to pass the ",(0,s.jsx)(i.code,{children:"direct_sign_in"})," parameter when invoking the sign-in method. The value should be composed of a certain format that Logto recognizes. For example, to sign in with Google, the value should be ",(0,s.jsx)(i.code,{children:"social:google"}),"."]}),"\n",(0,s.jsxs)(i.p,{children:["In some of Logto official SDKs, there's a dedicated option for direct sign-in. Here's an example of using direct sign-in in the ",(0,s.jsx)(i.code,{children:"@logto/client"})," JavaScript SDK:"]}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-ts",children:"client.signIn({\n  redirectUri: 'https://some-redirect-uri',\n  directSignIn: { method: 'social', target: 'google' },\n});\n"})}),"\n",(0,s.jsxs)(i.p,{children:["For more details, please refer to ",(0,s.jsx)(i.a,{href:"/end-user-flows/authentication-parameters/direct-sign-in",children:"Direct sign-in"}),"."]}),"\n",(0,s.jsx)(i.admonition,{type:"info",children:(0,s.jsx)(i.p,{children:"We are gradually rolling out this feature in all Logto offical SDKs. If you don't see it in your SDK, please feel free to contact us."})}),"\n",(0,s.jsx)(i.h2,{id:"i-need-my-users-to-fill-in-their-credentials-in-my-app",children:"I need my users to fill in their credentials in my app"}),"\n",(0,s.jsxs)(i.p,{children:['If you need your users to fill in their credentials (such as email and password) directly in your app, rather than redirecting to Logto, we can\'t help you with that at the moment. Historically, there was a "Resource Owner Password Credentials" grant, but it is now considered insecure and has been ',(0,s.jsx)(i.a,{href:"https://datatracker.ietf.org/doc/html/draft-ietf-oauth-security-topics#name-resource-owner-password-cre",children:"formally deprecated in OAuth 2.1"}),"."]}),"\n",(0,s.jsxs)(i.p,{children:["To learn more about the security risks of the ROPC grant type, check out our blog post ",(0,s.jsx)(i.a,{href:"https://blog.logto.io/deprecated-ropc-grant-type/",children:"Why you should deprecate the ROPC grant type"}),"."]}),"\n",(0,s.jsx)(i.h2,{id:"related-resources",children:"Related resources"}),"\n",(0,s.jsx)(n,{href:"https://blog.logto.io/oauth-2-1/",children:"OAuth 2.1 is here: What you need to know"}),"\n",(0,s.jsx)(n,{href:"https://blog.logto.io/how-pkce-protects-the-authorization-code-flow-for-native-apps",children:(0,s.jsx)(i.p,{children:"What is PKCE: from basic concepts to deep understanding"})})]})}function h(e={}){const{wrapper:i}={...(0,o.R)(),...e.components};return i?(0,s.jsx)(i,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},79621:(e,i,n)=>{n.d(i,{R:()=>r,x:()=>a});var t=n(58101);const s={},o=t.createContext(s);function r(e){const i=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function a(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),t.createElement(o.Provider,{value:i},e.children)}}}]);