"use strict";(self.webpackChunk_logto_docs=self.webpackChunk_logto_docs||[]).push([[17940],{83637:(e,n,t)=>{t.d(n,{ZP:()=>c,d$:()=>i});var o=t(11527),s=t(17279);const i=[];function r(e){const n={a:"a",p:"p",...(0,s.a)(),...e.components};return(0,o.jsxs)(n.p,{children:["We recommend to read ",(0,o.jsx)(n.a,{href:"https://docs.logto.io/docs/recipes/rbac/",children:"\ud83d\udd10 Role-Based Access Control (RBAC)"})," first to understand the basic concepts of Logto RBAC and how to set up API resources properly."]})}function c(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(r,{...e})}):r(e)}},22002:(e,n,t)=>{t.d(n,{ZP:()=>c,d$:()=>i});var o=t(11527),s=t(17279);const i=[];function r(e){const n={a:"a",admonition:"admonition",code:"code",p:"p",...(0,s.a)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.p,{children:"Once you have set up the API resources, you can add them when configuring Logto in your app:"}),"\n",e.configResourcesCode,"\n",(0,o.jsx)(n.p,{children:"Each API resource has its own permissions (scopes)."}),"\n",(0,o.jsxs)(n.p,{children:["For example, the ",(0,o.jsx)(n.code,{children:"https://shopping.your-app.com/api"})," resource has the ",(0,o.jsx)(n.code,{children:"shopping:read"})," and ",(0,o.jsx)(n.code,{children:"shopping:write"})," permissions, and the ",(0,o.jsx)(n.code,{children:"https://store.your-app.com/api"})," resource has the ",(0,o.jsx)(n.code,{children:"store:read"})," and ",(0,o.jsx)(n.code,{children:"store:write"})," permissions."]}),"\n",(0,o.jsx)(n.p,{children:"To request these permissions, you can add them when configuring Logto in your app:"}),"\n",e.configResourcesWithScopesCode,"\n",(0,o.jsxs)(n.p,{children:["You may notice that scopes are defined separately from API resources. This is because ",(0,o.jsx)(n.a,{href:"https://www.rfc-editor.org/rfc/rfc8707.html",children:"Resource Indicators for OAuth 2.0"})," specifies the final scopes for the request will be the cartesian product of all the scopes at all the target services."]}),"\n",e.configResourcesWithSharedScopesCode&&(0,o.jsxs)(o.Fragment,{children:["Thus, in the above case, scopes can be simplified from the definition in Logto, both of the API resources can have `read` and `write` scopes without the prefix. Then, in the Logto config:",e.configResourcesWithSharedScopesCode,"For every API resource, it will request for both `read` and `write` scopes."]}),"\n",(0,o.jsx)(n.admonition,{type:"note",children:(0,o.jsxs)(n.p,{children:["It is fine to request scopes that are not defined in the API resources. For example, you can request the ",(0,o.jsx)(n.code,{children:"email"})," scope even if the API resources don't have the ",(0,o.jsx)(n.code,{children:"email"})," scope available. Unavailable scopes will be safely ignored."]})}),"\n",(0,o.jsx)(n.p,{children:"After the successful sign-in, Logto will issue proper scopes to API resources according to the user's roles."})]})}function c(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(r,{...e})}):r(e)}},52687:(e,n,t)=>{t.d(n,{ZP:()=>c,d$:()=>i});var o=t(11527),s=t(17279);const i=[];function r(e){const n={p:"p",...(0,s.a)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsxs)(n.p,{children:["To fetch the access token for a specific API resource, you can use the ",(0,o.jsx)("code",{children:e.getAccessTokenApi})," method:"]}),"\n",e.getAccessTokenCode,"\n",(0,o.jsx)(n.p,{children:"This method will return a JWT access token that can be used to access the API resource when the user has related permissions. If the current cached access token has expired, this method will automatically try to use a refresh token to get a new access token."})]})}function c(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(r,{...e})}):r(e)}},18284:(e,n,t)=>{t.d(n,{ZP:()=>c,d$:()=>i});var o=t(11527),s=t(17279);const i=[];function r(e){const n={a:"a",p:"p",...(0,s.a)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsxs)(n.p,{children:["If organization is new to you, please read ",(0,o.jsx)(n.a,{href:"https://docs.logto.io/docs/recipes/organizations/",children:"\ud83c\udfe2 Organizations (Multi-tenancy)"})," to get started."]}),"\n",(0,o.jsxs)(n.p,{children:["You need to add ",(0,o.jsx)("code",{children:e.organizationScope})," scope when configuring the Logto client:"]}),"\n",e.configOrganizationCode,"\n",(0,o.jsx)(n.p,{children:"Once the user is signed in, you can fetch the organization token for the user:"}),"\n",e.getOrganizationAccessTokenCode]})}function c(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(r,{...e})}):r(e)}},62212:(e,n,t)=>{t.d(n,{ZP:()=>c,d$:()=>i});var o=t(11527),s=t(17279);const i=[];function r(e){const n={a:"a",li:"li",ul:"ul",...(0,s.a)(),...e.components};return(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"/docs/recipes/customize-sie/",children:"Customize sign-in experience"})}),"\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"/docs/recipes/configure-connectors/",children:"Configure connectors"})}),"\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"/docs/recipes/protect-your-api/",children:"Protect your API"})}),"\n"]})}function c(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(r,{...e})}):r(e)}},27358:(e,n,t)=>{t.d(n,{ZP:()=>c,d$:()=>i});var o=t(11527),s=t(17279);const i=[];function r(e){const n={a:"a",li:"li",p:"p",ul:"ul",...(0,s.a)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.p,{children:"You can use these Logto methods to retrieve user information programmatically:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)("code",{children:e.getIdTokenClaimsApi}),": get user information from ID token."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)("code",{children:e.fetchUserInfoApi}),": fetch user information from the OIDC ",(0,o.jsx)(n.a,{href:"https://openid.net/specs/openid-connect-core-1_0.html#UserInfo",children:"userinfo\nendpoint"})," provided by Logto."]}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:"It's important to note that the user information claims that can be retrieved depending on the\nscopes used by the user during signing-in, and considering performance and data size, the ID token\nmay not contain all user claims, some user claims are only available in the userinfo endpoint (see\nthe related list below)."})]})}function c(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(r,{...e})}):r(e)}},9246:(e,n,t)=>{t.d(n,{ZP:()=>c,d$:()=>i});var o=t(11527),s=t(17279);const i=[];function r(e){const n={a:"a",code:"code",hr:"hr",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,s.a)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.p,{children:"Here's the list of supported scopes and the corresponding claims:"}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:(0,o.jsx)(n.code,{children:"openid"})})}),"\n",(0,o.jsxs)(n.table,{children:[(0,o.jsx)(n.thead,{children:(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.th,{children:"Claim name"}),(0,o.jsx)(n.th,{children:"Type"}),(0,o.jsx)(n.th,{children:"Description"}),(0,o.jsx)(n.th,{children:"Needs userinfo?"})]})}),(0,o.jsx)(n.tbody,{children:(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:"sub"}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"string"})}),(0,o.jsx)(n.td,{children:"The unique identifier of the user"}),(0,o.jsx)(n.td,{children:"No"})]})})]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:(0,o.jsx)(n.code,{children:"profile"})})}),"\n",(0,o.jsxs)(n.table,{children:[(0,o.jsx)(n.thead,{children:(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.th,{children:"Claim name"}),(0,o.jsx)(n.th,{children:"Type"}),(0,o.jsx)(n.th,{children:"Description"}),(0,o.jsx)(n.th,{children:"Needs userinfo?"})]})}),(0,o.jsxs)(n.tbody,{children:[(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:"name"}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"string"})}),(0,o.jsx)(n.td,{children:"The full name of the user"}),(0,o.jsx)(n.td,{children:"No"})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:"username"}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"string"})}),(0,o.jsx)(n.td,{children:"The username of the user"}),(0,o.jsx)(n.td,{children:"No"})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:"picture"}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"string"})}),(0,o.jsx)(n.td,{children:"The profile picture URL of the user"}),(0,o.jsx)(n.td,{children:"No"})]})]})]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:(0,o.jsx)(n.code,{children:"email"})})}),"\n",(0,o.jsxs)(n.table,{children:[(0,o.jsx)(n.thead,{children:(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.th,{children:"Claim name"}),(0,o.jsx)(n.th,{children:"Type"}),(0,o.jsx)(n.th,{children:"Description"}),(0,o.jsx)(n.th,{children:"Needs userinfo?"})]})}),(0,o.jsxs)(n.tbody,{children:[(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:"email"}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"string"})}),(0,o.jsx)(n.td,{children:"The email address of the user"}),(0,o.jsx)(n.td,{children:"No"})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:"email_verified"}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"boolean"})}),(0,o.jsx)(n.td,{children:"Whether the email address has been verified"}),(0,o.jsx)(n.td,{children:"No"})]})]})]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:(0,o.jsx)(n.code,{children:"phone"})})}),"\n",(0,o.jsxs)(n.table,{children:[(0,o.jsx)(n.thead,{children:(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.th,{children:"Claim name"}),(0,o.jsx)(n.th,{children:"Type"}),(0,o.jsx)(n.th,{children:"Description"}),(0,o.jsx)(n.th,{children:"Needs userinfo?"})]})}),(0,o.jsxs)(n.tbody,{children:[(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:"phone_number"}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"string"})}),(0,o.jsx)(n.td,{children:"The phone number of the user"}),(0,o.jsx)(n.td,{children:"No"})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:"phone_number_verified"}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"boolean"})}),(0,o.jsx)(n.td,{children:"Whether the phone number has been verified"}),(0,o.jsx)(n.td,{children:"No"})]})]})]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:(0,o.jsx)(n.code,{children:"custom_data"})})}),"\n",(0,o.jsxs)(n.table,{children:[(0,o.jsx)(n.thead,{children:(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.th,{children:"Claim name"}),(0,o.jsx)(n.th,{children:"Type"}),(0,o.jsx)(n.th,{children:"Description"}),(0,o.jsx)(n.th,{children:"Needs userinfo?"})]})}),(0,o.jsx)(n.tbody,{children:(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:"custom_data"}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"object"})}),(0,o.jsx)(n.td,{children:"The custom data of the user"}),(0,o.jsx)(n.td,{children:"Yes"})]})})]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:(0,o.jsx)(n.code,{children:"identities"})})}),"\n",(0,o.jsxs)(n.table,{children:[(0,o.jsx)(n.thead,{children:(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.th,{children:"Claim name"}),(0,o.jsx)(n.th,{children:"Type"}),(0,o.jsx)(n.th,{children:"Description"}),(0,o.jsx)(n.th,{children:"Needs userinfo?"})]})}),(0,o.jsx)(n.tbody,{children:(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:"identities"}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"object"})}),(0,o.jsx)(n.td,{children:"The linked identities of the user"}),(0,o.jsx)(n.td,{children:"Yes"})]})})]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:(0,o.jsx)(n.code,{children:"urn:logto:scope:organizations"})})}),"\n",(0,o.jsxs)(n.table,{children:[(0,o.jsx)(n.thead,{children:(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.th,{children:"Claim name"}),(0,o.jsx)(n.th,{children:"Type"}),(0,o.jsx)(n.th,{children:"Description"}),(0,o.jsx)(n.th,{children:"Needs userinfo?"})]})}),(0,o.jsxs)(n.tbody,{children:[(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:"organizations"}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"string[]"})}),(0,o.jsx)(n.td,{children:"The organization IDs the user belongs to"}),(0,o.jsx)(n.td,{children:"No"})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:"organization_data"}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"object[]"})}),(0,o.jsx)(n.td,{children:"The organization data the user belongs to"}),(0,o.jsx)(n.td,{children:"Yes"})]})]})]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:(0,o.jsx)(n.code,{children:"urn:logto:scope:organization_roles"})})}),"\n",(0,o.jsxs)(n.table,{children:[(0,o.jsx)(n.thead,{children:(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.th,{children:"Claim name"}),(0,o.jsx)(n.th,{children:"Type"}),(0,o.jsx)(n.th,{children:"Description"}),(0,o.jsx)(n.th,{children:"Needs userinfo?"})]})}),(0,o.jsx)(n.tbody,{children:(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:"organization_roles"}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"string[]"})}),(0,o.jsxs)(n.td,{children:["The organization roles the user belongs to with the format of ",(0,o.jsx)(n.code,{children:"<organization_id>:<role_name>"})]}),(0,o.jsx)(n.td,{children:"No"})]})})]}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsxs)(n.p,{children:['Considering performance and the data size, if "Needs userinfo?" is "Yes", it means the claim will not show up in the ID token, but will be returned in the ',(0,o.jsx)(n.a,{href:"https://openid.net/specs/openid-connect-core-1_0.html#UserInfo",children:"userinfo endpoint"})," response."]})]})}function c(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(r,{...e})}):r(e)}},10128:(e,n,t)=>{t.d(n,{ZP:()=>a,d$:()=>r});var o=t(11527),s=t(17279),i=t(9246);const r=[...i.d$];function c(e){const n={a:"a",code:"code",p:"p",...(0,s.a)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsxs)(n.p,{children:["Logto uses OIDC ",(0,o.jsx)(n.a,{href:"https://openid.net/specs/openid-connect-core-1_0.html#Claims",children:"scopes and claims conventions"})," to define the scopes and claims for retrieving user information from the ID token and OIDC ",(0,o.jsx)("a",{href:"https://openid.net/specs/openid-connect-core-1_0.html#UserInfo",children:"userinfo endpoint"}),'. Both of the "scope" and the "claim" are terms from the OAuth 2.0 and OpenID Connect (OIDC) specifications.']}),"\n",(0,o.jsxs)(n.p,{children:["In short, when you request a scope, you will get the corresponding claims in the user information. For example, if you request the ",(0,o.jsx)(n.code,{children:"email"})," scope, you will get the ",(0,o.jsx)(n.code,{children:"email"})," and ",(0,o.jsx)(n.code,{children:"email_verified"})," data of the user."]}),"\n",(0,o.jsxs)(n.p,{children:["By default, Logto SDK will always request three scopes: ",(0,o.jsx)(n.code,{children:"openid"}),", ",(0,o.jsx)(n.code,{children:"profile"}),". And ",(0,o.jsx)(n.code,{children:"offline_access"}),", and there is no way to remove these default scopes. But you can add more scopes when configuring Logto:"]}),"\n",e.configScopesCode,"\n",(0,o.jsx)(i.ZP,{})]})}function a(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(c,{...e})}):c(e)}},76027:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>b,contentTitle:()=>m,default:()=>v,frontMatter:()=>j,metadata:()=>f,toc:()=>w});var o=t(11527),s=t(17279),i=t(62212),r=t(96411),c=t(13233);function a(e){const n={a:"a",admonition:"admonition",code:"code",li:"li",ul:"ul",...(0,s.a)(),...e.components};return(0,o.jsx)(n.admonition,{type:"tip",children:(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["The following demonstration was tested on Chrome v123.0.6312.87 (arm64). Other versions should also work, as long as they support the ",(0,o.jsx)(n.code,{children:"chrome"})," APIs used in the SDK."]}),"\n",(0,o.jsxs)(n.li,{children:["The sample project is available on our ",(0,o.jsx)(n.a,{href:"https://github.com/logto-io/js/tree/HEAD/packages/chrome-extension-sample",children:"GitHub repository"}),"."]}),"\n"]})})}function d(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(a,{...e})}):a(e)}var l=t(83856),h=t(92971);function u(e){const n={code:"code",pre:"pre",...(0,s.a)(),...e.components};return(0,o.jsxs)(h.Z,{children:[(0,o.jsx)(l.Z,{value:"npm",label:"npm",children:(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"npm i @logto/chrome-extension\n"})})}),(0,o.jsx)(l.Z,{value:"yarn",label:"Yarn",children:(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"yarn add @logto/chrome-extension\n"})})}),(0,o.jsx)(l.Z,{value:"pnpm",label:"pnpm",children:(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"pnpm add @logto/chrome-extension\n"})})})]})}function p(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(u,{...e})}):u(e)}function x(e){const n={a:"a",admonition:"admonition",code:"code",h3:"h3",img:"img",li:"li",mermaid:"mermaid",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.a)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h3,{id:"the-authentication-flow",children:"The authentication flow"}),"\n",(0,o.jsx)(n.p,{children:'Assuming you put a "Sign in" button in your Chrome extension\'s popup, the authentication flow will look like this:'}),"\n",(0,o.jsx)(n.mermaid,{value:"sequenceDiagram\n  participant A as Extension popup\n  participant B as Extension service worker\n  participant C as Logto sign-in experience\n\n  A->>B: Invokes sign-in\n  B->>C: Redirects to Logto\n  C->>C: User signs in\n  C->>B: Redirects back to extension\n  B->>A: Notifies the popup"}),"\n",(0,o.jsxs)(n.p,{children:["For other interactive pages in your extension, you just need to replace the ",(0,o.jsx)(n.code,{children:"Extension popup"})," participant with the page's name. In this tutorial, we will focus on the popup page."]}),"\n",(0,o.jsxs)(n.h3,{id:"update-the-manifestjson",children:["Update the ",(0,o.jsx)(n.code,{children:"manifest.json"})]}),"\n",(0,o.jsxs)(n.p,{children:["Logto SDK requires the following permissions in the ",(0,o.jsx)(n.code,{children:"manifest.json"}),":"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-json",metastring:'title="manifest.json"',children:'{\n  "permissions": ["identity", "storage"],\n  "host_permissions": ["https://*.logto.app/*"]\n}\n'})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"permissions.identity"}),": Required for the Chrome Identity API, which is used to sign in and sign out."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"permissions.storage"}),": Required for storing the user's session."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"host_permissions"}),": Required for the Logto SDK to communicate with the Logto APIs."]}),"\n"]}),"\n",(0,o.jsx)(n.admonition,{type:"note",children:(0,o.jsxs)(n.p,{children:["If you are using a custom domain on Logto Cloud, you need to update the ",(0,o.jsx)(n.code,{children:"host_permissions"})," to match your domain."]})}),"\n",(0,o.jsx)(n.h3,{id:"set-up-a-background-script-service-worker",children:"Set up a background script (service worker)"}),"\n",(0,o.jsx)(n.p,{children:"In your Chrome extension's background script, initialize the Logto SDK:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-js",metastring:'title="service-worker.js"',children:"import LogtoClient from '@logto/chrome-extension';\n\nexport const logtoClient = new LogtoClient({\n  endpoint: '<your-logto-endpoint>'\n  appId: '<your-logto-app-id>',\n});\n"})}),"\n",(0,o.jsxs)(n.p,{children:["Replace ",(0,o.jsx)(n.code,{children:"<your-logto-endpoint>"})," and ",(0,o.jsx)(n.code,{children:"<your-logto-app-id>"})," with the actual values. You can find these values in the application page you just created in the Logto Console."]}),"\n",(0,o.jsxs)(n.p,{children:["If you don't have a background script, you can follow the ",(0,o.jsx)(n.a,{href:"https://developer.chrome.com/docs/extensions/develop/concepts/service-workers/basics",children:"official guide"})," to create one."]}),"\n",(0,o.jsxs)(n.admonition,{type:"info",children:[(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Why do we need a background script?"})}),(0,o.jsx)(n.p,{children:"Normal extension pages like the popup or options page can't run in the background, and they have the possibility to be closed during the authentication process. A background script ensures the authentication process can be properly handled."})]}),"\n",(0,o.jsx)(n.p,{children:"Then, we need to listen to the message from other extension pages and handle the authentication process:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-js",metastring:'title="service-worker.js"',children:"chrome.runtime.onMessage.addListener((message, sender, sendResponse) => {\n  // In the below code, since we return `true` for each action, we need to call `sendResponse`\n  // to notify the sender. You can also handle errors here, or use other ways to notify the sender.\n\n  if (message.action === 'signIn') {\n    const redirectUri = chrome.identity.getRedirectURL('/callback');\n    logtoClient.signIn(redirectUri).finally(sendResponse);\n    return true;\n  }\n\n  if (message.action === 'signOut') {\n    const redirectUri = chrome.identity.getRedirectURL();\n    logtoClient.signOut(redirectUri).finally(sendResponse);\n    return true;\n  }\n\n  return false;\n});\n"})}),"\n",(0,o.jsxs)(n.p,{children:["You may notice there are two redirect URIs used in the code above. They are both created by ",(0,o.jsx)(n.code,{children:"chrome.identity.getRedirectURL"}),", which is a ",(0,o.jsx)(n.a,{href:"https://developer.chrome.com/docs/extensions/reference/api/identity#method-getRedirectURL",children:"built-in Chrome API"})," to generate a redirect URL for auth flows. The two URIs will be:"]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"https://<extension-id>.chromiumapp.org/callback"})," for sign-in."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"https://<extension-id>.chromiumapp.org/"})," for sign-out."]}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:"Note that these URIs are not accessible, and they are only used for Chrome to trigger specific actions for the authentication process."}),"\n",(0,o.jsx)(n.h3,{id:"update-logto-application-settings",children:"Update Logto application settings"}),"\n",(0,o.jsx)(n.p,{children:"Now we need to update the Logto application settings to allow the redirect URIs we just created."}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsx)(n.li,{children:"Go to the application page in the Logto Console."}),"\n",(0,o.jsxs)(n.li,{children:['In the "Redirect URIs" section, add the URI: ',(0,o.jsx)(n.code,{children:"https://<extension-id>.chromiumapp.org/callback"}),"."]}),"\n",(0,o.jsxs)(n.li,{children:['In the "Post sign-out redirect URIs" section, add the URI: ',(0,o.jsx)(n.code,{children:"https://<extension-id>.chromiumapp.org/"}),"."]}),"\n",(0,o.jsxs)(n.li,{children:['In the "CORS allowed origins" section, add the URI: ',(0,o.jsx)(n.code,{children:"chrome-extension://<extension-id>"}),". The SDK in Chrome extension will use this origin to communicate with the Logto APIs."]}),"\n",(0,o.jsxs)(n.li,{children:["Click on ",(0,o.jsx)(n.strong,{children:"Save changes"}),"."]}),"\n"]}),"\n",(0,o.jsxs)(n.p,{children:["Remember to replace ",(0,o.jsx)(n.code,{children:"<extension-id>"})," with your actual extension ID. You can find the extension ID in the ",(0,o.jsx)(n.code,{children:"chrome://extensions"})," page."]}),"\n",(0,o.jsx)(n.h3,{id:"add-sign-in-and-sign-out-buttons-to-the-popup",children:"Add sign-in and sign-out buttons to the popup"}),"\n",(0,o.jsx)(n.p,{children:"We're almost there! Let's add the sign-in and sign-out buttons and other necessary logic to the popup page."}),"\n",(0,o.jsxs)(n.p,{children:["In the ",(0,o.jsx)(n.code,{children:"popup.html"})," file:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-html",metastring:'title="popup.html"',children:'<button id="sign-in">Sign in</button> <button id="sign-out">Sign out</button>\n'})}),"\n",(0,o.jsxs)(n.p,{children:["In the ",(0,o.jsx)(n.code,{children:"popup.js"})," file (assuming ",(0,o.jsx)(n.code,{children:"popup.js"})," is included in the ",(0,o.jsx)(n.code,{children:"popup.html"}),"):"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-js",metastring:'title="popup.js"',children:"document.getElementById('sign-in').addEventListener('click', async () => {\n  await chrome.runtime.sendMessage({ action: 'signIn' });\n  // Sign-in completed (or failed), you can update the UI here.\n});\n\ndocument.getElementById('sign-out').addEventListener('click', async () => {\n  await chrome.runtime.sendMessage({ action: 'signOut' });\n  // Sign-out completed (or failed), you can update the UI here.\n});\n"})}),"\n",(0,o.jsx)(n.h3,{id:"checkpoint-test-the-authentication-flow",children:"Checkpoint: Test the authentication flow"}),"\n",(0,o.jsx)(n.p,{children:"Now you can test the authentication flow in your Chrome extension:"}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsx)(n.li,{children:"Open the extension popup."}),"\n",(0,o.jsx)(n.li,{children:'Click on the "Sign in" button.'}),"\n",(0,o.jsx)(n.li,{children:"You will be redirected to the Logto sign-in page."}),"\n",(0,o.jsx)(n.li,{children:"Sign in with your Logto account."}),"\n",(0,o.jsx)(n.li,{children:"You will be redirected back to the Chrome."}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"check-authentication-state",children:"Check authentication state"}),"\n",(0,o.jsx)(n.p,{children:"Since Chrome provide unified storage APIs, rather than the sign-in and sign-out flow, all other Logto SDK methods can be used in the popup page directly."}),"\n",(0,o.jsxs)(n.p,{children:["In your ",(0,o.jsx)(n.code,{children:"popup.js"}),", you can reuse the ",(0,o.jsx)(n.code,{children:"LogtoClient"})," instance created in the background script, or create a new one with the same configuration:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-js",metastring:'title="popup.js"',children:"import LogtoClient from '@logto/chrome-extension';\n\nconst logtoClient = new LogtoClient({\n  endpoint: '<your-logto-endpoint>'\n  appId: '<your-logto-app-id>',\n});\n\n// Or reuse the logtoClient instance created in the background script\nimport { logtoClient } from './service-worker.js';\n"})}),"\n",(0,o.jsx)(n.p,{children:"Then you can create a function to load the authentication state and user's profile:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-js",metastring:'title="popup.js"',children:"const loadAuthenticationState = async () => {\n  const isAuthenticated = await logtoClient.isAuthenticated();\n  // Update the UI based on the authentication state\n\n  if (isAuthenticated) {\n    const user = await logtoClient.getIdTokenClaims(); // { sub: '...', email: '...', ... }\n    // Update the UI with the user's profile\n  }\n};\n"})}),"\n",(0,o.jsxs)(n.p,{children:["You can also combine the ",(0,o.jsx)(n.code,{children:"loadAuthenticationState"})," function with the sign-in and sign-out logic:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-js",metastring:'title="popup.js"',children:"document.getElementById('sign-in').addEventListener('click', async () => {\n  await chrome.runtime.sendMessage({ action: 'signIn' });\n  await loadAuthenticationState();\n});\n\ndocument.getElementById('sign-out').addEventListener('click', async () => {\n  await chrome.runtime.sendMessage({ action: 'signOut' });\n  await loadAuthenticationState();\n});\n"})}),"\n",(0,o.jsx)(n.p,{children:"Here's an example of the popup page with the authentication state:"}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.img,{alt:"Popup page",src:t(68922).Z+"",width:"950",height:"662"})}),"\n",(0,o.jsx)(n.h3,{id:"other-considerations",children:"Other considerations"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Service worker bundling"}),": If you use a bundler like Webpack or Rollup, you need to explicitly set the target to ",(0,o.jsx)(n.code,{children:"browser"})," or similar to avoid unnecessary bundling of Node.js modules."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Module resolution"}),": Logto Chrome extension SDK is an ESM-only module."]}),"\n"]}),"\n",(0,o.jsxs)(n.p,{children:["See our ",(0,o.jsx)(n.a,{href:"https://github.com/logto-io/js/tree/HEAD/packages/chrome-extension-sample",children:"sample project"})," for a complete example with TypeScript, Rollup, and other configurations."]})]})}function g(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(x,{...e})}):x(e)}const j={slug:"/sdk/chrome-extension",sidebar_label:"Chrome extension"},m="Chrome extension guide",f={id:"sdk/spa/chrome-extension/README",title:"Chrome extension guide",description:"This guide will show you how to integrate Logto into your Chrome extension.",source:"@site/docs/sdk/spa/chrome-extension/README.mdx",sourceDirName:"sdk/spa/chrome-extension",slug:"/sdk/chrome-extension",permalink:"/sdk/chrome-extension",draft:!1,unlisted:!1,editUrl:"https://github.com/logto-io/docs/tree/master/docs/sdk/spa/chrome-extension/README.mdx",tags:[],version:"current",frontMatter:{slug:"/sdk/chrome-extension",sidebar_label:"Chrome extension"},sidebar:"sdkSidebar",previous:{title:"Angular",permalink:"/sdk/angular"},next:{title:".NET Core (Blazor WASM)",permalink:"/sdk/dotnet-core/blazor-wasm"}},b={},w=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Installation",id:"installation",level:2},{value:"Integration",id:"integration",level:2},{value:"The authentication flow",id:"the-authentication-flow",level:3},{value:"Update the <code>manifest.json</code>",id:"update-the-manifestjson",level:3},{value:"Set up a background script (service worker)",id:"set-up-a-background-script-service-worker",level:3},{value:"Update Logto application settings",id:"update-logto-application-settings",level:3},{value:"Add sign-in and sign-out buttons to the popup",id:"add-sign-in-and-sign-out-buttons-to-the-popup",level:3},{value:"Checkpoint: Test the authentication flow",id:"checkpoint-test-the-authentication-flow",level:3},{value:"Check authentication state",id:"check-authentication-state",level:3},{value:"Other considerations",id:"other-considerations",level:3},{value:"Get user information",id:"get-user-information",level:2},...c.d$,{value:"API resources",id:"api-resources",level:2},...r.d$,{value:"Further readings",id:"further-readings",level:2},...i.d$];function y(e){const n={a:"a",h1:"h1",h2:"h2",li:"li",p:"p",ul:"ul",...(0,s.a)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h1,{id:"chrome-extension-guide",children:"Chrome extension guide"}),"\n",(0,o.jsx)(n.p,{children:"This guide will show you how to integrate Logto into your Chrome extension."}),"\n",(0,o.jsx)(d,{}),"\n",(0,o.jsx)(n.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["A ",(0,o.jsx)(n.a,{href:"https://cloud.logto.io",children:"Logto Cloud"})," account or a self-hosted Logto (Check out the ",(0,o.jsx)(n.a,{href:"../../../docs/tutorials/get-started/",children:"\u26a1 Get started"})," guide to create one if you don't have)."]}),"\n",(0,o.jsx)(n.li,{children:"A single-page application (SPA) created in Logto console."}),"\n",(0,o.jsx)(n.li,{children:"A Chrome extension project."}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"installation",children:"Installation"}),"\n",(0,o.jsx)(p,{}),"\n",(0,o.jsx)(n.h2,{id:"integration",children:"Integration"}),"\n",(0,o.jsx)(g,{}),"\n",(0,o.jsx)(n.h2,{id:"get-user-information",children:"Get user information"}),"\n",(0,o.jsx)(c.ZP,{package:"@logto/chrome-extension"}),"\n",(0,o.jsx)(n.h2,{id:"api-resources",children:"API resources"}),"\n",(0,o.jsx)(r.ZP,{package:"@logto/chrome-extension"}),"\n",(0,o.jsx)(n.h2,{id:"further-readings",children:"Further readings"}),"\n",(0,o.jsx)(i.ZP,{})]})}function v(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(y,{...e})}):y(e)}},96411:(e,n,t)=>{t.d(n,{ZP:()=>I,d$:()=>v});var o=t(11527),s=t(17279),i=t(83637),r=t(22002),c=t(52687),a=t(18284),d=t(76800);function l(e){return(0,o.jsx)(d.Z,{language:"js",children:`import LogtoClient, { UserScope } from '${e.package||"@logto/browser"}';\n\nconst logtoClient = new LogtoClient({\nendpoint,\nappId,\nresources: resourceIndicators,\nscopes: [UserScope.Organizations],\n});`})}function h(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}function u(e){const n={code:"code",pre:"pre",...(0,s.a)(),...e.components};return(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-js",children:"const resources = ['http://localhost:3001/api/test']; // Replace with your own resource indicators registered in Logto dashboard\n\nconst logtoClient = new LogtoClient({\n  endpoint,\n  appId,\n  resources: resourceIndicators,\n});\n"})})}function p(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(u,{...e})}):u(e)}function x(e){return(0,o.jsx)(d.Z,{language:"js",children:`import LogtoClient, { UserScope } from '${e.package||"@logto/browser"}';\n\nconst resources = ['http://localhost:3001/api/test']; // Replace with your own resource indicators registered in Logto dashboard\nconst resourceScopes = ['read', 'write']; // Replace with your own resource scopes defined in Logto dashboard under the resources listed above\n\nconst logtoClient = new LogtoClient({\nendpoint,\nappId,\nresources: resourceIndicators,\nscopes: [\nUserScope.Email,\nUserScope.Phone,\nUserScope.CustomData,\nUserScope.Identities,\n...resourceScopes,\n],\n});`})}function g(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(x,{...e})}):x(e)}function j(e){return(0,o.jsx)(d.Z,{language:"js",children:`import LogtoClient, { UserScope } from '${e.package||"@logto/browser"}';\n\nconst resources = ['http://localhost:3001/api/test', 'http://localhost:5001/api/test']; // Replace with your own resource indicators registered in Logto dashboard\nconst resourceScopes = ['read', 'write']; // Shared scopes for all the resources. (Declare these scopes in Logto dashboard under all the resources listed above)\n\nconst logtoClient = new LogtoClient({\nendpoint,\nappId,\nresources: resourceIndicators,\nscopes: [\nUserScope.Email,\nUserScope.Phone,\nUserScope.CustomData,\nUserScope.Identities,\n...resourceScopes,\n],\n});`})}function m(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(j,{...e})}):j(e)}function f(e){const n={code:"code",pre:"pre",...(0,s.a)(),...e.components};return(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-js",children:"// e.g. Get the access token for the API resource http://localhost:3000/api/test\n\nconst accessToken = await logtoClient.getAccessToken('http://localhost:3000/api/test');\nconsole.log('Access token', accessToken);\n"})})}function b(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(f,{...e})}):f(e)}function w(e){const n={code:"code",pre:"pre",...(0,s.a)(),...e.components};return(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-js",children:"// Get organizationIds from the userInfo\n\nconst userInfo = await logtoClient.fetchUserInfo();\nconst organizationIds = userInfo.organizations;\n\n/**\n * Or from the ID token claims\n *\n * const claims = await logtoClient.getIdTokenClaims();\n * const organizationIds = claims.organizations;\n */\n\n// Get the organization access token\nif (organizationIds.length > 0) {\n  const organizationId = organizationIds[0];\n  const organizationAccessToken = await logtoClient.getOrganizationToken(organizationId);\n  console.log('Organization access token', organizationAccessToken);\n}\n"})})}function y(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(w,{...e})}):w(e)}const v=[...i.d$,{value:"Configure Logto client",id:"configure-logto-client",level:3},...r.d$,{value:"Fetch access token for the API resource",id:"fetch-access-token-for-the-api-resource",level:3},...c.d$,{value:"Fetch organization token for user",id:"fetch-organization-token-for-user",level:3},...a.d$];function k(e){const n={h3:"h3",p:"p",...(0,s.a)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(i.ZP,{}),"\n",(0,o.jsx)(n.h3,{id:"configure-logto-client",children:"Configure Logto client"}),"\n",(0,o.jsx)(r.ZP,{configResourcesCode:(0,o.jsx)(p,{}),configResourcesWithScopesCode:(0,o.jsx)(g,{package:e.package}),configResourcesWithSharedScopesCode:(0,o.jsx)(m,{package:e.package})}),"\n",(0,o.jsx)(n.h3,{id:"fetch-access-token-for-the-api-resource",children:"Fetch access token for the API resource"}),"\n",(0,o.jsx)(c.ZP,{getAccessTokenApi:"getAccessToken",getAccessTokenCode:(0,o.jsx)(b,{})}),"\n",(0,o.jsx)(n.h3,{id:"fetch-organization-token-for-user",children:"Fetch organization token for user"}),"\n",(0,o.jsx)(a.ZP,{organizationScope:"UserScope.Organizations",configOrganizationCode:(0,o.jsx)(h,{package:e.package}),getOrganizationAccessTokenCode:(0,o.jsx)(y,{})}),"\n",(0,o.jsx)(n.p,{children:"./code/_scopes-and-claims-code.mdx./code/_config-organization-code.mdx"})]})}function I(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(k,{...e})}):k(e)}},13233:(e,n,t)=>{t.d(n,{ZP:()=>u,d$:()=>l});var o=t(11527),s=t(17279),i=t(27358),r=t(10128),c=t(76800);function a(e){return(0,o.jsx)(c.Z,{language:"js",children:`import LogtoClient, { UserScope } from '${e.package||"@logto/browser"}';\n\nconst logtoClient = new LogtoClient({\nappId: '<your-application-id>',\nendpoint: '<your-logto-endpoint>',\nscopes: [UserScope.Email, UserScope.Phone, UserScope.CustomData, UserScope.Identities],\n});`})}function d(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(a,{...e})}):a(e)}const l=[...i.d$,...r.d$];function h(e){const n={p:"p",...(0,s.a)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(i.ZP,{getIdTokenClaimsApi:"getIdTokenClaims",fetchUserInfoApi:"fetchUserInfo"}),"\n",(0,o.jsx)(r.ZP,{configScopesCode:(0,o.jsx)(d,{package:e.package})}),"\n",(0,o.jsx)(n.p,{children:"./code/_scopes-and-claims-code.mdx./code/_config-resources-with-shared-scopes-code.mdx./code/_config-resources-with-scopes-code.mdx./code/_config-organization-code.mdx"})]})}function u(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(h,{...e})}):h(e)}},83856:(e,n,t)=>{t.d(n,{Z:()=>r});t(50959);var o=t(5341);const s={tabItem:"tabItem_zWLI"};var i=t(11527);function r(e){let{children:n,hidden:t,className:r}=e;return(0,i.jsx)("div",{role:"tabpanel",className:(0,o.Z)(s.tabItem,r),hidden:t,children:n})}},92971:(e,n,t)=>{t.d(n,{Z:()=>v});var o=t(50959),s=t(5341),i=t(54591),r=t(28903),c=t(80643),a=t(43257),d=t(64696),l=t(81178);function h(e){return o.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,o.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function u(e){const{values:n,children:t}=e;return(0,o.useMemo)((()=>{const e=n??function(e){return h(e).map((e=>{let{props:{value:n,label:t,attributes:o,default:s}}=e;return{value:n,label:t,attributes:o,default:s}}))}(t);return function(e){const n=(0,d.l)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,t])}function p(e){let{value:n,tabValues:t}=e;return t.some((e=>e.value===n))}function x(e){let{queryString:n=!1,groupId:t}=e;const s=(0,r.k6)(),i=function(e){let{queryString:n=!1,groupId:t}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:n,groupId:t});return[(0,a._X)(i),(0,o.useCallback)((e=>{if(!i)return;const n=new URLSearchParams(s.location.search);n.set(i,e),s.replace({...s.location,search:n.toString()})}),[i,s])]}function g(e){const{defaultValue:n,queryString:t=!1,groupId:s}=e,i=u(e),[r,a]=(0,o.useState)((()=>function(e){let{defaultValue:n,tabValues:t}=e;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!p({value:n,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${t.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const o=t.find((e=>e.default))??t[0];if(!o)throw new Error("Unexpected error: 0 tabValues");return o.value}({defaultValue:n,tabValues:i}))),[d,h]=x({queryString:t,groupId:s}),[g,j]=function(e){let{groupId:n}=e;const t=function(e){return e?`docusaurus.tab.${e}`:null}(n),[s,i]=(0,l.Nk)(t);return[s,(0,o.useCallback)((e=>{t&&i.set(e)}),[t,i])]}({groupId:s}),m=(()=>{const e=d??g;return p({value:e,tabValues:i})?e:null})();(0,c.Z)((()=>{m&&a(m)}),[m]);return{selectedValue:r,selectValue:(0,o.useCallback)((e=>{if(!p({value:e,tabValues:i}))throw new Error(`Can't select invalid tab value=${e}`);a(e),h(e),j(e)}),[h,j,i]),tabValues:i}}var j=t(21793);const m={tabList:"tabList_eR2H",tabItem:"tabItem_zQGs"};var f=t(11527);function b(e){let{className:n,block:t,selectedValue:o,selectValue:r,tabValues:c}=e;const a=[],{blockElementScrollPositionUntilNextRender:d}=(0,i.o5)(),l=e=>{const n=e.currentTarget,t=a.indexOf(n),s=c[t].value;s!==o&&(d(n),r(s))},h=e=>{let n=null;switch(e.key){case"Enter":l(e);break;case"ArrowRight":{const t=a.indexOf(e.currentTarget)+1;n=a[t]??a[0];break}case"ArrowLeft":{const t=a.indexOf(e.currentTarget)-1;n=a[t]??a[a.length-1];break}}n?.focus()};return(0,f.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,s.Z)("tabs",{"tabs--block":t},n),children:c.map((e=>{let{value:n,label:t,attributes:i}=e;return(0,f.jsx)("li",{role:"tab",tabIndex:o===n?0:-1,"aria-selected":o===n,ref:e=>a.push(e),onKeyDown:h,onClick:l,...i,className:(0,s.Z)("tabs__item",m.tabItem,i?.className,{"tabs__item--active":o===n}),children:t??n},n)}))})}function w(e){let{lazy:n,children:t,selectedValue:s}=e;const i=(Array.isArray(t)?t:[t]).filter(Boolean);if(n){const e=i.find((e=>e.props.value===s));return e?(0,o.cloneElement)(e,{className:"margin-top--md"}):null}return(0,f.jsx)("div",{className:"margin-top--md",children:i.map(((e,n)=>(0,o.cloneElement)(e,{key:n,hidden:e.props.value!==s})))})}function y(e){const n=g(e);return(0,f.jsxs)("div",{className:(0,s.Z)("tabs-container",m.tabList),children:[(0,f.jsx)(b,{...e,...n}),(0,f.jsx)(w,{...e,...n})]})}function v(e){const n=(0,j.Z)();return(0,f.jsx)(y,{...e,children:h(e.children)},String(n))}},68922:(e,n,t)=>{t.d(n,{Z:()=>o});const o=t.p+"assets/images/extension-popup-34a0c267638724bc33b8daea59475880.webp"}}]);