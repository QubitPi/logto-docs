"use strict";(self.webpackChunk_logto_docs=self.webpackChunk_logto_docs||[]).push([[7223],{5054:(e,n,s)=>{s.d(n,{Ay:()=>c,RM:()=>r});var i=s(25105),t=s(79621);const r=[];function o(e){const n={a:"a",p:"p",...(0,t.R)(),...e.components};return(0,i.jsxs)(n.p,{children:["We recommend to read ",(0,i.jsx)(n.a,{href:"/authorization/role-based-access-control",children:"\ud83d\udd10 Role-Based Access Control (RBAC)"})," first to understand the basic concepts of Logto RBAC and how to set up API resources properly."]})}function c(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(o,{...e})}):o(e)}},46409:(e,n,s)=>{s.d(n,{Ay:()=>c,RM:()=>r});var i=s(25105),t=s(79621);const r=[{value:"Checkpoint: Test your application",id:"checkpoint-test-your-application",level:3}];function o(e){const n={h3:"h3",li:"li",ol:"ol",p:"p",...(0,t.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h3,{id:"checkpoint-test-your-application",children:"Checkpoint: Test your application"}),"\n",(0,i.jsx)(n.p,{children:"Now, you can test your application:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"Run your application, you will see the sign-in button."}),"\n",(0,i.jsx)(n.li,{children:"Click the sign-in button, the SDK will init the sign-in process and redirect you to the Logto sign-in page."}),"\n",(0,i.jsx)(n.li,{children:"After you signed in, you will be redirected back to your application and see the sign-out button."}),"\n",(0,i.jsx)(n.li,{children:"Click the sign-out button to clear token storage and sign out."}),"\n"]})]})}function c(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(o,{...e})}):o(e)}},73984:(e,n,s)=>{s.d(n,{Ay:()=>c,RM:()=>r});var i=s(25105),t=s(79621);const r=[];function o(e){const n={p:"p",...(0,t.R)(),...e.components};return(0,i.jsxs)(n.p,{children:["You may find some user information are missing in the returned object from ",(0,i.jsx)("code",{children:e.method}),". This is because OAuth 2.0 and OpenID Connect (OIDC) are designed to follow the principle of least privilege (PoLP), and Logto is built on top of these standards."]})}function c(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(o,{...e})}):o(e)}},38517:(e,n,s)=>{s.d(n,{Ay:()=>c,RM:()=>r});var i=s(25105),t=s(79621);const r=[];function o(e){const{Url:n}={...(0,t.R)(),...e.components};return n||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Url",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n,{href:"/end-user-flows",children:" End-user flows: authentication flows, account flows, and organization flows "}),"\n",(0,i.jsx)(n,{href:"/connectors",children:" Configure connectors "}),"\n",(0,i.jsx)(n,{href:"/authorization",children:" Authorization "})]})}function c(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(o,{...e})}):o(e)}},71019:(e,n,s)=>{s.d(n,{Ay:()=>c,RM:()=>r});var i=s(25105),t=s(79621);const r=[{value:"Regarding redirect-based sign-in",id:"regarding-redirect-based-sign-in",level:3}];function o(e){const n={a:"a",h3:"h3",li:"li",ol:"ol",p:"p",...(0,t.R)(),...e.components},{Details:s,MainSiteUrl:r}=n;return s||d("Details",!0),r||d("MainSiteUrl",!0),(0,i.jsxs)(s,{children:[(0,i.jsx)("summary",{children:(0,i.jsx)(n.h3,{id:"regarding-redirect-based-sign-in",children:"Regarding redirect-based sign-in"})}),(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["This authentication process follows the ",(0,i.jsx)(n.a,{href:"https://openid.net/specs/openid-connect-core-1_0.html",children:"OpenID Connect (OIDC)"})," protocol, and Logto enforces strict security measures to protect user sign-in."]}),"\n",(0,i.jsx)(n.li,{children:"If you have multiple apps, you can use the same identity provider (Logto). Once the user signs in to one app, Logto will automatically complete the sign-in process when the user accesses another app."}),"\n"]}),(0,i.jsxs)(n.p,{children:["To learn more about the rationale and benefits of redirect-based sign-in, see ",(0,i.jsx)(r,{href:"/concepts/sign-in-experience",children:"Logto sign-in experience explained"}),"."]})]})}function c(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(o,{...e})}):o(e)}function d(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},99205:(e,n,s)=>{s.d(n,{Ay:()=>c,RM:()=>r});var i=s(25105),t=s(79621);const r=[];function o(e){const n={a:"a",admonition:"admonition",code:"code",hr:"hr",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,t.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.p,{children:"Here's the list of supported scopes and the corresponding claims:"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"openid"})})}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Claim name"}),(0,i.jsx)(n.th,{children:"Type"}),(0,i.jsx)(n.th,{children:"Description"}),(0,i.jsx)(n.th,{children:"Needs userinfo?"})]})}),(0,i.jsx)(n.tbody,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"sub"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"string"})}),(0,i.jsx)(n.td,{children:"The unique identifier of the user"}),(0,i.jsx)(n.td,{children:"No"})]})})]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"profile"})})}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Claim name"}),(0,i.jsx)(n.th,{children:"Type"}),(0,i.jsx)(n.th,{children:"Description"}),(0,i.jsx)(n.th,{children:"Needs userinfo?"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"name"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"string"})}),(0,i.jsx)(n.td,{children:"The full name of the user"}),(0,i.jsx)(n.td,{children:"No"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"username"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"string"})}),(0,i.jsx)(n.td,{children:"The username of the user"}),(0,i.jsx)(n.td,{children:"No"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"picture"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"string"})}),(0,i.jsx)(n.td,{children:"URL of the End-User's profile picture. This URL MUST refer to an image file (for example, a PNG, JPEG, or GIF image file), rather than to a Web page containing an image. Note that this URL SHOULD specifically reference a profile photo of the End-User suitable for displaying when describing the End-User, rather than an arbitrary photo taken by the End-User."}),(0,i.jsx)(n.td,{children:"No"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"created_at"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"number"})}),(0,i.jsx)(n.td,{children:"Time the End-User was created. The time is represented as the number of milliseconds since the Unix epoch (1970-01-01T00:00:00Z)."}),(0,i.jsx)(n.td,{children:"No"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"updated_at"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"number"})}),(0,i.jsx)(n.td,{children:"Time the End-User's information was last updated. The time is represented as the number of milliseconds since the Unix epoch (1970-01-01T00:00:00Z)."}),(0,i.jsx)(n.td,{children:"No"})]})]})]}),"\n",(0,i.jsxs)(n.p,{children:["Other ",(0,i.jsx)(n.a,{href:"https://openid.net/specs/openid-connect-core-1_0.html#StandardClaims",children:"standard claims"})," include ",(0,i.jsx)(n.code,{children:"family_name"}),", ",(0,i.jsx)(n.code,{children:"given_name"}),", ",(0,i.jsx)(n.code,{children:"middle_name"}),", ",(0,i.jsx)(n.code,{children:"nickname"}),", ",(0,i.jsx)(n.code,{children:"preferred_username"}),", ",(0,i.jsx)(n.code,{children:"profile"}),", ",(0,i.jsx)(n.code,{children:"website"}),", ",(0,i.jsx)(n.code,{children:"gender"}),", ",(0,i.jsx)(n.code,{children:"birthdate"}),", ",(0,i.jsx)(n.code,{children:"zoneinfo"}),", and ",(0,i.jsx)(n.code,{children:"locale"})," will be also included in the ",(0,i.jsx)(n.code,{children:"profile"})," scope without the need for requesting the userinfo endpoint. A difference compared to the claims above is that these claims will only be returned when their values are not empty, while the claims above will return ",(0,i.jsx)(n.code,{children:"null"})," if the values are empty."]}),"\n",(0,i.jsx)(n.admonition,{type:"note",children:(0,i.jsxs)(n.p,{children:["Unlike the standard claims, the ",(0,i.jsx)(n.code,{children:"created_at"})," and ",(0,i.jsx)(n.code,{children:"updated_at"})," claims are using milliseconds instead of seconds."]})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"email"})})}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Claim name"}),(0,i.jsx)(n.th,{children:"Type"}),(0,i.jsx)(n.th,{children:"Description"}),(0,i.jsx)(n.th,{children:"Needs userinfo?"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"email"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"string"})}),(0,i.jsx)(n.td,{children:"The email address of the user"}),(0,i.jsx)(n.td,{children:"No"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"email_verified"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"boolean"})}),(0,i.jsx)(n.td,{children:"Whether the email address has been verified"}),(0,i.jsx)(n.td,{children:"No"})]})]})]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"phone"})})}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Claim name"}),(0,i.jsx)(n.th,{children:"Type"}),(0,i.jsx)(n.th,{children:"Description"}),(0,i.jsx)(n.th,{children:"Needs userinfo?"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"phone_number"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"string"})}),(0,i.jsx)(n.td,{children:"The phone number of the user"}),(0,i.jsx)(n.td,{children:"No"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"phone_number_verified"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"boolean"})}),(0,i.jsx)(n.td,{children:"Whether the phone number has been verified"}),(0,i.jsx)(n.td,{children:"No"})]})]})]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"address"})})}),"\n",(0,i.jsxs)(n.p,{children:["Please refer to the ",(0,i.jsx)(n.a,{href:"https://openid.net/specs/openid-connect-core-1_0.html#AddressClaim",children:"OpenID Connect Core 1.0"})," for the details of the address claim."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"custom_data"})})}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Claim name"}),(0,i.jsx)(n.th,{children:"Type"}),(0,i.jsx)(n.th,{children:"Description"}),(0,i.jsx)(n.th,{children:"Needs userinfo?"})]})}),(0,i.jsx)(n.tbody,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"custom_data"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"object"})}),(0,i.jsx)(n.td,{children:"The custom data of the user"}),(0,i.jsx)(n.td,{children:"Yes"})]})})]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"identities"})})}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Claim name"}),(0,i.jsx)(n.th,{children:"Type"}),(0,i.jsx)(n.th,{children:"Description"}),(0,i.jsx)(n.th,{children:"Needs userinfo?"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"identities"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"object"})}),(0,i.jsx)(n.td,{children:"The linked identities of the user"}),(0,i.jsx)(n.td,{children:"Yes"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"sso_identities"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"array"})}),(0,i.jsx)(n.td,{children:"The linked SSO identities of the user"}),(0,i.jsx)(n.td,{children:"Yes"})]})]})]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"roles"})})}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Claim name"}),(0,i.jsx)(n.th,{children:"Type"}),(0,i.jsx)(n.th,{children:"Description"}),(0,i.jsx)(n.th,{children:"Needs userinfo?"})]})}),(0,i.jsx)(n.tbody,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"roles"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"string[]"})}),(0,i.jsx)(n.td,{children:"The roles of the user"}),(0,i.jsx)(n.td,{children:"No"})]})})]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"urn:logto:scope:organizations"})})}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Claim name"}),(0,i.jsx)(n.th,{children:"Type"}),(0,i.jsx)(n.th,{children:"Description"}),(0,i.jsx)(n.th,{children:"Needs userinfo?"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"organizations"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"string[]"})}),(0,i.jsx)(n.td,{children:"The organization IDs the user belongs to"}),(0,i.jsx)(n.td,{children:"No"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"organization_data"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"object[]"})}),(0,i.jsx)(n.td,{children:"The organization data the user belongs to"}),(0,i.jsx)(n.td,{children:"Yes"})]})]})]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"urn:logto:scope:organization_roles"})})}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Claim name"}),(0,i.jsx)(n.th,{children:"Type"}),(0,i.jsx)(n.th,{children:"Description"}),(0,i.jsx)(n.th,{children:"Needs userinfo?"})]})}),(0,i.jsx)(n.tbody,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"organization_roles"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"string[]"})}),(0,i.jsxs)(n.td,{children:["The organization roles the user belongs to with the format of ",(0,i.jsx)(n.code,{children:"<organization_id>:<role_name>"})]}),(0,i.jsx)(n.td,{children:"No"})]})})]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsxs)(n.p,{children:['Considering performance and the data size, if "Needs userinfo?" is "Yes", it means the claim will not show up in the ID token, but will be returned in the ',(0,i.jsx)(n.a,{href:"https://openid.net/specs/openid-connect-core-1_0.html#UserInfo",children:"userinfo endpoint"})," response."]})]})}function c(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(o,{...e})}):o(e)}},36608:(e,n,s)=>{s.d(n,{Ay:()=>d,RM:()=>o});var i=s(25105),t=s(79621),r=s(99205);const o=[...r.RM];function c(e){const n={a:"a",p:"p",...(0,t.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(n.p,{children:["Logto uses OIDC ",(0,i.jsx)(n.a,{href:"https://openid.net/specs/openid-connect-core-1_0.html#Claims",children:"scopes and claims conventions"})," to define the scopes and claims for retrieving user information from the ID token and OIDC ",(0,i.jsx)("a",{href:"https://openid.net/specs/openid-connect-core-1_0.html#UserInfo",children:"userinfo endpoint"}),'. Both of the "scope" and the "claim" are terms from the OAuth 2.0 and OpenID Connect (OIDC) specifications.']}),"\n","\n",e.configScopesCode&&(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)("p",{children:"In short, when you request a scope, you will get the corresponding claims in the user information. For example, if you request the `email` scope, you will get the `email` and `email_verified` data of the user."}),(0,i.jsx)("p",{children:"By default, Logto SDK will always request three scopes: `openid`, `profile`. And `offline_access`, and there is no way to remove these default scopes. But you can add more scopes when configuring Logto:"}),e.configScopesCode]}),"\n",(0,i.jsx)(r.Ay,{})]})}function d(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},21841:(e,n,s)=>{s.d(n,{Ay:()=>c,RM:()=>r});var i=s(25105),t=s(79621);const r=[];function o(e){const n={admonition:"admonition",code:"code",mermaid:"mermaid",p:"p",...(0,t.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.p,{children:"By default, limited claims are returned. If you need more information, you can request additional scopes to access more claims."}),"\n",(0,i.jsx)(n.admonition,{type:"info",children:(0,i.jsx)(n.p,{children:'A "claim" is an assertion made about a subject; a "scope" is a group of claims. In the current case, a claim is a piece of information about the user.'})}),"\n",(0,i.jsx)(n.p,{children:"Here's a non-normative example the scope - claim relationship:"}),"\n",(0,i.jsx)(n.mermaid,{value:"classDiagram\n  class openid {\n    +sub\n  }\n\n  class profile {\n    +name\n    +username\n    +picture\n    +...\n  }\n\n  class email {\n    +email\n    +email_verified\n  }\n\n  class phone {\n    +phone_number\n    +phone_number_verified\n  }"}),"\n",(0,i.jsx)(n.admonition,{type:"tip",children:(0,i.jsx)(n.p,{children:'The "sub" claim means "subject", which is the unique identifier of the user (i.e. user ID).'})}),"\n",(0,i.jsxs)(n.p,{children:["Logto SDK will always request three scopes: ",(0,i.jsx)(n.code,{children:"openid"}),", ",(0,i.jsx)(n.code,{children:"profile"}),", and ",(0,i.jsx)(n.code,{children:"offline_access"}),"."]})]})}function c(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(o,{...e})}):o(e)}},68547:(e,n,s)=>{s.d(n,{Ay:()=>d,Ip:()=>r,RM:()=>o});var i=s(25105),t=s(79621);const r="http://localhost:3000/",o=[];function c(e){const n={admonition:"admonition",p:"p",...(0,t.R)(),...e.components};return(0,i.jsx)(n.admonition,{type:"note",children:(0,i.jsxs)(n.p,{children:["In the following code snippets, we assume your app is running on ",(0,i.jsx)("code",{children:r}),"."]})})}function d(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},2353:(e,n,s)=>{s.d(n,{Ay:()=>l,Ip:()=>r,RM:()=>c,YF:()=>o});var i=s(25105),t=s(79621);const r="http://localhost:3000/",o=`${r}callback`,c=[{value:"Configure redirect URIs",id:"configure-redirect-uris",level:4}];function d(e){const n={h4:"h4",p:"p",...(0,t.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:["\n","\n",(0,i.jsx)(n.h4,{id:"configure-redirect-uris",children:"Configure redirect URIs"}),"\n",(0,i.jsxs)(n.p,{children:["Switch to the application details page of Logto Console. Add a redirect URI ",(0,i.jsx)("code",{children:e.redirectUri??"http://localhost:3000/callback"}),"."]}),"\n",(0,i.jsx)("img",{alt:"Redirect URI in Logto Console",src:"/img/assets/web-redirect-uri.png",width:"600px"}),"\n",(0,i.jsxs)(n.p,{children:["Just like signing in, users should be redirected to Logto for signing out of the shared session. Once finished, it would be great to redirect the user back to your website. For example, add ",(0,i.jsx)("code",{children:r})," as the post sign-out redirect URI section."]}),"\n",(0,i.jsx)(n.p,{children:'Then click "Save" to save the changes.'})]})}function l(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},79825:(e,n,s)=>{s.d(n,{Ay:()=>d,RM:()=>o});var i=s(25105),t=s(79621),r=s(71019);const o=[...r.RM];function c(e){const n={hr:"hr",li:"li",mermaid:"mermaid",ol:"ol",p:"p",...(0,t.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.p,{children:"Before we dive into the details, here's a quick overview of the end-user experience. The sign-in process can be simplified as follows:"}),"\n",(0,i.jsx)(n.mermaid,{value:"graph LR\n    A(Your app) --\x3e|1. Invoke sign-in| B(Logto)\n    B --\x3e|2. Finish sign-in| A"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"Your app invokes the sign-in method."}),"\n",(0,i.jsx)(n.li,{children:"The user is redirected to the Logto sign-in page. For native apps, the system browser is opened."}),"\n",(0,i.jsx)(n.li,{children:"The user signs in and is redirected back to your app (configured as the redirect URI)."}),"\n"]}),"\n",(0,i.jsx)(r.Ay,{}),"\n",(0,i.jsx)(n.hr,{})]})}function d(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},93382:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>B,contentTitle:()=>z,default:()=>U,frontMatter:()=>N,metadata:()=>i,toc:()=>S});const i=JSON.parse('{"id":"quick-starts/framework/dotnet-blazor-wasm/README","title":"Add authentication to your .NET Core (Blazor WASM) application","description":"Prerequisites \\\\","source":"@site/docs/quick-starts/framework/dotnet-blazor-wasm/README.mdx","sourceDirName":"quick-starts/framework/dotnet-blazor-wasm","slug":"/quick-starts/dotnet-core/blazor-wasm","permalink":"/quick-starts/dotnet-core/blazor-wasm","draft":false,"unlisted":false,"editUrl":"https://github.com/logto-io/docs/tree/master/docs/quick-starts/framework/dotnet-blazor-wasm/README.mdx","tags":[],"version":"current","frontMatter":{"slug":"/quick-starts/dotnet-core/blazor-wasm","sidebar_label":".NET Core (Blazor WASM)","sidebar_custom_props":{"logoFilename":"dotnet-blazor.svg","description":"Integrate Logto into your .NET Core Blazor WebAssembly app."},"language":"c#","official_link":"https://learn.microsoft.com/en-us/aspnet/core/blazor/hosting-models#blazor-webassembly","app_type":"Single page app","framework":".NET Core (Blazor WebAssembly)","tutorial_name":".NET Core (Blazor WebAssembly)"},"sidebar":"quickStartSidebar","previous":{"title":".NET Core (Blazor Server)","permalink":"/quick-starts/dotnet-core/blazor-server"},"next":{"title":".NET Core (MVC)","permalink":"/quick-starts/dotnet-core/mvc"}}');var t=s(25105),r=s(79621),o=s(38517),c=s(5054);const d=[...c.RM,{value:"Add API resource to configuration",id:"add-api-resource-to-configuration",level:3},{value:"Use access token",id:"use-access-token",level:3}];function l(e){const n={a:"a",admonition:"admonition",code:"code",h3:"h3",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(c.Ay,{}),"\n",(0,t.jsxs)(n.p,{children:["By default, when you access ",(0,t.jsx)(n.code,{children:"User?.AccessToken"}),", you will get an opaque token which has a short length and is not a JWT (JSON Web Token). This token is used to access the userinfo endpoint."]}),"\n",(0,t.jsx)(n.h3,{id:"add-api-resource-to-configuration",children:"Add API resource to configuration"}),"\n",(0,t.jsxs)(n.p,{children:["In order to get a JWT that can be used to access an API resource defined in Logto, add the following parameters to the ",(0,t.jsx)(n.code,{children:"appsettings.json"})," file (taking ",(0,t.jsx)(n.code,{children:"https://my-api-resource"})," as an example):"]}),"\n","\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json5",metastring:'title="appsettings.json"',children:'{\n  // ...\n  "IdentityServer": {\n    // ...\n    // highlight-start\n    "Scope": "openid profile email <your-api-scopes>", // Add your API scopes here\n    "Resource": "https://my-api-resource",\n    "ExtraTokenParams": {\n        "resource": "https://my-api-resource" // Ensure the key "resource" is lowercase\n    }\n    // highlight-end\n  }\n}\n'})}),"\n","\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"Resource"})," property is used to add the API resource to the auth request. The ",(0,t.jsx)(n.code,{children:"ExtraTokenParams"})," property is used to add the API resource to the token request. Since Logto conforms ",(0,t.jsx)(n.a,{href:"https://tools.ietf.org/html/rfc8707",children:"RFC 8707"})," for API resources, both properties are required."]}),"\n",(0,t.jsx)(n.admonition,{type:"caution",children:(0,t.jsxs)(n.p,{children:["Since WebAssembly is a client-side application, the token request will only be sent to the server-side once. Due to this nature, ",(0,t.jsx)(n.code,{children:"LoadUserInfo"})," is conflict with fetching access token for API resources."]})}),"\n",(0,t.jsx)(n.h3,{id:"use-access-token",children:"Use access token"}),"\n",(0,t.jsxs)(n.p,{children:["Once the user is authenticated, you can access the API resource by using the ",(0,t.jsx)(n.code,{children:"User?.AccessToken"})," property. For example, you can use the ",(0,t.jsx)(n.code,{children:"HttpClient"})," to access the API resource:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-csharp",children:'using Blorc.OpenIdConnect;\n\nbuilder.Services\n    .AddHttpClient("MyApiResource", client =>\n    {\n        client.BaseAddress = new Uri("https://my-api-resource");\n    })\n    .AddAccessToken(); // Add access token to the request header\n'})})]})}function a(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}var h=s(73984),p=s(36608),u=s(21841);const x=[{value:"Display user information",id:"display-user-information",level:3},{value:"Request additional claims",id:"request-additional-claims",level:3},...h.RM,...u.RM,{value:"Claims that need network request",id:"claims-that-need-network-request",level:3},{value:"Scopes and claims",id:"scopes-and-claims",level:3},...p.RM];function j(e){const n={code:"code",h3:"h3",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h3,{id:"display-user-information",children:"Display user information"}),"\n",(0,t.jsxs)(n.p,{children:["Here are some examples of how to display user information in the ",(0,t.jsx)(n.code,{children:"Home.razor"})," page:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-cshtml",children:'<AuthorizeView>\n    <Authorized>\n        @* Signed in view *@\n        @* ... *@\n        <p>You are signed in as @(@User?.Profile?.Name ?? "(unknown name)").</p>\n    </Authorized>\n    @* ... *@\n</AuthorizeView>\n'})}),"\n",(0,t.jsxs)(n.p,{children:["For more properties and claims, check the ",(0,t.jsx)(n.code,{children:"User"})," and ",(0,t.jsx)(n.code,{children:"Profile"})," classes in the ",(0,t.jsx)(n.code,{children:"Blorc.OpenIdConnect"})," package."]}),"\n",(0,t.jsx)(n.h3,{id:"request-additional-claims",children:"Request additional claims"}),"\n",(0,t.jsx)(h.Ay,{method:"User"}),"\n",(0,t.jsx)(u.Ay,{}),"\n",(0,t.jsxs)(n.p,{children:["To request additional scopes, you can add valid scopes to the ",(0,t.jsx)(n.code,{children:"IdentityServer.Scope"})," property in the ",(0,t.jsx)(n.code,{children:"appsettings.json"})," file."]}),"\n","\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json5",children:'{\n  // ...\n  "IdentityServer": {\n    // ...\n    // highlight-next-line\n    "Scope": "openid profile email phone"\n  }\n}\n'})}),"\n","\n",(0,t.jsx)(n.h3,{id:"claims-that-need-network-request",children:"Claims that need network request"}),"\n",(0,t.jsxs)(n.p,{children:["To prevent bloating the user object, some claims require network requests to fetch. For example, the custom_data claim is not included in the user object even if it's requested in the scopes. To fetch these claims, you can set the ",(0,t.jsx)(n.code,{children:"IdentityServer.LoadUserInfo"})," property to ",(0,t.jsx)(n.code,{children:"true"})," in the ",(0,t.jsx)(n.code,{children:"appsettings.json"})," file."]}),"\n",(0,t.jsx)(n.p,{children:"For example, to fetch the user's email address and custom data, you can use the following configuration:"}),"\n","\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json5",children:'{\n  // ...\n  "IdentityServer": {\n    // ...\n    // highlight-start\n    "Scope": "openid profile email custom_data",\n    "LoadUserInfo": true\n    // highlight-end\n  }\n}\n'})}),"\n","\n",(0,t.jsx)(n.h3,{id:"scopes-and-claims",children:"Scopes and claims"}),"\n",(0,t.jsx)(p.Ay,{})]})}function m(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(j,{...e})}):j(e)}function g(e){const n={a:"a",admonition:"admonition",li:"li",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsx)(n.admonition,{type:"tip",children:(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["The following demonstration is built on .NET Core 8.0 and ",(0,t.jsx)(n.a,{href:"https://github.com/WildGums/Blorc.OpenIdConnect",children:"Blorc.OpenIdConnect"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:["The .NET Core sample projects are available in the ",(0,t.jsx)(n.a,{href:"https://github.com/logto-io/csharp",children:"GitHub repository"}),"."]}),"\n"]})})}function f(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(g,{...e})}):g(e)}function b(e){const n={code:"code",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.p,{children:"Add the NuGet package to your project:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"dotnet add package Blorc.OpenIdConnect\n"})})]})}function y(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(b,{...e})}):b(e)}var A=s(80173),w=s(46409),v=s(68547),k=s(2353),C=s(79825);const R=[{value:"Add script references",id:"add-script-references",level:3},{value:"Register services",id:"register-services",level:3},{value:"Configure redirect URIs",id:"configure-redirect-uris",level:3},...C.RM,...v.RM,...k.RM,{value:"Configure application",id:"configure-application",level:3},{value:"Add <code>AuthorizeView</code> component",id:"add-authorizeview-component",level:3},{value:"Set up authentication",id:"set-up-authentication",level:3},...w.RM];function T(e){const n={admonition:"admonition",code:"code",h3:"h3",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h3,{id:"add-script-references",children:"Add script references"}),"\n",(0,t.jsxs)(n.p,{children:["Include ",(0,t.jsx)(n.code,{children:"Blorc.Core/injector.js"})," the ",(0,t.jsx)(n.code,{children:"index.html"})," file:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-html",metastring:'title="index.html"',children:'<head>\n  \x3c!-- ... --\x3e\n  <script src="_content/Blorc.Core/injector.js"><\/script>\n  \x3c!-- ... --\x3e\n</head>\n'})}),"\n",(0,t.jsx)(n.h3,{id:"register-services",children:"Register services"}),"\n",(0,t.jsxs)(n.p,{children:["Add the following code to the ",(0,t.jsx)(n.code,{children:"Program.cs"})," file:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-csharp",metastring:'title="Program.cs"',children:'using Blorc.OpenIdConnect;\nusing Blorc.Services;\n\nbuilder.Services.AddBlorcCore();\nbuilder.Services.AddAuthorizationCore();\nbuilder.Services.AddBlorcOpenIdConnect(\n    options =>\n    {\n        builder.Configuration.Bind("IdentityServer", options);\n    });\n\nvar webAssemblyHost = builder.Build();\n\nawait webAssemblyHost\n    .ConfigureDocumentAsync(async documentService =>\n    {\n        await documentService.InjectBlorcCoreJsAsync();\n        await documentService.InjectOpenIdConnectAsync();\n    });\n\nawait webAssemblyHost.RunAsync();\n'})}),"\n",(0,t.jsx)(n.admonition,{type:"info",children:(0,t.jsxs)(n.p,{children:["There's no need to use the ",(0,t.jsx)(n.code,{children:"Microsoft.AspNetCore.Components.WebAssembly.Authentication"})," package. The ",(0,t.jsx)(n.code,{children:"Blorc.OpenIdConnect"})," package will take care of the authentication process."]})}),"\n",(0,t.jsx)(n.h3,{id:"configure-redirect-uris",children:"Configure redirect URIs"}),"\n",(0,t.jsx)(C.Ay,{}),"\n",(0,t.jsx)(v.Ay,{}),"\n",(0,t.jsx)(k.Ay,{}),"\n",(0,t.jsx)(n.h3,{id:"configure-application",children:"Configure application"}),"\n",(0,t.jsxs)(n.p,{children:["Add the following code to the ",(0,t.jsx)(n.code,{children:"appsettings.json"})," file:"]}),"\n",(0,t.jsx)(A.A,{language:"json5",title:"appsettings.json",children:`{\n// ...\nIdentityServer: {\n  Authority: 'https://<your-logto-endpoint>/oidc',\n  ClientId: '<your-logto-app-id>',\n  PostLogoutRedirectUri: '${k.Ip}',\n  RedirectUri: '${k.YF}',\n  ResponseType: 'code',\n  Scope: 'openid profile', // Add more scopes if needed\n},\n}`}),"\n",(0,t.jsxs)(n.p,{children:["Remember to add the ",(0,t.jsx)(n.code,{children:"RedirectUri"})," and ",(0,t.jsx)(n.code,{children:"PostLogoutRedirectUri"})," to the list of allowed redirect URIs in the Logto application settings. They are both the URL of your WASM application."]}),"\n",(0,t.jsxs)(n.h3,{id:"add-authorizeview-component",children:["Add ",(0,t.jsx)(n.code,{children:"AuthorizeView"})," component"]}),"\n",(0,t.jsxs)(n.p,{children:["In the Razor pages that require authentication, add the ",(0,t.jsx)(n.code,{children:"AuthorizeView"})," component. Let's assume it's the ",(0,t.jsx)(n.code,{children:"Home.razor"})," page:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-cshtml",metastring:'title="Pages/Home.razor"',children:'@using Microsoft.AspNetCore.Components.Authorization\n@page "/"\n\n<AuthorizeView>\n    <Authorized>\n        @* Signed in view *@\n        <button @onclick="OnLogoutButtonClickAsync">\n            Sign out\n        </button>\n    </Authorized>\n    <NotAuthorized>\n        @* Unauthenticated view *@\n        <button @onclick="OnLoginButtonClickAsync">\n            Sign in\n        </button>\n    </NotAuthorized>\n</AuthorizeView>\n'})}),"\n",(0,t.jsx)(n.h3,{id:"set-up-authentication",children:"Set up authentication"}),"\n",(0,t.jsxs)(n.p,{children:["In the ",(0,t.jsx)(n.code,{children:"Home.razor.cs"})," file (create it if it doesn't exist), add the following code:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-csharp",metastring:'title="Pages/Home.razor.cs"',children:"using Microsoft.AspNetCore.Authorization;\nusing Microsoft.AspNetCore.Components;\nusing Microsoft.AspNetCore.Components.Web;\nusing Blorc.OpenIdConnect;\nusing Microsoft.AspNetCore.Components.Authorization;\n\n[Authorize]\npublic partial class Home : ComponentBase\n{\n    [Inject]\n    public required IUserManager UserManager { get; set; }\n\n    public User<Profile>? User { get; set; }\n\n    [CascadingParameter]\n    protected Task<AuthenticationState>? AuthenticationStateTask { get; set; }\n\n    protected override async Task OnInitializedAsync()\n    {\n        User = await UserManager.GetUserAsync<User<Profile>>(AuthenticationStateTask!);\n    }\n\n    private async Task OnLoginButtonClickAsync(MouseEventArgs obj)\n    {\n        await UserManager.SignInRedirectAsync();\n    }\n\n    private async Task OnLogoutButtonClickAsync(MouseEventArgs obj)\n    {\n        await UserManager.SignOutRedirectAsync();\n    }\n}\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Once the user is authenticated, the ",(0,t.jsx)(n.code,{children:"User"})," property will be populated with the user information."]}),"\n",(0,t.jsx)(w.Ay,{})]})}function I(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(T,{...e})}):T(e)}const N={slug:"/quick-starts/dotnet-core/blazor-wasm",sidebar_label:".NET Core (Blazor WASM)",sidebar_custom_props:{logoFilename:"dotnet-blazor.svg",description:"Integrate Logto into your .NET Core Blazor WebAssembly app."},language:"c#",official_link:"https://learn.microsoft.com/en-us/aspnet/core/blazor/hosting-models#blazor-webassembly",app_type:"Single page app",framework:".NET Core (Blazor WebAssembly)",tutorial_name:".NET Core (Blazor WebAssembly)"},z="Add authentication to your .NET Core (Blazor WASM) application",B={},S=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Installation",id:"installation",level:2},{value:"Integration",id:"integration",level:2},...R,{value:"Get user information",id:"get-user-information",level:2},...x,{value:"API resources",id:"api-resources",level:2},...d,{value:"Further readings",id:"further-readings",level:2},...o.RM];function _(e){const n={a:"a",h1:"h1",h2:"h2",header:"header",li:"li",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"add-authentication-to-your-net-core-blazor-wasm-application",children:"Add authentication to your .NET Core (Blazor WASM) application"})}),"\n",(0,t.jsx)(f,{}),"\n",(0,t.jsx)(n.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["A ",(0,t.jsx)(n.a,{href:"https://cloud.logto.io",children:"Logto Cloud"})," account or a ",(0,t.jsx)(n.a,{href:"/introduction/set-up-logto-oss",children:"self-hosted Logto"}),"."]}),"\n",(0,t.jsx)(n.li,{children:"A Logto single page application created."}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"installation",children:"Installation"}),"\n",(0,t.jsx)(y,{}),"\n",(0,t.jsx)(n.h2,{id:"integration",children:"Integration"}),"\n",(0,t.jsx)(I,{}),"\n",(0,t.jsx)(n.h2,{id:"get-user-information",children:"Get user information"}),"\n",(0,t.jsx)(m,{}),"\n",(0,t.jsx)(n.h2,{id:"api-resources",children:"API resources"}),"\n",(0,t.jsx)(a,{}),"\n",(0,t.jsx)(n.h2,{id:"further-readings",children:"Further readings"}),"\n",(0,t.jsx)(o.Ay,{})]})}function U(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(_,{...e})}):_(e)}},55138:(e,n,s)=>{s.d(n,{A:()=>j});var i=s(28259),t=s(6097),r=s(58574),o=s(9484),c=s(76566),d=s(26346),l=s(17867),a=s(17510),h=s(13526),p=s(72355);const u={codeBlockContent:"codeBlockContent_m3Ux",codeBlockTitle:"codeBlockTitle_P25_",codeBlock:"codeBlock_qGQc",codeBlockStandalone:"codeBlockStandalone_zC50",codeBlockLines:"codeBlockLines_p187",codeBlockLinesWithNumbering:"codeBlockLinesWithNumbering_OFgW",buttonGroup:"buttonGroup_6DOT"};var x=s(25105);function j(e){let{children:n,className:s="",metastring:j,title:m,showLineNumbers:g,language:f}=e;const{prism:{defaultLanguage:b,magicComments:y}}=(0,i.p)(),A=function(e){return e?.toLowerCase()}(f??(0,r.Op)(s)??b),w=(0,t.A)(),v=(0,o.f)(),k=(0,r.wt)(j)||m,{lineClassNames:C,code:R}=(0,r.Li)(n,{metastring:j,language:A,magicComments:y}),T=g??(0,r._u)(j);return(0,x.jsxs)(c.A,{as:"div",className:(0,h.A)(s,A&&!s.includes(`language-${A}`)&&`language-${A}`),children:[k&&(0,x.jsx)("div",{className:u.codeBlockTitle,children:k}),(0,x.jsxs)("div",{className:u.codeBlockContent,children:[(0,x.jsx)(p.f4,{theme:w,code:R,language:A??"text",children:e=>{let{className:n,tokens:s,getLineProps:i,getTokenProps:t}=e;return(0,x.jsx)("pre",{ref:v.codeBlockRef,tabIndex:0,className:(0,h.A)(n,u.codeBlock,"thin-scrollbar"),children:(0,x.jsx)("code",{className:(0,h.A)(u.codeBlockLines,T&&u.codeBlockLinesWithNumbering),children:s.map(((e,n)=>(0,x.jsx)(l.A,{line:e,getLineProps:i,getTokenProps:t,classNames:C[n],showLineNumbers:T},n)))})})}}),(0,x.jsxs)("div",{className:u.buttonGroup,children:[(v.isEnabled||v.isCodeScrollable)&&(0,x.jsx)(a.A,{className:u.codeButton,isEnabled:v.isEnabled,onClick:()=>{v.toggle()}}),(0,x.jsx)(d.A,{className:u.codeButton,code:R})]})]})]})}}}]);