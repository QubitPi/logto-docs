"use strict";(self.webpackChunk_logto_docs=self.webpackChunk_logto_docs||[]).push([[5418],{72929:(e,t,n)=>{n.d(t,{Ay:()=>o,RM:()=>i});var r=n(25105),s=n(79621);const i=[];function a(e){const t={a:"a",li:"li",ol:"ol",p:"p",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.p,{children:"Under the hood, a third-party app is just a standard OAuth 2.0 / OIDC client. This means you (or the third-party developer) can use any OAuth 2.0 / OIDC library or framework to integrate with Logto."}),"\n",(0,r.jsx)(t.p,{children:"If you're not familiar with OAuth 2.0 or OIDC, you can start by following one of our \u201cTraditional web\u201d quick start guides."}),"\n",(0,r.jsx)(t.p,{children:"A few things to keep in mind:"}),"\n",(0,r.jsxs)(t.ol,{children:["\n",(0,r.jsx)(t.li,{children:"Logto currently requires third-party apps to be \u201cTraditional web\u201d apps. In other words, the app needs a backend server (or backend-for-frontend) to securely store the client secret."}),"\n",(0,r.jsx)(t.li,{children:"Most our quick start guides are written for first-party apps, but you can still use them as a reference for third-party app integration."}),"\n",(0,r.jsx)(t.li,{children:"The main difference is that third-party apps will show a consent screen, asking users for explicit permission to access their data."}),"\n"]}),"\n",(0,r.jsxs)(t.p,{children:["You can find more information in our ",(0,r.jsx)(t.a,{href:"/quick-starts",children:"quick start guides"}),"."]})]})}function o(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(a,{...e})}):a(e)}},86254:(e,t,n)=>{n.d(t,{Ay:()=>l,RM:()=>a});var r=n(25105),s=n(79621),i=n(72929);const a=[{value:"Configure third-party AI agent in Logto",id:"configure-third-party-ai-agent-in-logto",level:2},{value:"Allow developers to create third-party apps in Logto",id:"allow-developers-to-create-third-party-apps-in-logto",level:3},{value:"Manually create a third-party app in Logto",id:"manually-create-a-third-party-app-in-logto",level:3},...i.RM];function o(e){const t={a:"a",code:"code",h2:"h2",h3:"h3",hr:"hr",li:"li",mermaid:"mermaid",ol:"ol",p:"p",strong:"strong",...(0,s.R)(),...e.components},{CloudLink:n}=t;return n||function(e,t){throw new Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("CloudLink",!0),(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.h2,{id:"configure-third-party-ai-agent-in-logto",children:"Configure third-party AI agent in Logto"}),"\n",(0,r.jsxs)(t.p,{children:["To enable the third-party AI agent to access your ",e.serviceName??"your service",", you need to set up a ",(0,r.jsx)(t.strong,{children:"third-party app"})," in Logto. This app will be used to represent the AI agent and obtain the necessary credentials for authentication and authorization."]}),"\n",(0,r.jsx)(t.h3,{id:"allow-developers-to-create-third-party-apps-in-logto",children:"Allow developers to create third-party apps in Logto"}),"\n",(0,r.jsxs)(t.p,{children:["If you are building a marketplace or want to allow developers to create third-party apps in Logto, you can leverage ",(0,r.jsx)(t.a,{href:"/integrate-logto/interact-with-management-api",children:"Logto Management API"})," to create third-party apps programmatically. This allows developers to register their applications and obtain the necessary credentials for authentication."]}),"\n",(0,r.jsx)(t.p,{children:"You'll need to host your own service to handle the client registration process. This service will interact with the Logto Management API to create third-party apps on behalf of developers."}),"\n",(0,r.jsx)(t.mermaid,{value:"sequenceDiagram\n  actor Developer\n  participant Server as Your app registration service\n  participant Logto as Logto Management API\n  Developer->>Server: Register app\n  Server->>Logto: Create app\n  Logto->>Server: App ID, secret, etc.\n  Server->>Developer: App ID, secret, etc."}),"\n",(0,r.jsx)(t.p,{children:"Alternatively, you can manually create third-party apps in Logto Console to get familiar with the process."}),"\n",(0,r.jsx)(t.h3,{id:"manually-create-a-third-party-app-in-logto",children:"Manually create a third-party app in Logto"}),"\n",(0,r.jsx)(t.p,{children:"You can manually create a third-party app in Logto Console for testing purposes or ad-hoc integrations. This is useful when you want to quickly test the integration without implementing a full client-registration flow."}),"\n",(0,r.jsxs)(t.ol,{children:["\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsx)(t.p,{children:"Sign in to your Logto Console."}),"\n"]}),"\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsxs)(t.p,{children:["Go ",(0,r.jsx)(n,{to:"/applications",children:(0,r.jsx)(t.strong,{children:"Applications"})})," \u2192 ",(0,r.jsx)(t.strong,{children:"Create application"})," \u2192 ",(0,r.jsx)(t.strong,{children:"Third-party app"})," -> ",(0,r.jsx)(t.strong,{children:"OIDC"}),"."]}),"\n"]}),"\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsxs)(t.p,{children:["Fill in the app name and other required fields, then click ",(0,r.jsx)(t.strong,{children:"Create application"}),"."]}),"\n"]}),"\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsxs)(t.p,{children:["Click ",(0,r.jsx)(t.strong,{children:"Permissions"})," tab, in the ",(0,r.jsx)(t.strong,{children:"User"}),' section, click "Add".']}),"\n"]}),"\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsxs)(t.p,{children:["In the opened dialog -> ",(0,r.jsx)(t.strong,{children:"User data"})," -> select ",(0,r.jsx)(t.strong,{children:(0,r.jsx)(t.code,{children:"profile"})}),", ",(0,r.jsx)(t.strong,{children:(0,r.jsx)(t.code,{children:"email"})})," permissions, then click ",(0,r.jsx)(t.strong,{children:"Save"}),"."]}),"\n"]}),"\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsxs)(t.p,{children:["In the third-party app, configure scopes to request ",(0,r.jsx)(t.code,{children:"openid profile email"})," permissions (scopes)."]}),"\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.strong,{children:"Note"}),": ",(0,r.jsx)(t.code,{children:"openid"})," is required for OIDC, and ",(0,r.jsx)(t.code,{children:"profile"})," and ",(0,r.jsx)(t.code,{children:"email"})," are the permissions you added in the previous step."]}),"\n"]}),"\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsxs)(t.p,{children:["Configure the ",(0,r.jsx)(t.strong,{children:"redirect URI"})," of your third-party application accordingly. Remember to update the redirect URI in Logto as well."]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)("img",{src:"/img/assets/third-party-app-permissions.png",alt:"Third-party app permissions",style:{maxWidth:"800px",width:"100%"}}),"\n",(0,r.jsx)(t.hr,{}),"\n",(0,r.jsx)(i.Ay,{})]})}function l(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(o,{...e})}):o(e)}},52476:(e,t,n)=>{n.d(t,{Ay:()=>l,RM:()=>a});var r=n(25105),s=n(79621),i=n(27519);const a=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Understanding the architecture",id:"understanding-the-architecture",level:3}];function o(e){const t={a:"a",admonition:"admonition",h2:"h2",h3:"h3",li:"li",p:"p",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:["A ",(0,r.jsx)(t.a,{href:"https://cloud.logto.io",children:"Logto Cloud"})," (or self-hosted) tenant"]}),"\n",(0,r.jsx)(t.li,{children:"Node.js or Python environment"}),"\n"]}),"\n",(0,r.jsx)(t.h3,{id:"understanding-the-architecture",children:"Understanding the architecture"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"MCP server"}),": The server that exposes tools and resources to MCP clients."]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"MCP client"}),": A client used to initiate the authentication flow and test the integration. ",(0,r.jsx)("b",{children:e.isThirdParty?"The third-party AI agent will be used as the client in this guide.":"We'll use the MCP Inspector as the client in this guide."})]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"Logto"}),": Serves as the OpenID Connect provider (authorization server) and manages user identities."]}),"\n"]}),"\n",(0,r.jsx)(t.p,{children:"A non-normative sequence diagram illustrates the overall flow of the process:"}),"\n",(0,r.jsx)(i.A,{value:`sequenceDiagram\n  participant Client as MCP Client<br/>${e.isThirdParty?"(third-party AI agent)":"(MCP Inspector)"}\n  participant Server as MCP Server\n  participant Logto\n\n  Server->>Logto: Request OpenID Connect configuration\n  Logto->>Server: Return configuration\n  Note over Server: Cache the configuration\n  Client->>Server: Request access to a tool\n  Server->>Client: Not authenticated (401 Unauthorized)\n  Client->>Server: Request OAuth 2.0 Authorization Server Metadata\n  Note over Server: In this context, \u201cOpenID Connect configuration\u201d and<br/>\u201cOAuth 2.0 Authorization Server Metadata\u201d<br/>refer to the same thing.\n  Server->>Client: Return OpenID Connect configuration retrieved from Logto\n  Client->>Logto: Redirect to Logto for authentication\n  Logto->>Logto: User authenticates\n  ${e.isThirdParty?"Logto->>Logto: User authorizes (consents) scopes<br/>to the third-party app":""}\n  Logto->>Client: Redirect back to MCP server with authorization code\n  Client->>Logto: Request access token using authorization code\n  Logto->>Client: Return access token\n  Client->>Server: Request tool with access token\n  Server->>Logto: Request user info using access token\n  Logto->>Server: Return user info\n  Server->>Client: Return tool response`}),"\n",(0,r.jsx)(t.admonition,{type:"note",children:(0,r.jsxs)(t.p,{children:["Due to MCP is quickly evolving, the above diagram may not be fully up to date. Please refer to the ",(0,r.jsx)(t.a,{href:"https://mcp-auth.dev",children:"mcp-auth"})," documentation for the latest information."]})})]})}function l(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(o,{...e})}):o(e)}},49021:(e,t,n)=>{n.d(t,{Ay:()=>c,RM:()=>o});var r=n(25105),s=n(79621),i=n(38552),a=n(22002);const o=[];function l(e){const t={a:"a",p:"p",...(0,s.R)(),...e.components};return(0,r.jsxs)(a.A,{groupId:"sdk",children:[(0,r.jsx)(i.A,{value:"python",label:"Python",children:(0,r.jsxs)(t.p,{children:["The full MCP server code can be found in the ",(0,r.jsx)(t.a,{href:"https://github.com/mcp-auth/python",children:"mcp-auth/python"})," repository."]})}),(0,r.jsx)(i.A,{value:"node",label:"Node.js",children:(0,r.jsxs)(t.p,{children:["The full MCP server code can be found in the ",(0,r.jsx)(t.a,{href:"https://github.com/mcp-auth/js",children:"mcp-auth/js"})," repository."]})})]})}function c(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},51427:(e,t,n)=>{n.d(t,{Ay:()=>c,RM:()=>o});var r=n(25105),s=n(79621),i=n(38552),a=n(22002);const o=[{value:"Set up the MCP server",id:"set-up-the-mcp-server",level:2},{value:"Create project and install dependencies",id:"create-project-and-install-dependencies",level:3},{value:"Configure MCP auth with Logto",id:"configure-mcp-auth-with-logto",level:3},{value:"Implement token verification",id:"implement-token-verification",level:3},{value:"Implement the &quot;whoami&quot; tool",id:"implement-the-whoami-tool",level:3}];function l(e){const t={admonition:"admonition",code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",strong:"strong",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.h2,{id:"set-up-the-mcp-server",children:"Set up the MCP server"}),"\n",(0,r.jsx)(t.h3,{id:"create-project-and-install-dependencies",children:"Create project and install dependencies"}),"\n",(0,r.jsxs)(a.A,{groupId:"sdk",children:[(0,r.jsx)(i.A,{value:"python",label:"Python",children:(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-bash",children:'mkdir mcp-server\ncd mcp-server\nuv init # Or use your own project structure\nuv add "mcp[cli]" starlette uvicorn mcpauth # Or use any preferred package manager\n'})})}),(0,r.jsx)(i.A,{value:"node",label:"Node.js",children:(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-bash",children:"mkdir mcp-server\ncd mcp-server\nnpm init -y\nnpm install @modelcontextprotocol/sdk express mcp-auth # Or use any preferred package manager\n"})})})]}),"\n",(0,r.jsx)(t.h3,{id:"configure-mcp-auth-with-logto",children:"Configure MCP auth with Logto"}),"\n",(0,r.jsxs)(t.p,{children:["Remember to replace ",(0,r.jsx)(t.code,{children:"<your-logto-issuer-endpoint>"})," with the issuer endpoint you copied earlier."]}),"\n",(0,r.jsxs)(a.A,{groupId:"sdk",children:[(0,r.jsxs)(i.A,{value:"python",label:"Python",children:[(0,r.jsx)(t.p,{children:(0,r.jsxs)(t.strong,{children:["In ",(0,r.jsx)(t.code,{children:"whoami.py"}),":"]})}),(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-python",children:"from mcpauth import MCPAuth\nfrom mcpauth.config import AuthServerType\nfrom mcpauth.utils import fetch_server_config\n\nauth_issuer = '<your-logto-issuer-endpoint>'\nauth_server_config = fetch_server_config(auth_issuer, type=AuthServerType.OIDC)\nmcp_auth = MCPAuth(server=auth_server_config)\n"})})]}),(0,r.jsxs)(i.A,{value:"node",label:"Node.js",children:[(0,r.jsx)(t.p,{children:(0,r.jsxs)(t.strong,{children:["In ",(0,r.jsx)(t.code,{children:"whoami.js"}),":"]})}),(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-js",children:"import { MCPAuth, fetchServerConfig } from 'mcp-auth';\n\nconst authIssuer = '<your-logto-issuer-endpoint>';\nconst mcpAuth = new MCPAuth({\n  server: await fetchServerConfig(authIssuer, { type: 'oidc' }),\n});\n"})})]})]}),"\n",(0,r.jsx)(t.h3,{id:"implement-token-verification",children:"Implement token verification"}),"\n",(0,r.jsx)(t.p,{children:"Since we're going to verify the access token and retrieve user info, we need to implement the access token verification as follows:"}),"\n",(0,r.jsxs)(a.A,{groupId:"sdk",children:[(0,r.jsx)(i.A,{value:"python",label:"Python",children:(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-python",children:'import requests\nfrom mcpauth.types import AuthInfo\n\ndef verify_access_token(token: str) -> AuthInfo:\n    endpoint = auth_server_config.metadata.userinfo_endpoint\n    response = requests.get(\n        endpoint,\n        headers={"Authorization": f"Bearer {token}"},\n    )\n    response.raise_for_status()\n    data = response.json()\n    return AuthInfo(\n        token=token,\n        subject=data.get("sub"),\n        issuer=auth_server_config.metadata.issuer,\n        claims=data,\n    )\n'})})}),(0,r.jsx)(i.A,{value:"node",label:"Node.js",children:(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-js",children:"const verifyToken = async (token) => {\n  const { userinfoEndpoint, issuer } = mcpAuth.config.server.metadata;\n  const response = await fetch(userinfoEndpoint, {\n    headers: { Authorization: `Bearer ${token}` },\n  });\n  if (!response.ok) throw new Error('Token verification failed');\n  const userInfo = await response.json();\n  return {\n    token,\n    issuer,\n    subject: userInfo.sub,\n    claims: userInfo,\n  };\n};\n"})})})]}),"\n",(0,r.jsx)(t.h3,{id:"implement-the-whoami-tool",children:'Implement the "whoami" tool'}),"\n",(0,r.jsx)(t.p,{children:"Now, let's implement the \"whoami\" tool that returns the current user's identity claims requesting the userinfo endpoint with the access token sent by the client."}),"\n",(0,r.jsx)(t.admonition,{type:"note",children:(0,r.jsx)(t.p,{children:"We are using the SSE transport for the example due to the lack of official support for the Streamable HTTP transport in the current version of the SDK. Theoretically, you can use any HTTP-compatible transport."})}),"\n",(0,r.jsxs)(a.A,{groupId:"sdk",children:[(0,r.jsxs)(i.A,{value:"python",label:"Python",children:[(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-python",children:'from mcp.server.fastmcp import FastMCP\nfrom starlette.applications import Starlette\nfrom starlette.routing import Mount\nfrom starlette.middleware import Middleware\n\nmcp = FastMCP("WhoAmI")\n\n@mcp.tool()\ndef whoami() -> dict:\n    """\n    Returns the current user\'s identity information.\n    """\n    return (\n        mcp_auth.auth_info.claims\n        if mcp_auth.auth_info\n        else {"error": "Not authenticated"}\n    )\n\nbearer_auth = Middleware(mcp_auth.bearer_auth_middleware(verify_access_token))\napp = Starlette(\n    routes=[\n        mcp_auth.metadata_route(),  # Serves OIDC metadata for discovery\n        Mount(\'/\', app=mcp.sse_app(), middleware=[bearer_auth]),\n    ],\n)\n'})}),(0,r.jsx)(t.p,{children:"Run the server with:"}),(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-bash",children:"uvicorn whoami:app --host 0.0.0.0 --port 3001\n"})})]}),(0,r.jsxs)(i.A,{value:"node",label:"Node.js",children:[(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-js",children:"import { McpServer } from '@modelcontextprotocol/sdk/server/mcp.js';\nimport express from 'express';\n\n// Create MCP server and register the whoami tool\nconst server = new McpServer({ name: 'WhoAmI', version: '0.0.0' });\nserver.tool('whoami', ({ authInfo }) => ({\n  content: [\n    { type: 'text', text: JSON.stringify(authInfo?.claims ?? { error: 'Not authenticated' }) },\n  ],\n}));\n\n// Express app & MCP Auth middleware\nconst app = express();\napp.use(mcpAuth.delegatedRouter());\napp.use(mcpAuth.bearerAuth(verifyToken));\n\n// SSE transport (as in SDK docs)\nconst transports = {};\napp.get('/sse', async (_req, res) => {\n  const transport = new SSEServerTransport('/messages', res);\n  transports[transport.sessionId] = transport;\n  res.on('close', () => delete transports[transport.sessionId]);\n  await server.connect(transport);\n});\napp.post('/messages', async (req, res) => {\n  const sessionId = String(req.query.sessionId);\n  const transport = transports[sessionId];\n  if (transport) await transport.handlePostMessage(req, res, req.body);\n  else res.status(400).send('No transport found for sessionId');\n});\n\napp.listen(3001);\n"})}),(0,r.jsx)(t.p,{children:"Run the server with:"}),(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-bash",children:"node whoami.js\n"})})]})]})]})}function c(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},17097:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>h,default:()=>g,frontMatter:()=>d,metadata:()=>r,toc:()=>p});const r=JSON.parse('{"id":"use-cases/ai/mcp-server-enable-third-party-ai-agent-access","title":"Enable third-party AI agent access to your MCP server","description":"This guide walks you through integrating Logto with your MCP server using mcp-auth, allowing you to authenticate users and securely retrieve their identity information using the standard OpenID Connect flow.","source":"@site/docs/use-cases/ai/mcp-server-enable-third-party-ai-agent-access.mdx","sourceDirName":"use-cases/ai","slug":"/use-cases/ai/mcp-server-enable-third-party-ai-agent-access","permalink":"/use-cases/ai/mcp-server-enable-third-party-ai-agent-access","draft":false,"unlisted":false,"editUrl":"https://github.com/logto-io/docs/tree/master/docs/use-cases/ai/mcp-server-enable-third-party-ai-agent-access.mdx","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2,"sidebar_label":"Enable third-party AI agent access to MCP server"},"sidebar":"useCasesSidebar","previous":{"title":"Enable auth for MCP-powered apps","permalink":"/use-cases/ai/mcp-server-add-auth"},"next":{"title":"Enable third-party AI agent access to app","permalink":"/use-cases/ai/enable-third-party-ai-agent-access"}}');var s=n(25105),i=n(79621),a=n(86254),o=n(52476),l=n(49021),c=n(51427);const d={sidebar_position:2,sidebar_label:"Enable third-party AI agent access to MCP server"},h="Enable third-party AI agent access to your MCP server",u={},p=[{value:"Difference between third-party AI agent (MCP client) and your own MCP client",id:"difference-between-third-party-ai-agent-mcp-client-and-your-own-mcp-client",level:2},...o.RM,...a.RM,...c.RM,{value:"Test the integration",id:"test-the-integration",level:2},...l.RM];function m(e){const t={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",ol:"ol",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"enable-third-party-ai-agent-access-to-your-mcp-server",children:"Enable third-party AI agent access to your MCP server"})}),"\n",(0,s.jsxs)(t.p,{children:["This guide walks you through integrating Logto with your MCP server using ",(0,s.jsx)(t.a,{href:"https://mcp-auth.dev",children:"mcp-auth"}),", allowing you to authenticate users and securely retrieve their identity information using the standard OpenID Connect flow."]}),"\n",(0,s.jsx)(t.p,{children:"You'll learn how to:"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"Configure Logto as the authorization server for your MCP server."}),"\n",(0,s.jsx)(t.li,{children:"Set up a \u201cwhoami\u201d tool in your MCP server to return the current user's identity claims."}),"\n",(0,s.jsx)(t.li,{children:"Test the flow with a third-party AI agent (MCP client)."}),"\n"]}),"\n",(0,s.jsx)(t.p,{children:"After this tutorial, your MCP server will:"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"Authenticate users in your Logto tenant."}),"\n",(0,s.jsxs)(t.li,{children:["Return identity claims (",(0,s.jsx)(t.code,{children:"sub"}),", ",(0,s.jsx)(t.code,{children:"username"}),", ",(0,s.jsx)(t.code,{children:"name"}),", ",(0,s.jsx)(t.code,{children:"email"}),', etc.) for the "whoami" tool invocation.']}),"\n"]}),"\n",(0,s.jsx)(t.h2,{id:"difference-between-third-party-ai-agent-mcp-client-and-your-own-mcp-client",children:"Difference between third-party AI agent (MCP client) and your own MCP client"}),"\n",(0,s.jsx)(t.p,{children:"Let's take a look at an example. Imagine you\u2019re a developer running an MCP server to manage email access and automation."}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.strong,{children:"Official email app (Your own MCP client)"})}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"You provide an official email app for users to read and manage their emails."}),"\n",(0,s.jsx)(t.li,{children:"How it works: The official email app connects to your MCP server using Logto to authenticate users. When Alice signs in, she automatically gets access to her emails, no extra permission screens needed, since it\u2019s your trusted app."}),"\n"]}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.strong,{children:"Third-party AI agent (Third-party MCP client)"})}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"You\u2019re building an ecosystem around your MCP server, so another developer creates \u201cSmartMail AI\u201d (an AI assistant that can summarize emails and schedule meetings automatically) integrating it as a third-party client."}),"\n",(0,s.jsxs)(t.li,{children:["How it works: SmartMail AI (third-party MCP client) wants to access user emails via your MCP server. When Alice signs in to SmartMail AI using her account:","\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"She\u2019s shown a consent screen, asking permission for SmartMail AI to read her emails and calendar."}),"\n",(0,s.jsx)(t.li,{children:"Alice can allow or deny this access."}),"\n",(0,s.jsx)(t.li,{children:"Only the data she consents to is shared with SmartMail AI, and SmartMail AI cannot access any additional data without explicit re-consent."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(t.p,{children:"This access (permission) control ensures user data safety, even though your MCP server manages all the data, third-party apps like SmartMail AI can only access what the user has explicitly allowed. They cannot bypass this process, as it's enforced by your access control implementation in the MCP server."}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.strong,{children:"Summary"})}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Client type"}),(0,s.jsx)(t.th,{children:"Example"}),(0,s.jsx)(t.th,{children:"Consent required?"}),(0,s.jsx)(t.th,{children:"Who controls it?"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Official email app"}),(0,s.jsx)(t.td,{children:"Your own email application"}),(0,s.jsx)(t.td,{children:"No"}),(0,s.jsx)(t.td,{children:"You (the developer)"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Third-party AI agent"}),(0,s.jsx)(t.td,{children:"SmartMail AI assistant"}),(0,s.jsx)(t.td,{children:"Yes"}),(0,s.jsx)(t.td,{children:"Another developer"})]})]})]}),"\n",(0,s.jsx)(t.admonition,{type:"note",children:(0,s.jsxs)(t.p,{children:["If you want to integrate your MCP server with your own AI agent or app, please refer to the ",(0,s.jsx)(t.a,{href:"./mcp-server-add-auth",children:"Enable auth for your MCP-powered apps with Logto"})," guide."]})}),"\n",(0,s.jsx)(o.Ay,{isThirdParty:!0}),"\n",(0,s.jsx)(a.Ay,{serviceName:"MCP server"}),"\n",(0,s.jsx)(c.Ay,{}),"\n",(0,s.jsx)(t.h2,{id:"test-the-integration",children:"Test the integration"}),"\n",(0,s.jsxs)(t.ol,{children:["\n",(0,s.jsx)(t.li,{children:"Start the MCP server."}),"\n",(0,s.jsx)(t.li,{children:"Start the AI agent."}),"\n",(0,s.jsxs)(t.li,{children:["In the client, invoke the ",(0,s.jsx)(t.code,{children:"whoami"})," tool to retrieve the current user's identity claims."]}),"\n",(0,s.jsx)(t.li,{children:"The client should handle the 401 Unauthorized response and redirect the user to Logto for authentication."}),"\n",(0,s.jsx)(t.li,{children:"After successful authentication, the client should receive an access token and use it to make requests to the MCP server."}),"\n",(0,s.jsx)(t.li,{children:"The client should be able to retrieve the identity claims from the MCP server using the access token."}),"\n"]}),"\n",(0,s.jsx)(l.Ay,{})]})}function g(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(m,{...e})}):m(e)}},38552:(e,t,n)=>{n.d(t,{A:()=>a});n(58101);var r=n(13526);const s={tabItem:"tabItem_dgSZ"};var i=n(25105);function a(e){let{children:t,hidden:n,className:a}=e;return(0,i.jsx)("div",{role:"tabpanel",className:(0,r.A)(s.tabItem,a),hidden:n,children:t})}},22002:(e,t,n)=>{n.d(t,{A:()=>w});var r=n(58101),s=n(13526),i=n(60755),a=n(55234),o=n(6635),l=n(4100),c=n(35661),d=n(42752);function h(e){return r.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function u(e){const{values:t,children:n}=e;return(0,r.useMemo)((()=>{const e=t??function(e){return h(e).map((e=>{let{props:{value:t,label:n,attributes:r,default:s}}=e;return{value:t,label:n,attributes:r,default:s}}))}(n);return function(e){const t=(0,c.XI)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,n])}function p(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function m(e){let{queryString:t=!1,groupId:n}=e;const s=(0,a.W6)(),i=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:t,groupId:n});return[(0,l.aZ)(i),(0,r.useCallback)((e=>{if(!i)return;const t=new URLSearchParams(s.location.search);t.set(i,e),s.replace({...s.location,search:t.toString()})}),[i,s])]}function g(e){const{defaultValue:t,queryString:n=!1,groupId:s}=e,i=u(e),[a,l]=(0,r.useState)((()=>function(e){let{defaultValue:t,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!p({value:t,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const r=n.find((e=>e.default))??n[0];if(!r)throw new Error("Unexpected error: 0 tabValues");return r.value}({defaultValue:t,tabValues:i}))),[c,h]=m({queryString:n,groupId:s}),[g,f]=function(e){let{groupId:t}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(t),[s,i]=(0,d.Dv)(n);return[s,(0,r.useCallback)((e=>{n&&i.set(e)}),[n,i])]}({groupId:s}),x=(()=>{const e=c??g;return p({value:e,tabValues:i})?e:null})();(0,o.A)((()=>{x&&l(x)}),[x]);return{selectedValue:a,selectValue:(0,r.useCallback)((e=>{if(!p({value:e,tabValues:i}))throw new Error(`Can't select invalid tab value=${e}`);l(e),h(e),f(e)}),[h,f,i]),tabValues:i}}var f=n(21929);const x={tabList:"tabList_osvQ",tabItem:"tabItem_dc4O"};var j=n(25105);function v(e){let{className:t,block:n,selectedValue:r,selectValue:a,tabValues:o}=e;const l=[],{blockElementScrollPositionUntilNextRender:c}=(0,i.a_)(),d=e=>{const t=e.currentTarget,n=l.indexOf(t),s=o[n].value;s!==r&&(c(t),a(s))},h=e=>{let t=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const n=l.indexOf(e.currentTarget)+1;t=l[n]??l[0];break}case"ArrowLeft":{const n=l.indexOf(e.currentTarget)-1;t=l[n]??l[l.length-1];break}}t?.focus()};return(0,j.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,s.A)("tabs",{"tabs--block":n},t),children:o.map((e=>{let{value:t,label:n,attributes:i}=e;return(0,j.jsx)("li",{role:"tab",tabIndex:r===t?0:-1,"aria-selected":r===t,ref:e=>{l.push(e)},onKeyDown:h,onClick:d,...i,className:(0,s.A)("tabs__item",x.tabItem,i?.className,{"tabs__item--active":r===t}),children:n??t},t)}))})}function y(e){let{lazy:t,children:n,selectedValue:i}=e;const a=(Array.isArray(n)?n:[n]).filter(Boolean);if(t){const e=a.find((e=>e.props.value===i));return e?(0,r.cloneElement)(e,{className:(0,s.A)("margin-top--md",e.props.className)}):null}return(0,j.jsx)("div",{className:"margin-top--md",children:a.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==i})))})}function b(e){const t=g(e);return(0,j.jsxs)("div",{className:(0,s.A)("tabs-container",x.tabList),children:[(0,j.jsx)(v,{...t,...e}),(0,j.jsx)(y,{...t,...e})]})}function w(e){const t=(0,f.A)();return(0,j.jsx)(b,{...e,children:h(e.children)},String(t))}},79621:(e,t,n)=>{n.d(t,{R:()=>a,x:()=>o});var r=n(58101);const s={},i=r.createContext(s);function a(e){const t=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),r.createElement(i.Provider,{value:t},e.children)}}}]);