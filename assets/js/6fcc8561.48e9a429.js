"use strict";(self.webpackChunk_logto_docs=self.webpackChunk_logto_docs||[]).push([[71727],{9360:(e,n,t)=>{t.d(n,{Ay:()=>l,RM:()=>s});var o=t(25105),i=t(79621);const s=[];function r(e){const n={a:"a",admonition:"admonition",p:"p",...(0,i.R)(),...e.components};return(0,o.jsx)(n.admonition,{type:"tip",children:(0,o.jsxs)(n.p,{children:["This guide assumes you have basic understanding of Logto Connectors. For those unfamiliar, please refer to the ",(0,o.jsx)(n.a,{href:"/connectors",children:"Connectors"})," guide to get started."]})})}function l(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(r,{...e})}):r(e)}},51869:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>c,default:()=>u,frontMatter:()=>l,metadata:()=>o,toc:()=>a});const o=JSON.parse('{"id":"integrations/social/google/README","title":"Set up social login with Google","description":"The Google connector provides a succinct way for your application to use Google\u2019s OAuth 2.0 authentication system.","source":"@site/docs/integrations/social/google/README.mdx","sourceDirName":"integrations/social/google","slug":"/integrations/google","permalink":"/integrations/google","draft":false,"unlisted":false,"editUrl":"https://github.com/logto-io/docs/tree/master/docs/integrations/social/google/README.mdx","tags":[],"version":"current","frontMatter":{"slug":"/integrations/google","sidebar_label":"Google","sidebar_custom_props":{"description":"Google is a principal search engine technology and email service provider."}},"sidebar":"integrationsSidebar","previous":{"title":"GitHub","permalink":"/integrations/github"},"next":{"title":"Hugging Face","permalink":"/integrations/huggingface"}}');var i=t(25105),s=t(79621),r=t(9360);const l={slug:"/integrations/google",sidebar_label:"Google",sidebar_custom_props:{description:"Google is a principal search engine technology and email service provider."}},c="Set up social login with Google",d={},a=[...r.RM,{value:"Set up a project in the Google API Console",id:"set-up-a-project-in-the-google-api-console",level:2},{value:"Configure your consent screen",id:"configure-your-consent-screen",level:2},{value:"Configure and register your application",id:"configure-and-register-your-application",level:3},{value:"Edit app registration",id:"edit-app-registration",level:3},{value:"Config OAuth consent screen",id:"config-oauth-consent-screen",level:4},{value:"Config scopes",id:"config-scopes",level:4},{value:"Add test users (External user type only)",id:"add-test-users-external-user-type-only",level:4},{value:"Obtain OAuth 2.0 credentials",id:"obtain-oauth-20-credentials",level:2},{value:"Configure your connector",id:"configure-your-connector",level:2},{value:"Config types",id:"config-types",level:3},{value:"Enable Google One Tap",id:"enable-google-one-tap",level:2},{value:"References",id:"references",level:2}];function h(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.R)(),...e.components},{Url:t}=n;return t||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Url",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"set-up-social-login-with-google",children:"Set up social login with Google"})}),"\n",(0,i.jsx)(n.p,{children:"The Google connector provides a succinct way for your application to use Google\u2019s OAuth 2.0 authentication system."}),"\n",(0,i.jsx)(r.Ay,{}),"\n",(0,i.jsx)(n.h2,{id:"set-up-a-project-in-the-google-api-console",children:"Set up a project in the Google API Console"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Visit the ",(0,i.jsx)(n.a,{href:"https://console.developers.google.com",children:"Google API Console"})," and sign in with your Google account."]}),"\n",(0,i.jsxs)(n.li,{children:["Click the ",(0,i.jsx)(n.strong,{children:"Select a project"})," button on the top menu bar, and click the ",(0,i.jsx)(n.strong,{children:"New Project"})," button to create a project."]}),"\n",(0,i.jsxs)(n.li,{children:["In your newly created project, click the ",(0,i.jsx)(n.strong,{children:"APIs & Services"})," to enter the ",(0,i.jsx)(n.strong,{children:"APIs & Services"})," menu."]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"configure-your-consent-screen",children:"Configure your consent screen"}),"\n",(0,i.jsx)(n.h3,{id:"configure-and-register-your-application",children:"Configure and register your application"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["On the left ",(0,i.jsx)(n.strong,{children:"APIs & Services"})," menu, click the ",(0,i.jsx)(n.strong,{children:"OAuth consent screen"})," button."]}),"\n",(0,i.jsxs)(n.li,{children:["Choose the ",(0,i.jsx)(n.strong,{children:"User Type"})," you want, and click the ",(0,i.jsx)(n.strong,{children:"Create"})," button. (Note: If you select ",(0,i.jsx)(n.strong,{children:"External"})," as your ",(0,i.jsx)(n.strong,{children:"User Type"}),", you will need to add test users later.)"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["Now you will be on the ",(0,i.jsx)(n.strong,{children:"Edit app registration"})," page."]}),"\n",(0,i.jsx)(n.h3,{id:"edit-app-registration",children:"Edit app registration"}),"\n",(0,i.jsx)(n.h4,{id:"config-oauth-consent-screen",children:"Config OAuth consent screen"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Follow the instructions to fill out the ",(0,i.jsx)(n.strong,{children:"OAuth consent screen"})," form."]}),"\n",(0,i.jsxs)(n.li,{children:["Click ",(0,i.jsx)(n.strong,{children:"SAVE AND CONTINUE"})," to continue."]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"config-scopes",children:"Config scopes"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Click ",(0,i.jsx)(n.strong,{children:"ADD OR REMOVE SCOPES"})," and select ",(0,i.jsx)(n.code,{children:"../auth/userinfo.email"}),", ",(0,i.jsx)(n.code,{children:"../auth/userinfo.profile"})," and ",(0,i.jsx)(n.code,{children:"openid"})," in the popup drawer, and click ",(0,i.jsx)(n.strong,{children:"UPDATE"})," to finish. It is recommended that you consider adding all the scopes you may use, otherwise some scopes you added in the configuration may not work."]}),"\n",(0,i.jsx)(n.li,{children:"Fill out the form as you need."}),"\n",(0,i.jsxs)(n.li,{children:["Click ",(0,i.jsx)(n.strong,{children:"SAVE AND CONTINUE"})," to continue."]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"add-test-users-external-user-type-only",children:"Add test users (External user type only)"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Click ",(0,i.jsx)(n.strong,{children:"ADD USERS"})," and add test users to allow these users to access your application while testing."]}),"\n",(0,i.jsxs)(n.li,{children:["Click ",(0,i.jsx)(n.strong,{children:"SAVE AND CONTINUE"})," to continue."]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Now you should have the Google OAuth 2.0 consent screen configured."}),"\n",(0,i.jsx)(n.h2,{id:"obtain-oauth-20-credentials",children:"Obtain OAuth 2.0 credentials"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["On the left ",(0,i.jsx)(n.strong,{children:"APIs & Services"})," menu, click the ",(0,i.jsx)(n.strong,{children:"Credentials"})," button."]}),"\n",(0,i.jsxs)(n.li,{children:["On the ",(0,i.jsx)(n.strong,{children:"Credentials"})," page, click the ",(0,i.jsx)(n.strong,{children:"+ CREATE CREDENTIALS"})," button on the top menu bar, and select ",(0,i.jsx)(n.strong,{children:"OAuth client ID"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:["On the ",(0,i.jsx)(n.strong,{children:"Create OAuth client ID"})," page, select ",(0,i.jsx)(n.strong,{children:"Web application"})," as the application type."]}),"\n",(0,i.jsx)(n.li,{children:"Fill out the basic information for your application."}),"\n",(0,i.jsxs)(n.li,{children:["Click ",(0,i.jsx)(n.strong,{children:"+ Add URI"})," to add an authorized domain to the ",(0,i.jsx)(n.strong,{children:"Authorized JavaScript origins"})," section. This is the domain that your logto authorization page will be served from. In our case, this will be ",(0,i.jsx)(n.code,{children:"${your_logto_origin}"}),". e.g.",(0,i.jsx)(n.code,{children:"https://logto.dev"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:["Click ",(0,i.jsx)(n.strong,{children:"+ Add URI"})," in the *",(0,i.jsx)(n.strong,{children:"*Authorized redirect URIs**"})," section to set up the *",(0,i.jsx)(n.strong,{children:"*Authorized redirect URIs**"}),", which redirect the user to the application after logging in. In our case, this will be ",(0,i.jsx)(n.code,{children:"${your_logto_endpoint}/callback/${connector_id}"}),". e.g. ",(0,i.jsx)(n.code,{children:"https://logto.dev/callback/${connector_id}"}),". The ",(0,i.jsx)(n.code,{children:"connector_id"})," can be found on the top bar of the Logto Admin Console connector details page."]}),"\n",(0,i.jsxs)(n.li,{children:["Click ",(0,i.jsx)(n.strong,{children:"Create"})," to finish and then you will get the ",(0,i.jsx)(n.strong,{children:"Client ID"})," and ",(0,i.jsx)(n.strong,{children:"Client Secret"}),"."]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"configure-your-connector",children:"Configure your connector"}),"\n",(0,i.jsxs)(n.p,{children:["Fill out the ",(0,i.jsx)(n.code,{children:"clientId"})," and ",(0,i.jsx)(n.code,{children:"clientSecret"})," field with ",(0,i.jsx)(n.em,{children:"Client ID"})," and ",(0,i.jsx)(n.em,{children:"Client Secret"})," you've got from OAuth app detail pages mentioned in the previous section."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"scope"})," is a space-delimited list of ",(0,i.jsx)(n.a,{href:"https://developers.google.com/identity/protocols/oauth2/scopes",children:"scopes"}),". If not provided, scope defaults to be ",(0,i.jsx)(n.code,{children:"openid profile email"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"prompts"})," is an array of strings that specifies the type of user interaction that is required. The string can be one of the following values:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"none"}),": The authorization server does not display any authentication or user consent screens; it will return an error if the user is not already authenticated and has not pre-configured consent for the requested scopes. You can use none to check for existing authentication and/or consent."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"consent"}),": The authorization server prompts the user for consent before returning information to the client."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"select_account"}),": The authorization server prompts the user to select a user account. This allows a user who has multiple accounts at the authorization server to select amongst the multiple accounts that they may have current sessions for."]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"config-types",children:"Config types"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Name"}),(0,i.jsx)(n.th,{children:"Type"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"clientId"}),(0,i.jsx)(n.td,{children:"string"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"clientSecret"}),(0,i.jsx)(n.td,{children:"string"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"scope"}),(0,i.jsx)(n.td,{children:"string"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"prompts"}),(0,i.jsx)(n.td,{children:"string[]"})]})]})]}),"\n",(0,i.jsx)(n.h2,{id:"enable-google-one-tap",children:"Enable Google One Tap"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.a,{href:"https://developers.google.com/identity/gsi/web/guides/features",children:"Google One Tap"})," is a secure and easy way to let users sign in to your website or app with their Google account."]}),"\n",(0,i.jsx)(n.p,{children:"Once you have the Google connector set up, you'll see a card for Google One Tap in the connector details page. You can enable Google One Tap in your sign-up and sign-in pages by toggling the switch."}),"\n",(0,i.jsx)(n.p,{children:"When you enable Google One Tap, you can configure the following options:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Auto-select credential if possible"}),": Automatically sign in the user with the Google account if ",(0,i.jsx)(n.a,{href:"https://developers.google.com/identity/gsi/web/guides/automatic-sign-in-sign-out",children:"certain conditions are met"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Cancel the prompt if user click/tap outside"}),": Close the Google One Tap prompt if the user clicks or taps outside the prompt. If disabled, the user must click the close button to dismiss the prompt."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Enable Upgraded One Tap UX on ITP browsers"}),": Enable the upgraded Google One Tap user experience on Intelligent Tracking Prevention (ITP) browsers. Please refer to ",(0,i.jsx)(n.a,{href:"https://developers.google.com/identity/gsi/web/guides/features#upgraded_ux_on_itp_browsers",children:"this page"})," for more information."]}),"\n"]}),"\n",(0,i.jsx)(n.admonition,{type:"note",children:(0,i.jsx)(n.p,{children:"To enable Google One Tap in your website (beyond the Logto sign-in experience), this feature is under development. Please stay tuned for updates."})}),"\n",(0,i.jsx)(n.h2,{id:"references",children:"References"}),"\n",(0,i.jsx)(t,{href:"https://developers.google.com/identity/protocols/oauth2/openid-connect#appsetup",children:(0,i.jsx)(n.p,{children:"Google Identity: Setting up OAuth 2.0"})})]})}function u(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}},79621:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>l});var o=t(58101);const i={},s=o.createContext(i);function r(e){const n=o.useContext(s);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),o.createElement(s.Provider,{value:n},e.children)}}}]);