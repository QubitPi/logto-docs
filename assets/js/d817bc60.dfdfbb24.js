"use strict";(self.webpackChunk_logto_docs=self.webpackChunk_logto_docs||[]).push([[8028],{36416:(e,n,i)=>{i.d(n,{Ay:()=>a,RM:()=>s});var o=i(25105),t=i(79621);const s=[];function r(e){const n={admonition:"admonition",code:"code",p:"p",...(0,t.R)(),...e.components};return(0,o.jsx)(n.admonition,{type:"note",children:(0,o.jsxs)(n.p,{children:["Inspect the ",(0,o.jsx)(n.code,{children:"organizations"})," claim in the ID token to get a list of organization IDs the user belongs to. This claim lists all organizations the user is a member of, making it easy to enumerate or switch organizations in your app."]})})}function a(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(r,{...e})}):r(e)}},22619:(e,n,i)=>{i.d(n,{Ay:()=>a,RM:()=>s});var o=i(25105),t=i(79621);const s=[];function r(e){const n={admonition:"admonition",p:"p",...(0,t.R)(),...e.components};return(0,o.jsx)(n.admonition,{type:"warning",children:(0,o.jsx)(n.p,{children:"At the moment, Logto does not support fetching organization tokens directly from the authorization code flow. You will need to use the refresh token flow to obtain an organization token."})})}function a(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(r,{...e})}):r(e)}},38750:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>x,contentTitle:()=>m,default:()=>z,frontMatter:()=>g,metadata:()=>o,toc:()=>f});const o=JSON.parse('{"id":"authorization/organization-permissions","title":"Protect organization (non-API) permissions","description":"Use the organization template to manage and enforce organization-level roles and permissions in Logto, controlling access to in-app features and workflows within an organization context.","source":"@site/docs/authorization/organization-permissions.mdx","sourceDirName":"authorization","slug":"/authorization/organization-permissions","permalink":"/authorization/organization-permissions","draft":false,"unlisted":false,"editUrl":"https://github.com/logto-io/docs/tree/master/docs/authorization/organization-permissions.mdx","tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"sidebar_position":4},"sidebar":"docsSidebar","previous":{"title":"Protect global API resources","permalink":"/authorization/global-api-resources"},"next":{"title":"Protect organization-level API resources","permalink":"/authorization/organization-level-api-resources"}}');var t=i(25105),s=i(79621),r=i(93855),a=i(39088),l=i(78506),c=i(42372),d=i(38552),h=i(22002),u=i(36416),p=i(22619);const g={sidebar_position:4},m="Protect organization (non-API) permissions",x={},f=[{value:"What are organization (non-API) permissions?",id:"what-are-organization-non-api-permissions",level:2},{value:"How it works in Logto",id:"how-it-works-in-logto",level:2},{value:"Implementation overview",id:"implementation-overview",level:3},{value:"Authorization flow: authenticating and securing organization permissions",id:"authorization-flow-authenticating-and-securing-organization-permissions",level:3},{value:"Implementation steps",id:"implementation-steps",level:2},{value:"Register organization permissions",id:"register-organization-permissions",level:3},{value:"Set up organization roles",id:"set-up-organization-roles",level:3},{value:"Obtain organization tokens (non-API)",id:"obtain-organization-tokens-non-api",level:3},{value:"Refresh token flow",id:"refresh-token-flow",level:4},...u.RM,...p.RM,...u.RM,{value:"Client credentials flow",id:"client-credentials-flow",level:4},{value:"Validate organization tokens",id:"validate-organization-tokens",level:3},{value:"Best practices and security tips",id:"best-practices-and-security-tips",level:2},{value:"FAQs",id:"faqs",level:2},{value:"Can I mix organization and non-organization permissions in a single role?",id:"can-i-mix-organization-and-non-organization-permissions-in-a-single-role",level:3},{value:"Where should I enforce non-API permissions?",id:"where-should-i-enforce-non-api-permissions",level:3},{value:"Further reading",id:"further-reading",level:2}];function j(e){const n={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",mermaid:"mermaid",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,s.R)(),...e.components},{CloudLink:i,Details:o,Url:g}=n;return i||b("CloudLink",!0),o||b("Details",!0),g||b("Url",!0),(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"protect-organization-non-api-permissions",children:"Protect organization (non-API) permissions"})}),"\n",(0,t.jsx)(n.p,{children:"Use the organization template to manage and enforce organization-level roles and permissions in Logto, controlling access to in-app features and workflows within an organization context."}),"\n",(0,t.jsx)(n.h2,{id:"what-are-organization-non-api-permissions",children:"What are organization (non-API) permissions?"}),"\n",(0,t.jsxs)(n.p,{children:["Organization permissions (non-API) control what users can do ",(0,t.jsx)(n.strong,{children:"within an organization context"}),", but are not ",(0,t.jsx)(n.strong,{children:"enforced at the API level"}),". Instead, they govern access to app features, UI elements, workflows, or business actions, rather than backend APIs."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Use cases include"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Inviting or managing members within an organization"}),"\n",(0,t.jsx)(n.li,{children:"Assigning or changing organization roles"}),"\n",(0,t.jsx)(n.li,{children:"Managing billing, settings, or administrative functions for an organization"}),"\n",(0,t.jsx)(n.li,{children:"Access to dashboards, analytics, or internal tools that don\u2019t have API endpoints"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Logto allows you to secure these organization permissions using OAuth 2.1 and RBAC, while supporting multi-tenant SaaS architectures."}),"\n",(0,t.jsxs)(n.p,{children:["These permissions are managed through ",(0,t.jsx)(n.strong,{children:"organization roles"})," defined in the ",(0,t.jsx)(n.a,{href:"/authorization/organization-template",children:"organization template"}),". Every organization uses the same template, ensuring a consistent permission model across all organizations."]}),"\n",(0,t.jsx)(n.h2,{id:"how-it-works-in-logto",children:"How it works in Logto"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Organization-level RBAC:"})," Roles and permissions are defined in the organization template. When a user joins an organization, they\u2019re assigned one or more roles, granting specific permissions."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Non-API enforcement:"})," Permissions are checked and enforced in your app\u2019s UI, workflow, or backend logic, not necessarily by an API gateway."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Separation from API protection:"})," Organization (non-API) permissions are distinct from API resource permissions. You can combine both for advanced scenarios."]}),"\n"]}),"\n",(0,t.jsx)("center",{children:(0,t.jsx)("img",{src:r.A,alt:"Organization permissions RBAC",style:{maxWidth:"800px",width:"100%"}})}),"\n",(0,t.jsx)(n.h3,{id:"implementation-overview",children:"Implementation overview"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Define organization permissions"})," in Logto under the organization template."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Create organization roles"})," that bundle the necessary permissions for your organization-specific actions."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Assign roles"})," to users or clients within each organization."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Obtain an organization token (JWT)"})," for the current organization using either the refresh token or client credentials flow."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Validate access tokens"})," in your app\u2019s UI or backend to enforce organization permissions."]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"authorization-flow-authenticating-and-securing-organization-permissions",children:"Authorization flow: authenticating and securing organization permissions"}),"\n",(0,t.jsx)(n.p,{children:"The following flow shows how a client (web, mobile, or backend) obtains and uses organization tokens for non-API permission enforcement."}),"\n",(0,t.jsx)(n.p,{children:"Please note that the flow does not include exhaustive details about the required parameters or headers, but focuses on the key steps involved. Continue reading to see how the flow works in practice."}),"\n",(0,t.jsx)(n.mermaid,{value:"sequenceDiagram\n    participant Client\n    participant Logto\n    participant App as App/UI/backend\n\n    alt User authentication\n        Client->>Logto: GET /oidc/auth\n        Logto->>Logto: Redirects user to sign-in page\n        Logto->>Client: Redirects back with `authorization_code`\n        Client->>Logto: POST /oidc/token with `grant_type=authorization_code`\n        Logto->>Client: Returns refresh token\n        Client->>Logto: POST /oidc/token with `grant_type=refresh_token` + organization parameters\n    else M2M client authentication\n        Client->>Logto: POST /oidc/token with `grant_type=client_credentials` + organization parameters\n    end\n\n    Logto->>Client: Returns organization token (JWT)\n    Client->>App: Request with Bearer token\n    App->>App: Validates organization token, checks organization context and permissions\n\n    alt Token is valid\n        App->>Client: Allows organization-specific actions/data\n    else Token is invalid\n        App->>Client: 401 Unauthorized or denies UI access\n    end"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.em,{children:"User authentication = browser/app. M2M = backend service or script using client credentials + organization context."})}),"\n",(0,t.jsx)(n.h2,{id:"implementation-steps",children:"Implementation steps"}),"\n",(0,t.jsx)(n.h3,{id:"register-organization-permissions",children:"Register organization permissions"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["Go to ",(0,t.jsx)(i,{to:"/organization-template/organization-permissions",children:"Console \u2192 Organization template \u2192 Organization permissions"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:["Define the organization permissions you need (e.g., ",(0,t.jsx)(n.code,{children:"invite:member"}),", ",(0,t.jsx)(n.code,{children:"manage:billing"}),", ",(0,t.jsx)(n.code,{children:"view:analytics"}),")."]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["For full configuration steps, see ",(0,t.jsx)(n.a,{href:"/authorization/role-based-access-control#define-organization-permissions",children:"Define organization permissions"}),"."]}),"\n",(0,t.jsx)(n.h3,{id:"set-up-organization-roles",children:"Set up organization roles"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["Go to ",(0,t.jsx)(i,{to:"/organization-template/organization-roles",children:"Console \u2192 Organization template \u2192 Organization roles"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:["Create roles that bundle the organization permissions you defined earlier (e.g., ",(0,t.jsx)(n.code,{children:"admin"}),", ",(0,t.jsx)(n.code,{children:"member"}),", ",(0,t.jsx)(n.code,{children:"billing"}),")."]}),"\n",(0,t.jsx)(n.li,{children:"Assign these roles to users or clients within each organization."}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["For full configuration steps, see ",(0,t.jsx)(n.a,{href:"/authorization/role-based-access-control#configure-organization-roles",children:"Use organization roles"}),"."]}),"\n",(0,t.jsx)(n.h3,{id:"obtain-organization-tokens-non-api",children:"Obtain organization tokens (non-API)"}),"\n",(0,t.jsxs)(n.p,{children:["Your client/app should obtain an organization token (non-API) to access organization permissions. Logto issues organization tokens as ",(0,t.jsx)(n.a,{href:"https://auth.wiki/jwt",children:"JSON Web Tokens (JWTs)"}),". You can obtain these using either the ",(0,t.jsx)(n.a,{href:"https://auth.wiki/refresh-token",children:"refresh token flow"})," or ",(0,t.jsx)(n.a,{href:"https://auth.wiki/client-credentials-flow",children:"client credentials flow"}),"."]}),"\n",(0,t.jsx)(n.h4,{id:"refresh-token-flow",children:"Refresh token flow"}),"\n",(0,t.jsx)(n.p,{children:"Almost all Logto official SDKs support obtaining organization tokens using the refresh token flow out of the box. A standard OAuth 2.0 / OIDC client library can also be used to implement this flow."}),"\n",(0,t.jsxs)(h.A,{groupId:"user-client",children:[(0,t.jsxs)(d.A,{value:"logto-sdk",label:"Logto SDK",children:[(0,t.jsxs)(n.p,{children:["When initializing the Logto SDK, add the ",(0,t.jsx)(n.code,{children:"urn:logto:scope:organizations"})," and desired organization permissions (scopes) to the ",(0,t.jsx)(n.code,{children:"scopes"})," parameter."]}),(0,t.jsxs)(n.p,{children:["Some Logto SDKs have a predefined scope for organizations, such as ",(0,t.jsx)(n.code,{children:"UserScope.Organizations"})," in JavaScript SDKs."]}),(0,t.jsx)(u.Ay,{}),(0,t.jsxs)(n.p,{children:["Use ",(0,t.jsx)(n.code,{children:"getOrganizationToken"})," or a similar method (like ",(0,t.jsx)(n.code,{children:"getAccessToken"})," with an organization ID) to request an organization token for a specific organization."]}),(0,t.jsxs)(n.p,{children:["For details on each SDK, see ",(0,t.jsx)(n.a,{href:"/quick-starts",children:"Quick starts"}),"."]})]}),(0,t.jsxs)(d.A,{value:"oauth-client",label:"OAuth 2.0 / OIDC client library",children:[(0,t.jsx)(n.p,{children:"When configuring your OAuth 2.0 client or initializing the authorization code flow, ensure you include the following parameters:"}),(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"resource"}),": Set to ",(0,t.jsx)(n.code,{children:"urn:logto:resource:organizations"})," to indicate you want an organization token."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"scope"}),": Include the predefined organization scope (",(0,t.jsx)(n.code,{children:"urn:logto:scope:organizations"}),"), ",(0,t.jsx)(n.code,{children:"offline_access"})," (to obtain refresh tokens), and any specific organization permissions you need (e.g., ",(0,t.jsx)(n.code,{children:"invite:member"}),", ",(0,t.jsx)(n.code,{children:"manage:billing"}),")."]}),"\n"]}),(0,t.jsxs)(n.p,{children:["Some libraries may not support the ",(0,t.jsx)(n.code,{children:"resource"})," parameter natively, but usually allow you to pass additional parameters in the authorization request. Check your library's documentation for details."]}),(0,t.jsx)(n.p,{children:"Here's a non-normative example of how the authorization request might look:"}),(0,t.jsx)(a.A,{scope:"urn:logto:scope:organizations invite:member manage:billing",resource:"urn:logto:resource:organizations"}),(0,t.jsxs)(n.p,{children:["Once the user is authenticated, you will receive an authorization code. Use this code by making a POST request to Logto's ",(0,t.jsx)(n.code,{children:"/oidc/token"})," endpoint."]}),(0,t.jsx)(n.p,{children:"Here's a non-normative example of the token request:"}),(0,t.jsx)(c.A,{grantType:"authorization_code"}),(0,t.jsx)(p.Ay,{}),(0,t.jsx)(n.p,{children:"You'll receive a refresh token that can be used to obtain organization tokens."}),(0,t.jsx)(u.Ay,{}),(0,t.jsxs)(n.p,{children:["Finally, use the refresh token to obtain an organization token by making a POST request to Logto's ",(0,t.jsx)(n.code,{children:"/oidc/token"})," endpoint. Remember to include:"]}),(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["The ",(0,t.jsx)(n.code,{children:"organization_id"})," parameter set to the desired organization ID."]}),"\n",(0,t.jsxs)(n.li,{children:["(Optional) The ",(0,t.jsx)(n.code,{children:"scope"})," parameter to further downscope the permissions you need (e.g., ",(0,t.jsx)(n.code,{children:"manage:members view:reports"}),")."]}),"\n"]}),(0,t.jsx)(n.p,{children:"Here's a non-normative example of how the token request might look:"}),(0,t.jsx)(c.A,{grantType:"refresh_token",organizationId:"your-organization-id"})]})]}),"\n",(0,t.jsx)(n.h4,{id:"client-credentials-flow",children:"Client credentials flow"}),"\n",(0,t.jsxs)(n.p,{children:["For machine-to-machine (M2M) scenarios, you can use the client credentials flow to obtain an access token for organization permissions. By making a POST request to Logto's ",(0,t.jsx)(n.code,{children:"/oidc/token"})," endpoint with organization parameters, you can request an organization token using your client ID and secret."]}),"\n",(0,t.jsx)(n.p,{children:"Here are the key parameters to include in the request:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"organization_id"}),": The ID of the organization you want the token for."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"scope"}),": The organization permissions you want to request (e.g., ",(0,t.jsx)(n.code,{children:"invite:member"}),", ",(0,t.jsx)(n.code,{children:"manage:billing"}),")."]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Here's a non-normative example of the token request using the client credentials grant type:"}),"\n",(0,t.jsx)(l.A,{organizationId:"your-organization-id",scope:"invite:member manage:billing"}),"\n",(0,t.jsx)(n.h3,{id:"validate-organization-tokens",children:"Validate organization tokens"}),"\n",(0,t.jsx)(n.p,{children:"Logto-issued organization tokens (JWTs) contain claims that your app/UI/backend can use to enforce organization-level access control."}),"\n",(0,t.jsx)(n.p,{children:"When your app receives an organization token, you should:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Verify the token signature (using Logto's JWKs)."}),"\n",(0,t.jsxs)(n.li,{children:["Confirm the token is not expired (",(0,t.jsx)(n.code,{children:"exp"})," claim)."]}),"\n",(0,t.jsxs)(n.li,{children:["Check that the ",(0,t.jsx)(n.code,{children:"iss"})," (issuer) matches your Logto endpoint."]}),"\n",(0,t.jsxs)(n.li,{children:["Ensure the ",(0,t.jsx)(n.code,{children:"aud"})," (audience) matches the formatted organization identifier (e.g., ",(0,t.jsx)(n.code,{children:"urn:logto:organization:{organization_id}"}),")."]}),"\n",(0,t.jsxs)(n.li,{children:["Split the ",(0,t.jsx)(n.code,{children:"scope"})," claim (space-separated) and check for required permissions."]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["For step-by-step and language-specific guides, see ",(0,t.jsx)(n.a,{href:"/authorization/validate-access-tokens",children:"How to validate access tokens"}),"."]}),"\n",(0,t.jsx)(n.h2,{id:"best-practices-and-security-tips",children:"Best practices and security tips"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Never rely solely on UI enforcement:"})," Always validate permissions on the backend for critical actions."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Use audience restrictions"}),": Always check the ",(0,t.jsx)(n.code,{children:"aud"})," claim to ensure the token is for the intended organization."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Keep permissions business-driven:"})," Use clear names that map to real actions; only grant what is needed for each organization role."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Separate API and non-API permissions"})," where possible (but both can be in a single role)."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Review organization template regularly"})," as your product evolves."]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"faqs",children:"FAQs"}),"\n",(0,t.jsxs)(o,{children:[(0,t.jsx)("summary",{children:(0,t.jsx)(n.h3,{id:"can-i-mix-organization-and-non-organization-permissions-in-a-single-role",children:"Can I mix organization and non-organization permissions in a single role?"})}),(0,t.jsx)(n.p,{children:"No, organization permissions (including organization-level API permissions) are defined by the organization template and cannot be mixed with global API permissions. However, you can create roles that include both organization permissions and organization-level API permissions."})]}),"\n",(0,t.jsxs)(o,{children:[(0,t.jsx)("summary",{children:(0,t.jsx)(n.h3,{id:"where-should-i-enforce-non-api-permissions",children:"Where should I enforce non-API permissions?"})}),(0,t.jsx)(n.p,{children:"Check non-API permissions both in the UI (for feature gating) and in your server-side logic for sensitive actions."})]}),"\n",(0,t.jsx)(n.h2,{id:"further-reading",children:"Further reading"}),"\n",(0,t.jsx)(g,{href:"/authorization/validate-access-tokens",children:"How to validate access tokens"}),"\n",(0,t.jsx)(g,{href:"/developers/custom-token-claims",children:"Customizing token claims"}),"\n",(0,t.jsx)(g,{href:"/use-cases/multi-tenancy/build-multi-tenant-saas-application",children:(0,t.jsx)(n.p,{children:"Use case: Build a multi-tenant SaaS application"})})]})}function z(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(j,{...e})}):j(e)}function b(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},39088:(e,n,i)=>{i.d(n,{A:()=>s});var o=i(80173),t=i(25105);const s=e=>{let{resource:n,scope:i}=e;return(0,t.jsx)(o.A,{language:"http",children:`GET /oidc/auth?response_type=code\n&client_id=your-client-id\n&redirect_uri=https://your-app.com/callback\n&scope=openid profile offline_access ${i}\n&resource=${n}\n&code_challenge=abc123\n&code_challenge_method=S256\n&state=xyz\nHTTP/1.1\nHost: your.logto.endpoint\n`})}},78506:(e,n,i)=>{i.d(n,{A:()=>s});var o=i(80173),t=i(25105);const s=e=>{let{resource:n,organizationId:i,scope:s}=e;return(0,t.jsxs)(o.A,{language:"http",children:["POST /oidc/token HTTP/1.1\nHost: your.logto.endpoint\nContent-Type: application/x-www-form-urlencoded\nAuthorization: Basic base64(client_id:client_secret)\n\ngrant_type=client_credentials\n",n&&`&resource=${n}\n`,i&&`&organization_id=${i}\n`,`&scope=${s}\n`]})}},42372:(e,n,i)=>{i.d(n,{A:()=>s});var o=i(80173),t=i(25105);const s=e=>{let{grantType:n,resource:i,organizationId:s}=e;const r=[`grant_type=${n}`,"authorization_code"===n&&"code=authorization-code-received","authorization_code"===n&&"redirect_uri=https://your-app.com/callback","refresh_token"===n&&"refresh_token=your-refresh-token",i&&`resource=${i}`,s&&`organization_id=${s}`].filter(Boolean);return(0,t.jsx)(o.A,{language:"http",children:`POST /oidc/token HTTP/1.1\nHost: your.logto.endpoint\nContent-Type: application/x-www-form-urlencoded\nAuthorization: Basic base64(client_id:client_secret)\n\n${r.join("\n&")}`})}},38552:(e,n,i)=>{i.d(n,{A:()=>r});i(58101);var o=i(13526);const t={tabItem:"tabItem_dgSZ"};var s=i(25105);function r(e){let{children:n,hidden:i,className:r}=e;return(0,s.jsx)("div",{role:"tabpanel",className:(0,o.A)(t.tabItem,r),hidden:i,children:n})}},22002:(e,n,i)=>{i.d(n,{A:()=>v});var o=i(58101),t=i(13526),s=i(60755),r=i(55234),a=i(6635),l=i(4100),c=i(35661),d=i(42752);function h(e){return o.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,o.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function u(e){const{values:n,children:i}=e;return(0,o.useMemo)((()=>{const e=n??function(e){return h(e).map((e=>{let{props:{value:n,label:i,attributes:o,default:t}}=e;return{value:n,label:i,attributes:o,default:t}}))}(i);return function(e){const n=(0,c.XI)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,i])}function p(e){let{value:n,tabValues:i}=e;return i.some((e=>e.value===n))}function g(e){let{queryString:n=!1,groupId:i}=e;const t=(0,r.W6)(),s=function(e){let{queryString:n=!1,groupId:i}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!i)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return i??null}({queryString:n,groupId:i});return[(0,l.aZ)(s),(0,o.useCallback)((e=>{if(!s)return;const n=new URLSearchParams(t.location.search);n.set(s,e),t.replace({...t.location,search:n.toString()})}),[s,t])]}function m(e){const{defaultValue:n,queryString:i=!1,groupId:t}=e,s=u(e),[r,l]=(0,o.useState)((()=>function(e){let{defaultValue:n,tabValues:i}=e;if(0===i.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!p({value:n,tabValues:i}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${i.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const o=i.find((e=>e.default))??i[0];if(!o)throw new Error("Unexpected error: 0 tabValues");return o.value}({defaultValue:n,tabValues:s}))),[c,h]=g({queryString:i,groupId:t}),[m,x]=function(e){let{groupId:n}=e;const i=function(e){return e?`docusaurus.tab.${e}`:null}(n),[t,s]=(0,d.Dv)(i);return[t,(0,o.useCallback)((e=>{i&&s.set(e)}),[i,s])]}({groupId:t}),f=(()=>{const e=c??m;return p({value:e,tabValues:s})?e:null})();(0,a.A)((()=>{f&&l(f)}),[f]);return{selectedValue:r,selectValue:(0,o.useCallback)((e=>{if(!p({value:e,tabValues:s}))throw new Error(`Can't select invalid tab value=${e}`);l(e),h(e),x(e)}),[h,x,s]),tabValues:s}}var x=i(21929);const f={tabList:"tabList_osvQ",tabItem:"tabItem_dc4O"};var j=i(25105);function z(e){let{className:n,block:i,selectedValue:o,selectValue:r,tabValues:a}=e;const l=[],{blockElementScrollPositionUntilNextRender:c}=(0,s.a_)(),d=e=>{const n=e.currentTarget,i=l.indexOf(n),t=a[i].value;t!==o&&(c(n),r(t))},h=e=>{let n=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const i=l.indexOf(e.currentTarget)+1;n=l[i]??l[0];break}case"ArrowLeft":{const i=l.indexOf(e.currentTarget)-1;n=l[i]??l[l.length-1];break}}n?.focus()};return(0,j.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,t.A)("tabs",{"tabs--block":i},n),children:a.map((e=>{let{value:n,label:i,attributes:s}=e;return(0,j.jsx)("li",{role:"tab",tabIndex:o===n?0:-1,"aria-selected":o===n,ref:e=>{l.push(e)},onKeyDown:h,onClick:d,...s,className:(0,t.A)("tabs__item",f.tabItem,s?.className,{"tabs__item--active":o===n}),children:i??n},n)}))})}function b(e){let{lazy:n,children:i,selectedValue:s}=e;const r=(Array.isArray(i)?i:[i]).filter(Boolean);if(n){const e=r.find((e=>e.props.value===s));return e?(0,o.cloneElement)(e,{className:(0,t.A)("margin-top--md",e.props.className)}):null}return(0,j.jsx)("div",{className:"margin-top--md",children:r.map(((e,n)=>(0,o.cloneElement)(e,{key:n,hidden:e.props.value!==s})))})}function k(e){const n=m(e);return(0,j.jsxs)("div",{className:(0,t.A)("tabs-container",f.tabList),children:[(0,j.jsx)(z,{...n,...e}),(0,j.jsx)(b,{...n,...e})]})}function v(e){const n=(0,x.A)();return(0,j.jsx)(k,{...e,children:h(e.children)},String(n))}},55138:(e,n,i)=>{i.d(n,{A:()=>m});var o=i(28259),t=i(6097),s=i(58574),r=i(9484),a=i(76566),l=i(26346),c=i(17867),d=i(17510),h=i(13526),u=i(72355);const p={codeBlockContent:"codeBlockContent_m3Ux",codeBlockTitle:"codeBlockTitle_P25_",codeBlock:"codeBlock_qGQc",codeBlockStandalone:"codeBlockStandalone_zC50",codeBlockLines:"codeBlockLines_p187",codeBlockLinesWithNumbering:"codeBlockLinesWithNumbering_OFgW",buttonGroup:"buttonGroup_6DOT"};var g=i(25105);function m(e){let{children:n,className:i="",metastring:m,title:x,showLineNumbers:f,language:j}=e;const{prism:{defaultLanguage:z,magicComments:b}}=(0,o.p)(),k=function(e){return e?.toLowerCase()}(j??(0,s.Op)(i)??z),v=(0,t.A)(),w=(0,r.f)(),y=(0,s.wt)(m)||x,{lineClassNames:A,code:I}=(0,s.Li)(n,{metastring:m,language:k,magicComments:b}),T=f??(0,s._u)(m);return(0,g.jsxs)(a.A,{as:"div",className:(0,h.A)(i,k&&!i.includes(`language-${k}`)&&`language-${k}`),children:[y&&(0,g.jsx)("div",{className:p.codeBlockTitle,children:y}),(0,g.jsxs)("div",{className:p.codeBlockContent,children:[(0,g.jsx)(u.f4,{theme:v,code:I,language:k??"text",children:e=>{let{className:n,tokens:i,getLineProps:o,getTokenProps:t}=e;return(0,g.jsx)("pre",{ref:w.codeBlockRef,tabIndex:0,className:(0,h.A)(n,p.codeBlock,"thin-scrollbar"),children:(0,g.jsx)("code",{className:(0,h.A)(p.codeBlockLines,T&&p.codeBlockLinesWithNumbering),children:i.map(((e,n)=>(0,g.jsx)(c.A,{line:e,getLineProps:o,getTokenProps:t,classNames:A[n],showLineNumbers:T},n)))})})}}),(0,g.jsxs)("div",{className:p.buttonGroup,children:[(w.isEnabled||w.isCodeScrollable)&&(0,g.jsx)(d.A,{className:p.codeButton,isEnabled:w.isEnabled,onClick:()=>{w.toggle()}}),(0,g.jsx)(l.A,{className:p.codeButton,code:I})]})]})]})}},93855:(e,n,i)=>{i.d(n,{A:()=>o});const o=i.p+"assets/images/rbac-organization-permissions-3302be06221b4399f73ddceac8ca17e3.png"}}]);