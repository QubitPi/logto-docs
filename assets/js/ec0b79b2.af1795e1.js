"use strict";(self.webpackChunk_logto_docs=self.webpackChunk_logto_docs||[]).push([[7045],{50211:(e,n,t)=>{t.d(n,{Ay:()=>z,RM:()=>I});var r=t(25105),i=t(79621),o=t(97551),s=t(2920),a=t(17975),c=t(24685);const l=t.p+"assets/images/guide-focus-8b3e94dddfb8a3c19b5bdd8a343fc29f.png";var d=t(33435);function u(e){const n={a:"a",h2:"h2",h3:"h3",li:"li",p:"p",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h2,{id:"before-you-start",children:"Before you start"}),"\n",(0,r.jsxs)(n.p,{children:["Your client applications need to obtain access tokens from Logto. If you haven't set up client integration yet, check out our ",(0,r.jsx)(n.a,{href:"/quick-starts",children:"Quick starts"})," for React, Vue, Angular, or other client frameworks, or see our ",(0,r.jsx)(n.a,{href:"/quick-starts/m2m",children:"Machine-to-machine guide"})," for server-to-server access."]}),"\n",(0,r.jsxs)(n.p,{children:["This guide focuses on the ",(0,r.jsx)(n.strong,{children:"server-side validation"})," of those tokens in your ",(0,d.My)(e.framework)," application."]}),"\n",(0,r.jsx)("img",{src:l,alt:"A figure showing the focus of this guide",style:{width:"100%",maxWidth:"480px",margin:"20px auto"}}),"\n",(0,r.jsx)(n.h3,{id:"what-you-will-learn",children:"What you will learn"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"JWT validation:"})," Learn to validate access tokens and extract authentication information"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Middleware implementation:"})," Create reusable middleware for API protection"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Permission models:"})," Understand and implement different authorization patterns:","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Global API resources for application-wide endpoints"}),"\n",(0,r.jsx)(n.li,{children:"Organization permissions for tenant-specific feature control"}),"\n",(0,r.jsx)(n.li,{children:"Organization-level API resources for multi-tenant data access"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"RBAC integration:"})," Enforce role-based permissions and scopes in your API endpoints"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Latest stable version of ",(0,d.Id)(e.framework)," installed"]}),"\n",(0,r.jsxs)(n.li,{children:["Basic understanding of ",(0,d.My)(e.framework)," and web API development"]}),"\n",(0,r.jsxs)(n.li,{children:["A Logto application configured (see ",(0,r.jsx)(n.a,{href:"/quick-starts",children:"Quick starts"})," if needed)"]}),"\n"]})]})}function p(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(u,{...e})}):u(e)}function h(e){const n={h2:"h2",p:"p",...(0,i.R)(),...e.components},{Url:t}=n;return t||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Url",!0),(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h2,{id:"further-reading",children:"Further reading"}),"\n",(0,r.jsx)(t,{href:"/use-cases/authorization/rbac-in-practice",children:(0,r.jsx)(n.p,{children:"RBAC in practice: Implementing secure authorization for your application"})}),"\n",(0,r.jsx)(t,{href:"/use-cases/multi-tenancy/build-multi-tenant-saas-application",children:(0,r.jsx)(n.p,{children:"Build a multi-tenant SaaS application: A complete guide from design to implementation"})})]})}function g(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}var x=t(46643),m=t(1242),j=t(93855),f=t(38552),v=t(22002);function y(e){const n={a:"a",h2:"h2",li:"li",p:"p",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h2,{id:"permission-models-overview",children:"Permission models overview"}),"\n",(0,r.jsxs)(n.p,{children:["Before implementing protection, choose the permission model that fits your application architecture. This aligns with Logto's three main ",(0,r.jsx)(n.a,{href:"/authorization#authorization-scenarios",children:"authorization scenarios"}),":"]}),"\n",(0,r.jsxs)(v.A,{groupId:"permission-models",children:[(0,r.jsxs)(f.A,{value:"global-api-resources",label:"Global API resources",children:[(0,r.jsx)("img",{src:x.A,alt:"Global API resources RBAC",style:{maxWidth:"100%"}}),(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Use case:"})," Protect API resources shared across your entire application (not organization-specific)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Token type:"})," Access token with global audience"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Examples:"})," Public APIs, core product services, admin endpoints"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Best for:"})," SaaS products with APIs used by all customers, microservices without tenant isolation"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Learn more:"})," ",(0,r.jsx)(n.a,{href:"/authorization/global-api-resources",children:"Protect global API resources"})]}),"\n"]})]}),(0,r.jsxs)(f.A,{value:"organization-permissions",label:"Organization (non-API) permissions",children:[(0,r.jsx)("img",{src:j.A,alt:"Organization permissions RBAC",style:{maxWidth:"800px",width:"100%"}}),(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Use case:"})," Control organization-specific actions, UI features, or business logic (not APIs)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Token type:"})," Organization token with organization-specific audience"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Examples:"})," Feature gating, dashboard permissions, member invitation controls"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Best for:"})," Multi-tenant SaaS with organization-specific features and workflows"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Learn more:"})," ",(0,r.jsx)(n.a,{href:"/authorization/organization-permissions",children:"Protect organization (non-API) permissions"})]}),"\n"]})]}),(0,r.jsxs)(f.A,{value:"organization-level-api-resources",label:"Organization-level API resources",children:[(0,r.jsx)("img",{src:m.A,alt:"Organization-level API resources RBAC",style:{width:"100%"}}),(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Use case:"})," Protect API resources accessible within a specific organization context"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Token type:"})," Organization token with API resource audience + organization context"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Examples:"})," Multi-tenant APIs, organization-scoped data endpoints, tenant-specific microservices"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Best for:"})," Multi-tenant SaaS where API data is organization-scoped"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Learn more:"})," ",(0,r.jsx)(n.a,{href:"/authorization/organization-level-api-resources",children:"Protect organization-level API resources"})]}),"\n"]})]})]}),"\n",(0,r.jsx)("br",{}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"\ud83d\udca1 Choose your model before proceeding"})," - the implementation will reference your chosen approach throughout this guide."]})]})}function b(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(y,{...e})}):y(e)}function w(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h2,{id:"quick-preparation-steps",children:"Quick preparation steps"}),"\n",(0,r.jsx)(n.h3,{id:"configure-logto-resources-permissions",children:"Configure Logto resources & permissions"}),"\n",(0,r.jsxs)(v.A,{groupId:"permission-models",children:[(0,r.jsx)(f.A,{value:"global-api-resources",label:"Global API resources",children:(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Create API resource:"})," Go to ",(0,r.jsx)(n.a,{href:"https://cloud.logto.io/api-resources",children:"Console \u2192 API resources"})," and register your API (e.g., ",(0,r.jsx)(n.code,{children:"https://api.yourapp.com"}),")"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Define permissions:"})," Add scopes like ",(0,r.jsx)(n.code,{children:"read:products"}),", ",(0,r.jsx)(n.code,{children:"write:orders"})," \u2013 see ",(0,r.jsx)(n.a,{href:"/authorization/role-based-access-control#define-api-resources-with-permissions",children:"Define API resources with permissions"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Create global roles:"})," Go to ",(0,r.jsx)(n.a,{href:"https://cloud.logto.io/roles",children:"Console \u2192 Roles"})," and create roles that include your API permissions \u2013 see ",(0,r.jsx)(n.a,{href:"/authorization/role-based-access-control#configure-global-roles",children:"Configure global roles"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Assign roles:"})," Assign roles to users or M2M applications that need API access"]}),"\n"]})}),(0,r.jsx)(f.A,{value:"organization-permissions",label:"Organization (non-API) permissions",children:(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Define organization permissions:"})," Create non-API organization permissions like ",(0,r.jsx)(n.code,{children:"invite:member"}),", ",(0,r.jsx)(n.code,{children:"manage:billing"})," in the organization template"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Set up organization roles:"})," Configure the organization template with organization-specific roles and assign permissions to them"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Assign organization roles:"})," Assign users to organization roles within each organization context"]}),"\n"]})}),(0,r.jsx)(f.A,{value:"organization-level-api-resources",label:"Organization-level API resources",children:(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Create API resource:"})," Register your API resource as above, but it will be used in organization context"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Define permissions:"})," Add scopes like ",(0,r.jsx)(n.code,{children:"read:data"}),", ",(0,r.jsx)(n.code,{children:"write:settings"})," that are scoped to organization context"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Configure organization template:"})," Set up organization roles that include your API resource permissions"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Assign organization roles:"})," Assign users or M2M applications to organization roles that include API permissions"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Multi-tenant setup:"})," Ensure your API can handle organization-scoped data and validation"]}),"\n"]})})]}),"\n",(0,r.jsx)(n.admonition,{title:"New to RBAC?",type:"tip",children:(0,r.jsxs)(n.p,{children:["Start with our ",(0,r.jsx)(n.a,{href:"/authorization/role-based-access-control",children:"Role-based access control guide"})," for step-by-step setup instructions."]})}),"\n",(0,r.jsx)(n.h3,{id:"update-your-client-application",children:"Update your client application"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Request appropriate scopes in your client:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["User authentication: ",(0,r.jsx)(n.a,{href:"/quick-starts",children:"Update your app \u2192"})," to request your API scopes and/or organization context"]}),"\n",(0,r.jsxs)(n.li,{children:["Machine-to-machine: ",(0,r.jsx)(n.a,{href:"/quick-starts/m2m",children:"Configure M2M scopes \u2192"})," for server-to-server access"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"The process usually involves updating your client configuration to include one or more of the following:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"scope"})," parameter in OAuth flows"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"resource"})," parameter for API resource access"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"organization_id"})," for organization context"]}),"\n"]}),"\n",(0,r.jsx)(n.admonition,{title:"Before you code",type:"tip",children:(0,r.jsx)(n.p,{children:"Make sure the user or M2M app you are testing has been assigned proper roles or organization roles that include the necessary permissions for your API."})})]})}function A(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(w,{...e})}):w(e)}const I=[{value:"Before you start",id:"before-you-start",level:2},{value:"What you will learn",id:"what-you-will-learn",level:3},{value:"Prerequisites",id:"prerequisites",level:3},{value:"Permission models overview",id:"permission-models-overview",level:2},{value:"Quick preparation steps",id:"quick-preparation-steps",level:2},{value:"Configure Logto resources &amp; permissions",id:"configure-logto-resources-permissions",level:3},{value:"Update your client application",id:"update-your-client-application",level:3},{value:"Initialize your API project",id:"initialize-your-api-project",level:2},{value:"Initialize constants and utilities",id:"initialize-constants-and-utilities",level:2},...o.RM,{value:"Retrieve info about your Logto tenant",id:"retrieve-info-about-your-logto-tenant",level:2},...s.RM,{value:"Validate the token and permissions",id:"validate-the-token-and-permissions",level:2},...c.RM,{value:"Add the validation logic",id:"add-the-validation-logic",level:3},{value:"Apply the middleware to your API",id:"apply-the-middleware-to-your-api",level:2},{value:"Test your protected API",id:"test-your-protected-api",level:2},...a.RM,{value:"Further reading",id:"further-reading",level:2}];function k(e){const n={h2:"h2",h3:"h3",p:"p",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(p,{framework:e.framework}),"\n",(0,r.jsx)(b,{}),"\n",(0,r.jsx)(A,{}),"\n",(0,r.jsx)(n.h2,{id:"initialize-your-api-project",children:"Initialize your API project"}),"\n","\n",e.initializeProject,"\n",(0,r.jsx)(n.h2,{id:"initialize-constants-and-utilities",children:"Initialize constants and utilities"}),"\n",(0,r.jsx)(o.Ay,{}),"\n","\n",e.languageInit,"\n",(0,r.jsx)(n.h2,{id:"retrieve-info-about-your-logto-tenant",children:"Retrieve info about your Logto tenant"}),"\n",(0,r.jsx)(s.Ay,{}),"\n",(0,r.jsx)(n.h2,{id:"validate-the-token-and-permissions",children:"Validate the token and permissions"}),"\n",(0,r.jsx)(c.Ay,{}),"\n",(0,r.jsx)(n.h3,{id:"add-the-validation-logic",children:"Add the validation logic"}),"\n","\n",e.addValidationLogic,"\n",(0,r.jsx)(n.h2,{id:"apply-the-middleware-to-your-api",children:"Apply the middleware to your API"}),"\n",(0,r.jsx)(n.p,{children:"Now, apply the middleware to your protected API routes."}),"\n","\n",e.applyMiddleware,"\n",(0,r.jsx)(n.h2,{id:"test-your-protected-api",children:"Test your protected API"}),"\n",(0,r.jsx)(a.Ay,{}),"\n",(0,r.jsx)(g,{})]})}function z(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(k,{...e})}):k(e)}},76297:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>g,contentTitle:()=>h,default:()=>j,frontMatter:()=>p,metadata:()=>r,toc:()=>x});const r=JSON.parse('{"id":"api-protection/java/vertx-web/README","title":"Protect your Vert.x Web API with RBAC and JWT validation","description":"This guide will help you implement authorization to secure your Vert.x Web APIs using Role-based access control (RBAC) and JSON Web Tokens (JWTs) issued by Logto.","source":"@site/docs/api-protection/java/vertx-web/README.mdx","sourceDirName":"api-protection/java/vertx-web","slug":"/api-protection/java/vertx-web/","permalink":"/api-protection/java/vertx-web/","draft":false,"unlisted":false,"editUrl":"https://github.com/logto-io/docs/tree/master/docs/api-protection/java/vertx-web/README.mdx","tags":[],"version":"current","frontMatter":{"sidebar_label":"Vert.x Web"},"sidebar":"apiProtectionSidebar","previous":{"title":"Spring Boot","permalink":"/api-protection/java/spring-boot/"},"next":{"title":"Protect your Node.js API with RBAC and JWT validation","permalink":"/api-protection/nodejs/"}}');var i=t(25105),o=t(79621),s=t(19473),a=t(10149),c=t(41333),l=t(50211);function d(e){const n={admonition:"admonition",code:"code",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.p,{children:"To initialize a new Vert.x Web project, you can create a Maven project manually:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-xml",metastring:'title="pom.xml"',children:'<?xml version="1.0" encoding="UTF-8"?>\n<project xmlns="http://maven.apache.org/POM/4.0.0"\n         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"\n         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0\n         http://maven.apache.org/xsd/maven-4.0.0.xsd">\n    <modelVersion>4.0.0</modelVersion>\n\n    <groupId>com.example</groupId>\n    <artifactId>your-api-name</artifactId>\n    <version>1.0-SNAPSHOT</version>\n\n    <properties>\n        <maven.compiler.source>17</maven.compiler.source>\n        <maven.compiler.target>17</maven.compiler.target>\n        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n        <vertx.version>4.5.0</vertx.version>\n    </properties>\n\n    <dependencies>\n        <dependency>\n            <groupId>io.vertx</groupId>\n            <artifactId>vertx-web</artifactId>\n            <version>${vertx.version}</version>\n        </dependency>\n        <dependency>\n            <groupId>io.vertx</groupId>\n            <artifactId>vertx-auth-jwt</artifactId>\n            <version>${vertx.version}</version>\n        </dependency>\n        <dependency>\n            <groupId>io.vertx</groupId>\n            <artifactId>vertx-web-client</artifactId>\n            <version>${vertx.version}</version>\n        </dependency>\n    </dependencies>\n</project>\n'})}),"\n",(0,i.jsx)(n.p,{children:"Create a basic Vert.x Web server:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",metastring:'title="src/main/java/com/example/MainVerticle.java"',children:'package com.example;\n\nimport io.vertx.core.AbstractVerticle;\nimport io.vertx.core.Promise;\nimport io.vertx.ext.web.Router;\nimport io.vertx.ext.web.handler.BodyHandler;\n\npublic class MainVerticle extends AbstractVerticle {\n\n    @Override\n    public void start(Promise<Void> startPromise) throws Exception {\n        Router router = Router.router(vertx);\n\n        router.route().handler(BodyHandler.create());\n\n        router.get("/hello").handler(ctx -> {\n            ctx.response()\n                .putHeader("content-type", "text/plain")\n                .end("Hello from Vert.x Web!");\n        });\n\n        vertx.createHttpServer()\n            .requestHandler(router)\n            .listen(3000, http -> {\n                if (http.succeeded()) {\n                    startPromise.complete();\n                    System.out.println("HTTP server started on port 3000");\n                } else {\n                    startPromise.fail(http.cause());\n                }\n            });\n    }\n}\n'})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",metastring:'title="src/main/java/com/example/Application.java"',children:"package com.example;\n\nimport io.vertx.core.Vertx;\n\npublic class Application {\n    public static void main(String[] args) {\n        Vertx vertx = Vertx.vertx();\n        vertx.deployVerticle(new MainVerticle());\n    }\n}\n"})}),"\n",(0,i.jsx)(n.admonition,{type:"note",children:(0,i.jsx)(n.p,{children:"Refer to the Vert.x Web documentation for more details on how to set up routes, handlers, and other features."})})]})}function u(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}const p={sidebar_label:"Vert.x Web"},h="Protect your Vert.x Web API with RBAC and JWT validation",g={},x=[...l.RM];function m(e){const n={a:"a",h1:"h1",header:"header",p:"p",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"protect-your-vertx-web-api-with-rbac-and-jwt-validation",children:"Protect your Vert.x Web API with RBAC and JWT validation"})}),"\n",(0,i.jsxs)(n.p,{children:["This guide will help you implement authorization to secure your Vert.x Web APIs using ",(0,i.jsx)(n.a,{href:"/authorization/role-based-access-control",children:"Role-based access control (RBAC)"})," and ",(0,i.jsx)(n.a,{href:"https://auth.wiki/jwt",children:"JSON Web Tokens (JWTs)"})," issued by Logto."]}),"\n","\n",(0,i.jsx)(l.Ay,{framework:"vertx-web",initializeProject:(0,i.jsx)(u,{}),languageInit:(0,i.jsx)(a.Ay,{}),applyMiddleware:(0,i.jsx)(c.Ay,{}),addValidationLogic:(0,i.jsx)(s.Ay,{framework:"vertx-web"})})]})}function j(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(m,{...e})}):m(e)}},97551:(e,n,t)=>{t.d(n,{Ay:()=>a,RM:()=>o});var r=t(25105),i=t(79621);const o=[];function s(e){const n={code:"code",p:"p",...(0,i.R)(),...e.components};return(0,r.jsxs)(n.p,{children:["Define necessary constants and utilities in your code to handle token extraction and validation. A valid request must include an ",(0,r.jsx)(n.code,{children:"Authorization"})," header in the form ",(0,r.jsx)(n.code,{children:"Bearer <access_token>"}),"."]})}function a(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(s,{...e})}):s(e)}},2920:(e,n,t)=>{t.d(n,{Ay:()=>a,RM:()=>o});var r=t(25105),i=t(79621);const o=[{value:"Fetch from OpenID Connect discovery endpoint",id:"fetch-from-openid-connect-discovery-endpoint",level:3},{value:"Hardcode in your code (not recommended)",id:"hardcode-in-your-code-not-recommended",level:3}];function s(e){const n={code:"code",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.p,{children:"You\u2019ll need the following values to validate Logto-issued tokens:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"JSON Web Key Set (JWKS) URI: The URL to Logto\u2019s public keys, used to verify JWT signatures."}),"\n",(0,r.jsx)(n.li,{children:"Issuer: The expected issuer value (Logto\u2019s OIDC URL)."}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"First, find your Logto tenant\u2019s endpoint. You can find it in various places:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["In the Logto Console, under ",(0,r.jsx)(n.strong,{children:"Settings"})," \u2192 ",(0,r.jsx)(n.strong,{children:"Domains"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:["In any application settings where you configured in Logto, ",(0,r.jsx)(n.strong,{children:"Settings"})," \u2192 ",(0,r.jsx)(n.strong,{children:"Endpoints & Credentials"}),"."]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"fetch-from-openid-connect-discovery-endpoint",children:"Fetch from OpenID Connect discovery endpoint"}),"\n",(0,r.jsx)(n.p,{children:"These values can be retrieved from Logto\u2019s OpenID Connect discovery endpoint:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"https://<your-logto-endpoint>/oidc/.well-known/openid-configuration\n"})}),"\n",(0,r.jsx)(n.p,{children:"Here\u2019s an example response (other fields omitted for brevity):"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "jwks_uri": "https://your-tenant.logto.app/oidc/jwks",\n  "issuer": "https://your-tenant.logto.app/oidc"\n}\n'})}),"\n",(0,r.jsx)(n.h3,{id:"hardcode-in-your-code-not-recommended",children:"Hardcode in your code (not recommended)"}),"\n",(0,r.jsx)(n.p,{children:"Since Logto doesn't allow customizing the JWKS URI or issuer, you can hardcode these values in your code. However, this is not recommended for production applications as it may increase maintenance overhead if some configuration changes in the future."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["JWKS URI: ",(0,r.jsx)(n.code,{children:"https://<your-logto-endpoint>/oidc/jwks"})]}),"\n",(0,r.jsxs)(n.li,{children:["Issuer: ",(0,r.jsx)(n.code,{children:"https://<your-logto-endpoint>/oidc"})]}),"\n"]})]})}function a(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(s,{...e})}):s(e)}},17975:(e,n,t)=>{t.d(n,{Ay:()=>l,RM:()=>a});var r=t(25105),i=t(79621),o=t(38552),s=t(22002);const a=[{value:"Get access tokens",id:"get-access-tokens",level:3},{value:"Test protected endpoints",id:"test-protected-endpoints",level:3},{value:"Permission model-specific testing",id:"permission-model-specific-testing",level:3}];function c(e){const n={a:"a",admonition:"admonition",code:"code",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components},{Details:t}=n;return t||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h3,{id:"get-access-tokens",children:"Get access tokens"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"From your client application:"}),"\nIf you've set up a client integration, your app can obtain tokens automatically. Extract the access token and use it in API requests."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"For testing with curl/Postman:"})}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"User tokens:"})," Use your client app's developer tools to copy the access token from localStorage or the network tab"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Machine-to-machine tokens:"})," Use the client credentials flow. Here's a non-normative example using curl:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'curl -X POST https://your-tenant.logto.app/oidc/token \\\n  -H "Content-Type: application/x-www-form-urlencoded" \\\n  -d "grant_type=client_credentials" \\\n  -d "client_id=your-m2m-client-id" \\\n  -d "client_secret=your-m2m-client-secret" \\\n  -d "resource=https://your-api-resource-indicator" \\\n  -d "scope=api:read api:write"\n'})}),"\n",(0,r.jsxs)(n.p,{children:["You may need to adjust the ",(0,r.jsx)(n.code,{children:"resource"})," and ",(0,r.jsx)(n.code,{children:"scope"})," parameters based on your API resource and permissions; an ",(0,r.jsx)(n.code,{children:"organization_id"})," parameter may also be required if your API is organization-scoped."]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.admonition,{type:"tip",children:(0,r.jsxs)(n.p,{children:["Need to inspect the token contents? Use our ",(0,r.jsx)(n.a,{href:"https://logto.io/jwt-decoder",children:"JWT decoder"})," to decode and verify your JWTs."]})}),"\n",(0,r.jsx)(n.h3,{id:"test-protected-endpoints",children:"Test protected endpoints"}),"\n",(0,r.jsxs)(t,{children:[(0,r.jsx)("summary",{children:(0,r.jsx)(n.strong,{children:"Valid token request"})}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'curl -H "Authorization: Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9..." \\\n  http://localhost:3000/api/protected\n'})}),(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Expected response:"})}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "auth": {\n    "sub": "user123",\n    "clientId": "app456",\n    "organizationId": "org789",\n    "scopes": ["api:read", "api:write"],\n    "audience": ["https://your-api-resource-indicator"]\n  }\n}\n'})})]}),"\n",(0,r.jsxs)(t,{children:[(0,r.jsx)("summary",{children:(0,r.jsx)(n.strong,{children:"Missing token"})}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"curl http://localhost:3000/api/protected\n"})}),(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Expected response (401):"})}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "error": "Authorization header is missing"\n}\n'})})]}),"\n",(0,r.jsxs)(t,{children:[(0,r.jsx)("summary",{children:(0,r.jsx)(n.strong,{children:"Invalid token"})}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'curl -H "Authorization: Bearer invalid-token" \\\n  http://localhost:3000/api/protected\n'})}),(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Expected response (401):"})}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "error": "Invalid token"\n}\n'})})]}),"\n",(0,r.jsx)(n.h3,{id:"permission-model-specific-testing",children:"Permission model-specific testing"}),"\n",(0,r.jsxs)(s.A,{groupId:"permission-models",children:[(0,r.jsxs)(o.A,{value:"global-api-resources",label:"Global API resources",children:[(0,r.jsx)(n.p,{children:"Test scenarios for APIs protected with global scopes:"}),(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Valid scopes:"})," Test with tokens that include your required API scopes (e.g., ",(0,r.jsx)(n.code,{children:"api:read"}),", ",(0,r.jsx)(n.code,{children:"api:write"}),")"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Missing scopes:"})," Expect ",(0,r.jsx)(n.strong,{children:"403 Forbidden"})," when token lacks required scopes"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Wrong audience:"})," Expect ",(0,r.jsx)(n.strong,{children:"403 Forbidden"})," when audience does not match the API resource"]}),"\n"]}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'# Token with missing scopes - expect 403\ncurl -H "Authorization: Bearer token-without-required-scopes" \\\n  http://localhost:3000/api/protected\n'})})]}),(0,r.jsxs)(o.A,{value:"organization-permissions",label:"Organization (non-API) permissions",children:[(0,r.jsx)(n.p,{children:"Test scenarios for organization-specific access control:"}),(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Valid organization token:"})," Test with tokens that include correct organization context (organization ID and scopes)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Missing scopes:"})," Expect ",(0,r.jsx)(n.strong,{children:"403 Forbidden"})," when user doesn't have permissions for the requested action"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Wrong organization:"})," Expect ",(0,r.jsx)(n.strong,{children:"403 Forbidden"})," when audience does not match the organization context (",(0,r.jsx)(n.code,{children:"urn:logto:organization:<organization_id>"}),")"]}),"\n"]}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'# Token for wrong organization - expect 403\ncurl -H "Authorization: Bearer token-for-different-organization" \\\n  http://localhost:3000/api/protected\n'})})]}),(0,r.jsxs)(o.A,{value:"organization-level-api-resources",label:"Organization-level API resources",children:[(0,r.jsx)(n.p,{children:"Test scenarios combining API resource validation with organization context:"}),(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Valid organization + API scopes:"})," Test with tokens that have both organization context and required API scopes"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Missing API scopes:"})," Expect ",(0,r.jsx)(n.strong,{children:"403 Forbidden"})," when organization token lacks required API permissions"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Wrong organization:"})," Expect ",(0,r.jsx)(n.strong,{children:"403 Forbidden"})," when accessing API with token from different organization"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Wrong audience:"})," Expect ",(0,r.jsx)(n.strong,{children:"403 Forbidden"})," when audience does not match the organization-level API resource"]}),"\n"]}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'# Organization token without API scopes - expect 403\ncurl -H "Authorization: Bearer organization-token-without-api-scopes" \\\n  http://localhost:3000/api/protected\n'})})]})]})]})}function l(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},24685:(e,n,t)=>{t.d(n,{Ay:()=>l,RM:()=>a});var r=t(25105),i=t(79621),o=t(38552),s=t(22002);const a=[{value:"What to check for each permission model",id:"what-to-check-for-each-permission-model",level:3}];function c(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h3:"h3",li:"li",p:"p",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.p,{children:"After extracting the token and fetching the OIDC config, validate the following:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Signature:"})," JWT must be valid and signed by Logto (via JWKS)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Issuer:"})," Must match your Logto tenant\u2019s issuer."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Audience:"})," Must match the API\u2019s resource indicator registered in Logto, or the organization context if applicable."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Expiration:"})," Token must not be expired."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Permissions (scopes):"})," Token must include required scopes for your API/action. Scopes are space-separated strings in the ",(0,r.jsx)(n.code,{children:"scope"})," claim."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Organization context:"})," If protecting organization-level API resources, validate the ",(0,r.jsx)(n.code,{children:"organization_id"})," claim."]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["See ",(0,r.jsx)(n.a,{href:"https://auth.wiki/jwt",children:"JSON Web Token"})," to learn more about JWT structure and claims."]}),"\n",(0,r.jsx)(n.h3,{id:"what-to-check-for-each-permission-model",children:"What to check for each permission model"}),"\n",(0,r.jsx)(n.p,{children:"The claims and validation rules differ by permission model:"}),"\n",(0,r.jsxs)(s.A,{groupId:"permission-models",children:[(0,r.jsx)(o.A,{value:"global-api-resources",label:"Global API resources",children:(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsxs)(n.strong,{children:["Audience claim (",(0,r.jsx)(n.code,{children:"aud"}),"):"]})," API resource indicator"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsxs)(n.strong,{children:["Organization claim (",(0,r.jsx)(n.code,{children:"organization_id"}),"):"]})," ",(0,r.jsx)(n.em,{children:"Not present"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsxs)(n.strong,{children:["Scopes (permissions) to check (",(0,r.jsx)(n.code,{children:"scope"}),"):"]})," API resource permissions"]}),"\n"]})}),(0,r.jsx)(o.A,{value:"organization-permissions",label:"Organization (non-API) permissions",children:(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsxs)(n.strong,{children:["Audience claim (",(0,r.jsx)(n.code,{children:"aud"}),"):"]})," ",(0,r.jsx)(n.code,{children:"urn:logto:organization:<id>"})," (organization context is in ",(0,r.jsx)(n.code,{children:"aud"})," claim)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsxs)(n.strong,{children:["Organization claim (",(0,r.jsx)(n.code,{children:"organization_id"}),"):"]})," ",(0,r.jsx)(n.em,{children:"Not present"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsxs)(n.strong,{children:["Scopes (permissions) to check (",(0,r.jsx)(n.code,{children:"scope"}),"):"]})," Organization permissions"]}),"\n"]})}),(0,r.jsx)(o.A,{value:"organization-level-api-resources",label:"Organization-level API resources",children:(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsxs)(n.strong,{children:["Audience claim (",(0,r.jsx)(n.code,{children:"aud"}),"):"]})," API resource indicator"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsxs)(n.strong,{children:["Organization claim (",(0,r.jsx)(n.code,{children:"organization_id"}),"):"]})," Organization ID (must match request)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsxs)(n.strong,{children:["Scopes (permissions) to check (",(0,r.jsx)(n.code,{children:"scope"}),"):"]})," API resource permissions"]}),"\n"]})})]}),"\n",(0,r.jsx)("small",{children:(0,r.jsxs)(n.p,{children:["For non-API organization permissions, the organization context is represented by the ",(0,r.jsx)(n.code,{children:"aud"})," claim\n(e.g., ",(0,r.jsx)(n.code,{children:"urn:logto:organization:abc123"}),"). The ",(0,r.jsx)(n.code,{children:"organization_id"})," claim is only present for\norganization-level API resource tokens."]})}),"\n",(0,r.jsx)(n.admonition,{type:"tip",children:(0,r.jsx)(n.p,{children:"Always validate both permissions (scopes) and context (audience, organization) for secure multi-tenant APIs."})})]})}function l(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},19473:(e,n,t)=>{t.d(n,{Ay:()=>x,RM:()=>h});var r=t(25105),i=t(79621),o=t(33435),s=t(38552),a=t(22002);function c(e){const n={code:"code",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.p,{children:["Add to your ",(0,r.jsx)(n.code,{children:"pom.xml"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-xml",children:"<dependency>\n    <groupId>io.micronaut.security</groupId>\n    <artifactId>micronaut-security-jwt</artifactId>\n</dependency>\n<dependency>\n    <groupId>io.micronaut</groupId>\n    <artifactId>micronaut-http-server-netty</artifactId>\n</dependency>\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",metastring:'title="application.yml"',children:"micronaut:\n  security:\n    authentication: bearer\n    token:\n      jwt:\n        signatures:\n          jwks:\n            logto:\n              url: ${JWKS_URI:https://your-tenant.logto.app/oidc/jwks}\n        claims-validators:\n          issuer: ${JWT_ISSUER:https://your-tenant.logto.app/oidc}\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",metastring:'title="JwtClaimsValidator.java"',children:'import io.micronaut.security.token.Claims;\nimport io.micronaut.security.token.validator.TokenValidator;\nimport jakarta.inject.Singleton;\nimport org.reactivestreams.Publisher;\nimport reactor.core.publisher.Mono;\nimport java.util.Arrays;\nimport java.util.List;\n\n@Singleton\npublic class JwtClaimsValidator implements TokenValidator {\n\n    @Override\n    public Publisher<Boolean> validateToken(String token, Claims claims) {\n        try {\n            verifyPayload(claims);\n            return Mono.just(true);\n        } catch (AuthorizationException e) {\n            // Micronaut will handle the status code appropriately\n            return Mono.just(false);\n        }\n    }\n\n    private void verifyPayload(Claims claims) {\n        // Issuer validation is handled automatically by Micronaut JWT configuration\n        // Implement your additional verification logic here based on permission model\n        // Use the helper methods below for claim extraction\n\n        // Example: throw new AuthorizationException("Insufficient permissions");\n    }\n\n    // Helper methods for Micronaut JWT\n    @SuppressWarnings("unchecked")\n    private List<String> extractAudiences(Claims claims) {\n        Object aud = claims.get("aud");\n        if (aud instanceof List) {\n            return (List<String>) aud;\n        } else if (aud instanceof String) {\n            return Arrays.asList((String) aud);\n        }\n        return List.of();\n    }\n\n    private String extractScopes(Claims claims) {\n        return (String) claims.get("scope");\n    }\n\n    private String extractOrganizationId(Claims claims) {\n        return (String) claims.get("organization_id");\n    }\n}\n'})})]})}function l(e){const n={code:"code",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.p,{children:["Add to your ",(0,r.jsx)(n.code,{children:"pom.xml"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-xml",children:"<dependency>\n    <groupId>io.quarkus</groupId>\n    <artifactId>quarkus-smallrye-jwt</artifactId>\n</dependency>\n<dependency>\n    <groupId>io.quarkus</groupId>\n    <artifactId>quarkus-resteasy-reactive</artifactId>\n</dependency>\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-properties",metastring:'title="application.properties"',children:"# JWT configuration\nmp.jwt.verify.publickey.location=${JWKS_URI:https://your-tenant.logto.app/oidc/jwks}\nmp.jwt.verify.issuer=${JWT_ISSUER:https://your-tenant.logto.app/oidc}\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",metastring:'title="JwtVerificationFilter.java"',children:'import org.eclipse.microprofile.jwt.JsonWebToken;\nimport jakarta.enterprise.context.ApplicationScoped;\nimport jakarta.inject.Inject;\nimport jakarta.ws.rs.container.ContainerRequestContext;\nimport jakarta.ws.rs.container.ContainerRequestFilter;\nimport jakarta.ws.rs.core.Response;\nimport jakarta.ws.rs.ext.Provider;\nimport java.util.ArrayList;\nimport java.util.List;\n\n@Provider\n@ApplicationScoped\npublic class JwtVerificationFilter implements ContainerRequestFilter {\n\n    @Inject\n    JsonWebToken jwt;\n\n    @Override\n    public void filter(ContainerRequestContext requestContext) {\n        if (requestContext.getUriInfo().getPath().startsWith("/api/protected")) {\n            try {\n                verifyPayload(jwt);\n                requestContext.setProperty("auth", jwt);\n            } catch (AuthorizationException e) {\n                requestContext.abortWith(\n                    Response.status(e.getStatusCode())\n                        .entity("{\\"error\\": \\"" + e.getMessage() + "\\"}")\n                        .build()\n                );\n            } catch (Exception e) {\n                requestContext.abortWith(\n                    Response.status(401)\n                        .entity("{\\"error\\": \\"Invalid token\\"}")\n                        .build()\n                );\n            }\n        }\n    }\n\n    private void verifyPayload(JsonWebToken jwt) {\n        // Issuer validation is handled automatically by Quarkus JWT extension\n        // Implement your additional verification logic here based on permission model\n        // Use the helper methods below for claim extraction\n    }\n\n    // Helper methods for Quarkus JWT\n    private List<String> extractAudiences(JsonWebToken jwt) {\n        return new ArrayList<>(jwt.getAudience());\n    }\n\n    private String extractScopes(JsonWebToken jwt) {\n        return jwt.getClaim("scope");\n    }\n\n    private String extractOrganizationId(JsonWebToken jwt) {\n        return jwt.getClaim("organization_id");\n    }\n}\n'})})]})}function d(e){const n={code:"code",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.p,{children:["Add to your ",(0,r.jsx)(n.code,{children:"pom.xml"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-xml",children:"<dependency>\n    <groupId>org.springframework.boot</groupId>\n    <artifactId>spring-boot-starter-security</artifactId>\n</dependency>\n<dependency>\n    <groupId>org.springframework.security</groupId>\n    <artifactId>spring-security-oauth2-resource-server</artifactId>\n</dependency>\n<dependency>\n    <groupId>org.springframework.security</groupId>\n    <artifactId>spring-security-oauth2-jose</artifactId>\n</dependency>\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",metastring:'title="JwtSecurityConfig.java"',children:'import org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.security.config.annotation.web.builders.HttpSecurity;\nimport org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;\nimport org.springframework.security.oauth2.jwt.JwtDecoder;\nimport org.springframework.security.oauth2.jwt.NimbusJwtDecoder;\nimport org.springframework.security.web.SecurityFilterChain;\n\n@Configuration\n@EnableWebSecurity\npublic class JwtSecurityConfig {\n\n    @Bean\n    public SecurityFilterChain filterChain(HttpSecurity http) throws Exception {\n        http\n            .authorizeHttpRequests(authz -> authz\n                .requestMatchers("/api/protected/**").authenticated()\n                .anyRequest().permitAll()\n            )\n            .oauth2ResourceServer(oauth2 -> oauth2\n                .jwt(jwt -> jwt.decoder(jwtDecoder()))\n            );\n        return http.build();\n    }\n\n    @Bean\n    public JwtDecoder jwtDecoder() {\n        // Remember to set these environment variables in your deployment\n        String jwksUri = System.getenv("JWKS_URI");\n        String issuer = System.getenv("JWT_ISSUER");\n\n        return NimbusJwtDecoder.withJwkSetUri(jwksUri)\n            .issuer(issuer)\n            .build();\n    }\n}\n'})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",metastring:'title="JwtValidator.java"',children:'import org.springframework.security.oauth2.jwt.Jwt;\nimport org.springframework.stereotype.Component;\nimport java.util.List;\n\n@Component\npublic class JwtValidator {\n\n    public void verifyPayload(Jwt jwt) {\n        // Issuer validation is handled automatically by Spring Security JWT decoder\n        // Implement your additional verification logic here based on permission model\n        // Use the helper methods below for claim extraction\n\n        // Example: throw new AuthorizationException("Insufficient permissions");\n        // The status code will be handled by Spring Security\'s exception handling\n    }\n\n    // Helper methods for Spring Boot JWT\n    private List<String> extractAudiences(Jwt jwt) {\n        return jwt.getAudience();\n    }\n\n    private String extractScopes(Jwt jwt) {\n        return jwt.getClaimAsString("scope");\n    }\n\n    private String extractOrganizationId(Jwt jwt) {\n        return jwt.getClaimAsString("organization_id");\n    }\n}\n'})})]})}function u(e){const n={code:"code",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.p,{children:["Add to your ",(0,r.jsx)(n.code,{children:"pom.xml"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-xml",children:"<dependency>\n    <groupId>io.vertx</groupId>\n    <artifactId>vertx-web</artifactId>\n</dependency>\n<dependency>\n    <groupId>io.vertx</groupId>\n    <artifactId>vertx-auth-jwt</artifactId>\n</dependency>\n<dependency>\n    <groupId>io.vertx</groupId>\n    <artifactId>vertx-web-client</artifactId>\n</dependency>\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",metastring:'title="JwtAuthHandler.java"',children:'import io.vertx.core.Future;\nimport io.vertx.core.Handler;\nimport io.vertx.core.Vertx;\nimport io.vertx.core.json.JsonArray;\nimport io.vertx.core.json.JsonObject;\nimport io.vertx.ext.auth.jwt.JWTAuth;\nimport io.vertx.ext.auth.jwt.JWTAuthOptions;\nimport io.vertx.ext.web.RoutingContext;\nimport io.vertx.ext.web.client.WebClient;\nimport java.util.List;\nimport java.util.ArrayList;\n\npublic class JwtAuthHandler implements Handler<RoutingContext> {\n\n    private final JWTAuth jwtAuth;\n    private final WebClient webClient;\n    private final String expectedIssuer;\n    private final String jwksUri;\n\n    public JwtAuthHandler(Vertx vertx) {\n        this.webClient = WebClient.create(vertx);\n        this.jwtAuth = JWTAuth.create(vertx, new JWTAuthOptions());\n\n        // Remember to set these environment variables in your deployment\n        this.expectedIssuer = System.getenv("JWT_ISSUER");\n        this.jwksUri = System.getenv("JWKS_URI");\n\n        // Fetch JWKS and configure JWT auth\n        fetchJWKS().onSuccess(jwks -> {\n            // Configure JWKS (simplified - you may need a proper JWKS parser)\n        });\n    }\n\n    @Override\n    public void handle(RoutingContext context) {\n        String authHeader = context.request().getHeader("Authorization");\n        if (authHeader == null || !authHeader.startsWith("Bearer ")) {\n            context.response()\n                .setStatusCode(401)\n                .putHeader("Content-Type", "application/json")\n                .end("{\\"error\\": \\"Authorization header missing or invalid\\"}");\n            return;\n        }\n\n        String token = authHeader.substring(7);\n        jwtAuth.authenticate(new JsonObject().put("jwt", token))\n            .onSuccess(user -> {\n                try {\n                    JsonObject principal = user.principal();\n                    verifyPayload(principal);\n                    context.put("auth", principal);\n                    context.next();\n                } catch (AuthorizationException e) {\n                    context.response()\n                        .setStatusCode(e.getStatusCode())  // Use the exception\'s status code\n                        .putHeader("Content-Type", "application/json")\n                        .end("{\\"error\\": \\"" + e.getMessage() + "\\"}");\n                } catch (Exception e) {\n                    context.response()\n                        .setStatusCode(401)\n                        .putHeader("Content-Type", "application/json")\n                        .end("{\\"error\\": \\"Invalid token\\"}");\n                }\n            })\n            .onFailure(err -> {\n                context.response()\n                    .setStatusCode(401)\n                    .putHeader("Content-Type", "application/json")\n                    .end("{\\"error\\": \\"Invalid token: " + err.getMessage() + "\\"}");\n            });\n    }\n\n    private Future<JsonObject> fetchJWKS() {\n        return webClient.getAbs(this.jwksUri)\n            .send()\n            .map(response -> response.bodyAsJsonObject());\n    }\n\n    private void verifyPayload(JsonObject principal) {\n        // Verify issuer manually for Vert.x\n        String issuer = principal.getString("iss");\n        if (issuer == null || !expectedIssuer.equals(issuer)) {\n            throw new AuthorizationException("Invalid issuer: " + issuer);\n        }\n\n        // Implement your additional verification logic here based on permission model\n        // Use the helper methods below for claim extraction\n    }\n\n    // Helper methods for Vert.x JWT\n    private List<String> extractAudiences(JsonObject principal) {\n        JsonArray audiences = principal.getJsonArray("aud");\n        if (audiences != null) {\n            List<String> result = new ArrayList<>();\n            for (Object aud : audiences) {\n                result.add(aud.toString());\n            }\n            return result;\n        }\n        return List.of();\n    }\n\n    private String extractScopes(JsonObject principal) {\n        return principal.getString("scope");\n    }\n\n    private String extractOrganizationId(JsonObject principal) {\n        return principal.getString("organization_id");\n    }\n}\n'})})]})}const p=Object.freeze({"spring-boot":(0,r.jsx)((function(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}),{}),quarkus:(0,r.jsx)((function(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}),{}),micronaut:(0,r.jsx)((function(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}),{}),"vertx-web":(0,r.jsx)((function(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(u,{...e})}):u(e)}),{})}),h=[];function g(e){const n={code:"code",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.p,{children:"We use different JWT libraries depending on the framework. Install the required dependencies:"}),"\n",e.framework?p[e.framework]:(0,r.jsx)(a.A,{groupId:"api-framework",children:Object.entries(p).map((([e,n])=>(0,r.jsx)(s.A,{value:e,label:(0,o.My)(e),children:n},e)))}),"\n",(0,r.jsx)(n.p,{children:"According to your permission model, implement the appropriate verification logic:"}),"\n",(0,r.jsxs)(a.A,{groupId:"permission-models",children:[(0,r.jsx)(s.A,{value:"global-api-resources",label:"Global API resources",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:'// Check audience claim matches your API resource indicator\nList<String> audiences = extractAudiences(token); // Framework-specific extraction\nif (!audiences.contains("https://your-api-resource-indicator")) {\n    throw new AuthorizationException("Invalid audience");\n}\n\n// Check required scopes for global API resources\nList<String> requiredScopes = Arrays.asList("api:read", "api:write"); // Replace with your actual required scopes\nString scopes = extractScopes(token); // Framework-specific extraction\nList<String> tokenScopes = scopes != null ? Arrays.asList(scopes.split(" ")) : List.of();\n\nif (!tokenScopes.containsAll(requiredScopes)) {\n    throw new AuthorizationException("Insufficient scope");\n}\n'})})}),(0,r.jsx)(s.A,{value:"organization-permissions",label:"Organization (non-API) permissions",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:'// Check audience claim matches organization format\nList<String> audiences = extractAudiences(token); // Framework-specific extraction\nboolean hasOrgAudience = audiences.stream()\n    .anyMatch(aud -> aud.startsWith("urn:logto:organization:"));\n\nif (!hasOrgAudience) {\n    throw new AuthorizationException("Invalid audience for organization permissions");\n}\n\n// Check organization ID matches the context (you may need to extract this from request context)\nString expectedOrgId = "your-organization-id"; // Extract from request context\nString expectedAud = "urn:logto:organization:" + expectedOrgId;\nif (!audiences.contains(expectedAud)) {\n    throw new AuthorizationException("Organization ID mismatch");\n}\n\n// Check required organization scopes\nList<String> requiredScopes = Arrays.asList("invite:users", "manage:settings"); // Replace with your actual required scopes\nString scopes = extractScopes(token); // Framework-specific extraction\nList<String> tokenScopes = scopes != null ? Arrays.asList(scopes.split(" ")) : List.of();\n\nif (!tokenScopes.containsAll(requiredScopes)) {\n    throw new AuthorizationException("Insufficient organization scope");\n}\n'})})}),(0,r.jsx)(s.A,{value:"organization-level-api-resources",label:"Organization-level API resources",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:'// Check audience claim matches your API resource indicator\nList<String> audiences = extractAudiences(token); // Framework-specific extraction\nif (!audiences.contains("https://your-api-resource-indicator")) {\n    throw new AuthorizationException("Invalid audience for organization-level API resources");\n}\n\n// Check organization ID matches the context (you may need to extract this from request context)\nString expectedOrgId = "your-organization-id"; // Extract from request context\nString orgId = extractOrganizationId(token); // Framework-specific extraction\nif (!expectedOrgId.equals(orgId)) {\n    throw new AuthorizationException("Organization ID mismatch");\n}\n\n// Check required scopes for organization-level API resources\nList<String> requiredScopes = Arrays.asList("api:read", "api:write"); // Replace with your actual required scopes\nString scopes = extractScopes(token); // Framework-specific extraction\nList<String> tokenScopes = scopes != null ? Arrays.asList(scopes.split(" ")) : List.of();\n\nif (!tokenScopes.containsAll(requiredScopes)) {\n    throw new AuthorizationException("Insufficient organization-level API scopes");\n}\n'})})})]}),"\n",(0,r.jsx)(n.p,{children:"The helper methods for extracting claims are framework-specific. See the implementation details in the framework-specific validation files above."})]})}function x(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(g,{...e})}):g(e)}},10149:(e,n,t)=>{t.d(n,{Ay:()=>a,RM:()=>o});var r=t(25105),i=t(79621);const o=[];function s(e){const n={code:"code",pre:"pre",...(0,i.R)(),...e.components};return(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",metastring:'title="AuthorizationException.java"',children:"public class AuthorizationException extends RuntimeException {\n    private final int statusCode;\n\n    public AuthorizationException(String message) {\n        this(message, 403); // Default to 403 Forbidden\n    }\n\n    public AuthorizationException(String message, int statusCode) {\n        super(message);\n        this.statusCode = statusCode;\n    }\n\n    public int getStatusCode() {\n        return statusCode;\n    }\n}\n"})})}function a(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(s,{...e})}):s(e)}},41333:(e,n,t)=>{t.d(n,{Ay:()=>a,RM:()=>o});var r=t(25105),i=t(79621);const o=[];function s(e){const n={code:"code",pre:"pre",...(0,i.R)(),...e.components};return(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",metastring:'title="MainVerticle.java"',children:'import io.vertx.core.AbstractVerticle;\nimport io.vertx.core.Promise;\nimport io.vertx.core.json.JsonObject;\nimport io.vertx.ext.web.Router;\nimport io.vertx.ext.web.RoutingContext;\n\npublic class MainVerticle extends AbstractVerticle {\n\n    @Override\n    public void start(Promise<Void> startPromise) throws Exception {\n        Router router = Router.router(vertx);\n\n        // Apply middleware to protected routes\n        router.route("/api/protected*").handler(new JwtAuthHandler(vertx));\n        router.get("/api/protected").handler(this::protectedEndpoint);\n\n        vertx.createHttpServer()\n            .requestHandler(router)\n            .listen(8080, result -> {\n                if (result.succeeded()) {\n                    startPromise.complete();\n                } else {\n                    startPromise.fail(result.cause());\n                }\n            });\n    }\n\n    private void protectedEndpoint(RoutingContext context) {\n        // Access JWT principal directly from context\n        JsonObject principal = context.get("auth");\n        if (principal == null) {\n            context.response()\n                .setStatusCode(500)\n                .putHeader("Content-Type", "application/json")\n                .end("{\\"error\\": \\"JWT principal not found\\"}");\n            return;\n        }\n\n        String scopes = principal.getString("scope");\n        JsonObject response = new JsonObject()\n            .put("sub", principal.getString("sub"))\n            .put("client_id", principal.getString("client_id"))\n            .put("organization_id", principal.getString("organization_id"))\n            .put("scopes", scopes != null ? scopes.split(" ") : new String[0])\n            .put("audience", principal.getJsonArray("aud"));\n\n        context.response()\n            .putHeader("Content-Type", "application/json")\n            .end(response.encode());\n    }\n}\n'})})}function a(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(s,{...e})}):s(e)}},38552:(e,n,t)=>{t.d(n,{A:()=>s});t(58101);var r=t(13526);const i={tabItem:"tabItem_dgSZ"};var o=t(25105);function s(e){let{children:n,hidden:t,className:s}=e;return(0,o.jsx)("div",{role:"tabpanel",className:(0,r.A)(i.tabItem,s),hidden:t,children:n})}},22002:(e,n,t)=>{t.d(n,{A:()=>w});var r=t(58101),i=t(13526),o=t(60755),s=t(55234),a=t(6635),c=t(4100),l=t(35661),d=t(42752);function u(e){return r.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function p(e){const{values:n,children:t}=e;return(0,r.useMemo)((()=>{const e=n??function(e){return u(e).map((e=>{let{props:{value:n,label:t,attributes:r,default:i}}=e;return{value:n,label:t,attributes:r,default:i}}))}(t);return function(e){const n=(0,l.XI)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,t])}function h(e){let{value:n,tabValues:t}=e;return t.some((e=>e.value===n))}function g(e){let{queryString:n=!1,groupId:t}=e;const i=(0,s.W6)(),o=function(e){let{queryString:n=!1,groupId:t}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:n,groupId:t});return[(0,c.aZ)(o),(0,r.useCallback)((e=>{if(!o)return;const n=new URLSearchParams(i.location.search);n.set(o,e),i.replace({...i.location,search:n.toString()})}),[o,i])]}function x(e){const{defaultValue:n,queryString:t=!1,groupId:i}=e,o=p(e),[s,c]=(0,r.useState)((()=>function(e){let{defaultValue:n,tabValues:t}=e;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!h({value:n,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${t.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const r=t.find((e=>e.default))??t[0];if(!r)throw new Error("Unexpected error: 0 tabValues");return r.value}({defaultValue:n,tabValues:o}))),[l,u]=g({queryString:t,groupId:i}),[x,m]=function(e){let{groupId:n}=e;const t=function(e){return e?`docusaurus.tab.${e}`:null}(n),[i,o]=(0,d.Dv)(t);return[i,(0,r.useCallback)((e=>{t&&o.set(e)}),[t,o])]}({groupId:i}),j=(()=>{const e=l??x;return h({value:e,tabValues:o})?e:null})();(0,a.A)((()=>{j&&c(j)}),[j]);return{selectedValue:s,selectValue:(0,r.useCallback)((e=>{if(!h({value:e,tabValues:o}))throw new Error(`Can't select invalid tab value=${e}`);c(e),u(e),m(e)}),[u,m,o]),tabValues:o}}var m=t(21929);const j={tabList:"tabList_osvQ",tabItem:"tabItem_dc4O"};var f=t(25105);function v(e){let{className:n,block:t,selectedValue:r,selectValue:s,tabValues:a}=e;const c=[],{blockElementScrollPositionUntilNextRender:l}=(0,o.a_)(),d=e=>{const n=e.currentTarget,t=c.indexOf(n),i=a[t].value;i!==r&&(l(n),s(i))},u=e=>{let n=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const t=c.indexOf(e.currentTarget)+1;n=c[t]??c[0];break}case"ArrowLeft":{const t=c.indexOf(e.currentTarget)-1;n=c[t]??c[c.length-1];break}}n?.focus()};return(0,f.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.A)("tabs",{"tabs--block":t},n),children:a.map((e=>{let{value:n,label:t,attributes:o}=e;return(0,f.jsx)("li",{role:"tab",tabIndex:r===n?0:-1,"aria-selected":r===n,ref:e=>{c.push(e)},onKeyDown:u,onClick:d,...o,className:(0,i.A)("tabs__item",j.tabItem,o?.className,{"tabs__item--active":r===n}),children:t??n},n)}))})}function y(e){let{lazy:n,children:t,selectedValue:o}=e;const s=(Array.isArray(t)?t:[t]).filter(Boolean);if(n){const e=s.find((e=>e.props.value===o));return e?(0,r.cloneElement)(e,{className:(0,i.A)("margin-top--md",e.props.className)}):null}return(0,f.jsx)("div",{className:"margin-top--md",children:s.map(((e,n)=>(0,r.cloneElement)(e,{key:n,hidden:e.props.value!==o})))})}function b(e){const n=x(e);return(0,f.jsxs)("div",{className:(0,i.A)("tabs-container",j.tabList),children:[(0,f.jsx)(v,{...n,...e}),(0,f.jsx)(y,{...n,...e})]})}function w(e){const n=(0,m.A)();return(0,f.jsx)(b,{...e,children:u(e.children)},String(n))}},33435:(e,n,t)=>{t.d(n,{Id:()=>s,My:()=>o});const r=Object.freeze({dotnet:{name:".NET"},go:{name:"Go"},java:{name:"Java"},nodejs:{name:"Node.js"},php:{name:"PHP"},python:{name:"Python"},ruby:{name:"Ruby"},rust:{name:"Rust"}}),i=Object.freeze({express:{name:"Express.js",language:"nodejs"},koa:{name:"Koa.js",language:"nodejs"},fastify:{name:"Fastify",language:"nodejs"},hapi:{name:"Hapi.js",language:"nodejs"},nestjs:{name:"NestJS",language:"nodejs"},gin:{name:"Gin",language:"go"},fiber:{name:"Fiber",language:"go"},echo:{name:"Echo",language:"go"},chi:{name:"Chi",language:"go"},"spring-boot":{name:"Spring Boot",language:"java"},quarkus:{name:"Quarkus",language:"java"},micronaut:{name:"Micronaut",language:"java"},"vertx-web":{name:"Vert.x Web",language:"java"},laravel:{name:"Laravel",language:"php"},symfony:{name:"Symfony",language:"php"},slim:{name:"Slim",language:"php"},rails:{name:"Ruby on Rails",language:"ruby"},sinatra:{name:"Sinatra",language:"ruby"},grape:{name:"Grape",language:"ruby"},fastapi:{name:"FastAPI",language:"python"},flask:{name:"Flask",language:"python"},django:{name:"Django",language:"python"},"django-rest":{name:"Django REST Framework",language:"python"},axum:{name:"Axum",language:"rust"},"actix-web":{name:"Actix Web",language:"rust"},rocket:{name:"Rocket",language:"rust"},"aspnet-core":{name:"ASP.NET Core",language:"dotnet"}}),o=e=>i[e].name,s=e=>r[i[e].language].name},46643:(e,n,t)=>{t.d(n,{A:()=>r});const r=t.p+"assets/images/rbac-global-api-resources-33fafc263308d3f769c62cbcdb8d7829.png"},1242:(e,n,t)=>{t.d(n,{A:()=>r});const r=t.p+"assets/images/rbac-organization-level-api-resources-9533c281f3ee1cf52aefe821717e1fef.png"},93855:(e,n,t)=>{t.d(n,{A:()=>r});const r=t.p+"assets/images/rbac-organization-permissions-3302be06221b4399f73ddceac8ca17e3.png"},79621:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>a});var r=t(58101);const i={},o=r.createContext(i);function s(e){const n=r.useContext(o);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),r.createElement(o.Provider,{value:n},e.children)}}}]);