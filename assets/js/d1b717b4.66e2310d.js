"use strict";(self.webpackChunk_logto_docs=self.webpackChunk_logto_docs||[]).push([[75453],{49613:function(e,t,r){r.d(t,{Zo:function(){return u},kt:function(){return d}});var o=r(59496);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,o)}return r}function c(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,o,n=function(e,t){if(null==e)return{};var r,o,n={},i=Object.keys(e);for(o=0;o<i.length;o++)r=i[o],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)r=i[o],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var a=o.createContext({}),s=function(e){var t=o.useContext(a),r=t;return e&&(r="function"==typeof e?e(t):c(c({},t),e)),r},u=function(e){var t=s(e.components);return o.createElement(a.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},f=o.forwardRef((function(e,t){var r=e.components,n=e.mdxType,i=e.originalType,a=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),f=s(r),d=n,g=f["".concat(a,".").concat(d)]||f[d]||p[d]||i;return r?o.createElement(g,c(c({ref:t},u),{},{components:r})):o.createElement(g,c({ref:t},u))}));function d(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=r.length,c=new Array(i);c[0]=f;var l={};for(var a in t)hasOwnProperty.call(t,a)&&(l[a]=t[a]);l.originalType=e,l.mdxType="string"==typeof e?e:n,c[1]=l;for(var s=2;s<i;s++)c[s]=r[s];return o.createElement.apply(null,c)}return o.createElement.apply(null,r)}f.displayName="MDXCreateElement"},50964:function(e,t,r){r.r(t),r.d(t,{assets:function(){return u},contentTitle:function(){return a},default:function(){return d},frontMatter:function(){return l},metadata:function(){return s},toc:function(){return p}});var o=r(665),n=r(40151),i=(r(59496),r(49613)),c=["components"],l={},a=void 0,s={unversionedId:"sdk/Swift/LogtoClient/Structs/LogtoError",id:"version-1.x/sdk/Swift/LogtoClient/Structs/LogtoError",title:"LogtoError",description:"STRUCT",source:"@site/versioned_docs/version-1.x/sdk/Swift/LogtoClient/Structs/LogtoError.md",sourceDirName:"sdk/Swift/LogtoClient/Structs",slug:"/sdk/Swift/LogtoClient/Structs/LogtoError",permalink:"/logto-docs/sdk/Swift/LogtoClient/Structs/LogtoError",draft:!1,editUrl:"https://github.com/logto-io/docs/tree/master/versioned_docs/version-1.x/sdk/Swift/LogtoClient/Structs/LogtoError.md",tags:[],version:"1.x",frontMatter:{},sidebar:"sdkSidebar",previous:{title:"LogtoConfig",permalink:"/logto-docs/sdk/Swift/LogtoClient/Structs/LogtoConfig"},next:{title:"LogtoClientErrorTypes",permalink:"/logto-docs/sdk/Swift/LogtoClient/Enums/LogtoClientErrorTypes"}},u={},p=[{value:"Properties",id:"properties",level:2},{value:"<code>type</code>",id:"type",level:3},{value:"<code>innerError</code>",id:"innererror",level:3}],f={toc:p};function d(e){var t=e.components,r=(0,n.Z)(e,c);return(0,i.kt)("wrapper",(0,o.Z)({},f,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"STRUCT")),(0,i.kt)("h1",{id:"logtoerror"},(0,i.kt)("inlineCode",{parentName:"h1"},"LogtoError")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-swift"},"public struct LogtoError<T>: LocalizedError\n")),(0,i.kt)("h2",{id:"properties"},"Properties"),(0,i.kt)("h3",{id:"type"},(0,i.kt)("inlineCode",{parentName:"h3"},"type")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-swift"},"public let type: T\n")),(0,i.kt)("h3",{id:"innererror"},(0,i.kt)("inlineCode",{parentName:"h3"},"innerError")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-swift"},"public let innerError: Error?\n")))}d.isMDXComponent=!0}}]);