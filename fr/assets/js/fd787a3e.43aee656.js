"use strict";(self.webpackChunk_logto_docs=self.webpackChunk_logto_docs||[]).push([[70832],{61452:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>r,default:()=>u,frontMatter:()=>a,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"end-user-flows/sign-out","title":"D\xe9connexion","description":"Le processus de d\xe9connexion dans Logto (en tant que fournisseur d\'identit\xe9 bas\xe9 sur OIDC) est un concept \xe0 multiples facettes en raison de l\'implication \xe0 la fois de la session de connexion centralis\xe9e g\xe9r\xe9e par Logto et de l\'\xe9tat d\'authentification distribu\xe9 g\xe9r\xe9 par les applications clientes.","source":"@site/i18n/fr/docusaurus-plugin-content-docs/current/end-user-flows/sign-out.mdx","sourceDirName":"end-user-flows","slug":"/end-user-flows/sign-out","permalink":"/fr/end-user-flows/sign-out","draft":false,"unlisted":false,"editUrl":"https://github.com/logto-io/docs/tree/master/i18n/fr/docusaurus-plugin-content-docs/current/end-user-flows/sign-out.mdx","tags":[],"version":"current","sidebarPosition":6,"frontMatter":{"sidebar_position":6},"sidebar":"docsSidebar","previous":{"title":"\xc9cran de consentement","permalink":"/fr/end-user-flows/consent-screen"},"next":{"title":"Param\xe8tres du compte","permalink":"/fr/end-user-flows/account-settings/"}}');var t=i(25105),o=i(79621);const a={sidebar_position:6},r="D\xe9connexion",l={},c=[{value:"Session de connexion",id:"sign-in-session",level:2},{value:"Composants",id:"components",level:2},{value:"Session de connexion centralis\xe9e g\xe9r\xe9e par Logto",id:"centralized-sign-in-session-managed-by-logto",level:3},{value:"\xc9tat d&#39;authentification distribu\xe9 g\xe9r\xe9 par les applications clientes",id:"distributed-authentication-status-managed-by-the-client-applications",level:2},{value:"M\xe9canismes de d\xe9connexion",id:"sign-out-mechanisms",level:2},{value:"Effacer les jetons et la session locale c\xf4t\xe9 client",id:"clear-tokens-and-local-session-at-the-client-side",level:3},{value:"Effacer la session de connexion chez Logto",id:"clear-sign-in-session-at-logto",level:3},{value:"D\xe9connexion f\xe9d\xe9r\xe9e : D\xe9connexion par canal secondaire",id:"federated-sign-out-back-channel-logout",level:2},{value:"M\xe9thodes de d\xe9connexion dans les SDK Logto",id:"sign-out-methods-in-logto-sdks",level:2},{value:"FAQs",id:"faqs",level:2},{value:"Je ne re\xe7ois pas les notifications de d\xe9connexion par canal secondaire.",id:"im-not-receiving-the-back-channel-logout-notifications",level:3},{value:"Ressources connexes",id:"related-resources",level:2}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",mermaid:"mermaid",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,o.R)(),...e.components},{Details:i,Url:s}=n;return i||p("Details",!0),s||p("Url",!0),(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"d\xe9connexion",children:"D\xe9connexion"})}),"\n",(0,t.jsx)(n.p,{children:"Le processus de d\xe9connexion dans Logto (en tant que fournisseur d'identit\xe9 bas\xe9 sur OIDC) est un concept \xe0 multiples facettes en raison de l'implication \xe0 la fois de la session de connexion centralis\xe9e g\xe9r\xe9e par Logto et de l'\xe9tat d'authentification distribu\xe9 g\xe9r\xe9 par les applications clientes."}),"\n",(0,t.jsx)(n.h2,{id:"sign-in-session",children:"Session de connexion"}),"\n",(0,t.jsx)(n.p,{children:"Pour mieux comprendre le processus de d\xe9connexion, il est important de comprendre d'abord comment les sessions de connexion des utilisateurs et leur \xe9tat d'authentification sont g\xe9r\xe9s dans Logto."}),"\n",(0,t.jsx)(n.mermaid,{value:"  sequenceDiagram\n    autonumber\n    actor User\n\n    box Relying Party (RP)\n      participant Client as Application cliente\n    end\n\n    box Logto (IdP)\n      participant OIDC as Fournisseur OIDC\n      participant SignIn as Page de connexion\n    end\n\n    User ->> Client: Acc\xe9der \xe0 l'application web\n    Client ->> OIDC: Rediriger l'utilisateur vers OIDC pour l'authentification\n    OIDC --\x3e> OIDC: V\xe9rifier la session de connexion de l'utilisateur\n    OIDC ->> SignIn: Demander \xe0 l'utilisateur de se connecter\n    SignIn ->> OIDC: Identifier l'utilisateur et soumettre le r\xe9sultat de l'interaction\n    OIDC --\x3e> OIDC: \xc9tablir la session de connexion de l'utilisateur et l'autorisation d'authentification\n    OIDC ->> Client: Rediriger l'utilisateur vers l'application web avec le code d'authentification (flux de code d'autorisation)\n    Client ->> OIDC: \xc9changer le code contre des jetons\n    OIDC --\x3e> Client: Retourner les jetons"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"L'utilisateur acc\xe8de \xe0 l'application web (RP)."}),"\n",(0,t.jsx)(n.li,{children:"L'application cliente redirige l'utilisateur vers Logto (IdP) pour l'authentification."}),"\n",(0,t.jsx)(n.li,{children:"Le fournisseur OIDC v\xe9rifie l'\xe9tat de la session de connexion de l'utilisateur. Si aucune session n'existe ou si la session a expir\xe9, l'utilisateur est invit\xe9 \xe0 se connecter."}),"\n",(0,t.jsx)(n.li,{children:"L'utilisateur interagit avec la page de connexion pour s'authentifier."}),"\n",(0,t.jsx)(n.li,{children:"Apr\xe8s une connexion r\xe9ussie, Logto cr\xe9e une nouvelle session pour l'utilisateur et redirige vers l'application cliente avec un code d'autorisation."}),"\n",(0,t.jsx)(n.li,{children:"Le fournisseur OIDC cr\xe9e une nouvelle session de connexion et une autorisation d'authentification pour l'utilisateur."}),"\n",(0,t.jsx)(n.li,{children:"Le fournisseur OIDC redirige l'utilisateur vers le client avec un code d'authentification (flux de code d'autorisation)."}),"\n",(0,t.jsx)(n.li,{children:"Le client re\xe7oit le code d'authentification et l'\xe9change contre des jetons pour acc\xe9der aux informations de l'utilisateur."}),"\n",(0,t.jsx)(n.li,{children:"Accorder des jetons \xe0 l'application cliente."}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"components",children:"Composants"}),"\n",(0,t.jsx)(n.h3,{id:"centralized-sign-in-session-managed-by-logto",children:"Session de connexion centralis\xe9e g\xe9r\xe9e par Logto"}),"\n",(0,t.jsx)(n.p,{children:"Dans le flux ci-dessus, la session de connexion centralis\xe9e est g\xe9r\xe9e par Logto. La session est cr\xe9\xe9e lorsque l'utilisateur se connecte avec succ\xe8s et est d\xe9truite lorsque l'utilisateur se d\xe9connecte. La session est \xe9galement d\xe9truite lorsque la session de l'utilisateur expire."}),"\n",(0,t.jsx)(n.p,{children:"La session de connexion Logto est g\xe9r\xe9e \xe0 l'aide de cookies de session. Le cookie de session est d\xe9fini lorsque l'utilisateur se connecte. Toutes les requ\xeates d'authentification sont valid\xe9es par rapport au cookie de session. Si le cookie de session est pr\xe9sent et valide, l'utilisateur sera automatiquement authentifi\xe9 et redirig\xe9 directement vers l'application cliente avec le code d'autorisation. Sinon, l'utilisateur sera invit\xe9 \xe0 se connecter."}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Cookie de session Logto partag\xe9\nPour un utilisateur qui se connecte \xe0 plusieurs applications clientes depuis le m\xeame agent utilisateur (par exemple, un navigateur), l'utilisateur aura un cookie de session partag\xe9 sous le domaine Logto. Cela signifie que l'utilisateur n'a besoin de se connecter qu'une seule fois et sera automatiquement authentifi\xe9 pour d'autres applications clientes."}),"\n",(0,t.jsx)(n.mermaid,{value:" flowchart TD\n subgraph User [Agent utilisateur A]\n   U[Utilisateur]\n\n   subgraph Layer1 [Domaine client A]\n     A[Application cliente A]\n   end\n\n   subgraph Layer1 [Domaine client B]\n     B[Application cliente B]\n   end\n\n   subgraph Layer2 [Domaine Logto]\n       C{{Session de connexion Logto ?}}\n       D[Page de connexion]\n   end\n end\n\n U --\x3e |Connexion| A\n A --\x3e |Rediriger vers Logto| C\n U --\x3e |Connexion| B\n B --\x3e |Rediriger vers Logto| C\n C --\x3e |Non| D\n D --\x3e |Cr\xe9er session| C"}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Cookie de session Logto isol\xe9\nPour un utilisateur qui se connecte \xe0 diff\xe9rentes applications clientes depuis diff\xe9rents appareils ou navigateurs, l'utilisateur aura des cookies de session isol\xe9s sous le domaine Logto. Cela signifie que l'utilisateur doit se connecter s\xe9par\xe9ment pour chaque application cliente."}),"\n",(0,t.jsx)(n.mermaid,{value:" flowchart TD\n U[Utilisateur]\n\n subgraph DeviceA [Agent utilisateur A]\n   subgraph Layer1 [Domaine client A]\n     A[Application cliente A]\n   end\n\n   subgraph Layer2 [Domaine Logto]\n       C{{Session de connexion Logto ?}}\n       D[Page de connexion]\n   end\n end\n\n subgraph DeviceB [Agent utilisateur B]\n   subgraph Layer3 [Domaine client B]\n     B[Application cliente B]\n   end\n\n   subgraph Layer4 [Domaine Logto]\n       E{{Session de connexion Logto ?}}\n       F[Page de connexion]\n   end\n end\n\n U --\x3e |Connexion| A\n A --\x3e |Rediriger vers Logto| C\n U --\x3e |Connexion| B\n B --\x3e |Rediriger vers Logto| E\n C --\x3e |Non| D\n E --\x3e |Non| F\n D --\x3e |Cr\xe9er session| C\n F --\x3e |Cr\xe9er session| E"}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"distributed-authentication-status-managed-by-the-client-applications",children:"\xc9tat d'authentification distribu\xe9 g\xe9r\xe9 par les applications clientes"}),"\n",(0,t.jsx)(n.p,{children:"Chaque application cliente maintient son propre \xe9tat d'authentification. Qu'il s'agisse d'une application native, SPA ou web, toutes ont leur propre mani\xe8re de g\xe9rer l'\xe9tat d'authentification de l'utilisateur."}),"\n",(0,t.jsxs)(n.p,{children:["Apr\xe8s une connexion r\xe9ussie, l'application cliente peut recevoir un ",(0,t.jsx)(n.a,{href:"https://auth.wiki/id-token",children:"jeton d\u2019identifiant (ID token)"})," et un ",(0,t.jsx)(n.a,{href:"https://auth.wiki/access-token",children:"jeton d\u2019acc\xe8s (access token)"}),". L'application cliente peut utiliser le jeton d\u2019identifiant pour d\xe9terminer l'identit\xe9 de l'utilisateur et le jeton d\u2019acc\xe8s pour acc\xe9der aux ressources de l'utilisateur. L'\xe9tat d'authentification de l'utilisateur est repr\xe9sent\xe9 par le temps d'expiration du jeton d\u2019acc\xe8s."]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Applications natives et SPA :\nL'application cliente doit stocker et g\xe9rer ces jetons de mani\xe8re s\xe9curis\xe9e afin de maintenir l'\xe9tat d'authentification de l'utilisateur. Par exemple, stocker les jetons dans le stockage local ou le stockage de session, et effacer les jetons lorsque l'utilisateur se d\xe9connecte."}),"\n",(0,t.jsx)(n.li,{children:"Applications web :\nLes applications web, comme celles construites avec des frameworks comme Next.js, g\xe8rent souvent leur propre session pour les utilisateurs connect\xe9s en plus des jetons \xe9mis par Logto. Une fois que l'utilisateur se connecte et que l'application web re\xe7oit les jetons de Logto, elle peut stocker les jetons c\xf4t\xe9 client comme les applications SPA, ou elle peut stocker les jetons c\xf4t\xe9 serveur et g\xe9rer la session \xe0 l'aide de cookies ou d'autres m\xe9canismes."}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"sign-out-mechanisms",children:"M\xe9canismes de d\xe9connexion"}),"\n",(0,t.jsx)(n.h3,{id:"clear-tokens-and-local-session-at-the-client-side",children:"Effacer les jetons et la session locale c\xf4t\xe9 client"}),"\n",(0,t.jsx)(n.p,{children:"C\xf4t\xe9 client, une simple d\xe9connexion implique d'effacer la session locale et de supprimer les jetons (jeton d\u2019identifiant, jeton d\u2019acc\xe8s, jeton de rafra\xeechissement) du stockage local ou du stockage de session. Cela entra\xeene une d\xe9connexion uniquement c\xf4t\xe9 client o\xf9 la session centralis\xe9e reste intacte. Les utilisateurs qui se d\xe9connectent de cette mani\xe8re peuvent encore acc\xe9der \xe0 d'autres applications sous la m\xeame session du serveur d'autorisation jusqu'\xe0 ce que la session centralis\xe9e expire ou soit activement d\xe9truite."}),"\n",(0,t.jsx)(n.h3,{id:"clear-sign-in-session-at-logto",children:"Effacer la session de connexion chez Logto"}),"\n",(0,t.jsxs)(n.p,{children:["Pour d\xe9connecter explicitement l'utilisateur et effacer la session chez Logto, l'application cliente doit rediriger l'utilisateur vers le ",(0,t.jsx)(n.strong,{children:"point de terminaison de fin de session"})," de Logto."]}),"\n",(0,t.jsxs)(n.p,{children:["Par exemple : ",(0,t.jsx)(n.code,{children:"https://{votre-domaine-logto}/oidc/session/end"})]}),"\n",(0,t.jsxs)(n.p,{children:["Le ",(0,t.jsx)(n.strong,{children:"point de terminaison de fin de session"})," est un point de terminaison OIDC standard qui permet \xe0 l'application cliente de notifier le serveur d'autorisation que l'utilisateur s'est d\xe9connect\xe9. Le point de terminaison effacera la session de connexion centralis\xe9e chez Logto."]}),"\n",(0,t.jsx)(n.p,{children:"Une fois la session effac\xe9e, toute demande d'autorisation ult\xe9rieure n\xe9cessitera que l'utilisateur se connecte \xe0 nouveau."}),"\n",(0,t.jsxs)(n.p,{children:["Si un ",(0,t.jsx)(n.strong,{children:"URI de redirection post-d\xe9connexion"})," est fourni, l'utilisateur sera redirig\xe9 vers l'URI sp\xe9cifi\xe9 apr\xe8s que la session soit effac\xe9e. Sinon, l'utilisateur sera redirig\xe9 vers la page de redirection post-d\xe9connexion par d\xe9faut h\xe9berg\xe9e par Logto."]}),"\n",(0,t.jsx)(n.h2,{id:"federated-sign-out-back-channel-logout",children:"D\xe9connexion f\xe9d\xe9r\xe9e : D\xe9connexion par canal secondaire"}),"\n",(0,t.jsxs)(n.p,{children:["Pour une gestion de d\xe9connexion plus coh\xe9rente, Logto prend en charge la ",(0,t.jsx)(n.a,{href:"https://openid.net/specs/openid-connect-backchannel-1_0-final.html",children:"d\xe9connexion par canal secondaire"}),". La d\xe9connexion par canal secondaire est un m\xe9canisme qui permet \xe0 Logto de notifier toutes les applications clientes sous la m\xeame session de connexion lorsque l'utilisateur se d\xe9connecte."]}),"\n",(0,t.jsx)(n.p,{children:"Cela est particuli\xe8rement utile dans les sc\xe9narios o\xf9 l'utilisateur se d\xe9connecte d'une application cliente et s'attend \xe0 \xeatre d\xe9connect\xe9 de toutes les autres applications clientes sous la m\xeame session de connexion Logto."}),"\n",(0,t.jsx)(n.p,{children:"Pour activer la d\xe9connexion par canal secondaire pour vos applications clientes, acc\xe9dez \xe0 la page des d\xe9tails de l'application dans le tableau de bord Logto et enregistrez un URI de d\xe9connexion par canal secondaire. Logto enverra un jeton de d\xe9connexion \xe0 tous les URI enregistr\xe9s lorsque l'utilisateur initie une demande de d\xe9connexion depuis n'importe quelle application cliente."}),"\n",(0,t.jsxs)(n.p,{children:["Si votre application cliente n\xe9cessite que la session de connexion soit incluse dans le jeton de d\xe9connexion, activez les param\xe8tres ",(0,t.jsx)(n.code,{children:"Is session required"})," dans la configuration de d\xe9connexion par canal secondaire. Une revendication ",(0,t.jsx)(n.code,{children:"sid"})," sera incluse dans le jeton de d\xe9connexion pour identifier la session de connexion de l'utilisateur chez Logto."]}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"L'utilisateur initie une demande de d\xe9connexion depuis une application cliente."}),"\n",(0,t.jsx)(n.li,{children:"Logto re\xe7oit la demande de fin de session, g\xe9n\xe8re un jeton de d\xe9connexion et envoie le jeton de d\xe9connexion \xe0 tous les URI de d\xe9connexion par canal secondaire enregistr\xe9s."}),"\n",(0,t.jsx)(n.li,{children:"Chaque application cliente re\xe7oit le jeton de d\xe9connexion et effectue des actions de d\xe9connexion."}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Actions de d\xe9connexion pour chaque application cliente lors de la r\xe9ception du jeton de d\xe9connexion :"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Valider le jeton de d\xe9connexion."}),"\n",(0,t.jsx)(n.li,{children:"Effacer la session locale et supprimer les jetons du stockage local ou du stockage de session."}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"sign-out-methods-in-logto-sdks",children:"M\xe9thodes de d\xe9connexion dans les SDK Logto"}),"\n",(0,t.jsx)(n.p,{children:"Si vous int\xe9grez Logto avec votre application cliente en utilisant les SDK de Logto :"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Pour les applications SPA et web, la m\xe9thode ",(0,t.jsx)(n.code,{children:"client.signOut()"})," effacera le stockage local des jetons et redirigera l'utilisateur vers le point de terminaison de fin de session de Logto. Vous pouvez sp\xe9cifier un ",(0,t.jsx)(n.strong,{children:"URI de redirection post-d\xe9connexion"})," pour rediriger l'utilisateur apr\xe8s que la session soit effac\xe9e."]}),"\n",(0,t.jsxs)(n.li,{children:["Pour les applications natives (y compris les applications hybrides comme ",(0,t.jsx)(n.strong,{children:"React Native"})," et ",(0,t.jsx)(n.strong,{children:"Flutter"}),"), seul le stockage local des jetons est effac\xe9. Cela est d\xfb au fait que dans les applications natives, nous utilisons le webview sans session pour g\xe9rer le processus de connexion. Aucun cookie de session n'est stock\xe9 dans le navigateur natif, il n'est donc pas n\xe9cessaire d'effacer la session de connexion chez Logto. Chaque demande d'authentification est une demande autonome qui ne transporte aucun cookie de session."]}),"\n"]}),"\n",(0,t.jsx)(n.admonition,{type:"note",children:(0,t.jsxs)(n.p,{children:["Pour les applications natives qui ne prennent pas en charge le webview sans session ou ne reconnaissent pas les param\xe8tres ",(0,t.jsx)(n.code,{children:"emphasized"})," (application Android utilisant le SDK ",(0,t.jsx)(n.strong,{children:"React Native"})," ou ",(0,t.jsx)(n.strong,{children:"Flutter"}),"), vous pouvez forcer l'utilisateur \xe0 se reconnecter en passant le param\xe8tre ",(0,t.jsx)(n.code,{children:"prompt=login"})," dans la requ\xeate d'autorisation."]})}),"\n",(0,t.jsx)(n.h2,{id:"faqs",children:"FAQs"}),"\n",(0,t.jsxs)(i,{children:[(0,t.jsx)("summary",{children:(0,t.jsx)(n.h3,{id:"im-not-receiving-the-back-channel-logout-notifications",children:"Je ne re\xe7ois pas les notifications de d\xe9connexion par canal secondaire."})}),(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Assurez-vous que l'URI de d\xe9connexion par canal secondaire est correctement enregistr\xe9 dans le tableau de bord Logto."}),"\n",(0,t.jsx)(n.li,{children:"Assurez-vous que votre application cliente a une session de connexion active valide et qu'elle est la m\xeame que celle qui a initi\xe9 la demande de d\xe9connexion."}),"\n"]})]}),"\n",(0,t.jsx)(n.h2,{id:"related-resources",children:"Ressources connexes"}),"\n",(0,t.jsx)(s,{href:"https://blog.logto.io/oidc-back-channel-logout/",children:(0,t.jsx)(n.p,{children:"Comprendre la d\xe9connexion par canal secondaire OIDC."})})]})}function u(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}function p(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},79621:(e,n,i)=>{i.d(n,{R:()=>a,x:()=>r});var s=i(58101);const t={},o=s.createContext(t);function a(e){const n=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),s.createElement(o.Provider,{value:n},e.children)}}}]);