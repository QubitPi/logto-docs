"use strict";(self.webpackChunk_logto_docs=self.webpackChunk_logto_docs||[]).push([[5497],{24008:(e,s,r)=>{r.r(s),r.d(s,{assets:()=>u,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>n,toc:()=>c});const n=JSON.parse('{"id":"quick-starts/database/hasura/README","title":"Ajoutez l\u2019authentification \xe0 votre application Hasura","description":"Hasura est un outil qui peut rapidement fournir des API GraphQL et REST correspondant \xe0 vos donn\xe9es. En tenant compte de la s\xe9curit\xe9 des donn\xe9es, Hasura offre \xe9galement la possibilit\xe9 d\'affiner le contr\xf4le d\'acc\xe8s pour chaque API diff\xe9rente.","source":"@site/i18n/fr/docusaurus-plugin-content-docs/current/quick-starts/database/hasura/README.mdx","sourceDirName":"quick-starts/database/hasura","slug":"/quick-starts/hasura","permalink":"/fr/quick-starts/hasura","draft":false,"unlisted":false,"editUrl":"https://github.com/logto-io/docs/tree/master/i18n/fr/docusaurus-plugin-content-docs/current/quick-starts/database/hasura/README.mdx","tags":[],"version":"current","frontMatter":{"slug":"/quick-starts/hasura","sidebar_label":"Hasura","sidebar_custom_props":{"description":"Int\xe9grer Logto avec Hasura."}},"sidebar":"quickStartSidebar","previous":{"title":"Web traditionnel","permalink":"/fr/quick-starts/traditional-web"},"next":{"title":"Supabase","permalink":"/fr/quick-starts/supabase"}}');var t=r(25105),a=r(79621);const o={slug:"/quick-starts/hasura",sidebar_label:"Hasura",sidebar_custom_props:{description:"Int\xe9grer Logto avec Hasura."}},i="Ajoutez l\u2019authentification \xe0 votre application Hasura",u={},c=[{value:"Contexte",id:"background",level:2},{value:"Commencer",id:"get-started",level:2},{value:"1. Cr\xe9er une ressource API Hasura dans Logto",id:"1-create-hasura-api-resource-in-logto",level:3},{value:"2. Cr\xe9er des r\xf4les selon la configuration Hasura dans Logto",id:"2-create-roles-according-to-hasura-setup-in-logto",level:3},{value:"3. Configurer la variable d&#39;environnement Hasura <code>HASURA_GRAPHQL_JWT_SECRET</code> pour activer le mode JWT",id:"3-configure-hasura-environment-variable-hasura_graphql_jwt_secret-to-enable-jwt-mode",level:3},{value:"4. Personnaliser les revendications suppl\xe9mentaires du jeton d\u2019acc\xe8s utilisateur",id:"4-customize-user-access-token-extra-claims",level:3},{value:"5. Int\xe9grer le SDK Logto",id:"5-integrate-logto-sdk",level:3},{value:"Conclusion",id:"conclusion",level:2}];function l(e){const s={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(s.header,{children:(0,t.jsx)(s.h1,{id:"ajoutez-lauthentification-\xe0-votre-application-hasura",children:"Ajoutez l\u2019authentification \xe0 votre application Hasura"})}),"\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.a,{href:"https://hasura.io/",children:"Hasura"})," est un outil qui peut rapidement fournir des API GraphQL et REST correspondant \xe0 vos donn\xe9es. En tenant compte de la s\xe9curit\xe9 des donn\xe9es, Hasura offre \xe9galement la possibilit\xe9 d'affiner le contr\xf4le d'acc\xe8s pour chaque API diff\xe9rente."]}),"\n",(0,t.jsx)(s.p,{children:"Habituellement, les utilisateurs de Hasura utilisent d'autres services de gestion des identit\xe9s et d'authentification, Logto \xe9tant l'un des plus populaires parmi eux."}),"\n",(0,t.jsx)(s.p,{children:"Dans cet article de blog, nous supposerons que vous utilisez d\xe9j\xe0 les services Hasura. Nous vous pr\xe9senterons comment int\xe9grer Hasura et Logto pour maximiser la s\xe9curit\xe9 de vos donn\xe9es. Si vous n'avez pas de compte Logto, inscrivez-vous et commencez \xe0 l'utiliser d\xe8s maintenant !"}),"\n",(0,t.jsx)(s.h2,{id:"background",children:"Contexte"}),"\n",(0,t.jsxs)(s.p,{children:["Hasura utilise la ",(0,t.jsx)(s.a,{href:"https://hasura.io/docs/latest/auth/overview/",children:"gestion des acc\xe8s bas\xe9e sur les r\xf4les"}),", tandis que Logto utilise le standard ",(0,t.jsx)(s.a,{href:"/authorization/role-based-access-control",children:"Contr\xf4le d\u2019acc\xe8s bas\xe9 sur les r\xf4les (RBAC)"}),"."]}),"\n",(0,t.jsxs)(s.p,{children:["Dans le mod\xe8le et les meilleures pratiques de Logto pour le RBAC, nous conseillons aux utilisateurs d'utiliser ",(0,t.jsx)(s.code,{children:"scope"})," pour correspondre \xe0 la granularit\xe9 la plus fine des permissions, d'utiliser ",(0,t.jsx)(s.code,{children:"role"})," comme un ensemble de ",(0,t.jsx)(s.code,{children:"scope"}),"s pour des op\xe9rations par lots pratiques, et finalement de v\xe9rifier ",(0,t.jsx)(s.code,{children:"scope"})," (g\xe9n\xe9ralement du c\xf4t\xe9 des fournisseurs de ressources) pour v\xe9rifier si un utilisateur peut effectuer une op\xe9ration sp\xe9cifique."]}),"\n",(0,t.jsxs)(s.p,{children:["Dans Hasura, un ",(0,t.jsx)(s.code,{children:"role"})," correspond \xe0 la granularit\xe9 la plus fine des permissions, et les v\xe9rifications de permissions sont effectu\xe9es par rapport aux ",(0,t.jsx)(s.code,{children:"role"}),"s. Par cons\xe9quent, lors de la configuration de Logto, nous recommandons de mapper un ",(0,t.jsx)(s.code,{children:"role"})," \xe0 exactement un ",(0,t.jsx)(s.code,{children:"scope"}),". Cette approche peut lier les permissions de Logto et Hasura ensemble pour \xe9viter toute confusion et mauvaise utilisation."]}),"\n",(0,t.jsxs)(s.p,{children:["Hasura peut prendre en charge le contr\xf4le d'acc\xe8s en utilisant des Webhooks ou des JWT. Notre pr\xe9c\xe9dent ",(0,t.jsx)(s.a,{href:"https://blog.logto.io/logto-x-hasura",children:"article de blog"})," a introduit comment utiliser les Webhooks, et dans les sections suivantes, nous expliquerons comment utiliser le contr\xf4le d'acc\xe8s en mode JWT de Hasura."]}),"\n",(0,t.jsx)(s.h2,{id:"get-started",children:"Commencer"}),"\n",(0,t.jsxs)(s.p,{children:["Commen\xe7ons par un exemple simple. Supposons qu'un utilisateur ait d\xe9j\xe0 deux API dans Hasura, ",(0,t.jsx)(s.code,{children:"GET /user"})," et ",(0,t.jsx)(s.code,{children:"PATCH /user"}),", correspondant \xe0 deux r\xf4les : ",(0,t.jsx)(s.code,{children:"user:reader"})," et ",(0,t.jsx)(s.code,{children:"user:maintainer"}),", respectivement."]}),"\n",(0,t.jsx)(s.h3,{id:"1-create-hasura-api-resource-in-logto",children:"1. Cr\xe9er une ressource API Hasura dans Logto"}),"\n",(0,t.jsx)(s.p,{children:"Cr\xe9ez une ressource API Hasura dans Logto."}),"\n",(0,t.jsx)("img",{src:"/img/assets/hasura-api.webp",alt:"Hasura API"}),"\n",(0,t.jsx)(s.h3,{id:"2-create-roles-according-to-hasura-setup-in-logto",children:"2. Cr\xe9er des r\xf4les selon la configuration Hasura dans Logto"}),"\n",(0,t.jsxs)(s.p,{children:["Nous devons cr\xe9er deux ",(0,t.jsx)(s.code,{children:"scope"}),"s pour la ressource API Hasura mentionn\xe9e \xe0 l'\xe9tape 1, \xe0 savoir ",(0,t.jsx)(s.code,{children:"read:user"})," et ",(0,t.jsx)(s.code,{children:"maintain:user"}),", puis cr\xe9er deux r\xf4les : ",(0,t.jsx)(s.code,{children:"user:reader"})," (contenant le ",(0,t.jsx)(s.code,{children:"scope"})," ",(0,t.jsx)(s.code,{children:"read:user"}),") et ",(0,t.jsx)(s.code,{children:"user:maintainer"})," (incluant le ",(0,t.jsx)(s.code,{children:"scope"})," ",(0,t.jsx)(s.code,{children:"maintain:user"}),") pour correspondre un \xe0 un avec les r\xf4les de Hasura. Et attribuer ces r\xf4les aux utilisateurs Logto selon les besoins."]}),"\n",(0,t.jsx)("img",{src:"/img/assets/hasura-api-with-scopes.webp",alt:"Hasura API avec scopes"}),"\n",(0,t.jsx)("img",{src:"/img/assets/user-reader-role.webp",alt:"R\xf4le lecteur utilisateur"}),"\n",(0,t.jsx)("img",{src:"/img/assets/user-maintainer-role.webp",alt:"R\xf4le mainteneur utilisateur"}),"\n",(0,t.jsxs)(s.h3,{id:"3-configure-hasura-environment-variable-hasura_graphql_jwt_secret-to-enable-jwt-mode",children:["3. Configurer la variable d'environnement Hasura ",(0,t.jsx)(s.code,{children:"HASURA_GRAPHQL_JWT_SECRET"})," pour activer le mode JWT"]}),"\n",(0,t.jsxs)(s.p,{children:["En examinant les ",(0,t.jsx)(s.a,{href:"https://hasura.io/docs/latest/auth/authentication/jwt/#hasura-jwt-configuration-options",children:"options de configuration JWT de Hasura"}),", nous devons ajouter et configurer la variable d'environnement ",(0,t.jsx)(s.code,{children:"HASURA_GRAPHQL_JWT_SECRET"})," avant de pouvoir utiliser JWT pour le contr\xf4le d'acc\xe8s."]}),"\n",(0,t.jsxs)(s.p,{children:["Il existe de nombreuses options diff\xe9rentes qui peuvent \xeatre configur\xe9es, mais ici nous introduisons le cas le plus simple : seul le ",(0,t.jsx)(s.code,{children:"jwk_url"})," doit \xeatre configur\xe9. Cette valeur peut \xeatre obtenue \xe0 partir de votre point de terminaison de configuration OpenID de Logto (",(0,t.jsx)(s.a,{href:"https://your.logto.domain/oidc/.well-known/openid-configuration",children:"https://your.logto.domain/oidc/.well-known/openid-configuration"}),")."]}),"\n",(0,t.jsx)("img",{src:"/img/assets/hasura-jwt-config.webp",alt:"Configuration JWT Hasura"}),"\n",(0,t.jsx)(s.h3,{id:"4-customize-user-access-token-extra-claims",children:"4. Personnaliser les revendications suppl\xe9mentaires du jeton d\u2019acc\xe8s utilisateur"}),"\n",(0,t.jsx)(s.p,{children:"En utilisant la fonctionnalit\xe9 de revendications de jeton personnalis\xe9es de Logto, personnalisez la logique pour ajouter des revendications suppl\xe9mentaires au jeton d\u2019acc\xe8s utilisateur."}),"\n",(0,t.jsx)("img",{src:"/img/assets/user-access-token-script.webp",alt:"Script de jeton d\u2019acc\xe8s utilisateur"}),"\n",(0,t.jsxs)(s.p,{children:["Personnalisez la m\xe9thode ",(0,t.jsx)(s.code,{children:"getCustomJwtClaims"})," pour ajouter des donn\xe9es dans le JWT sur lesquelles Hasura s'appuie pour mettre en \u0153uvre le contr\xf4le d'acc\xe8s. Cela peut inclure des donn\xe9es relatives \xe0 l'utilisateur \xe9tant autoris\xe9 \xe0 ce moment-l\xe0, y compris les ",(0,t.jsx)(s.code,{children:"role"}),"s qu'il poss\xe8de, qui peuvent \xeatre accessibles via ",(0,t.jsx)(s.code,{children:"context"}),"."]}),"\n",(0,t.jsxs)(s.p,{children:["Nous avons \xe9galement d\xe9fini une variable d'environnement ",(0,t.jsx)(s.code,{children:"USER_DEFAULT_ROLE_NAMES"})," pour \xe9viter le codage en dur."]}),"\n",(0,t.jsx)(s.h3,{id:"5-integrate-logto-sdk",children:"5. Int\xe9grer le SDK Logto"}),"\n",(0,t.jsx)(s.p,{children:"Apr\xe8s avoir configur\xe9 Logto et Hasura, int\xe9grez votre application avec le SDK Logto. Ici, nous utilisons un exemple React pour pr\xe9visualiser le jeton d\u2019acc\xe8s utilisateur \xe9mis par Logto apr\xe8s la connexion de l'utilisateur."}),"\n",(0,t.jsx)("img",{src:"/img/assets/user-with-roles.webp",alt:"Utilisateur avec r\xf4les"}),"\n",(0,t.jsxs)(s.p,{children:["Tout d'abord, nous attribuons les r\xf4les ",(0,t.jsx)(s.code,{children:"user:reader"})," et ",(0,t.jsx)(s.code,{children:"user:maintainer"})," pr\xe9c\xe9demment cr\xe9\xe9s \xe0 l'utilisateur, puis nous nous connectons en tant que cet utilisateur."]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-tsx",children:"const config: LogtoConfig = {\n  endpoint: 'http://localhost:3001',\n  appId: '<your-application-id>',\n  appSecret: '<your-application-secret>',\n  scopes: [\n    ...// scopes existants\n    'read:user',\n    'maintain:user',\n  ],\n  resources: [\n    ...// ressources existantes\n    'https://*.hasura.app/api',\n  ],\n};\n"})}),"\n",(0,t.jsx)(s.p,{children:"Obtenez le jeton d\u2019acc\xe8s utilisateur et demandez les API Hasura :"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-tsx",children:"const accessToken = await logto.getAccessToken('https://*.hasura.app/api');\n\n// Avant d'envoyer la requ\xeate \xe0 Hasura\nrequest.headers.set('Authorization', `Bearer ${accessToken}`);\nrequest.headers.set('x-Hasura-Role', '<required-role-for-the-endpoint>');\n"})}),"\n",(0,t.jsx)(s.h2,{id:"conclusion",children:"Conclusion"}),"\n",(0,t.jsx)(s.p,{children:"Dans cet article, nous fournissons une autre m\xe9thode de contr\xf4le d'acc\xe8s bas\xe9e sur JWT prise en charge par Hasura, autre que le Webhook."}),"\n",(0,t.jsxs)(s.p,{children:["En comparant les processus de contr\xf4le d'acc\xe8s de Hasura par ",(0,t.jsx)(s.a,{href:"https://hasura.io/docs/latest/auth/authentication/webhook/",children:"Webhook"})," et par ",(0,t.jsx)(s.a,{href:"https://hasura.io/docs/latest/auth/authentication/jwt/",children:"JWT"}),", nous pouvons voir que l'approche Webhook envoie un Webhook \xe0 Logto et attend une r\xe9ponse avec chaque requ\xeate Hasura ; tandis que l'approche bas\xe9e sur JWT peut \xeatre utilis\xe9e en continu jusqu'\xe0 l'expiration du JWT."]}),"\n",(0,t.jsx)(s.p,{children:"L'approche JWT peut r\xe9duire la charge r\xe9seau et \xe9liminer la latence r\xe9seau apport\xe9e par les Webhooks ; tandis que l'approche Webhook peut synchroniser les changements dans les permissions des utilisateurs en temps r\xe9el."}),"\n",(0,t.jsx)(s.p,{children:"Les utilisateurs peuvent choisir l'approche appropri\xe9e en fonction de ces conclusions, combin\xe9es \xe0 leurs besoins commerciaux r\xe9els."})]})}function d(e={}){const{wrapper:s}={...(0,a.R)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},79621:(e,s,r)=>{r.d(s,{R:()=>o,x:()=>i});var n=r(58101);const t={},a=n.createContext(t);function o(e){const s=n.useContext(a);return n.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function i(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),n.createElement(a.Provider,{value:s},e.children)}}}]);