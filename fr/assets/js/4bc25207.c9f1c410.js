"use strict";(self.webpackChunk_logto_docs=self.webpackChunk_logto_docs||[]).push([[72388],{33706:(e,s,t)=>{t.r(s),t.d(s,{assets:()=>u,contentTitle:()=>o,default:()=>d,frontMatter:()=>r,metadata:()=>n,toc:()=>c});const n=JSON.parse('{"id":"quick-starts/database/supabase/README","title":"Ajoutez l\'authentification \xe0 votre application Supabase","description":"Notions de base sur Supabase \\\\","source":"@site/i18n/fr/docusaurus-plugin-content-docs/current/quick-starts/database/supabase/README.mdx","sourceDirName":"quick-starts/database/supabase","slug":"/quick-starts/supabase","permalink":"/fr/quick-starts/supabase","draft":false,"unlisted":false,"editUrl":"https://github.com/logto-io/docs/tree/master/i18n/fr/docusaurus-plugin-content-docs/current/quick-starts/database/supabase/README.mdx","tags":[],"version":"current","frontMatter":{"slug":"/quick-starts/supabase","sidebar_label":"Supabase","sidebar_custom_props":{"description":"Int\xe9grer Logto avec Supabase.","logoFilename":"supabase.svg"}},"sidebar":"quickStartSidebar","previous":{"title":"Hasura","permalink":"/fr/quick-starts/hasura"},"next":{"title":"OIDC (Application tierce)","permalink":"/fr/quick-starts/third-party-oidc"}}');var a=t(25105),i=t(79621);const r={slug:"/quick-starts/supabase",sidebar_label:"Supabase",sidebar_custom_props:{description:"Int\xe9grer Logto avec Supabase.",logoFilename:"supabase.svg"}},o="Ajoutez l'authentification \xe0 votre application Supabase",u={},c=[{value:"Notions de base sur Supabase",id:"supabase-basics",level:2},{value:"Ajouter des donn\xe9es utilisateur aux requ\xeates Supabase",id:"add-user-data-to-the-supabase-requests",level:3},{value:"Cr\xe9er une politique de s\xe9curit\xe9 au niveau des lignes",id:"create-row-level-security-policy",level:3},{value:"Processus d&#39;int\xe9gration de base avec Logto",id:"basic-integration-process-with-logto",level:3},{value:"Int\xe9gration de Logto",id:"logto-integration",level:2},{value:"Application native ou SPA",id:"native-app-or-spa",level:3},{value:"Application web traditionnelle",id:"traditional-web-app",level:3},{value:"Application machine \xe0 machine",id:"machine-to-machine-app",level:3}];function l(e){const s={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",img:"img",li:"li",mermaid:"mermaid",ol:"ol",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(s.header,{children:(0,a.jsx)(s.h1,{id:"ajoutez-lauthentification-\xe0-votre-application-supabase",children:"Ajoutez l'authentification \xe0 votre application Supabase"})}),"\n",(0,a.jsx)(s.h2,{id:"supabase-basics",children:"Notions de base sur Supabase"}),"\n",(0,a.jsxs)(s.p,{children:["Supabase utilise la ",(0,a.jsx)(s.a,{href:"https://www.postgresql.org/docs/current/ddl-rowsecurity.html",children:"s\xe9curit\xe9 au niveau des lignes de Postgres"})," pour contr\xf4ler les Autorisations d'acc\xe8s aux donn\xe9es. En termes simples, en cr\xe9ant des politiques de s\xe9curit\xe9 au niveau des lignes pour les tables de la base de donn\xe9es, nous pouvons restreindre et g\xe9rer qui peut lire, \xe9crire et mettre \xe0 jour les donn\xe9es dans une table."]}),"\n",(0,a.jsx)(s.p,{children:'Supposons que vous ayez une table nomm\xe9e "posts" dans votre base de donn\xe9es, avec le contenu suivant :'}),"\n",(0,a.jsx)(s.p,{children:(0,a.jsx)(s.img,{alt:"Table des posts",src:t(50455).A+"",width:"2000",height:"339"})}),"\n",(0,a.jsxs)(s.p,{children:["Le champ ",(0,a.jsx)(s.code,{children:"user_id"})," dans la table repr\xe9sente l'utilisateur auquel chaque donn\xe9e de post appartient. Vous pouvez restreindre chaque utilisateur \xe0 n'acc\xe9der qu'\xe0 ses propres donn\xe9es de post en fonction du champ ",(0,a.jsx)(s.code,{children:"user_id"}),"."]}),"\n",(0,a.jsx)(s.p,{children:"Cependant, avant que cela puisse \xeatre mis en \u0153uvre, Supabase doit \xeatre capable d'identifier l'utilisateur actuel acc\xe9dant \xe0 la base de donn\xe9es."}),"\n",(0,a.jsx)(s.h3,{id:"add-user-data-to-the-supabase-requests",children:"Ajouter des donn\xe9es utilisateur aux requ\xeates Supabase"}),"\n",(0,a.jsx)(s.p,{children:"Gr\xe2ce au support de Supabase pour les JWT, lorsque notre application interagit avec Supabase, nous pouvons g\xe9n\xe9rer un JWT contenant des donn\xe9es utilisateur en utilisant le secret JWT fourni par Supabase. Nous utilisons ensuite ce JWT comme en-t\xeate d'Authentification lors des requ\xeates. Lors de la r\xe9ception de la requ\xeate, Supabase v\xe9rifie automatiquement la validit\xe9 du JWT et permet l'acc\xe8s aux donn\xe9es qu'il contient tout au long des processus suivants."}),"\n",(0,a.jsx)(s.p,{children:'Tout d\'abord, nous pouvons obtenir le secret JWT fourni par Supabase \xe0 partir des "Param\xe8tres du projet" dans le tableau de bord Supabase :'}),"\n",(0,a.jsx)(s.p,{children:(0,a.jsx)(s.img,{alt:"Page des param\xe8tres de l&#39;API Supabase",src:t(95258).A+"",width:"2000",height:"1018"})}),"\n",(0,a.jsx)(s.p,{children:"Ensuite, lorsque nous utilisons le SDK Supabase pour faire des requ\xeates \xe0 Supabase, nous utilisons ce secret pour g\xe9n\xe9rer notre JWT et l'attacher comme en-t\xeate d'Authentification \xe0 la requ\xeate. (Veuillez noter que ce processus se d\xe9roule dans le service backend de votre application, et le secret JWT ne doit jamais \xeatre expos\xe9 \xe0 des tiers)."}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-jsx",children:"import { createClient } from '@supabase/supabase-js';\nimport { sign } from 'jsonwebtoken';\n\n/\n * Remarque :\n * Vous pouvez trouver le SUPABASE_URL, SUPABASE_ANON_KEY au m\xeame endroit o\xf9 vous trouvez le secret JWT.\n */\nconst SUPABASE_URL = process.env.SUPABASE_URL;\nconst SUPABASE_ANON_KEY = process.env.SUPABASE_ANON_KEY;\n\nconst SUPABASE_JWT_SECRET = process.env.SUPABASE_JWT_SECRET;\n\nexport const getSupabaseClient = (userId) => {\n  const jwtPayload = {\n    userId,\n  };\n\n  const jwt = sign(jwtPayload, SUPABASE_JWT_SECRET, {\n    expiresIn: '1h', // Juste pour la d\xe9monstration\n  });\n\n  const client = createClient(SUPABASE_URL, SUPABASE_ANON_KEY, {\n    global: {\n      headers: {\n        Authorization: `Bearer ${jwt}`,\n      },\n    },\n  });\n\n  return client;\n};\n"})}),"\n",(0,a.jsx)(s.p,{children:"Ensuite, acc\xe9dez \xe0 l'\xe9diteur SQL dans le tableau de bord Supabase et cr\xe9ez une fonction pour r\xe9cup\xe9rer le userId transport\xe9 dans la requ\xeate :"}),"\n",(0,a.jsx)(s.p,{children:(0,a.jsx)(s.img,{alt:"Cr\xe9er une fonction pour obtenir l&#39;ID utilisateur",src:t(48451).A+"",width:"2000",height:"1054"})}),"\n",(0,a.jsx)(s.p,{children:"Le code utilis\xe9 dans l'image est le suivant :"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-sql",children:"create or replace function auth.user_id() returns text as $$\n  select nullif(current_setting('request.jwt.claims', true)::json->>'userId', '')::text;\n$$ language sql stable;\n"})}),"\n",(0,a.jsxs)(s.p,{children:["Comme le montre le code, dans Supabase, vous pouvez r\xe9cup\xe9rer la charge utile du JWT que nous g\xe9n\xe9rons en appelant ",(0,a.jsx)(s.code,{children:"request.jwt.claims"}),". Le champ ",(0,a.jsx)(s.code,{children:"userId"})," \xe0 l'int\xe9rieur de la charge utile est la valeur que nous avons d\xe9finie."]}),"\n",(0,a.jsx)(s.p,{children:"Avec cette fonction, Supabase peut d\xe9terminer l'utilisateur qui acc\xe8de actuellement \xe0 la base de donn\xe9es."}),"\n",(0,a.jsx)(s.h3,{id:"create-row-level-security-policy",children:"Cr\xe9er une politique de s\xe9curit\xe9 au niveau des lignes"}),"\n",(0,a.jsxs)(s.p,{children:["Ensuite, nous pouvons cr\xe9er une politique de s\xe9curit\xe9 au niveau des lignes pour restreindre chaque utilisateur \xe0 n'acc\xe9der qu'\xe0 ses propres donn\xe9es de post en fonction du champ ",(0,a.jsx)(s.code,{children:"user_id"})," dans la table des posts."]}),"\n",(0,a.jsxs)(s.ol,{children:["\n",(0,a.jsx)(s.li,{children:"Acc\xe9dez \xe0 la page de l'\xe9diteur de table dans le tableau de bord Supabase et s\xe9lectionnez la table des posts."}),"\n",(0,a.jsx)(s.li,{children:'Cliquez sur "Ajouter une politique RLS" en haut de la table.'}),"\n",(0,a.jsx)(s.li,{children:'Dans la fen\xeatre qui s\'affiche, cliquez sur "Cr\xe9er une politique".'}),"\n",(0,a.jsx)(s.li,{children:"Entrez un nom de politique et choisissez la commande de politique SELECT."}),"\n",(0,a.jsxs)(s.li,{children:["Dans le bloc ",(0,a.jsx)(s.code,{children:"using"})," du code ci-dessous, entrez :"]}),"\n"]}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-sql",children:"auth.user_id() = user_id\n"})}),"\n",(0,a.jsx)(s.p,{children:(0,a.jsx)(s.img,{alt:"Cr\xe9er une politique RLS",src:t(43782).A+"",width:"2000",height:"2330"})}),"\n",(0,a.jsx)(s.p,{children:"En tirant parti de telles politiques, le contr\xf4le d'acc\xe8s aux donn\xe9es au sein de Supabase est r\xe9alis\xe9."}),"\n",(0,a.jsxs)(s.p,{children:["Dans les applications du monde r\xe9el, vous cr\xe9eriez diverses politiques pour restreindre les actions des utilisateurs telles que l'insertion et la modification de donn\xe9es. Cependant, cela d\xe9passe le cadre de cet article. Pour plus d'informations sur la s\xe9curit\xe9 au niveau des lignes (RLS), veuillez vous r\xe9f\xe9rer \xe0 ",(0,a.jsx)(s.a,{href:"https://supabase.com/docs/guides/database/postgres/row-level-security",children:"S\xe9curisez vos donn\xe9es en utilisant la s\xe9curit\xe9 au niveau des lignes de Postgres"}),"."]}),"\n",(0,a.jsx)(s.h3,{id:"basic-integration-process-with-logto",children:"Processus d'int\xe9gration de base avec Logto"}),"\n",(0,a.jsx)(s.p,{children:"Comme mentionn\xe9 pr\xe9c\xe9demment, parce que Supabase utilise RLS pour son contr\xf4le d'acc\xe8s, la cl\xe9 pour s'int\xe9grer avec Logto (ou tout autre service d'authentification) r\xe9side dans l'obtention de l'identifiant de l'utilisateur autoris\xe9 et son envoi \xe0 Supabase. L'ensemble du processus est illustr\xe9 dans le diagramme ci-dessous :"}),"\n",(0,a.jsx)(s.mermaid,{value:"sequenceDiagram\n\tParticipant U as Utilisateur final\n\tParticipant Logto\n\tParticipant B as Service backend de l'application\n\tParticipant Supabase\n\n\tU->>Logto: Se connecter avec Logto\n\tLogto--\x3e>U: `access_token`\n\tU->>B: Demander des donn\xe9es avec `access_token`\n\tB->>B: R\xe9cup\xe9rer `user_id` \xe0 partir de `access_token`\n\tB->>B: G\xe9n\xe9rer jwt par `user_id` & `Supabase JWT secret`\n\tB->>Supabase: Demander des donn\xe9es avec jwt\n\tSupabase--\x3e>B: Donn\xe9es r\xe9pondues\n\tB--\x3e>U: Donn\xe9es r\xe9pondues"}),"\n",(0,a.jsx)(s.p,{children:"Ensuite, nous expliquerons comment int\xe9grer Logto avec Supabase en nous basant sur ce diagramme de processus."}),"\n",(0,a.jsx)(s.h2,{id:"logto-integration",children:"Int\xe9gration de Logto"}),"\n",(0,a.jsx)(s.p,{children:"Logto offre des guides d'int\xe9gration pour divers frameworks et langages de programmation."}),"\n",(0,a.jsxs)(s.p,{children:["En g\xe9n\xe9ral, les applications construites avec ces frameworks et langages se r\xe9partissent en cat\xe9gories telles que les applications natives, les SPA (applications monopage), les applications web traditionnelles et les applications M2M (machine \xe0 machine). Vous pouvez visiter la page des ",(0,a.jsx)(s.a,{href:"/quick-starts",children:"d\xe9marrages rapides de Logto"})," pour int\xe9grer Logto dans votre application en fonction de la pile technologique que vous utilisez. Ensuite, suivez les instructions ci-dessous pour int\xe9grer Logto dans votre projet en fonction du type de votre application."]}),"\n",(0,a.jsx)(s.h3,{id:"native-app-or-spa",children:"Application native ou SPA"}),"\n",(0,a.jsx)(s.p,{children:"Les applications natives et les SPA s'ex\xe9cutent toutes deux sur votre appareil, et les informations d'identification (jeton d\u2019acc\xe8s) obtenues apr\xe8s la connexion sont stock\xe9es localement sur votre appareil."}),"\n",(0,a.jsx)(s.p,{children:"Par cons\xe9quent, lors de l'int\xe9gration de votre application avec Supabase, vous devez interagir avec Supabase via votre service backend car vous ne pouvez pas exposer des informations sensibles (comme le secret JWT de Supabase) sur l'appareil de chaque utilisateur."}),"\n",(0,a.jsxs)(s.p,{children:["Supposons que vous construisiez votre SPA en utilisant React et Express. Vous avez int\xe9gr\xe9 avec succ\xe8s Logto dans votre application en suivant le ",(0,a.jsx)(s.a,{href:"/quick-starts/react",children:"Guide du SDK React de Logto"})," (vous pouvez vous r\xe9f\xe9rer au code dans notre ",(0,a.jsx)(s.a,{href:"https://github.com/logto-io/js/tree/master/packages/react-sample",children:"exemple react"}),"). De plus, vous avez ajout\xe9 la validation du jeton d\u2019acc\xe8s Logto \xe0 votre serveur backend selon la documentation ",(0,a.jsx)(s.a,{href:"/authorization/api-resources/node-express",children:"Prot\xe9gez votre API sur Node (Express)"}),"."]}),"\n",(0,a.jsx)(s.p,{children:"Ensuite, vous utiliserez le jeton d\u2019acc\xe8s obtenu de Logto pour demander des donn\xe9es utilisateur \xe0 votre serveur backend :"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-jsx",children:"import { useLogto } from '@logto/react';\nimport { useState, useEffect } from 'react';\nimport PostList from './PostList';\n\nconst endpoint = '<https://www.mysite.com/api/posts>';\nconst resource = '<https://www.mysite.com/api>';\n\nfunction PostPage() {\n  const { isAuthenticated, getAccessToken } = useLogto();\n  const [posts, setPosts] = useState();\n\n  useEffect(() => {\n    const fetchPosts = async () => {\n      const response = await fetch(endpoint, {\n        headers: {\n          Authorization: `Bearer ${await getAccessToken(resource)}`,\n        },\n      });\n      setPosts(response.json());\n    };\n\n    if (isAuthenticated) {\n      void fetchPosts();\n    }\n  }, [isAuthenticated, getAccessToken]);\n\n  return <PostList posts={posts} />;\n}\n\nexport default PostPage;\n"})}),"\n",(0,a.jsx)(s.p,{children:"Dans votre serveur backend, vous avez d\xe9j\xe0 extrait l'identifiant de l'utilisateur connect\xe9 \xe0 partir du jeton d\u2019acc\xe8s en utilisant un middleware :"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-jsx",children:"// auth-middleware.ts\nimport { createRemoteJWKSet, jwtVerify } from 'jose';\n\n//...\n\nexport const verifyAuthFromRequest = async (ctx, next) => {\n  // Extraire le jeton\n  const token = extractBearerTokenFromHeaders(ctx.request.headers);\n\n  const { payload } = await jwtVerify(\n    token, // Le jeton Bearer brut extrait de l'en-t\xeate de la requ\xeate\n    createRemoteJWKSet(new URL('https://<your-logto-domain>/oidc/jwks')), // g\xe9n\xe9rer un jwks en utilisant jwks_uri demand\xe9 au serveur Logto\n    {\n      // \xe9metteur attendu du jeton, doit \xeatre \xe9mis par le serveur Logto\n      issuer: 'https://<your-logto-domain>/oidc',\n      // audience attendue du jeton, doit \xeatre l'indicateur de ressource de l'API actuelle\n      audience: '<your request listener resource indicator>',\n    }\n  );\n\n  // si vous utilisez RBAC\n  assert(payload.scope.includes('some_scope'));\n\n  // logique de charge utile personnalis\xe9e\n  ctx.auth = {\n    userId: payload.sub,\n  };\n\n  return next();\n};\n"})}),"\n",(0,a.jsxs)(s.p,{children:["Maintenant, vous pouvez utiliser le ",(0,a.jsx)(s.code,{children:"getSupabaseClient"})," d\xe9crit ci-dessus pour attacher le ",(0,a.jsx)(s.code,{children:"userId"})," au JWT utilis\xe9 dans les requ\xeates suivantes \xe0 Supabase. Alternativement, vous pouvez cr\xe9er un middleware pour cr\xe9er un client Supabase pour les requ\xeates qui doivent interagir avec Supabase :"]}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-jsx",children:"export const withSupabaseClient = async (ctx, next) => {\n  ctx.supabase = getSupabaseClient(ctx.auth.userId);\n\n  return next();\n};\n"})}),"\n",(0,a.jsxs)(s.p,{children:["Dans le flux de traitement suivant, vous pouvez directement appeler ",(0,a.jsx)(s.code,{children:"ctx.supabase"})," pour interagir avec Supabase :"]}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-jsx",children:"const fetchPosts = async (ctx) => {\n\tcosnt { data } = await ctx.supabase.from('posts').select('*');\n\n\treturn data;\n}\n"})}),"\n",(0,a.jsx)(s.p,{children:"Dans ce code, Supabase ne retournera que les donn\xe9es de post appartenant \xe0 l'utilisateur actuel en fonction des politiques pr\xe9c\xe9demment d\xe9finies."}),"\n",(0,a.jsx)(s.h3,{id:"traditional-web-app",children:"Application web traditionnelle"}),"\n",(0,a.jsx)(s.p,{children:"La principale diff\xe9rence entre une application web traditionnelle et une application native ou SPA est qu'une application web traditionnelle rend et met \xe0 jour les pages uniquement sur le serveur web. Par cons\xe9quent, les informations d'identification des utilisateurs sont g\xe9r\xe9es directement par le serveur web, tandis que dans les applications natives et les SPA, elles r\xe9sident sur l'appareil de l'utilisateur."}),"\n",(0,a.jsx)(s.p,{children:"Lors de l'int\xe9gration de Logto avec une application web traditionnelle dans Supabase, vous pouvez directement r\xe9cup\xe9rer l'identifiant de l'utilisateur connect\xe9 depuis le backend."}),"\n",(0,a.jsxs)(s.p,{children:["Prenons un projet Next.js comme exemple, apr\xe8s avoir int\xe9gr\xe9 Logto \xe0 votre projet en suivant le ",(0,a.jsx)(s.a,{href:"/quick-starts/next-app-router",children:"Guide du SDK Next.js"}),", vous pouvez utiliser le SDK Logto pour r\xe9cup\xe9rer les informations utilisateur et construire le JWT correspondant pour interagir avec Supabase."]}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-jsx",children:"import { getLogtoContext } from '@logto/next-server-actions';\nimport { logtoConfig } from '@/logto';\nimport { getSupabaseClient } from '@/utils';\nimport PostList from './PostList';\n\nexport default async function PostPage() {\n  const { cliams } = await getLogtoContext(logtoConfig);\n\n  // La valeur `sub` dans `cliams` est l'identifiant de l'utilisateur.\n  const supabase = getSupabaseClient(cliams.sub);\n\n  const { data: posts } = await supabase.from('posts').select('*');\n\n  return <PostList posts={posts} />;\n}\n"})}),"\n",(0,a.jsx)(s.h3,{id:"machine-to-machine-app",children:"Application machine \xe0 machine"}),"\n",(0,a.jsx)(s.p,{children:"Machine \xe0 machine (M2M) est souvent utilis\xe9 lorsque votre application doit communiquer directement avec des serveurs de ressources, comme un service statique qui r\xe9cup\xe8re des posts quotidiens, etc."}),"\n",(0,a.jsxs)(s.p,{children:["Vous pouvez utiliser le guide ",(0,a.jsx)(s.a,{href:"/quick-starts/m2m",children:"Machine \xe0 machine : Auth avec Logto"})," pour l'authentification des applications machine \xe0 machine. L'int\xe9gration entre Supabase et les applications machine \xe0 machine est similaire \xe0 celle des applications natives et des SPA (comme d\xe9crit dans la section \"",(0,a.jsx)(s.a,{href:"#native-app-or-spa",children:"Application native ou SPA"}),"\"). Elle implique l'obtention d'un jeton d\u2019acc\xe8s de Logto, puis sa validation via une API backend prot\xe9g\xe9e."]}),"\n",(0,a.jsxs)(s.p,{children:["Cependant, il est important de noter que les applications natives et les SPA sont g\xe9n\xe9ralement con\xe7ues pour les utilisateurs finaux, donc l'identifiant utilisateur obtenu repr\xe9sente l'utilisateur lui-m\xeame. Cependant, le jeton d\u2019acc\xe8s pour les applications machine \xe0 machine repr\xe9sente l'application elle-m\xeame, et le champ ",(0,a.jsx)(s.code,{children:"sub"})," dans la charge utile du jeton d\u2019acc\xe8s est l'identifiant client de l'application M2M, pas un utilisateur sp\xe9cifique. Par cons\xe9quent, lors du d\xe9veloppement, il est crucial de distinguer quelles donn\xe9es sont destin\xe9es aux applications M2M."]}),"\n",(0,a.jsxs)(s.p,{children:["De plus, si vous souhaitez qu'une application M2M sp\xe9cifique acc\xe8de \xe0 Supabase au nom de l'ensemble du service pour contourner les restrictions RLS, vous pouvez utiliser le secret ",(0,a.jsx)(s.code,{children:"service_role"})," de Supabase pour cr\xe9er un client Supabase. C'est utile lorsque vous souhaitez effectuer certaines t\xe2ches administratives ou automatis\xe9es qui n\xe9cessitent un acc\xe8s \xe0 toutes les donn\xe9es sans \xeatre restreint par les politiques de s\xe9curit\xe9 au niveau des lignes d\xe9finies pour les utilisateurs individuels."]}),"\n",(0,a.jsxs)(s.p,{children:["Le secret ",(0,a.jsx)(s.code,{children:"service_role"})," peut \xeatre trouv\xe9 sur la m\xeame page que le secret JWT :"]}),"\n",(0,a.jsx)(s.p,{children:(0,a.jsx)(s.img,{alt:"Secret du r\xf4le de service",src:t(82836).A+"",width:"2000",height:"948"})}),"\n",(0,a.jsxs)(s.p,{children:["Lors de la cr\xe9ation d'un client Supabase, utilisez le secret ",(0,a.jsx)(s.code,{children:"service_role"}),", puis ce client peut acc\xe9der \xe0 toutes les donn\xe9es de la base de donn\xe9es :"]}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-jsx",children:"import { createClient } from '@supabase/supabase-js';\n\n// ...\nconst SUPABASE_SERVICE_ROLE_SCRET = process.env.SUPABASE_SERVICE_ROLE_SCRET;\n\nconst client = createClient(SUPABASE_URL, SUPABASE_SERVICE_ROLE_SCRET, {\n  // ...options\n});\n"})})]})}function d(e={}){const{wrapper:s}={...(0,i.R)(),...e.components};return s?(0,a.jsx)(s,{...e,children:(0,a.jsx)(l,{...e})}):l(e)}},48451:(e,s,t)=>{t.d(s,{A:()=>n});const n=t.p+"assets/images/create-get-user-id-function-a82403fda6b70a5ee944d2ddc6058fdd.webp"},43782:(e,s,t)=>{t.d(s,{A:()=>n});const n=t.p+"assets/images/create-rls-policy-d25a9bcf6966e995cd80e49dbd1a5739.webp"},50455:(e,s,t)=>{t.d(s,{A:()=>n});const n=t.p+"assets/images/posts-table-d61708b17c77e0f3e3c23edad626b553.webp"},82836:(e,s,t)=>{t.d(s,{A:()=>n});const n=t.p+"assets/images/service-role-secret-b671423defc58517bd481227b24da422.webp"},95258:(e,s,t)=>{t.d(s,{A:()=>n});const n=t.p+"assets/images/supabase-api-settings-b81e56237542563029e32cffc158bead.webp"},79621:(e,s,t)=>{t.d(s,{R:()=>r,x:()=>o});var n=t(58101);const a={},i=n.createContext(a);function r(e){const s=n.useContext(i);return n.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function o(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),n.createElement(i.Provider,{value:s},e.children)}}}]);