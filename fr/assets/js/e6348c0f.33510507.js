"use strict";(self.webpackChunk_logto_docs=self.webpackChunk_logto_docs||[]).push([[8386],{84545:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>c,contentTitle:()=>l,default:()=>h,frontMatter:()=>u,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"authorization/api-resources/spring-boot","title":"Guide : Spring Boot","description":"Dans ce tutoriel, nous supposons que le client a obtenu un access_token valide et l\'a attach\xe9 \xe0 l\'en-t\xeate de la requ\xeate en tant que Authorization: Bearer","source":"@site/i18n/fr/docusaurus-plugin-content-docs/current/authorization/api-resources/spring-boot.mdx","sourceDirName":"authorization/api-resources","slug":"/authorization/api-resources/spring-boot","permalink":"/fr/authorization/api-resources/spring-boot","draft":false,"unlisted":false,"editUrl":"https://github.com/logto-io/docs/tree/master/i18n/fr/docusaurus-plugin-content-docs/current/authorization/api-resources/spring-boot.mdx","tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"sidebar_position":4},"sidebar":"docsSidebar","previous":{"title":"Guide : Node (Express)","permalink":"/fr/authorization/api-resources/node-express"},"next":{"title":"Contr\xf4le d\u2019acc\xe8s bas\xe9 sur les r\xf4les","permalink":"/fr/authorization/role-based-access-control/"}}');var i=n(25105),o=n(79621),s=n(3768),a=n(11043);const u={sidebar_position:4},l="Guide : Spring Boot",c={},d=[{value:"D\xe9marrer un projet Spring Boot",id:"start-a-spring-boot-project",level:2},{value:"Ajouter des d\xe9pendances",id:"add-dependencies",level:2},{value:"Obtenir l&#39;\xe9metteur et l&#39;URI JWKS",id:"get-issuer-and-jwks-uri",level:2},{value:"Configurer l&#39;application",id:"configure-application",level:2},{value:"Fournir un validateur d&#39;audience",id:"provide-audience-validator",level:2},{value:"Configurer la s\xe9curit\xe9 Spring",id:"configure-spring-security",level:2},{value:"Ajouter des API",id:"add-apis",level:2},{value:"Acc\xe9der \xe0 l&#39;API prot\xe9g\xe9e",id:"access-protected-api",level:2}];function p(e){const r={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(r.header,{children:(0,i.jsx)(r.h1,{id:"guide--spring-boot",children:"Guide : Spring Boot"})}),"\n",(0,i.jsxs)(r.p,{children:["Dans ce tutoriel, nous supposons que le client a obtenu un ",(0,i.jsx)(r.code,{children:"access_token"})," valide et l'a attach\xe9 \xe0 l'en-t\xeate de la requ\xeate en tant que ",(0,i.jsx)(r.code,{children:"Authorization: Bearer <access_token>"})]}),"\n",(0,i.jsx)(r.p,{children:"Votre application web peut s'ex\xe9cuter c\xf4t\xe9 serveur en utilisant le framework Spring Boot. Pour l'instant, vous devez int\xe9grer Logto dans Spring Boot manuellement. Cet article vous guide sur la fa\xe7on de le faire \xe9tape par \xe9tape. Et nous utilisons Gradle, Java et Spring Security pour prendre l'exemple."}),"\n",(0,i.jsx)(r.h2,{id:"start-a-spring-boot-project",children:"D\xe9marrer un projet Spring Boot"}),"\n",(0,i.jsxs)(r.p,{children:["Avec ",(0,i.jsx)(r.a,{href:"https://start.spring.io/",children:"Spring Initializr"}),", vous pouvez rapidement d\xe9marrer un projet Spring Boot. Utilisez les options suivantes :"]}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsx)(r.li,{children:"Projet Gradle"}),"\n",(0,i.jsx)(r.li,{children:"Langage : Java"}),"\n",(0,i.jsx)(r.li,{children:"Spring Boot : 2.7.2"}),"\n"]}),"\n",(0,i.jsx)(r.p,{children:"G\xe9n\xe9rez et ouvrez le projet."}),"\n",(0,i.jsx)(r.h2,{id:"add-dependencies",children:"Ajouter des d\xe9pendances"}),"\n",(0,i.jsxs)(r.p,{children:["Ajoutez les d\xe9pendances \xe0 votre fichier de construction de projet Gradle ",(0,i.jsx)(r.code,{children:"build.gradle"})," :"]}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-groovy",children:"dependencies {\n    implementation 'org.springframework.boot:spring-boot-starter-web'\n    implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'\n}\n"})}),"\n",(0,i.jsxs)(r.admonition,{type:"note",children:[(0,i.jsx)(r.p,{children:"\xc9tant donn\xe9 que Spring Boot et Spring Security ont un support int\xe9gr\xe9 pour le serveur de ressources OAuth2 et la validation JWT, vous n'avez PAS besoin d'ajouter des biblioth\xe8ques suppl\xe9mentaires de Logto pour int\xe9grer."}),(0,i.jsxs)(r.p,{children:["Voir ",(0,i.jsx)(r.a,{href:"https://docs.spring.io/spring-security/reference/servlet/oauth2/resource-server/index.html",children:"Spring Security OAuth 2.0 Resource Server"})," et ",(0,i.jsx)(r.a,{href:"https://spring.io/guides/topicals/spring-security-architecture",children:"Spring Security Architecture"})," pour plus de d\xe9tails."]})]}),"\n",(0,i.jsx)(r.h2,{id:"get-issuer-and-jwks-uri",children:"Obtenir l'\xe9metteur et l'URI JWKS"}),"\n",(0,i.jsxs)(r.p,{children:["Tous les jetons sont \xe9mis par l' ",(0,i.jsx)(r.a,{href:"https://openid.net/specs/openid-connect-core-1_0.html#IssuerIdentifier",children:"\xe9metteur"}),", et sign\xe9s avec ",(0,i.jsx)(r.a,{href:"https://datatracker.ietf.org/doc/html/rfc7517",children:"JWK"})," (Voir ",(0,i.jsx)(r.a,{href:"https://datatracker.ietf.org/doc/html/rfc7515",children:"JWS"})," pour plus de d\xe9tails)."]}),"\n",(0,i.jsxs)(r.p,{children:["Avant de continuer, vous devrez obtenir un \xe9metteur et un URI JWKS pour v\xe9rifier l'\xe9metteur et la signature du Bearer Token (",(0,i.jsx)(r.code,{children:"access_token"}),")."]}),"\n",(0,i.jsxs)(r.p,{children:["Par d\xe9faut, l'\xe9metteur et l'URI JWKS de votre Logto sont ",(0,i.jsx)(r.code,{children:"https://<your-logto-domain>/oidc"})," et ",(0,i.jsx)(r.code,{children:"https://<your-logto-domain>/oidc/jwks"})]}),"\n",(0,i.jsxs)(r.p,{children:["Toutes les derni\xe8res configurations du serveur d'Autorisation Logto peuvent \xeatre trouv\xe9es par ",(0,i.jsx)(r.code,{children:"https://<your-logto-domain>/oidc/.well-known/openid-configuration"}),", y compris l' ",(0,i.jsx)(r.strong,{children:"issuer"}),", le ",(0,i.jsx)(r.strong,{children:"jwks_uri"})," et d'autres configurations d'autorisation. Par exemple :"]}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-json",children:'{\n  // ...\n  "issuer": "https://<your-logto-domain>/oidc",\n  "jwks_uri": "https://<your-logto-domain>/oidc/jwks"\n  // ...\n}\n'})}),"\n",(0,i.jsx)(r.h2,{id:"configure-application",children:"Configurer l'application"}),"\n",(0,i.jsxs)(r.p,{children:["Utilisez un fichier ",(0,i.jsx)(r.code,{children:"application.yml"})," (au lieu du ",(0,i.jsx)(r.code,{children:"application.properties"})," par d\xe9faut) pour configurer le port du serveur, l'audience et le serveur de ressources OAuth2."]}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-yaml",children:"# path/to/project/src/main/resources/application.yaml\nserver:\n  port: 3000\n\nlogto:\n  audience: http://localhost:3000/\n\nspring:\n  security:\n    oauth2:\n      resourceserver:\n        jwt:\n          issuer-uri: <your-logto-issuer-uri>\n          jwk-set-uri: <your-logto-jwks-uri>\n"})}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.code,{children:"audience"})," : L'identifiant API unique (c'est-\xe0-dire l'indicateur API) de votre ressource API prot\xe9g\xe9e."]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.code,{children:"spring.security.oauth2.resourceserver.jwt.issuer-uri"})," : La valeur de la revendication ",(0,i.jsx)(r.code,{children:"iss"})," et l'URI de l'\xe9metteur dans le JWT \xe9mis par Logto. Remplissez la valeur ",(0,i.jsx)(r.code,{children:"issuer"})," de la section pr\xe9c\xe9dente."]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.code,{children:"spring.security.oauth2.resourceserver.jwt.jwk-set-uri"})," : Spring Security utilise cet URI pour obtenir les cl\xe9s publiques du serveur d'autorisation afin de valider les signatures JWT. Remplissez la valeur ",(0,i.jsx)(r.code,{children:"jwks_uri"})," de la section pr\xe9c\xe9dente."]}),"\n"]}),"\n",(0,i.jsx)(r.h2,{id:"provide-audience-validator",children:"Fournir un validateur d'audience"}),"\n",(0,i.jsxs)(r.p,{children:["Fournissez votre propre classe ",(0,i.jsx)(r.code,{children:"AudienceValidator"})," qui impl\xe9mente l'interface ",(0,i.jsx)(r.code,{children:"OAuth2TokenValidator"})," pour valider si l'audience requise est pr\xe9sente dans le JWT."]}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-java",children:'// path/to/project/src/main/java/io/logto/springboot/sample/validator/AudienceValidator.java\npackage io.logto.springboot.sample.validator;\n\nimport org.springframework.security.oauth2.core.OAuth2Error;\nimport org.springframework.security.oauth2.core.OAuth2TokenValidator;\nimport org.springframework.security.oauth2.core.OAuth2TokenValidatorResult;\nimport org.springframework.security.oauth2.jwt.Jwt;\n\npublic class AudienceValidator implements OAuth2TokenValidator<Jwt> {\n\n    private final String audience;\n\n    public AudienceValidator(String audience) {\n        this.audience = audience;\n    }\n\n    @Override\n    public OAuth2TokenValidatorResult validate(Jwt jwt) {\n        if (!jwt.getAudience().contains(audience)) {\n            return OAuth2TokenValidatorResult.failure(new OAuth2Error("invalid_token", "Required audience not found", null));\n        }\n\n\t      // Optionnel : Pour le RBAC, validez les port\xe9es du JWT.\n\t      String scopes = jwt.getClaimAsString("scope");\n\t      if (scopes == null || !scopes.contains("read:profile")) {\n\t          return OAuth2TokenValidatorResult.failure(new OAuth2Error("invalid_token", "Insufficient permission", null));\n\t      }\n\n        return OAuth2TokenValidatorResult.success();\n    }\n}\n'})}),"\n",(0,i.jsx)(r.h2,{id:"configure-spring-security",children:"Configurer la s\xe9curit\xe9 Spring"}),"\n",(0,i.jsx)(r.p,{children:"Spring Security facilite la configuration de votre application en tant que serveur de ressources et la validation du JWT \xe0 partir du Bearer Token dans l'en-t\xeate de la requ\xeate."}),"\n",(0,i.jsxs)(r.p,{children:["Vous devez fournir des instances de ",(0,i.jsx)(r.code,{children:"JwtDecoder"})," et ",(0,i.jsx)(r.code,{children:"SecurityFilterChain"})," (en tant que beans Spring), et ajouter l'annotation ",(0,i.jsx)(r.code,{children:"@EnableWebSecurity"}),"."]}),"\n",(0,i.jsx)(r.admonition,{type:"note",children:(0,i.jsxs)(r.p,{children:["Logto utilise l'algorithme ",(0,i.jsx)(r.code,{children:"ES384"})," pour signer les JWT par d\xe9faut. Pour d\xe9coder les JWT, vous devez d\xe9finir explicitement le ",(0,i.jsx)(r.code,{children:"jwsAlgorithm"})," sur ",(0,i.jsx)(r.code,{children:"ES384"}),". Si vous pr\xe9f\xe9rez utiliser ",(0,i.jsx)(r.code,{children:"RSA"}),", n'h\xe9sitez pas \xe0 faire pivoter l'algorithme de signature dans la console d'administration Logto. Veuillez vous r\xe9f\xe9rer \xe0 ",(0,i.jsx)(r.a,{href:"/developers/signing-keys",children:"Signing keys"})," pour plus de d\xe9tails."]})}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-java",children:'// path/to/project/src/main/java/io/logto/springboot/sample/configuration/SecurityConfiguration.java\npackage io.logto.springboot.sample.configuration;\n\nimport com.nimbusds.jose.JOSEObjectType;\nimport com.nimbusds.jose.proc.DefaultJOSEObjectTypeVerifier;\nimport com.nimbusds.jose.proc.SecurityContext;\nimport io.logto.springboot.sample.validator.AudienceValidator;\nimport org.springframework.beans.factory.annotation.Value;\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.security.config.Customizer;\nimport org.springframework.security.config.annotation.web.builders.HttpSecurity;\nimport org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;\nimport org.springframework.security.config.annotation.web.configurers.oauth2.server.resource.OAuth2ResourceServerConfigurer;\nimport org.springframework.security.oauth2.core.DelegatingOAuth2TokenValidator;\nimport org.springframework.security.oauth2.core.OAuth2TokenValidator;\nimport org.springframework.security.oauth2.jwt.JwtDecoder;\nimport org.springframework.security.oauth2.jwt.JwtValidators;\nimport org.springframework.security.oauth2.jwt.NimbusJwtDecoder;\nimport org.springframework.security.oauth2.jose.jws.SignatureAlgorithm;\nimport org.springframework.security.web.DefaultSecurityFilterChain;\n\n@Configuration\n@EnableWebSecurity\npublic class SecurityConfiguration {\n\n    @Value("${logto.audience}")\n    private String audience;\n\n    @Value("${spring.security.oauth2.resourceserver.jwt.issuer-uri}")\n    private String issuer;\n\n    @Value("${spring.security.oauth2.resourceserver.jwt.jwk-set-uri}")\n    private String jwksUri;\n\n    @Bean\n    public JwtDecoder jwtDecoder() {\n        NimbusJwtDecoder jwtDecoder = NimbusJwtDecoder.withJwkSetUri(jwksUri)\n                // Logto utilise l\'algorithme ES384 pour signer les JWT par d\xe9faut.\n                .jwsAlgorithm(ES384)\n                // Le d\xe9codeur doit prendre en charge le type de jeton : Jeton d\u2019acc\xe8s + JWT.\n                .jwtProcessorCustomizer(customizer -> customizer.setJWSTypeVerifier(\n                        new DefaultJOSEObjectTypeVerifier<SecurityContext>(new JOSEObjectType("at+jwt"))))\n                .build();\n\n        jwtDecoder.setJwtValidator(new DelegatingOAuth2TokenValidator<>(\n                new AudienceValidator(audience),\n                new JwtIssuerValidator(issuer),\n                new JwtTimestampValidator()));\n\n        return jwtDecoder;\n    }\n\n    @Bean\n    public DefaultSecurityFilterChain securityFilterChain(HttpSecurity http) throws Exception {\n         http\n          .securityMatcher("/api/**")\n          .oauth2ResourceServer(oauth2 -> oauth2\n              .jwt(Customizer.withDefaults()))\n          .authorizeHttpRequests(requests -> requests\n              // Autoriser toutes les requ\xeates aux API publiques.\n              .requestMatchers("/api/.wellknown/**").permitAll()\n              // Exiger la validation du jeton jwt pour les API prot\xe9g\xe9es.\n              .anyRequest().authenticated());\n\n        return http.build();\n    }\n}\n'})}),"\n",(0,i.jsx)(r.h2,{id:"add-apis",children:"Ajouter des API"}),"\n",(0,i.jsx)(r.p,{children:"Ajoutez un contr\xf4leur pour fournir les API prot\xe9g\xe9es et publiques :"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-java",children:'// path/to/project/src/main/java/io/logto/springboot/sample/controller/ProtectedController.java\npackage io.logto.springboot.sample.controller;\n\nimport org.springframework.web.bind.annotation.CrossOrigin;\nimport org.springframework.web.bind.annotation.GetMapping;\nimport org.springframework.web.bind.annotation.RestController;\n\n// Autoriser uniquement toutes les origines pour l\'exemple.\n// (Les applications de production doivent configurer CORS avec soin.)\n@CrossOrigin(origins = "*")\n@RestController\npublic class ProtectedController {\n    @GetMapping("/api/profile")\n    public String protectedProfile() {\n        return "Profil prot\xe9g\xe9.";\n    }\n\n    @GetMapping("/api/.wellknown/config.json")\n    public String publicConfig() {\n        return "Configuration publique.";\n    }\n}\n\n'})}),"\n",(0,i.jsx)(r.h2,{id:"access-protected-api",children:"Acc\xe9der \xe0 l'API prot\xe9g\xe9e"}),"\n",(0,i.jsxs)(r.p,{children:["Construisez et ex\xe9cutez votre application web Spring Boot, par exemple ex\xe9cutez la t\xe2che Gradle ",(0,i.jsx)(r.code,{children:"bootRun"}),"."]}),"\n",(0,i.jsxs)(a.A,{children:[(0,i.jsx)(s.A,{value:"linux-or-macos",label:"Linux ou macOS",children:(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-bash",children:"./gradlew bootRun\n"})})}),(0,i.jsx)(s.A,{value:"windows",label:"Windows",children:(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-bash",children:"gradlew.bat bootRun\n"})})})]}),"\n",(0,i.jsx)(r.admonition,{type:"note",children:(0,i.jsxs)(r.p,{children:["Ce tutoriel suppose que vous avez le Jeton d\u2019acc\xe8s pour une ressource API ",(0,i.jsx)(r.code,{children:"http://localhost:3000/"})," avant de faire une requ\xeate. Si vous n'\xeates pas pr\xeat, ",(0,i.jsx)(r.a,{href:"/authorization/api-resources/protect-your-api",children:"lisez ceci"})," avant de continuer."]})}),"\n",(0,i.jsxs)(r.p,{children:["Demandez votre API prot\xe9g\xe9e avec le Jeton d\u2019acc\xe8s en tant que jeton Bearer dans l'en-t\xeate Authorization, par exemple ex\xe9cutez la commande ",(0,i.jsx)(r.code,{children:"curl"}),"."]}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-bash",children:"curl --include 'http://localhost:3000/api/profile' --header 'Authorization: Bearer <your-access-token>'\n"})}),"\n",(0,i.jsx)(r.p,{children:"Si cela r\xe9ussit, vous obtiendrez une r\xe9ponse avec le statut 200 :"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-bash",children:"HTTP/1.1 200\n...\n"})}),"\n",(0,i.jsx)(r.p,{children:"Sinon, vous obtiendrez une r\xe9ponse avec le statut 401 comme ceci :"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{children:'HTTP/1.1 401\n...\nWWW-Authenticate: Bearer error="invalid_token", error_description="An error occurred while attempting to decode the Jwt: Signed JWT rejected: Invalid signature", error_uri="https://tools.ietf.org/html/rfc6750#section-3.1"\n...\n'})})]})}function h(e={}){const{wrapper:r}={...(0,o.R)(),...e.components};return r?(0,i.jsx)(r,{...e,children:(0,i.jsx)(p,{...e})}):p(e)}},3768:(e,r,n)=>{n.d(r,{A:()=>s});n(58101);var t=n(13526);const i={tabItem:"tabItem_y6LR"};var o=n(25105);function s(e){let{children:r,hidden:n,className:s}=e;return(0,o.jsx)("div",{role:"tabpanel",className:(0,t.A)(i.tabItem,s),hidden:n,children:r})}},11043:(e,r,n)=>{n.d(r,{A:()=>y});var t=n(58101),i=n(13526),o=n(32571),s=n(55234),a=n(87394),u=n(87276),l=n(31637),c=n(16063);function d(e){return t.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,t.isValidElement)(e)&&function(e){const{props:r}=e;return!!r&&"object"==typeof r&&"value"in r}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function p(e){const{values:r,children:n}=e;return(0,t.useMemo)((()=>{const e=r??function(e){return d(e).map((e=>{let{props:{value:r,label:n,attributes:t,default:i}}=e;return{value:r,label:n,attributes:t,default:i}}))}(n);return function(e){const r=(0,l.XI)(e,((e,r)=>e.value===r.value));if(r.length>0)throw new Error(`Docusaurus error: Duplicate values "${r.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[r,n])}function h(e){let{value:r,tabValues:n}=e;return n.some((e=>e.value===r))}function g(e){let{queryString:r=!1,groupId:n}=e;const i=(0,s.W6)(),o=function(e){let{queryString:r=!1,groupId:n}=e;if("string"==typeof r)return r;if(!1===r)return null;if(!0===r&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:r,groupId:n});return[(0,u.aZ)(o),(0,t.useCallback)((e=>{if(!o)return;const r=new URLSearchParams(i.location.search);r.set(o,e),i.replace({...i.location,search:r.toString()})}),[o,i])]}function m(e){const{defaultValue:r,queryString:n=!1,groupId:i}=e,o=p(e),[s,u]=(0,t.useState)((()=>function(e){let{defaultValue:r,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(r){if(!h({value:r,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${r}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return r}const t=n.find((e=>e.default))??n[0];if(!t)throw new Error("Unexpected error: 0 tabValues");return t.value}({defaultValue:r,tabValues:o}))),[l,d]=g({queryString:n,groupId:i}),[m,j]=function(e){let{groupId:r}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(r),[i,o]=(0,c.Dv)(n);return[i,(0,t.useCallback)((e=>{n&&o.set(e)}),[n,o])]}({groupId:i}),f=(()=>{const e=l??m;return h({value:e,tabValues:o})?e:null})();(0,a.A)((()=>{f&&u(f)}),[f]);return{selectedValue:s,selectValue:(0,t.useCallback)((e=>{if(!h({value:e,tabValues:o}))throw new Error(`Can't select invalid tab value=${e}`);u(e),d(e),j(e)}),[d,j,o]),tabValues:o}}var j=n(27034);const f={tabList:"tabList_swUI",tabItem:"tabItem_BXZ5"};var v=n(25105);function b(e){let{className:r,block:n,selectedValue:t,selectValue:s,tabValues:a}=e;const u=[],{blockElementScrollPositionUntilNextRender:l}=(0,o.a_)(),c=e=>{const r=e.currentTarget,n=u.indexOf(r),i=a[n].value;i!==t&&(l(r),s(i))},d=e=>{let r=null;switch(e.key){case"Enter":c(e);break;case"ArrowRight":{const n=u.indexOf(e.currentTarget)+1;r=u[n]??u[0];break}case"ArrowLeft":{const n=u.indexOf(e.currentTarget)-1;r=u[n]??u[u.length-1];break}}r?.focus()};return(0,v.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.A)("tabs",{"tabs--block":n},r),children:a.map((e=>{let{value:r,label:n,attributes:o}=e;return(0,v.jsx)("li",{role:"tab",tabIndex:t===r?0:-1,"aria-selected":t===r,ref:e=>u.push(e),onKeyDown:d,onClick:c,...o,className:(0,i.A)("tabs__item",f.tabItem,o?.className,{"tabs__item--active":t===r}),children:n??r},r)}))})}function x(e){let{lazy:r,children:n,selectedValue:o}=e;const s=(Array.isArray(n)?n:[n]).filter(Boolean);if(r){const e=s.find((e=>e.props.value===o));return e?(0,t.cloneElement)(e,{className:(0,i.A)("margin-top--md",e.props.className)}):null}return(0,v.jsx)("div",{className:"margin-top--md",children:s.map(((e,r)=>(0,t.cloneElement)(e,{key:r,hidden:e.props.value!==o})))})}function w(e){const r=m(e);return(0,v.jsxs)("div",{className:(0,i.A)("tabs-container",f.tabList),children:[(0,v.jsx)(b,{...r,...e}),(0,v.jsx)(x,{...r,...e})]})}function y(e){const r=(0,j.A)();return(0,v.jsx)(w,{...e,children:d(e.children)},String(r))}},79621:(e,r,n)=>{n.d(r,{R:()=>s,x:()=>a});var t=n(58101);const i={},o=t.createContext(i);function s(e){const r=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function a(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),t.createElement(o.Provider,{value:r},e.children)}}}]);